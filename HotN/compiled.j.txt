// this script was compiled with wurst 1.4.1.0-jenkins-Wurst-743
globals
real udg_zw=0.
timer udg_t=null
integer udg_MeineAbility=0
unit udg_CasterVariable=null
group udg_UnverwundbarkeitsGruppe=null
hashtable udg_MeineHashtable=null
rect udg_Urspung=null
rect udg_Ziel=null
real udg_x1=0.
real udg_x2=0.
real udg_x3=0.
real udg_x4=0.
real udg_x5=0.
real udg_y1=0.
real udg_y4=0.
real udg_y5=0.
real udg_y3=0.
real udg_y2=0.
effect udg_effect=null
camerasetup gg_cam_Camera_001=null
trigger gg_trg_Unbezeichneter_Ausl__ser_003=null
unit gg_unit_Obla_0003=null
<<<<<<< HEAD
=======
unit gg_unit_hpea_0006=null
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
real Maths_PI=0.
real Maths_PI2=0.
real Maths_PIHALF=0.
real Maths_DEGTORAD=0.
real Maths_RADTODEG=0.
hashtable Table_ht=null
integer Region_regionData=0
integer Rect_sourceTable=0
rect MapBounds_playableMapRect=null
region MapBounds_playableMapRegion=null
rect MapBounds_boundRect=null
region MapBounds_boundRegion=null
real MapBounds_playableMin_x=0.
real MapBounds_playableMin_y=0.
real MapBounds_playableMax_x=0.
real MapBounds_playableMax_y=0.
real MapBounds_boundMin_x=0.
real MapBounds_boundMin_y=0.
real MapBounds_boundMax_x=0.
real MapBounds_boundMax_y=0.
real MapBounds_playableCenter_x=0.
real MapBounds_playableCenter_y=0.
real MapBounds_boundCenter_x=0.
real MapBounds_boundCenter_y=0.
integer array LinkedList_dummy
integer array LinkedList_size
integer array LLEntry_elem
integer array LLEntry_prev
integer array LLEntry_next
integer array LLIterator_dummy
integer array LLIterator_current
string array Char_c2s
integer array Char_s2c
integer array Char_width
integer Char_MAX_INDEX=0
integer Char_DEFAULT_WIDTH=0
string Char_DEFAULT_STRING=null
integer Trigger_triggerData=0
string array Colors_hexs
integer Colors_decs=0
integer array Colors_playercolors
integer array Colors_playercolors_2
integer array Colors_playercolors_3
real Terrain_MAX_RANGE=0.
integer Terrain_DUMMY_ITEM_ID=0
location Terrain_tempLoc=null
item Terrain_dItem=null
rect Terrain_find=null
item array Terrain_hid
integer Terrain_hidMax=0
real Terrain_tempPos_x=0.
real Terrain_tempPos_y=0.
player array Player_players
boolean array PrintingHelper_wantDebug
integer PrintingHelper_DEBUG_LEVEL=0
real PrintingHelper_DEBUG_MSG_DURATION=0.
string String_charset=null
string String_numberset=null
integer String_numbersetlength=0
integer String_charsetlength=0
timer array TimerUtils_freeTimers
integer TimerUtils_freeTimersCount=0
integer TimerUtils_timerData=0
integer TimerUtils_HELD=0
integer ForceIterator_tempIndex=0
player array ForceIterator_players
group TempGroups_ENUM_GROUP=null
<<<<<<< HEAD
=======
integer array W3UDefinition_def
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
integer Basics_DUMMY_UNIT_ID=0
integer Basics_HEIGHT_ENABLER=0
integer Basics_TREE_RECOGNITION=0
integer Basics_LOCUST_ID=0
real Basics_ANIMATION_PERIOD=0.
real Basics_MAX_COLLISION_SIZE=0.
player Basics_DUMMY_PLAYER=null
player Basics_DUMMY_HOSTILE_PLAYER=null
integer Basics_INT_LIMIT=0
integer TypeCasting_typecastdata=0
string ObjectIds_charMap=null
timer GameTimer_gameTimer=null
real GameTimer_currentTime=0.
integer NewDummyRecycler_DIFFERENT_ANGLES=0
real NewDummyRecycler_ANGLE_DEGREE=0.
integer NewDummyRecycler_SAVED_UNITS_PER_ANGLE=0
integer array DummyRecycler_angleQueues
integer array ArrayQueue_fp
integer array ArrayQueue_rp
integer array ArrayQueue_size
timer DelayNode_t=null
unit array DelayNode_u
real array DelayNode_delayTime
integer array DelayNode_prev
integer array DelayNode_next
integer DelayNode_first=0
integer DelayNode_last=0
unit array Fx_dummy
effect array Fx_fx
real array Fx_zAngle
string array Fx_sfxPath
integer TimedEffect_effectData=0
integer InstanceBoard_classes=0
hashtable InstanceBoard_ht=null
multiboard InstanceBoard_mb=null
integer array InstanceBoard_count
string array InstanceBoard_nameOfClass
unit Filter_filterCheckUnit=null
player Filter_filterCheckPlayer=null
integer array Helper_pow2
string HandleCounter_TITLE=null
leaderboard HandleCounter_board=null
timer HandleCounter_boardTimer=null
player HandleCounter_HANDLE=null
string HandleCounter_HANDLE_TEXT=null
player HandleCounter_MAX_HANDLE=null
string HandleCounter_MAX_HANDLE_TEXT=null
string HandleCounter_TIME_TEXT=null
player HandleCounter_TIME=null
real HandleCounter_updatePeriod=0.
integer HandleCounter_stackEndTreshold=0
timer HandleCounter_clock=null
integer HandleCounter_seconds=0
integer HandleCounter_maxHandleCount=0
string DebugFile_path=null
string DebugFile_filetype=null
integer DebugFile_lastSavedFile=0
string array DebugFile_filename
string array DebugFile_buffer
integer array DebugFile_content
integer array DebugFile_currentLine
integer array OrderStringFactory_counter
integer ChannelAbilityPreset_odf=0
integer ChannelAbilityPreset_visibleval=0
integer ChannelAbilityPreset_targetimageval=0
integer ChannelAbilityPreset_physicalspellval=0
integer ChannelAbilityPreset_universalspellval=0
integer ChannelAbilityPreset_uniquecastval=0
integer array AbilityDefinition_def
integer array AbilityDefinition_lvls
integer array AbilityDefinition_tooltipGen
boolean array AbilityDefinition_listen
string AbilityTooltipGenerator_TITLE_COLOR=null
string AbilityTooltipGenerator_TITLE_TTYPE=null
integer AbilityTooltipGenerator_MAX_TITLES=0
string AbilityTooltipGenerator_LEARN_PATTERN=null
string AbilityTooltipGenerator_NORMAL_ACTIVE_PATTERN=null
string AbilityTooltipGenerator_NORMAL_PASSIVE_PATTERN=null
hashtable HashMap_ht=null
hashtable HashList_ht=null
integer array HashList_size
timer array CallbackCounted_t
integer array CallbackCounted_count
integer PreloadSystem_preloadActions=0
integer PreloadSystem_abilitysToPreload=0
integer PreloadSystem_unitsToPreload=0
integer PreloadSystem_buffsToPreload=0
integer PreloadSystem_itemsToPreload=0
integer PreloadSystem_destructablesToPreload=0
real PreloadSystem_totalTime=0.
unit PreloadSystem_preloadDummy=null
real PreloadSystem_abilityLoadTime=0.
real PreloadSystem_abilityLoadTimeLvlBonus=0.
real PreloadSystem_unitLoadTime=0.
real PreloadSystem_buffLoadTime=0.
real PreloadSystem_itemLoadTime=0.
real PreloadSystem_destructableLoadTime=0.
integer array Ability_id
integer array Ability_lvl
unit array u
destructable array d
boolean CompiletimeInit_compiletime=false
real TrackableEx_doubleClickSpeed=0.
timer array TrackableEx_playerDoubleClickTimer
boolean array TrackableEx_playerClickBefore
integer TrackableEx_trackableOwner=0
integer TrackableEx_trackableObjects=0
trigger TrackableEx_trackTrigger=null
trigger TrackableEx_clickTrigger=null
integer array TrackableEx_onTrack
integer array TrackableEx_onClick
integer array TrackableEx_onDoubleClick
integer array Event_first
integer array Event_last
boolean array Event_checkData
integer array Action_next
integer array Action_prev
integer array Action_ev
integer Array_currentSize=0
timer Setup_timeTest=null
integer Setup_maxBonSize=0
integer Setup_attackRaw=0
integer Setup_attackSpeedRaw=0
integer Setup_armorRaw=0
integer Setup_lifeRaw=0
integer Setup_manaRaw=0
integer Setup_agiRaw=0
integer Setup_strRaw=0
integer Setup_intRaw=0
integer Setup_lifeRegRaw=0
integer Setup_manaRegRaw=0
<<<<<<< HEAD
integer Setup_preloadAbi=0
integer Setup_permAttackTomeId=0
=======
integer Setup_permAttackItemRaw=0
integer Setup_permAttackRaw=0
integer Setup_preloadAbi=0
item array Setup_permAttackTome
integer Setup_permAttackTomeId=0
item Setup_permAttackNegTome=null
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
integer Setup_infoFile=0
integer Setup_errorFile=0
integer Setup_debugFile=0
string Setup_charMap=null
integer Setup_allPlayers=0
string Setup_team1=null
string Setup_team2=null
real Setup_recycleGraveyard_x=0.
real Setup_recycleGraveyard_y=0.
real Setup_menuStart_x=0.
real Setup_menuStart_y=0.
hashtable Setup_trackBlacklist=null
integer Setup_tileSize=0
integer Setup_menuHeight=0
integer Setup_menuWidth=0
real Setup_abilityLoadTime=0.
real Setup_abilityLoadTimeLevelBonus=0.
integer array Setup_tracks
integer array ElementLoop_a
integer array ElementLoop_a_2
integer array ElementLoop_b
integer array ElementLoop_b_2
integer array ElementLoop_start
integer array Dot_a
integer array Dot_u
integer array Dot_source
real array Dot_damage
timer array Dot_t
integer LinkedListModule_first=0
integer LinkedListModule_last=0
integer LinkedListModule_size=0
integer array LinkedListModule_prev
integer array LinkedListModule_next
integer array this
integer BuffTypes_buffMap=0
integer BuffTypes_buffCount=0
integer array Buff_action
integer array Buff_bon
integer array Buff_u
integer array Buff_btyp
integer array Buff_btyp_2
effect array Buff_fx
timer array Buff_fxTimer
timer array Buff_t
integer array Buff_fxCounter
string array Buff_fxType
string array Buff_attachment
integer array this_2
integer array TextTag_u
texttag array TextTag_tt
timer array TextTag_t
integer array TextTag_tType
integer ShowInstances_classId=0
integer array ShieldList_first
integer array ShieldList_last
real array ShieldList_shieldSum
integer array Shield_prev
integer array Shield_next
integer array Shield_referingList
timer array Shield_t
real array Shield_amount
integer array Shield_target
integer array Shield_shieldDestroyed
string HeroBar_hpColor=null
string HeroBar_hpColorDead=null
string HeroBar_shieldColor=null
string HeroBar_mpColor=null
string HeroBar_mpColorDead=null
string HeroBar_endColor=null
string HeroBar_marker=null
string HeroBar_bar=null
integer HeroBar_realBarCount=0
integer HeroBar_fakeBarCount=0
integer HeroBar_seperateAt=0
timer Bar_updatePos=null
timer Bar_updateVision=null
integer array Bar_owner
boolean array Bar_isVisible
boolean array Bar_check
string array Bar_hpFull
integer array Bar_markerDistance
texttag array Bar_tt
integer LinkedListModule_first_2=0
integer LinkedListModule_last_2=0
integer LinkedListModule_size_2=0
<<<<<<< HEAD
=======
integer array LinkedListModule_prev_2
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
integer array LinkedListModule_next_2
integer array Queue_dummy
integer array Queue_front
integer array Queue_back
integer array Queue_size
integer array SEntry_elem
integer array SEntry_next
integer OrderHandling_smartId=0
integer OrderHandling_stopId=0
integer OrderHandling_attackId=0
integer OrderHandling_scoreboardId=0
integer OrderHandling_exitDetectId=0
integer OrderHandling_skillMenuId=0
integer OrderHandling_stopSpell=0
integer OrderHandling_attackSpell=0
integer OrderHandling_scoreboardSpell=0
integer OrderHandling_exitDetectSpell=0
integer OrderHandling_qSpellNoTarget=0
integer OrderHandling_qSpellUnitTarget=0
integer OrderHandling_qSpellPointTarget=0
integer OrderHandling_qSpellUnitPointTarget=0
integer OrderHandling_wSpellNoTarget=0
integer OrderHandling_wSpellUnitTarget=0
integer OrderHandling_wSpellPointTarget=0
integer OrderHandling_wSpellUnitPointTarget=0
integer OrderHandling_eSpellNoTarget=0
integer OrderHandling_eSpellUnitTarget=0
integer OrderHandling_eSpellPointTarget=0
integer OrderHandling_eSpellUnitPointTarget=0
integer OrderHandling_rSpellNoTarget=0
integer OrderHandling_rSpellUnitTarget=0
integer OrderHandling_rSpellPointTarget=0
integer OrderHandling_rSpellUnitPointTarget=0
integer OrderHandling_dSpellNoTarget=0
integer OrderHandling_dSpellUnitTarget=0
integer OrderHandling_dSpellPointTarget=0
integer OrderHandling_dSpellUnitPointTarget=0
integer OrderHandling_fSpellNoTarget=0
integer OrderHandling_fpellUnitTarget=0
integer OrderHandling_fSpellPointTarget=0
integer OrderHandling_fSpellUnitPointTarget=0
integer array Order_orderId
integer ShowInstances_classId_2=0
integer MoveOrder_moveOrderId=0
real array MoveOrder_pos
real array MoveOrder_pos_2
real array MoveOrder_lastPos
real array MoveOrder_lastPos_2
integer AttackOrder_atkOrderId=0
unit array AttackOrder_target
integer array ObjId_id2
integer array ObjId_id3
boolean PreloadHandler_autoFinish=false
group PreloadHandler_dumg=null
unit PreloadHandler_dum=null
integer Spell_qSpellId=0
integer Spell_wSpellId=0
integer Spell_eSpellId=0
integer Spell_rSpellId=0
integer Spell_dSpellId=0
integer Spell_fSpellId=0
integer array SpellSetup_spell
integer array SpellSetup_spellbook
integer array SpellSetup_maxLvl
integer array SpellSetup_castDummy
integer array SpellSetup_pointCost
integer Spell_cleanSpellbook=0
unit array Spellcast_target
real array Spellcast_pos
real array Spellcast_pos_2
integer array Spellcast_spell
integer array Spell_spell
integer array Spell_castDummy
integer array Spell_lvl
integer array Spell_st
integer array Spell_owner
integer HeroClass_heroCount=0
integer array this_3
real array amount
integer array this_4
real array amount_2
integer array this_5
real array amount_3
integer array this_6
real array amount_4
integer array this_7
real array amount_5
integer array this_8
real array amount_6
integer array this_9
real array amount_7
integer array this_10
real array amount_8
integer array this_11
real array amount_9
integer array this_12
real array amount_10
integer array this_13
real array amount_11
integer array this_14
real array amount_12
integer array this_15
real array amount_13
integer array this_16
real array amount_14
integer array this_17
real array amount_15
integer array this_18
real array amount_16
integer array this_19
real array amount_17
integer array this_20
real array amount_18
integer array this_21
real array amount_19
integer array this_22
real array amount_20
integer array this_23
real array amount_21
integer array this_24
real array amount_22
integer array this_25
real array amount_23
integer array this_26
real array amount_24
integer array this_27
real array amount_25
integer array this_28
real array amount_26
integer array this_29
real array amount_27
integer array this_30
real array amount_28
integer array this_31
real array amount_29
integer array this_32
real array amount_30
integer array this_33
real array amount_31
integer array this_34
real array amount_32
integer array this_35
real array amount_33
integer array this_36
real array amount_34
integer array this_37
real array amount_35
integer array this_38
real array amount_36
integer array this_39
real array amount_37
integer array this_40
real array amount_38
integer array this_41
real array amount_39
integer array this_42
real array amount_40
integer array this_43
real array amount_41
integer array this_44
real array amount_42
integer array this_45
real array amount_43
integer array this_46
real array amount_44
integer array this_47
real array amount_45
integer array this_48
real array amount_46
integer array this_49
real array amount_47
integer array this_50
real array amount_48
integer array this_51
real array amount_49
integer array this_52
real array amount_50
real Unit_bounceFactor=0.
real Unit_knockbackFactor=0.
real Unit_basicAttackspeed=0.
<<<<<<< HEAD
=======
integer array Unit_typ
integer array Unit_team
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
unit array Unit_u
real array Unit_attack
real array Unit_bonusAttack
real array Unit_bonusAttackPer
real array Unit_armor
real array Unit_bonusArmor
real array Unit_bonusArmorPer
real array Unit_life
real array Unit_bonusLife
real array Unit_bonusLifePer
real array Unit_mana
real array Unit_bonusMana
real array Unit_bonusManaPer
real array Unit_lifeReg
real array Unit_bonusLifeReg
real array Unit_bonusLifeRegPer
real array Unit_manaReg
real array Unit_bonusManaReg
real array Unit_bonusManaRegPer
real array Unit_bonusAttackspeed
real array Unit_spellpower
real array Unit_spellpowerPer
real array Unit_movespeed
real array Unit_bonusMovespeed
real array Unit_bonusMovespeedPer
real array Unit_magicReduction
real array Unit_normalReduction
<<<<<<< HEAD
=======
real array Unit_resistance
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
real array Unit_bonusResistance
real array Unit_bonusResistancePer
real array Unit_hitchance
real array Unit_evade
real array Unit_critchance
real array Unit_critdamage
real array Unit_bonusDamage
<<<<<<< HEAD
real array Unit_normalDeflection
real array Unit_lifesteal
real array Unit_spellVamp
=======
real array Unit_magicDeflection
real array Unit_normalDeflection
real array Unit_lifesteal
real array Unit_spellVamp
real array Unit_bonusHeal
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
integer array Unit_vunerableCount
boolean array Unit_vunerable
integer array Unit_shieldList
integer array Unit_lastDamager
integer array Unit_lastHeroDamager
real array Unit_mass
<<<<<<< HEAD
=======
real array Unit_bonusMass
real array Unit_bonusMassPer
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
real array Unit_knockSpeed
real array Unit_knockSpeed_2
real array Unit_radius
real array Unit_height
integer array Unit_lastKnocker
integer array Unit_lastCollision
real array Unit_wallLoc
real array Unit_wallLoc_2
boolean array Unit_hasKnockback
boolean array Unit_isHero
boolean array Unit_isDead
<<<<<<< HEAD
=======
integer array Unit_level
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
integer array Unit_bounty
integer array Unit_ownerId
player array Unit_owner
integer array Unit_stun
integer array Unit_damageTT
integer array Unit_healTT
integer array Unit_dotTT
real array Unit_systemDamage
real array Unit_totalDamage
integer array Unit_playerDamage
integer array Unit_allDots
integer array Unit_allBuffs
<<<<<<< HEAD
=======
integer array Unit_causeNormalDamagePre
integer array Unit_causeNormalDamageOn
integer array Unit_takeNormalDamagePre
integer array Unit_takeNormalDamageOn
integer array Unit_causeMagicDamagePre
integer array Unit_causeMagicDamageOn
integer array Unit_takeMagicDamagePre
integer array Unit_takeMagicDamageOn
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
integer array Unit_takeHitPre
integer array Unit_takeHitOn
integer array Unit_causeHitPre
integer array Unit_causeHitOn
integer array Unit_takeCritHitOn
integer array Unit_causeCritHitOn
integer array Unit_onDodge
integer array Unit_onMiss
integer array Unit_onDeath
integer array Unit_causeDeath
<<<<<<< HEAD
=======
integer array Unit_takeSpell
integer array Unit_causeSpell
integer array Unit_takeHeal
integer array Unit_causeHeal
integer array Unit_takeManaHeal
integer array Unit_causeManaHeal
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
trigger Unit_damageDetect=null
integer ShowInstances_classId_3=0
integer CreationEvent_create=0
integer CreationEvent_dest=0
integer array this_53
trigger Hero_castDetect=null
integer Hero_abiIdToSpell=0
timer Hero_checkOrders=null
integer Hero_toMove=0
timer Hero_movespeedX=null
<<<<<<< HEAD
=======
integer array Hero_armorBuffer
integer array Hero_attackBuffer
integer array Hero_morphAbi
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
boolean array Hero_onAdd
boolean array Hero_wantCapture
integer array Hero_channelCancel
integer array Hero_animationIndex
<<<<<<< HEAD
integer array Hero_hb
integer array Hero_enableAbility
boolean array Hero_acceptOrders
=======
boolean array Hero_hasPeriodicAnimation
real array Hero_animationIntervall
real array Hero_animationSpeed
real array Hero_captureOffsetZ
real array Hero_captureOffsetDistance
string array Hero_captureEffect
string array Hero_captureEffectAttachmentPoint
effect array Hero_currentEffect
real array Hero_captureOffsetAngle
integer array Hero_hb
integer array Hero_enableAbility
boolean array Hero_acceptOrders
boolean array Hero_stillNoOrder
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
integer array Hero_mainOrder
integer array Hero_lastOrdered
integer array Hero_castQueue
integer array Hero_spellQ
integer array Hero_spellW
integer array Hero_spellE
integer array Hero_spellR
integer array Hero_spellD
integer array Hero_spellF
trigger GetOrders_orderDetect=null
integer LinkedListModule_first_3=0
integer LinkedListModule_last_3=0
integer LinkedListModule_size_3=0
<<<<<<< HEAD
=======
integer array LinkedListModule_prev_3
integer array LinkedListModule_next_3
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
integer array Stun_u
timer array Stun_t
integer array ObjectIdGenerator_id
integer ObjectIdGenerator_heroPrefix=0
integer ObjectIdGenerator_nonheroPrefix=0
boolean ObjectIdGenerator_helperActivator=false
integer array StringList_first
integer array StringList_last
<<<<<<< HEAD
=======
string array String_content
integer array String_next
integer array StringIterator_pos
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
integer UnitTypes_unitTypes=0
integer UnitType_basicId=0
integer UnitType_basicMovespeed=0
integer UnitType_basicSpells=0
real UnitType_castPoint=0.
real UnitType_castBackPoint=0.
real UnitType_animationSmoothingFactor=0.
integer UnitType_moveInterpolation=0
real UnitType_attackCooldown=0.
string UnitType_attackType=null
integer UnitType_basicAttack=0
integer UnitType_diceSides=0
integer UnitType_diceCount=0
boolean UnitType_homingAttack=false
integer UnitType_foodCost=0
real UnitType_manaReg=0.
real UnitType_lifeReg=0.
integer UnitType_sightRange=0
integer UnitType_startMana=0
integer UnitType_baseBounty=0
real UnitType_baseMass=0.
real UnitType_baseRadius=0.
real UnitType_baseHeight=0.
<<<<<<< HEAD
=======
integer array UnitType_def
integer array UnitType_id
integer array UnitType_moveSpeed
integer array UnitType_moveSpeed_2
integer array UnitType_abis
real array UnitType_walkSpeed
integer array UnitType_walkSpeed_2
real array UnitType_runSpeed
integer array UnitType_runSpeed_2
real array UnitType_selectionRadius
integer array UnitType_selectionRadius_2
boolean array UnitType_ranged
integer array UnitType_ranged_2
real array UnitType_missleTargetZ
integer array UnitType_missleTargetZ_2
real array UnitType_missleStart_x
real array UnitType_missleStart_y
real array UnitType_missleStart_z
integer array UnitType_missleStart
string array UnitType_model
integer array UnitType_model_2
real array UnitType_shaddowSize_x
real array UnitType_shaddowSize_y
integer array UnitType_shaddowSize
real array UnitType_shaddowPosFix_x
real array UnitType_shaddowPosFix_y
integer array UnitType_shaddowPosFix
real array UnitType_scale
integer array UnitType_scale_2
string array UnitType_icon
integer array UnitType_icon_2
real array UnitType_attackBackswingPoint
integer array UnitType_attackBackswingPoint_2
real array UnitType_attackDamagePoint
integer array UnitType_attackDamagePoint_2
integer array UnitType_attack
integer array UnitType_attack_2
real array UnitType_missleArc
integer array UnitType_missleArc_2
string array UnitType_missleModel
integer array UnitType_missleModel_2
integer array UnitType_missleSpeed
integer array UnitType_missleSpeed_2
integer array UnitType_attackRange
integer array UnitType_attackRange_2
real array UnitType_attackRangeBuffer
integer array UnitType_attackRangeBuffer_2
integer array UnitType_weaponSound
integer array UnitType_weaponSound_2
integer array UnitType_armor
integer array UnitType_armor_2
integer array UnitType_armorType
integer array UnitType_armorType_2
string array UnitType_soundSet
integer array UnitType_soundSet_2
string array UnitType_name
integer array UnitType_name_2
real array UnitType_collisionSize
integer array UnitType_collisionSize_2
integer array UnitType_mana
integer array UnitType_mana_2
integer array UnitType_life
integer array UnitType_life_2
integer array UnitType_tier
integer array UnitType_tier_2
integer array UnitType_bounty
integer array UnitType_bounty_2
real array UnitType_mass
integer array UnitType_mass_2
real array UnitType_radius
integer array UnitType_radius_2
real array UnitType_height
integer array UnitType_height_2
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
integer array PreDamageData_source
integer array PreDamageData_target
integer array PreDamageEvent_target
integer array OnDamageData_source
integer array OnDamageData_target
real array OnDamageData_damage
boolean array OnDamageData_stop
integer array OnDamageEvent_target
boolean array SpellData_spellSuccess
integer UnitEvents_pullOnCreate=0
integer array Units_source
integer array Units_target
integer UnitClass_knocklist=0
integer UnitClass_last=0
rect array Aura_r
real array Aura_radius
boolexpr array Aura_filter
integer array Aura_u
group array Aura_g
integer array Aura_enter
integer array Aura_leave
image array AreaMarker_img
timer array AreaMarker_t
integer ToolTipTypes_tipMap=0
integer array Stack_dummy
integer array Stack_top
integer array Stack_size
integer array SEntry_elem_2
integer array SEntry_prev
string array Widget_backgroundTexture
integer array Widget_pos
integer array Widget_pos_2
integer array Widget_size
integer array Widget_size_2
boolean ClassInit_helper=false
integer array Observable_content
integer array Observable_click
integer array Observable_dClick
integer array Observable_track
integer array Observable_unTrack
boolean array Observable_playClickAnimation
boolean array Observable_playDoubleClickAnimation
boolean array Observable_playHoverAnimation
integer array WindowManager_currentWindow
integer array WindowManager_currentObservable
integer array Window_content
integer array Window_trackMap
integer array Window_wantToClose
integer array Window_voidClick
integer array w
integer array this_54
player array p
integer Tooltip_dummyTip=0
real Tooltip_cleanPos_x=0.
real Tooltip_cleanPos_y=0.
destructable array Tooltip_d
real array Tooltip_realPos
real array Tooltip_realPos_2
integer array Tooltip_id
integer TextTagEx_standardColor_red=0
integer TextTagEx_standardColor_green=0
integer TextTagEx_standardColor_blue=0
integer TextTagEx_standardColor_alpha=0
real TextTagEx_resizeRateConstant=0.
integer TextTagEx_fadeTicks=0
integer TextTagEx_resizeTicks=0
integer FontArial_FONT_HEIGHT=0
integer FontArial_FONT_RESOLUTION=0
string array FontArial_paths
integer array FontArial_widths
integer TextSplat_DISABLE_COLOR_ALPHA=0
real TextSplat_DISABLE_MAX_WIDTH=0.
integer TextSplat_spaceWidth=0
real array TextSplat_pos
real array TextSplat_pos_2
real array TextSplat_dimensions
real array TextSplat_dimensions_2
real array TextSplat_cursor
real array TextSplat_cursor_2
real array TextSplat_maxWidth
integer array TextSplat_images
integer array TextSplat_layer
real array TextSplat_fontSize
image array ImageListEntry_img
integer array ImageListEntry_prev
integer array ImageList_last
real array TextBox_maxSpace
string array TextBox_content
integer array TextBox_splat
real array TextBox_fontsize
integer array TextBox_col
integer array TextBox_col_2
integer array TextBox_col_3
image array ImageEx_content
integer array ImageList_first
integer array ImageList_last_2
image array ListImage_img
integer array ListImage_next
integer array ImageIterator_pos
integer Pane_tileSize=0
integer Pane_tileDimensions_x=0
integer Pane_tileDimensions_y=0
string Pane_horizontalSide=null
string Pane_verticalSide=null
string Pane_leftBotCorner=null
string Pane_rightBotCorner=null
string Pane_rightTopCorner=null
string Pane_leftTopCorner=null
real Pane_sizeFix_x=0.
real Pane_sizeFix_y=0.
real Pane_posFixBot_x=0.
real Pane_posFixBot_y=0.
real Pane_posFixTop_x=0.
real Pane_posFixTop_y=0.
real Pane_posFixRight_x=0.
real Pane_posFixRight_y=0.
real Pane_posFixLeft_x=0.
real Pane_posFixLeft_y=0.
integer array Pane_onExit
integer array Pane_list
integer array Pane_content
integer array this_55
integer array this_56
integer array FreeNode_dataPos
integer array FreeNode_size
integer array FreeNode_next
integer ArrayList_freeList=0
integer Model_dummyID=0
unit array Model_u
integer array Model_col
integer array Model_col_2
integer array Model_col_3
integer IconType_iconMap1=0
integer IconType_iconMap2=0
real IconType_restColor=0.
real Icon_animationSpeedHover=0.
real Icon_animationSpeedHit=0.
integer Icon_dummyIcon=0
integer array Icon_typ
integer array Icon_typ_2
real array Icon_realPos
real array Icon_realPos_2
integer array Icon_scale
string Button_buttonTexture=null
real Button_sizeFix_x=0.
real Button_sizeFix_y=0.
real Button_posFix_x=0.
real Button_posFix_y=0.
integer array Button_splat
string array Button_name
integer CreationEvent_create_2=0
integer CreationEvent_dest_2=0
integer LinkedListModule_first_4=0
integer LinkedListModule_last_4=0
integer LinkedListModule_size_4=0
integer B_i=0
integer LinkedListModule_first_5=0
integer LinkedListModule_last_5=0
integer LinkedListModule_size_5=0
real RunningMazeChecker_tileWidth=0.
string Lightning_CHAIN_LIGHTNING_PRIMARY=null
string Lightning_CHAIN_LIGHTNING_SECONDARY=null
string Lightning_DRAIN=null
string Lightning_DRAIN_LIFE=null
string Lightning_DRAIN_MANA=null
string Lightning_FINGER_OF_DEATH=null
string Lightning_FORKED_LIGHTNING=null
string Lightning_HEALING_WAVE_PRIMARY=null
string Lightning_HEALING_WAVE_SECONDARY=null
string Lightning_LIGHTNING_ATTACK=null
string Lightning_MAGIC_LEASH=null
string Lightning_MANA_BURN=null
string Lightning_MANA_FLARE=null
string Lightning_SPIRIT_LINK=null
integer CaptureAnimation_captureTimer=0
real ControlPoint_range=0.
real ControlPoint_captureRange=0.
integer ControlPoint_model=0
integer ControlPoint_morphAbi=0
real ControlPoint_height=0.
real ControlPoint_baseDmg=0.
real ControlPoint_dmgPerLvl=0.
real ControlPoint_percentualDmg=0.
real ControlPoint_heroDmgFactor=0.
real ControlPoint_unitDmgFactor=0.
real ControlPoint_creepDmg=0.
real ControlPoint_captureSpeedPoint=0.
real ControlPoint_captureSpeedHero=0.
real ControlPoint_baseSHeal=0.
real ControlPoint_heroSHealFactor=0.
real ControlPoint_unitSHealFactor=0.
<<<<<<< HEAD
=======
integer array CaptureData_owner
lightning array CaptureData_l1
lightning array CaptureData_l2
real array CaptureData_blitzPos
boolean array CaptureData_wantCapture
boolean array CaptureData_captures
integer array CaptureData_onDeath
integer array CaptureData_fx
integer array this_57
integer ControlPoint_captureData=0
integer ControlPoint_creationAction=0
integer ControlPoint_destructionAction=0
real ControlPoint_maxDistance=0.
real array ControlPoint_pos3
real array ControlPoint_pos3_2
real array ControlPoint_pos3_3
real array ControlPoint_pos2
real array ControlPoint_pos2_2
group array ControlPoint_inRange
integer array ControlPoint_owner
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
integer SamplePointSpellSetup_setup=0
timer array SamplePointSpell_t
integer TestSpell1Setup_setup=0
integer TestSpell1_animationType=0
integer array TestSpell1_setup
integer array TestSpell1_caster
timer array TestSpell1_t
unit array RockThrow_dummy
unit array RockThrow_u
real array RockThrow_range
real array RockThrow_distd
real array RockThrow_x
real array RockThrow_y
real array RockThrow_z
real array RockThrow_grav
real array RockThrow_currentZ
real array RockThrow_ang
integer array RockThrow_i
integer array RockThrow_c
timer array RockThrow_t
group array RockThrow_g
effect array RockThrow_e
timer array Pull2_t
unit array Pull2_u
unit array Pull2_ut
lightning array Pull2_l
integer array Pull2_i
integer array Pull2_imax
integer array Pull2_uut
timer array Missle_t
integer array Missle_fx
real array Missle_radius
real array Missle_vel
real array Missle_vel_2
integer array Missle_dl
integer array Missle_atHit
integer array Missle_atEnd
integer array Missle_source
boolexpr array Missle_filter
trigger array DelayedDestroy_things
integer DelayedDestroy_numberOfThings=0
timer DelayedDestroy_t=null
integer Cast_casts=0
integer array Cast_abiCode
integer OnDamage_damageActions=0
real Conductor_range=0.
real Conductor_missleRadius=0.
real Conductor_missleHeight=0.
real Conductor_missleSpeed=0.
real Conductor_baseDamage=0.
real Conductor_bonusDamage=0.
real Conductor_lvlFactor=0.
integer array Conductor_dummy
real array Conductor_speed
real array Conductor_speed_2
unit array Conductor_owner
timer array Conductor_t
integer array Conductor_lvl
integer array Conductor_typ
real array Conductor_distance
real Missle_missleStartSpeed=0.
real Missle_speedLost=0.
real Missle_speedAccel=0.
real Missle_missleRadius=0.
real Missle_knockback=0.
real Missle_knockbackRange=0.
integer array Missle_missle
integer array Missle_owner
integer array Missle_target
real array Missle_speed
real array Missle_speed_2
timer array Missle_t_2
timer array Missle_destroyTimer
boolean array Missle_canHitCaster
integer PlayerClass_lastp=0
real PlayerClass_camDistance=0.
real PlayerClass_camAngle=0.
real PlayerClass_camWidth=0.
real PlayerClass_camHeightLow=0.
real PlayerClass_camHeightHigh=0.
integer PlayerClass_playerData=0
player array Player_p
integer array Player_h
string array Player_team
integer array Player_kills
integer array Player_assists
integer array Player_death
boolean array Player_selectionOn
timer array Player_camSet
real array Player_sightfield
real array Player_perspektiv
<<<<<<< HEAD
=======
integer HeroTypes_heros=0
string HeroType_heroAbis=null
string array HeroType_properName
integer array HeroType_properName_2
integer array HeroType_captureAnimationIndex
integer array HeroType_captureAnimationIndex_2
boolean array HeroType_hasPeriodicAnimation
integer array HeroType_hasPeriodicAnimation_2
real array HeroType_captureAnimationIntervall
integer array HeroType_captureAnimationIntervall_2
real array HeroType_captureAnimationSpeed
integer array HeroType_captureAnimationSpeed_2
real array HeroType_captureOffset_x
real array HeroType_captureOffset_y
real array HeroType_captureOffset_z
integer array HeroType_captureOffset
integer HeroInit_t=0
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
integer ItemClass_itemTypes=0
boolean ItemType_classInit=false
string array ItemType_nameColor
string ItemType_bonusColor=null
integer CustomBar_DEFAULT_BACKGROUND=0
integer CustomBar_DEFAULT_FOREGROUND=0
integer CustomBar_MAX_GRADIENTS=0
force CustomBar_tempForce=null
integer array CustomBar_bars
integer CustomBar_count=0
timer CustomBar_animationTimer=null
texttag array CustomBar_t
real array CustomBar_position
real array CustomBar_position_2
real array CustomBar_position_3
integer array CustomBar_lockindex
boolean array CustomBar_locked
unit array CustomBar_u
real array CustomBar_xOffset
real array CustomBar_yOffset
trigger GameStart_testt=null
integer GameStart_lastBon=0
real GameStart_tvec_x=0.
real GameStart_tvec_y=0.
real GameStart_hp=0.
integer GameStart_testc=0
integer GameStart_testi=0
real GameStart_ttSize=0.
real GameStart_testr=0.
string GameStart_tests=null
integer GameStart_testSpell=0
string GameStart_testChar=null
group GameStart_testg=null
integer GameStart_progress=0
integer GameStart_recursionCounter=0
integer GameStart_callLimit=0
integer GameStart_tList=0
integer GameStart_lList=0
integer GameStart_shopWindow=0
integer GameStart_scoreWindow=0
integer GameStart_guideWindow=0
integer GameStart_statsWindow=0
real Preload_maxProgress=0.
string array Preload_initOrder
real Preload_progress=0.
integer Preload_preloadStatus=0
integer Preload_preloadEnd=0
boolean Preload_showProgress=false
integer Preload_loopCounter=0
boolean ClassInit_helper_2=false
<<<<<<< HEAD
integer array shopT1
integer array shopT3
integer array shopT2
=======
integer array shopT2
integer array shopT3
integer array shopT4
integer array shopT5
integer array shopT6
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
integer array shopT7
integer array shopT8
integer array shopT9
integer array buttonLayerShop01
integer array buttonLayerShop02
integer array buttonLayerShop03
integer array buttonLayerShop04
integer array buttonLayerShop05
integer array buttonLayerShop06
integer array buttonLayerShop07
integer array buttonLayerShop08
integer array buttonLayerShop09
integer array buttonLayerShop10
integer array buttonLayerShop11
integer array buttonLayerShop12
integer array buttonLayerShop13
integer array buttonLayerShop14
integer array buttonLayerShop15
integer array buttonLayerShop16
integer array buttonLayerShop17
integer array buttonLayerShop18
integer array buttonLayerShop19
integer array buttonLayerShop20
integer array buttonLayerShop21
integer array buttonLayerShop22
integer array buttonLayerShop23
<<<<<<< HEAD
integer array buttonLayerShop32
=======
integer array buttonLayerShop24
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
integer array shopB
integer array shopOb
integer array scoreB
integer array scoreOb
integer array guideB
integer array guideOb
integer array statsB
integer array statsOb
integer array shopPright
integer array shopPleft
<<<<<<< HEAD
integer array shopPleftBot
integer array shopPleftBot2
=======
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
integer array shop1
integer array shop2
integer array shop3
integer array shop4
integer array shop5
integer array shop6
integer array shop7
integer array shop8
integer array shop9
integer array shop10
integer array shop11
integer array shop12
integer array shop13
integer array shop14
integer array shop15
integer array shop16
integer array shop17
integer array shop18
integer array shop19
integer array shop20
integer array shop21
integer array shop22
integer array shop23
integer array shop24
<<<<<<< HEAD
integer array shop25
integer array shop26
integer array shop27
integer array shop28
integer array shop29
integer array shop30
integer array shop31
integer array shop32
=======
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
integer RTable_tableSize=0
integer array Table_nextFree
integer Table_firstFree=0
integer Table_maxIndex=0
integer array Table_typeId
integer array LinkedList_nextFree
integer LinkedList_firstFree=0
integer LinkedList_maxIndex=0
integer array LinkedList_typeId
integer array LLEntry_nextFree
integer LLEntry_firstFree=0
integer LLEntry_maxIndex=0
integer array LLEntry_typeId
integer array LLIterator_nextFree
integer LLIterator_firstFree=0
integer LLIterator_maxIndex=0
integer array LLIterator_typeId
integer LLBIterator_firstFree=0
integer LLBIterator_maxIndex=0
integer LinkedListPredicate_firstFree=0
integer LinkedListPredicate_maxIndex=0
integer LinkedListUpdater_firstFree=0
integer LinkedListUpdater_maxIndex=0
integer StringIterator_firstFree=0
integer StringIterator_maxIndex=0
integer StringLines_firstFree=0
integer StringLines_maxIndex=0
integer ForceIterator_firstFree=0
integer ForceIterator_maxIndex=0
integer StringLevelClosure_firstFree=0
integer StringLevelClosure_maxIndex=0
integer IntLevelClosure_firstFree=0
integer IntLevelClosure_maxIndex=0
integer RealLevelClosure_firstFree=0
integer RealLevelClosure_maxIndex=0
integer BooleanLevelClosure_firstFree=0
integer BooleanLevelClosure_maxIndex=0
<<<<<<< HEAD
integer W3UDefinition_firstFree=0
integer W3UDefinition_maxIndex=0
=======
integer array W3UDefinition_nextFree
integer W3UDefinition_firstFree=0
integer W3UDefinition_maxIndex=0
integer array W3UDefinition_typeId
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
integer DummyRecycler_firstFree=0
integer DummyRecycler_maxIndex=0
integer array ArrayQueue_nextFree
integer ArrayQueue_firstFree=0
integer ArrayQueue_maxIndex=0
integer array ArrayQueue_typeId
integer array DelayNode_nextFree
integer DelayNode_firstFree=0
integer DelayNode_maxIndex=0
integer array DelayNode_typeId
integer array Fx_nextFree
integer Fx_firstFree=0
integer Fx_maxIndex=0
integer array Fx_typeId
integer array DebugFile_nextFree
integer DebugFile_firstFree=0
integer DebugFile_maxIndex=0
integer array DebugFile_typeId
integer array OrderStringFactory_nextFree
integer OrderStringFactory_firstFree=0
integer OrderStringFactory_maxIndex=0
integer array OrderStringFactory_typeId
integer array AbilityDefinition_nextFree
integer AbilityDefinition_firstFree=0
integer AbilityDefinition_maxIndex=0
integer array AbilityDefinition_typeId
integer AbilityTooltipGenerator_firstFree=0
integer AbilityTooltipGenerator_maxIndex=0
integer array HashMap_nextFree
integer HashMap_firstFree=0
integer HashMap_maxIndex=0
integer array HashMap_typeId
integer array HashList_nextFree
integer HashList_firstFree=0
integer HashList_maxIndex=0
integer array HashList_typeId
integer HLIterator_firstFree=0
integer HLIterator_maxIndex=0
integer array CallbackSingle_nextFree
integer CallbackSingle_firstFree=0
integer CallbackSingle_maxIndex=0
integer array CallbackSingle_typeId
integer CallbackPeriodic_firstFree=0
integer CallbackPeriodic_maxIndex=0
integer array CallbackCounted_nextFree
integer CallbackCounted_firstFree=0
integer CallbackCounted_maxIndex=0
integer array CallbackCounted_typeId
integer array PreloadAction_nextFree
integer PreloadAction_firstFree=0
integer PreloadAction_maxIndex=0
integer array PreloadAction_typeId
integer array Ability_nextFree
integer Ability_firstFree=0
integer Ability_maxIndex=0
integer array Ability_typeId
integer Table3D_firstFree=0
integer Table3D_maxIndex=0
integer array TrackableAction_nextFree
integer TrackableAction_firstFree=0
integer TrackableAction_maxIndex=0
integer array TrackableAction_typeId
integer array TrackableEx_nextFree
integer TrackableEx_firstFree=0
integer TrackableEx_maxIndex=0
integer array TrackableEx_typeId
integer array Event_nextFree
integer Event_firstFree=0
integer Event_maxIndex=0
integer array Event_typeId
integer array Action_nextFree
integer Action_firstFree=0
integer Action_maxIndex=0
integer array Action_typeId
integer Array_firstFree=0
integer Array_maxIndex=0
integer array ElementLoop_nextFree
integer ElementLoop_firstFree=0
integer ElementLoop_maxIndex=0
integer array ElementLoop_typeId
integer array Dot_nextFree
integer Dot_firstFree=0
integer Dot_maxIndex=0
integer array Dot_typeId
integer BuffDefinition_firstFree=0
integer BuffDefinition_maxIndex=0
integer array Buff_nextFree
integer Buff_firstFree=0
integer Buff_maxIndex=0
integer array Buff_typeId
integer array TextTag_nextFree
integer TextTag_firstFree=0
integer TextTag_maxIndex=0
integer array TextTag_typeId
<<<<<<< HEAD
=======
integer array ShieldList_nextFree
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
integer ShieldList_firstFree=0
integer ShieldList_maxIndex=0
integer array ShieldList_typeId
integer array Shield_nextFree
integer Shield_firstFree=0
integer Shield_maxIndex=0
integer array Shield_typeId
<<<<<<< HEAD
=======
integer array Bar_nextFree
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
integer Bar_firstFree=0
integer Bar_maxIndex=0
integer array Bar_typeId
integer BarTest_firstFree=0
integer BarTest_maxIndex=0
<<<<<<< HEAD
=======
integer array Queue_nextFree
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
integer Queue_firstFree=0
integer Queue_maxIndex=0
integer array Queue_typeId
integer array SEntry_nextFree
integer SEntry_firstFree=0
integer SEntry_maxIndex=0
integer array SEntry_typeId
integer SIterator_firstFree=0
integer SIterator_maxIndex=0
integer array Order_nextFree
integer Order_firstFree=0
integer Order_maxIndex=0
integer array Order_typeId
integer array ObjId_nextFree
integer ObjId_firstFree=0
integer ObjId_maxIndex=0
integer array ObjId_typeId
integer array SpellSetup_nextFree
integer SpellSetup_firstFree=0
integer SpellSetup_maxIndex=0
integer array SpellSetup_typeId
integer array Spellcast_nextFree
integer Spellcast_firstFree=0
integer Spellcast_maxIndex=0
integer array Spellcast_typeId
integer Spell_firstFree=0
integer Spell_maxIndex=0
integer array Spell_typeId
<<<<<<< HEAD
=======
integer array Unit_nextFree
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
integer Unit_firstFree=0
integer Unit_maxIndex=0
integer array Unit_typeId
integer array Bonus_nextFree
integer Bonus_firstFree=0
integer Bonus_maxIndex=0
integer array Bonus_typeId
integer BonusType_firstFree=0
integer BonusType_maxIndex=0
integer array Stun_nextFree
integer Stun_firstFree=0
integer Stun_maxIndex=0
integer array Stun_typeId
integer array StringList_nextFree
integer StringList_firstFree=0
integer StringList_maxIndex=0
integer array StringList_typeId
integer String_firstFree=0
integer String_maxIndex=0
<<<<<<< HEAD
integer StringIterator_firstFree_2=0
integer StringIterator_maxIndex_2=0
integer UnitType_firstFree=0
integer UnitType_maxIndex=0
=======
integer array StringIterator_nextFree
integer StringIterator_firstFree_2=0
integer StringIterator_maxIndex_2=0
integer array StringIterator_typeId
integer array UnitType_nextFree
integer UnitType_firstFree=0
integer UnitType_maxIndex=0
integer array UnitType_typeId
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
integer array PreDamageData_nextFree
integer PreDamageData_firstFree=0
integer PreDamageData_maxIndex=0
integer array PreDamageData_typeId
integer array OnDamageData_nextFree
integer OnDamageData_firstFree=0
integer OnDamageData_maxIndex=0
integer array OnDamageData_typeId
integer SpellData_firstFree=0
integer SpellData_maxIndex=0
integer array Units_nextFree
integer Units_firstFree=0
integer Units_maxIndex=0
integer array Units_typeId
integer Aura_firstFree=0
integer Aura_maxIndex=0
integer array Aura_typeId
integer array AreaMarker_nextFree
integer AreaMarker_firstFree=0
integer AreaMarker_maxIndex=0
integer array AreaMarker_typeId
integer array Stack_nextFree
integer Stack_firstFree=0
integer Stack_maxIndex=0
integer array Stack_typeId
integer array SEntry_nextFree_2
integer SEntry_firstFree_2=0
integer SEntry_maxIndex_2=0
integer array SEntry_typeId_2
integer SIterator_firstFree_2=0
integer SIterator_maxIndex_2=0
integer array Widget_nextFree
integer Widget_firstFree=0
integer Widget_maxIndex=0
integer array Widget_typeId
integer array PlayerAction_nextFree
integer PlayerAction_firstFree=0
integer PlayerAction_maxIndex=0
integer array PlayerAction_typeId
integer WindowManager_firstFree=0
integer WindowManager_maxIndex=0
integer array Window_nextFree
integer Window_firstFree=0
integer Window_maxIndex=0
integer array Window_typeId
integer TextTagEx_firstFree=0
integer TextTagEx_maxIndex=0
integer array TextSplat_nextFree
integer TextSplat_firstFree=0
integer TextSplat_maxIndex=0
integer array TextSplat_typeId
integer array ImageListEntry_nextFree
integer ImageListEntry_firstFree=0
integer ImageListEntry_maxIndex=0
integer array ImageListEntry_typeId
integer array ImageList_nextFree
integer ImageList_firstFree=0
integer ImageList_maxIndex=0
integer array ImageList_typeId
integer ImageListIterator_firstFree=0
integer ImageListIterator_maxIndex=0
integer array ImageList_nextFree_2
integer ImageList_firstFree_2=0
integer ImageList_maxIndex_2=0
integer array ImageList_typeId_2
integer array ListImage_nextFree
integer ListImage_firstFree=0
integer ListImage_maxIndex=0
integer array ListImage_typeId
integer array ImageIterator_nextFree
integer ImageIterator_firstFree=0
integer ImageIterator_maxIndex=0
integer array ImageIterator_typeId
integer array FreeNode_nextFree
integer FreeNode_firstFree=0
integer FreeNode_maxIndex=0
integer array FreeNode_typeId
integer ArrayList_firstFree=0
integer ArrayList_maxIndex=0
integer ArrayListIterator_firstFree=0
integer ArrayListIterator_maxIndex=0
integer UnitIndex_firstFree=0
integer UnitIndex_maxIndex=0
integer A_firstFree=0
integer A_maxIndex=0
integer MazeChecker_firstFree=0
integer MazeChecker_maxIndex=0
<<<<<<< HEAD
integer CaptureData_firstFree=0
integer CaptureData_maxIndex=0
=======
integer array CaptureData_nextFree
integer CaptureData_firstFree=0
integer CaptureData_maxIndex=0
integer array CaptureData_typeId
integer array ControlPoint_nextFree
integer ControlPoint_firstFree=0
integer ControlPoint_maxIndex=0
integer array ControlPoint_typeId
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
integer array SamplePointSpell_nextFree
integer SamplePointSpell_firstFree=0
integer SamplePointSpell_maxIndex=0
integer array SamplePointSpell_typeId
integer array TestSpell1_nextFree
integer TestSpell1_firstFree=0
integer TestSpell1_maxIndex=0
integer array TestSpell1_typeId
integer RockThrow_firstFree=0
integer RockThrow_maxIndex=0
integer array RockThrow_typeId
integer array Pull2_nextFree
integer Pull2_firstFree=0
integer Pull2_maxIndex=0
integer array Pull2_typeId
integer array Missle_nextFree
integer Missle_firstFree=0
integer Missle_maxIndex=0
integer array Missle_typeId
integer TriggerDelayedDestroy_firstFree=0
integer TriggerDelayedDestroy_maxIndex=0
integer array Cast_nextFree
integer Cast_firstFree=0
integer Cast_maxIndex=0
integer array Cast_typeId
integer OnDamage_firstFree=0
integer OnDamage_maxIndex=0
integer array Conductor_nextFree
integer Conductor_firstFree=0
integer Conductor_maxIndex=0
integer array Conductor_typeId
integer array Missle_nextFree_2
integer Missle_firstFree_2=0
integer Missle_maxIndex_2=0
integer array Missle_typeId_2
integer array Player_nextFree
integer Player_firstFree=0
integer Player_maxIndex=0
integer array Player_typeId
<<<<<<< HEAD
=======
integer TestHero_firstFree=0
integer TestHero_maxIndex=0
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
integer ItemType_firstFree=0
integer ItemType_maxIndex=0
integer Item_firstFree=0
integer Item_maxIndex=0
integer array CustomBar_nextFree
integer CustomBar_firstFree=0
integer CustomBar_maxIndex=0
integer array CustomBar_typeId
integer Preload_firstFree=0
integer Preload_maxIndex=0
integer RTable_firstFree=0
integer RTable_maxIndex=0
unit array ArrayQueue_units_0
unit array ArrayQueue_units_1
unit array ArrayQueue_units_2
unit array ArrayQueue_units_3
unit array ArrayQueue_units_4
unit array ArrayQueue_units_5
destructable array Icon_structs_0
destructable array Icon_structs_1
destructable array Icon_structs_2
destructable array Icon_structs_3
destructable array Icon_structs_4
destructable array Icon_structs_5
destructable array Icon_structs_6
destructable array Icon_structs_7
destructable array Icon_structs_8
destructable array Icon_structs_9
destructable array Icon_structs_10
destructable array Icon_structs_11
boolean array Icon_isDisabled_0
boolean array Icon_isDisabled_1
boolean array Icon_isDisabled_2
boolean array Icon_isDisabled_3
boolean array Icon_isDisabled_4
boolean array Icon_isDisabled_5
boolean array Icon_isDisabled_6
boolean array Icon_isDisabled_7
boolean array Icon_isDisabled_8
boolean array Icon_isDisabled_9
boolean array Icon_isDisabled_10
boolean array Icon_isDisabled_11
real angle_toVec_return_x=0.
real angle_toVec_return_y=0.
real vec2_op_plus_return_x=0.
real vec2_op_plus_return_y=0.
real vec2_op_minus_return_x=0.
real vec2_op_minus_return_y=0.
real vec2_op_mult_return_x=0.
real vec2_op_mult_return_y=0.
real item_getPos_return_x=0.
real item_getPos_return_y=0.
real vec3_toVec2_return_x=0.
real vec3_toVec2_return_y=0.
real vec2_withZ_return_x=0.
real vec2_withZ_return_y=0.
real vec2_withZ_return_z=0.
real vec2_polarOffset_return_x=0.
real vec2_polarOffset_return_y=0.
real vec2_setLength_return_x=0.
real vec2_setLength_return_y=0.
real vec2_toVec3_return_x=0.
real vec2_toVec3_return_y=0.
real vec2_toVec3_return_z=0.
real vec3_project_return_x=0.
real vec3_project_return_y=0.
real vec3_project_return_z=0.
real dispatch_Hero_getBarPos_return_x=0.
real dispatch_Hero_getBarPos_return_y=0.
real dispatch_Hero_getBarPos_return_z=0.
real unit_getPos_return_x=0.
real unit_getPos_return_y=0.
real getPathingNormal_return_x=0.
real getPathingNormal_return_y=0.
real getBounceVec_return_x=0.
real getBounceVec_return_y=0.
<<<<<<< HEAD
=======
real dispatch_Unit_getMiddle_return_x=0.
real dispatch_Unit_getMiddle_return_y=0.
real dispatch_Unit_getMiddle_return_z=0.
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
integer color_withAlpha_return_red=0
integer color_withAlpha_return_green=0
integer color_withAlpha_return_blue=0
integer color_withAlpha_return_alpha=0
integer element_op_plus_return_x=0
integer element_op_plus_return_y=0
integer element_op_minus_return_x=0
integer element_op_minus_return_y=0
integer dispatch_ElementLoop_next_return_x=0
integer dispatch_ElementLoop_next_return_y=0
real element_toVec_return_x=0.
real element_toVec_return_y=0.
integer getIconType_return_normalId=0
integer getIconType_return_diableId=0
real dispatch_Fx_getPos2_return_x=0.
real dispatch_Fx_getPos2_return_y=0.
real Fx_getPos2_return_x=0.
real Fx_getPos2_return_y=0.
integer ElementLoop_next_return_x=0
integer ElementLoop_next_return_y=0
<<<<<<< HEAD
=======
real Unit_getMiddle_return_x=0.
real Unit_getMiddle_return_y=0.
real Unit_getMiddle_return_z=0.
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
real Hero_getBarPos_return_x=0.
real Hero_getBarPos_return_y=0.
real Hero_getBarPos_return_z=0.
code ref_function_RegisterDestDeathInRegionEnum=null
code ref_function_SetCineModeVolumeGroupsImmediateBJ=null
code ref_function_SetSpeechVolumeGroupsImmediateBJ=null
code ref_function_VolumeGroupResetImmediateBJ=null
code ref_function_RandomItemInRectBJEnum=null
code ref_function_GetLastCreatedGroupEnum=null
code ref_function_DelayedSuspendDecayStopAnimEnum=null
code ref_function_DelayedSuspendDecayStopAnimEnum_2=null
code ref_function_DelayedSuspendDecayFleshEnum=null
code ref_function_DelayedSuspendDecayBoneEnum=null
code ref_function_DelayedSuspendDecayStopAnimEnum_3=null
code ref_function_DelayedSuspendDecay=null
code ref_function_SelectGroupBJEnum=null
code ref_function_SelectGroupBJEnum_2=null
code ref_function_IsUnitGroupDeadBJEnum=null
code ref_function_IsUnitGroupEmptyBJEnum=null
code ref_function_IsUnitGroupInRectBJEnum=null
code ref_function_WakePlayerUnitsEnum=null
code ref_function_PauseAllUnitsBJEnum=null
code ref_function_RandomDestructableInRectBJEnum=null
code ref_function_NudgeUnitsInRectEnum=null
code ref_function_NudgeItemsInRectEnum=null
code ref_function_NearbyElevatorExistsEnum=null
code ref_function_FindElevatorWallBlockerEnum=null
code ref_function_GroupAddGroupEnum=null
code ref_function_GroupRemoveGroupEnum=null
code ref_function_GroupPickRandomUnitEnum=null
code ref_function_ForcePickRandomPlayerEnum=null
code ref_function_CountUnitsInGroupEnum=null
code ref_function_CountPlayersInForceEnum=null
code ref_function_GetRandomSubGroupEnum=null
code ref_function_MakeUnitsPassiveForPlayerEnum=null
code ref_function_CustomVictoryOkBJ=null
code ref_function_CustomVictoryQuitBJ=null
code ref_function_CustomDefeatRestartBJ=null
code ref_function_CustomDefeatReduceDifficultyBJ=null
code ref_function_CustomDefeatLoadBJ=null
code ref_function_CustomDefeatQuitBJ=null
code ref_function_CancelCineSceneBJ=null
code ref_function_FinishCinematicFadeBJ=null
code ref_function_ContinueCinematicFadeBJ=null
code ref_function_TriggerActionUnitRescuedBJ=null
code ref_function_MakeUnitRescuableToForceBJEnum=null
code ref_function_SetPlayerColorBJEnum=null
code ref_function_MeleeGrantItemsToTrainedHero=null
code ref_function_MeleeGrantItemsToHiredHero=null
code ref_function_MeleeClearExcessUnit=null
code ref_function_MeleeEnumFindNearestMine=null
code ref_function_MeleeDoDefeatEnum=null
code ref_function_MeleeDoVictoryEnum=null
code ref_function_MeleeCrippledPlayerTimeout=null
code ref_function_MeleeDoDrawEnum=null
code ref_function_MeleeDoDefeatEnum_2=null
code ref_function_MeleeDoVictoryEnum_2=null
code ref_function_MeleeTriggerTournamentFinishSoon=null
code ref_function_MeleeTriggerTournamentFinishNow=null
code ref_function_MeleeTriggerActionConstructCancel=null
code ref_function_MeleeTriggerActionUnitDeath=null
code ref_function_MeleeTriggerActionUnitConstructionStart=null
code ref_function_MeleeTriggerActionPlayerDefeated=null
code ref_function_MeleeTriggerActionPlayerLeft=null
code ref_function_MeleeTriggerActionAllianceChange=null
code ref_function_MeleeTriggerActionPlayerLeft_2=null
code ref_function_MeleeTriggerActionAllianceChange_2=null
code ref_function_SetDNCSoundsDawn=null
code ref_function_SetDNCSoundsDusk=null
code ref_function_SetDNCSoundsDay=null
code ref_function_SetDNCSoundsNight=null
code ref_function_IssueHauntOrderAtLocBJFilter=null
code ref_function_EnumDestructablesInCircleBJFilter=null
code ref_function_GetUnitsInRectOfPlayerFilter=null
code ref_function_GetUnitsOfTypeIdAllFilter=null
code ref_function_GetUnitsOfPlayerAndTypeIdFilter=null
code ref_function_MeleeTrainedUnitIsHeroBJFilter=null
code ref_function_LivingPlayerUnitsOfTypeIdFilter=null
code ref_function_QueuedTriggerDoneBJ=null
code ref_function_UpdateEachStockBuildingEnum=null
code ref_function_PerformStockUpdates=null
code ref_function_StartStockUpdates=null
code ref_function_RemovePurchasedItem=null
code ref_function_MarkGameStarted=null
code ref_function_Trig_Unbezeichneter_Ausl__ser_003_Actions=null
code ref_function_hideItem=null
code ref_function_bridge_resetCam=null
code ref_function_bridge_resetCam_2=null
code ref_function_bridge_resetCam_3=null
code ref_function_ForceIterator_callback=null
code ref_function_GroupAddGroupEnum_2=null
code ref_function_bridge_DelayNode_recycle=null
code ref_function_bridge_DelayNode_recycle_2=null
code ref_function_bridge_DelayNode_recycle_3=null
code ref_function_bridge_destroyTimedEffect=null
code ref_function_bridge_destroyTimedFx=null
code ref_function_actions=null
code ref_function_callback=null
code ref_function_bridge_CallbackPeriodic_staticCallback=null
code ref_function_bridge_CallbackCounted_staticCallback=null
code ref_function_bridge_CallbackSingle_staticCallback=null
code ref_function_bridge_closure_impl=null
code ref_function_bridge_Dot_timerDestroyDot=null
code ref_function_bridge_Buff_createEffect=null
code ref_function_bridge_Buff_timerDestroyBuff=null
code ref_function_bridge_TextTag_destroyTextTag=null
code ref_function_bridge_TextTag_destroyTextTag_2=null
code ref_function_bridge_TextTag_destroyTextTag_3=null
code ref_function_bridge_Shield_onExpire=null
code ref_function_bridge_Bar_callUpdateEx=null
code ref_function_bridge_Spell_timedDisableCastDummy=null
code ref_function_notUnit=null
code ref_function_bridge_Unit_callMakeVunerable=null
code ref_function_bridge_Stun_destroyStun=null
code ref_function_bridge_Hero_enableAbilityTimed=null
code ref_function_bridge_Stun_destroyStun_2=null
code ref_function_bridge_Aura_callCheck=null
code ref_function_bridge_AreaMarker_destr=null
code ref_function_bridge_playAnimation=null
<<<<<<< HEAD
=======
code ref_function_bridge_closure_impl_2=null
code ref_function_bridge_closure_impl_3=null
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
code ref_function_bridge_SamplePointSpell_callCallback=null
code ref_function_TestSpell1_bla=null
code ref_function_bridge_TestSpell1_callCallback=null
code ref_function_bridge_RockThrow_rockMoveCall=null
code ref_function_bridge_Pull2_blackHCall=null
code ref_function_bridge_Missle_callMove=null
code ref_function_bridge_Missle_callMove_2=null
code ref_function_DelayedDestroy_destroyAllThings=null
code ref_function_bridge_OnDamage_damageHandler=null
<<<<<<< HEAD
code ref_function_bridge_closure_impl_2=null
code ref_function_bridge_closure_impl_3=null
code ref_function_bridge_closure_impl_4=null
code ref_function_bridge_closure_impl_5=null
=======
code ref_function_bridge_closure_impl_4=null
code ref_function_bridge_closure_impl_5=null
code ref_function_bridge_closure_impl_6=null
code ref_function_bridge_closure_impl_7=null
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
code ref_function_bridge_Player_setCam=null
code ref_function_CustomBar_copyForce=null
code ref_function_CustomBar_lockCallback=null
code ref_function_bridge_CustomBar_fadeOutCallback=null
code ref_function_bridge_Preload_preload=null
code ref_function_bridge_Preload_preload_2=null
code ref_function_bridge_Preload_preload_3=null
code ref_function_switchDebug=null
code ref_function_closure_impl=null
code ref_function_createMultiboard=null
code ref_function_updateTime=null
<<<<<<< HEAD
code ref_function_bridge_closure_impl_6=null
code ref_function_bridge_closure_impl_7=null
=======
code ref_function_bridge_closure_impl_8=null
code ref_function_bridge_closure_impl_9=null
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
code ref_function_bridge_Bar_updatePos=null
code ref_function_bridge_Bar_updateVision=null
code ref_function_finishPreload=null
code ref_function_bridge_Hero_handleCasts=null
<<<<<<< HEAD
code ref_function_bridge_closure_impl_8=null
=======
code ref_function_bridge_closure_impl_10=null
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
code ref_function_bridge_GetOrders_callOnOrder=null
code ref_function_bridge_Unit_tookDamage=null
code ref_function_spellCondition=null
code ref_function_bridge_spellStart=null
code ref_function_bridge_handleCasts=null
code ref_function_bridge_setCallLimit=null
code ref_function_bridge_Dot_loopList=null
code ref_function_bridge_callKnockback=null
code ref_function_bridge_camTest=null
code ref_function_onEsc=null
timer getTimertempReturn=null
unit group_nexttempReturn=null
image createImagetempReturn=null
image createImagetempReturn_2=null
unit DummyRecycler_gettempReturn=null
unit createDummytempReturn=null
image ImageIterator_nexttempReturn=null
player dispatch_Table_loadPlayertempReturn=null
effect dispatch_Table_loadEffecttempReturn=null
unit dispatch_ArrayQueue_dequeuetempReturn=null
image dispatch_ImageIterator_nexttempReturn=null
unit ArrayQueue_units_gettempReturn=null
destructable Icon_structs_gettempReturn=null
endglobals
function CreateBuildingsForPlayer1 takes nothing returns nothing
	local player p_2 = Player(1)
	call CreateUnit(p_2, 1869050469, 2816.0,  - 3008.0, 270.000)
	set p_2 = null
endfunction

function CreatePlayerBuildings takes nothing returns nothing
	call CreateBuildingsForPlayer1()
endfunction

function CreateUnitsForPlayer0 takes nothing returns nothing
	local player p_2 = Player(0)
	set gg_unit_Obla_0003 = CreateUnit(p_2, 1331850337, 3083.8,  - 3295.0, 240.553)
	call CreateUnit(p_2, 1751609977, 2842.1,  - 3328.5, 260.428)
	call CreateUnit(p_2, 1747988532, 2655.4,  - 3350.4, 253.243)
<<<<<<< HEAD
=======
	set gg_unit_hpea_0006 = CreateUnit(p_2, 1752196449,  - 207.0, 34.3, 3.670)
	call CreateUnit(p_2, 1462775862, 2320.9,  - 2903.1, 65.997)
	call CreateUnit(p_2, 1462775862, 2198.9,  - 3092.0, 333.445)
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
	set p_2 = null
endfunction

function CreatePlayerUnits takes nothing returns nothing
	call CreateUnitsForPlayer0()
endfunction

function CreateAllUnits takes nothing returns nothing
	call CreatePlayerBuildings()
	call CreatePlayerUnits()
endfunction

function CreateCameras takes nothing returns nothing
	set gg_cam_Camera_001 = CreateCameraSetup()
	call CameraSetupSetField(gg_cam_Camera_001, CAMERA_FIELD_ZOFFSET, 0.0, 0.0)
	call CameraSetupSetField(gg_cam_Camera_001, CAMERA_FIELD_ROTATION, 90.0, 0.0)
	call CameraSetupSetField(gg_cam_Camera_001, CAMERA_FIELD_ANGLE_OF_ATTACK, 270.0, 0.0)
	call CameraSetupSetField(gg_cam_Camera_001, CAMERA_FIELD_TARGET_DISTANCE, 4660.0, 0.0)
	call CameraSetupSetField(gg_cam_Camera_001, CAMERA_FIELD_ROLL, 0.0, 0.0)
	call CameraSetupSetField(gg_cam_Camera_001, CAMERA_FIELD_FIELD_OF_VIEW, 40.0, 0.0)
	call CameraSetupSetField(gg_cam_Camera_001, CAMERA_FIELD_FARZ, 200.0, 0.0)
	call CameraSetupSetDestPosition(gg_cam_Camera_001,  - 1064.0,  - 280.0, 0.0)
endfunction

function InitTrig_Unbezeichneter_Ausl__ser_003 takes nothing returns nothing
	set gg_trg_Unbezeichneter_Ausl__ser_003 = CreateTrigger()
	call TriggerAddAction(gg_trg_Unbezeichneter_Ausl__ser_003, ref_function_Trig_Unbezeichneter_Ausl__ser_003_Actions)
endfunction

function InitCustomTriggers takes nothing returns nothing
	call InitTrig_Unbezeichneter_Ausl__ser_003()
endfunction

function InitGlobals takes nothing returns nothing
	call CreateTimer()
	call CreateGroup()
endfunction

function RunInitializationTriggers takes nothing returns nothing
	call ConditionalTriggerExecute(gg_trg_Unbezeichneter_Ausl__ser_003)
endfunction

function CustomBar_copyForce takes nothing returns nothing
	call ForceAddPlayer(CustomBar_tempForce, GetEnumPlayer())
endfunction

function CustomBar_lockCallback takes nothing returns nothing
	local integer i = CustomBar_count - 1
	local integer s
	local integer tempIndex
	local integer tempIndex_2
	local integer tempIndex_3
	local real tempTupleSelectionResult_1
	local real temp_tempTupleSelectionResult_1
	local real temp_tempTupleSelectionResult_2
	local real temp_tempTupleSelectionResult_3
	local integer tempIndex_4
	local real tempTupleSelectionResult_2
	local real temp_tempTupleSelectionResult_1_2
	local real temp_tempTupleSelectionResult_2_2
	local real temp_tempTupleSelectionResult_3_2
	local integer tempIndex_5
	local real tempTupleSelectionResult_3
	local real temp_tempTupleSelectionResult_1_3
	local real temp_tempTupleSelectionResult_2_3
	local real temp_tempTupleSelectionResult_3_3
	local texttag temp
	local real temp_2
	local real temp_3
	loop
		exitwhen i < 0
		set s = CustomBar_bars[i]
		set tempIndex = s
		set CustomBar_position[tempIndex] = GetUnitX(CustomBar_u[s])
		set tempIndex_2 = s
		set CustomBar_position_2[tempIndex_2] = GetUnitY(CustomBar_u[s])
		set temp = CustomBar_t[s]
		set tempIndex_3 = s
		set temp_tempTupleSelectionResult_1 = CustomBar_position[tempIndex_3]
		set temp_tempTupleSelectionResult_2 = CustomBar_position_2[tempIndex_3]
		set temp_tempTupleSelectionResult_3 = CustomBar_position_3[tempIndex_3]
		set tempTupleSelectionResult_1 = temp_tempTupleSelectionResult_1
		set temp_2 = tempTupleSelectionResult_1 + CustomBar_xOffset[s]
		set tempIndex_4 = s
		set temp_tempTupleSelectionResult_1_2 = CustomBar_position[tempIndex_4]
		set temp_tempTupleSelectionResult_2_2 = CustomBar_position_2[tempIndex_4]
		set temp_tempTupleSelectionResult_3_2 = CustomBar_position_3[tempIndex_4]
		set tempTupleSelectionResult_2 = temp_tempTupleSelectionResult_2_2
		set temp_3 = tempTupleSelectionResult_2 + CustomBar_yOffset[s]
		set tempIndex_5 = s
		set temp_tempTupleSelectionResult_1_3 = CustomBar_position[tempIndex_5]
		set temp_tempTupleSelectionResult_2_3 = CustomBar_position_2[tempIndex_5]
		set temp_tempTupleSelectionResult_3_3 = CustomBar_position_3[tempIndex_5]
		set tempTupleSelectionResult_3 = temp_tempTupleSelectionResult_3_3
		call SetTextTagPos(temp, temp_2, temp_3, tempTupleSelectionResult_3)
		set i = i - 1
	endloop
	set temp = null
endfunction

<<<<<<< HEAD
function trigger_clearConditions takes trigger this_57 returns nothing
	call TriggerClearConditions(this_57)
endfunction

function trigger_destr takes trigger this_57 returns nothing
	call DestroyTrigger(this_57)
=======
function trigger_clearConditions takes trigger this_58 returns nothing
	call TriggerClearConditions(this_58)
endfunction

function trigger_destr takes trigger this_58 returns nothing
	call DestroyTrigger(this_58)
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
endfunction

function TriggerDelayedDestroy_destroyNow takes trigger t returns nothing
	call trigger_clearConditions(t)
	call trigger_destr(t)
endfunction

function DelayedDestroy_destroyAllThings takes nothing returns nothing
	local integer i = 0
	local integer temp = DelayedDestroy_numberOfThings - 1
	loop
		exitwhen i > temp
		call TriggerDelayedDestroy_destroyNow(DelayedDestroy_things[i])
		set i = i + 1
	endloop
	set DelayedDestroy_numberOfThings = 0
endfunction

function ForceIterator_callback takes nothing returns nothing
	call GetEnumPlayer()
	set ForceIterator_tempIndex = ForceIterator_tempIndex + 1
endfunction

function TestSpell1_bla takes nothing returns nothing
	call SetUnitAnimationByIndex(Unit_u[UnitClass_last], TestSpell1_animationType)
endfunction

function Trig_Unbezeichneter_Ausl__ser_003_Actions takes nothing returns nothing
<<<<<<< HEAD
=======
	call SetUnitAnimationWithRarity(gg_unit_hpea_0006, "attack", RARITY_RARE)
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
	call CameraSetupApplyForPlayer(true, gg_cam_Camera_001, Player(0), 0.)
	call CameraSetupApplyForPlayer(true, gg_cam_Camera_001, Player(1), 0.)
	call TriggerSleepAction(6.00)
	call SelectUnitSingle(gg_unit_Obla_0003)
endfunction

function getHandleCount takes nothing returns integer
	local integer next = 0
	local integer prevIndex = 0
	local integer index = 0
	local integer a = 0
	local location array loc
	loop
		exitwhen  not (next < HandleCounter_stackEndTreshold)
		set loc[a] = Location(0., 0.)
		set index = GetHandleId(loc[a]) - 1048576
		set a = a + 1
		if index == prevIndex + 1 then
			set next = next + 1
		else
			set next = 0
		endif
		set prevIndex = index
	endloop
	set index = index - a
	loop
		exitwhen  not (a > 0)
		set a = a - 1
		call RemoveLocation(loc[a])
		set loc[a] = null
	endloop
	if index > HandleCounter_maxHandleCount then
		set HandleCounter_maxHandleCount = index
	endif
	return index
endfunction

function getMaxHandleCount takes nothing returns integer
	call getHandleCount()
	return HandleCounter_maxHandleCount
endfunction

function getTime takes nothing returns integer
	return HandleCounter_seconds
endfunction

function actions takes nothing returns nothing
	set HandleCounter_board = CreateLeaderboard()
	call LeaderboardSetLabel(HandleCounter_board, HandleCounter_TITLE)
	call PlayerSetLeaderboard(GetLocalPlayer(), HandleCounter_board)
	call LeaderboardDisplay(HandleCounter_board, true)
	call LeaderboardAddItem(HandleCounter_board, HandleCounter_HANDLE_TEXT, 0, HandleCounter_HANDLE)
	call LeaderboardSetItemValue(HandleCounter_board, 0, getHandleCount())
	call LeaderboardAddItem(HandleCounter_board, HandleCounter_MAX_HANDLE_TEXT, 1, HandleCounter_MAX_HANDLE)
	call LeaderboardSetItemValue(HandleCounter_board, 1, getMaxHandleCount())
	call LeaderboardAddItem(HandleCounter_board, HandleCounter_TIME_TEXT, 2, HandleCounter_TIME)
	call LeaderboardSetItemValue(HandleCounter_board, 2, getTime())
	call LeaderboardSetSizeByItemCount(HandleCounter_board, 3)
	call TimerStart(GetExpiredTimer(), HandleCounter_updatePeriod, true, ref_function_callback)
endfunction

<<<<<<< HEAD
function image_remove takes image this_57, string wurstStackTrace returns nothing
	if this_57 != null then
		call DestroyImage(this_57)
=======
function image_remove takes image this_58, string wurstStackTrace returns nothing
	if this_58 != null then
		call DestroyImage(this_58)
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
	else
		call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exeption by destroying an image" + wurstStackTrace)
		call I2S(1 / 0)
	endif
endfunction

<<<<<<< HEAD
function hashtable_loadInt takes hashtable this_57, integer parentKey, integer childKey returns integer
	return LoadInteger(this_57, parentKey, childKey)
endfunction

function Table_loadInt takes integer this_57, integer parentKey returns integer
	return hashtable_loadInt(Table_ht, this_57, parentKey)
endfunction

function dispatch_Table_loadInt takes integer this_57, integer parentKey, string wurstStackTrace returns integer
	local integer loadInt_result
	if Table_typeId[this_57] == 0 then
		if this_57 == 0 then
=======
function hashtable_loadInt takes hashtable this_58, integer parentKey, integer childKey returns integer
	return LoadInteger(this_58, parentKey, childKey)
endfunction

function Table_loadInt takes integer this_58, integer parentKey returns integer
	return hashtable_loadInt(Table_ht, this_58, parentKey)
endfunction

function dispatch_Table_loadInt takes integer this_58, integer parentKey, string wurstStackTrace returns integer
	local integer loadInt_result
	if Table_typeId[this_58] == 0 then
		if this_58 == 0 then
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Table.loadInt" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Table.loadInt on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
<<<<<<< HEAD
	set loadInt_result = Table_loadInt(this_57, parentKey)
	return loadInt_result
endfunction

function timer_getData takes timer this_57, string wurstStackTrace returns integer
	return dispatch_Table_loadInt(TimerUtils_timerData, GetHandleId(this_57), "\n   TimerUtils, line 34" + wurstStackTrace)
endfunction

function timer_pause takes timer this_57 returns nothing
	call PauseTimer(this_57)
endfunction

function hashtable_saveInt takes hashtable this_57, integer parentKey, integer childKey, integer value returns nothing
	call SaveInteger(this_57, parentKey, childKey, value)
endfunction

function Table_saveInt takes integer this_57, integer parentKey, integer value returns nothing
	call hashtable_saveInt(Table_ht, this_57, parentKey, value)
endfunction

function dispatch_Table_saveInt takes integer this_57, integer parentKey, integer value, string wurstStackTrace returns nothing
	if Table_typeId[this_57] == 0 then
		if this_57 == 0 then
=======
	set loadInt_result = Table_loadInt(this_58, parentKey)
	return loadInt_result
endfunction

function timer_getData takes timer this_58, string wurstStackTrace returns integer
	return dispatch_Table_loadInt(TimerUtils_timerData, GetHandleId(this_58), "\n   TimerUtils, line 34" + wurstStackTrace)
endfunction

function timer_pause takes timer this_58 returns nothing
	call PauseTimer(this_58)
endfunction

function hashtable_saveInt takes hashtable this_58, integer parentKey, integer childKey, integer value returns nothing
	call SaveInteger(this_58, parentKey, childKey, value)
endfunction

function Table_saveInt takes integer this_58, integer parentKey, integer value returns nothing
	call hashtable_saveInt(Table_ht, this_58, parentKey, value)
endfunction

function dispatch_Table_saveInt takes integer this_58, integer parentKey, integer value, string wurstStackTrace returns nothing
	if Table_typeId[this_58] == 0 then
		if this_58 == 0 then
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Table.saveInt" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Table.saveInt on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
<<<<<<< HEAD
	call Table_saveInt(this_57, parentKey, value)
endfunction

function timer_setData takes timer this_57, integer data, string wurstStackTrace returns nothing
	call dispatch_Table_saveInt(TimerUtils_timerData, GetHandleId(this_57), data, "\n   TimerUtils, line 30" + wurstStackTrace)
endfunction

function timer_release takes timer this_57, string wurstStackTrace returns nothing
	if this_57 == null then
=======
	call Table_saveInt(this_58, parentKey, value)
endfunction

function timer_setData takes timer this_58, integer data, string wurstStackTrace returns nothing
	call dispatch_Table_saveInt(TimerUtils_timerData, GetHandleId(this_58), data, "\n   TimerUtils, line 30" + wurstStackTrace)
endfunction

function timer_release takes timer this_58, string wurstStackTrace returns nothing
	if this_58 == null then
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
		call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Trying to release a null timer" + wurstStackTrace)
		call I2S(1 / 0)
		return
	endif
<<<<<<< HEAD
	if timer_getData(this_57, "\n   TimerUtils, line 41" + wurstStackTrace) == TimerUtils_HELD then
=======
	if timer_getData(this_58, "\n   TimerUtils, line 41" + wurstStackTrace) == TimerUtils_HELD then
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
		call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "ReleaseTimer: Double free!" + wurstStackTrace)
		call I2S(1 / 0)
		return
	endif
<<<<<<< HEAD
	call timer_setData(this_57, TimerUtils_HELD, "\n   TimerUtils, line 44" + wurstStackTrace)
	call timer_pause(this_57)
	set TimerUtils_freeTimers[TimerUtils_freeTimersCount] = this_57
	set TimerUtils_freeTimersCount = TimerUtils_freeTimersCount + 1
endfunction

function AreaMarker_onDestroy takes integer this_57, string wurstStackTrace returns nothing
	call image_remove(AreaMarker_img[this_57], "\n   AreaMarker, line 32" + wurstStackTrace)
	if AreaMarker_t[this_57] != null then
		call timer_release(AreaMarker_t[this_57], "\n   AreaMarker, line 34" + wurstStackTrace)
=======
	call timer_setData(this_58, TimerUtils_HELD, "\n   TimerUtils, line 44" + wurstStackTrace)
	call timer_pause(this_58)
	set TimerUtils_freeTimers[TimerUtils_freeTimersCount] = this_58
	set TimerUtils_freeTimersCount = TimerUtils_freeTimersCount + 1
endfunction

function AreaMarker_onDestroy takes integer this_58, string wurstStackTrace returns nothing
	call image_remove(AreaMarker_img[this_58], "\n   AreaMarker, line 32" + wurstStackTrace)
	if AreaMarker_t[this_58] != null then
		call timer_release(AreaMarker_t[this_58], "\n   AreaMarker, line 34" + wurstStackTrace)
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
	endif
endfunction

function dealloc_AreaMarker takes integer obj, string wurstStackTrace returns nothing
	if AreaMarker_typeId[obj] == 0 then
		call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Double free: object of type AreaMarker" + wurstStackTrace)
		call I2S(1 / 0)
	else
		set AreaMarker_firstFree = AreaMarker_firstFree + 1
		set AreaMarker_typeId[obj] = 0
	endif
endfunction

<<<<<<< HEAD
function destroyAreaMarker takes integer this_57, string wurstStackTrace returns nothing
	call AreaMarker_onDestroy(this_57, "\n   AreaMarker, line 31" + wurstStackTrace)
	call dealloc_AreaMarker(this_57, "\n   AreaMarker, line 31" + wurstStackTrace)
endfunction

function dispatch_AreaMarker_destroyAreaMarker takes integer this_57, string wurstStackTrace returns nothing
	if AreaMarker_typeId[this_57] == 0 then
		if this_57 == 0 then
=======
function destroyAreaMarker takes integer this_58, string wurstStackTrace returns nothing
	call AreaMarker_onDestroy(this_58, "\n   AreaMarker, line 31" + wurstStackTrace)
	call dealloc_AreaMarker(this_58, "\n   AreaMarker, line 31" + wurstStackTrace)
endfunction

function dispatch_AreaMarker_destroyAreaMarker takes integer this_58, string wurstStackTrace returns nothing
	if AreaMarker_typeId[this_58] == 0 then
		if this_58 == 0 then
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling AreaMarker.destroyAreaMarker" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called AreaMarker.destroyAreaMarker on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
<<<<<<< HEAD
	call destroyAreaMarker(this_57, "\n   AreaMarker, line 11" + wurstStackTrace)
=======
	call destroyAreaMarker(this_58, "\n   AreaMarker, line 11" + wurstStackTrace)
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
endfunction

function AreaMarker_destr takes string wurstStackTrace returns nothing
	call dispatch_AreaMarker_destroyAreaMarker(timer_getData(GetExpiredTimer(), "\n   AreaMarker, line 29" + wurstStackTrace), "\n   AreaMarker, line 29" + wurstStackTrace)
endfunction

function bridge_AreaMarker_destr takes nothing returns nothing
	call AreaMarker_destr("\n   AreaMarker, line 26")
endfunction

<<<<<<< HEAD
function Action_onDestroy takes integer this_57 returns nothing
	if Event_first[Action_ev[this_57]] != this_57 then
		set Action_next[Action_prev[this_57]] = Action_next[this_57]
	else
		set Event_first[Action_ev[this_57]] = Action_next[this_57]
	endif
	if Event_last[Action_ev[this_57]] != this_57 then
		set Action_prev[Action_next[this_57]] = Action_prev[this_57]
	else
		set Event_last[Action_ev[this_57]] = Action_prev[this_57]
=======
function Action_onDestroy takes integer this_58 returns nothing
	if Event_first[Action_ev[this_58]] != this_58 then
		set Action_next[Action_prev[this_58]] = Action_next[this_58]
	else
		set Event_first[Action_ev[this_58]] = Action_next[this_58]
	endif
	if Event_last[Action_ev[this_58]] != this_58 then
		set Action_prev[Action_next[this_58]] = Action_prev[this_58]
	else
		set Event_last[Action_ev[this_58]] = Action_prev[this_58]
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
	endif
endfunction

function dealloc_Action takes integer obj, string wurstStackTrace returns nothing
	if Action_typeId[obj] == 0 then
		call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Double free: object of type Action" + wurstStackTrace)
		call I2S(1 / 0)
	else
		set Action_nextFree[Action_firstFree] = obj
		set Action_firstFree = Action_firstFree + 1
		set Action_typeId[obj] = 0
	endif
endfunction

<<<<<<< HEAD
function destroyAction takes integer this_57, string wurstStackTrace returns nothing
	call Action_onDestroy(this_57)
	call dealloc_Action(this_57, "\n   CustomClosureEvents, line 68" + wurstStackTrace)
endfunction

function dispatch_Action_destroyAction takes integer this_57, string wurstStackTrace returns nothing
	if Action_typeId[this_57] == 0 then
		if this_57 == 0 then
=======
function destroyAction takes integer this_58, string wurstStackTrace returns nothing
	call Action_onDestroy(this_58)
	call dealloc_Action(this_58, "\n   CustomClosureEvents, line 69" + wurstStackTrace)
endfunction

function dispatch_Action_destroyAction takes integer this_58, string wurstStackTrace returns nothing
	if Action_typeId[this_58] == 0 then
		if this_58 == 0 then
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Action.destroyAction" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Action.destroyAction on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
<<<<<<< HEAD
	if Action_typeId[this_57] <= 687 then
		if Action_typeId[this_57] <= 683 then
			call destroyAction(this_57, "\n   CustomClosureEvents, line 61" + wurstStackTrace)
		else
			call destroyAction(this_57, "\n   CustomClosureEvents, line 61" + wurstStackTrace)
		endif
	elseif Action_typeId[this_57] <= 690 then
		call destroyAction(this_57, "\n   CustomClosureEvents, line 61" + wurstStackTrace)
	else
		call destroyAction(this_57, "\n   CustomClosureEvents, line 61" + wurstStackTrace)
	endif
endfunction

function unit_addAbility takes unit this_57, integer abil returns boolean
	return UnitAddAbility(this_57, abil)
endfunction

function unit_removeAbility takes unit this_57, integer abil returns nothing
	call UnitRemoveAbility(this_57, abil)
endfunction

function Unit_updateState takes integer this_57, integer amount_51, integer raw returns nothing
	local integer i
	local integer temp
	local integer statHelper
	local integer i_2
	local integer temp_2
	local integer i_3
	local integer temp_3
	call unit_removeAbility(Unit_u[this_57], raw + 45)
	set i = raw + 97
	set temp = raw + 97 + (Setup_maxBonSize - 1)
	loop
		exitwhen i > temp
		call unit_removeAbility(Unit_u[this_57], i)
		set i = i + 1
	endloop
	set statHelper = amount_51
	if statHelper >= 0 then
		set i_2 = raw + 97
		set temp_2 = raw + 97 + (Setup_maxBonSize - 1)
		loop
			exitwhen i_2 > temp_2
			if ModuloInteger(statHelper, 2) == 1 then
				call unit_addAbility(Unit_u[this_57], i_2)
			endif
			set statHelper = statHelper / 2
			if statHelper == 0 then
				return
			endif
			set i_2 = i_2 + 1
		endloop
	else
		set statHelper = statHelper + 1
		set i_3 = raw + 97
		set temp_3 = raw + 97 + (Setup_maxBonSize - 1)
		loop
			exitwhen i_3 > temp_3
			if ModuloInteger(statHelper, 2) == 0 then
				call unit_addAbility(Unit_u[this_57], i_3)
			endif
			set statHelper = statHelper / 2
			set i_3 = i_3 + 1
		endloop
		call unit_addAbility(Unit_u[this_57], raw + 45)
	endif
endfunction

function dispatch_Unit_updateState takes integer this_57, integer amount_51, integer raw, string wurstStackTrace returns nothing
	if Unit_typeId[this_57] == 0 then
		if this_57 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Unit.updateState" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Unit.updateState on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	if Unit_typeId[this_57] <= 710 then
		call Unit_updateState(this_57, amount_51, raw)
	else
		call Unit_updateState(this_57, amount_51, raw)
	endif
endfunction

function roundReal takes real value returns integer
	if value > 0. then
		return R2I(value + 0.5)
	else
		return R2I(value - 0.5)
	endif
endfunction

function Unit_updateLifeReg takes integer this_57, string wurstStackTrace returns nothing
	call dispatch_Unit_updateState(this_57, roundReal((Unit_lifeReg[this_57] + Unit_bonusLifeReg[this_57]) * (1. + Unit_bonusLifeRegPer[this_57] / 100.) - Unit_lifeReg[this_57]), Setup_lifeRegRaw, "\n   UnitClass, line 833" + wurstStackTrace)
endfunction

function dispatch_Unit_updateLifeReg takes integer this_57, string wurstStackTrace returns nothing
	if Unit_typeId[this_57] == 0 then
		if this_57 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Unit.updateLifeReg" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Unit.updateLifeReg on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	if Unit_typeId[this_57] <= 710 then
		call Unit_updateLifeReg(this_57, "\n   UnitClass, line 832" + wurstStackTrace)
	else
		call Unit_updateLifeReg(this_57, "\n   UnitClass, line 832" + wurstStackTrace)
	endif
endfunction

function closure_impl takes integer this_57, string wurstStackTrace returns nothing
	set Unit_bonusLifeReg[this_41[this_57]] = Unit_bonusLifeReg[this_41[this_57]] - amount_39[this_57]
	call dispatch_Unit_updateLifeReg(this_41[this_57], "\n   UnitClass, line 799" + wurstStackTrace)
endfunction

function Unit_updateArmor takes integer this_57, string wurstStackTrace returns nothing
	call dispatch_Unit_updateState(this_57, roundReal((Unit_armor[this_57] + Unit_bonusArmor[this_57]) * (1. + Unit_bonusArmorPer[this_57] / 100.) - Unit_armor[this_57]), Setup_armorRaw, "\n   UnitClass, line 658" + wurstStackTrace)
endfunction

function dispatch_Unit_updateArmor takes integer this_57, string wurstStackTrace returns nothing
	if Unit_typeId[this_57] == 0 then
		if this_57 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Unit.updateArmor" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Unit.updateArmor on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	if Unit_typeId[this_57] <= 710 then
		call Unit_updateArmor(this_57, "\n   UnitClass, line 657" + wurstStackTrace)
	else
		call Unit_updateArmor(this_57, "\n   UnitClass, line 657" + wurstStackTrace)
	endif
endfunction

function closure_impl_2 takes integer this_57, string wurstStackTrace returns nothing
	set Unit_bonusArmor[this_23[this_57]] = Unit_bonusArmor[this_23[this_57]] - amount_21[this_57]
	call dispatch_Unit_updateArmor(this_23[this_57], "\n   UnitClass, line 624" + wurstStackTrace)
endfunction

function closure_impl_3 takes integer this_57 returns nothing
	set Unit_bonusResistancePer[this_29[this_57]] = Unit_bonusResistancePer[this_29[this_57]] - amount_27[this_57]
endfunction

function Unit_updateManaReg takes integer this_57, string wurstStackTrace returns nothing
	call dispatch_Unit_updateState(this_57, roundReal((Unit_manaReg[this_57] + Unit_bonusManaReg[this_57]) * (1. + Unit_bonusManaRegPer[this_57] / 100.) - Unit_manaReg[this_57]), Setup_manaRegRaw, "\n   UnitClass, line 915" + wurstStackTrace)
endfunction

function dispatch_Unit_updateManaReg takes integer this_57, string wurstStackTrace returns nothing
	if Unit_typeId[this_57] == 0 then
		if this_57 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Unit.updateManaReg" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Unit.updateManaReg on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	if Unit_typeId[this_57] <= 710 then
		call Unit_updateManaReg(this_57, "\n   UnitClass, line 914" + wurstStackTrace)
	else
		call Unit_updateManaReg(this_57, "\n   UnitClass, line 914" + wurstStackTrace)
	endif
endfunction

function closure_impl_4 takes integer this_57, string wurstStackTrace returns nothing
	set Unit_bonusManaRegPer[this_51[this_57]] = Unit_bonusManaRegPer[this_51[this_57]] - amount_49[this_57]
	call dispatch_Unit_updateManaReg(this_51[this_57], "\n   UnitClass, line 900" + wurstStackTrace)
endfunction

function closure_impl_5 takes integer this_57 returns nothing
	set Unit_critchance[this_17[this_57]] = Unit_critchance[this_17[this_57]] - amount_15[this_57]
endfunction

function closure_impl_6 takes integer this_57 returns nothing
	set Unit_lifesteal[this_9[this_57]] = Unit_lifesteal[this_9[this_57]] - amount_7[this_57]
endfunction

function closure_impl_7 takes integer this_57 returns nothing
	set Unit_magicReduction[this_15[this_57]] = Unit_magicReduction[this_15[this_57]] - amount_13[this_57]
endfunction

function closure_impl_8 takes integer this_57 returns nothing
	set Unit_bonusResistance[this_27[this_57]] = Unit_bonusResistance[this_27[this_57]] - amount_25[this_57]
endfunction

function Unit_updateLife takes integer this_57, string wurstStackTrace returns nothing
	call dispatch_Unit_updateState(this_57, roundReal((Unit_life[this_57] + Unit_bonusLife[this_57]) * (1. + Unit_bonusLifePer[this_57] / 100.) - Unit_life[this_57]), Setup_lifeRaw, "\n   UnitClass, line 792" + wurstStackTrace)
endfunction

function getTimer takes string wurstStackTrace returns timer
	local timer receiver
	if TimerUtils_freeTimersCount > 0 then
		set TimerUtils_freeTimersCount = TimerUtils_freeTimersCount - 1
		call timer_setData(TimerUtils_freeTimers[TimerUtils_freeTimersCount], 0, "\n   TimerUtils, line 23" + wurstStackTrace)
		set receiver = null
		return TimerUtils_freeTimers[TimerUtils_freeTimersCount]
	else
		set receiver = CreateTimer()
		call timer_setData(receiver, 0, "\n   TimerUtils, line 26" + wurstStackTrace)
		set getTimertempReturn = receiver
		set receiver = null
		return getTimertempReturn
	endif
endfunction

function timer_start takes timer this_57, real time, code timerCallBack returns nothing
	call TimerStart(this_57, time, false, timerCallBack)
endfunction

function Bar_updateEx takes integer this_57, string wurstStackTrace returns nothing
	local timer receiver = getTimer("\n   HeroBar, line 98" + wurstStackTrace)
	local timer receiver_2
	call timer_setData(receiver, this_57, "\n   HeroBar, line 98" + wurstStackTrace)
	set receiver_2 = receiver
	call timer_start(receiver_2, 0.0, ref_function_bridge_Bar_callUpdateEx)
	set receiver = null
	set receiver_2 = null
endfunction

function dispatch_Bar_updateEx takes integer this_57, string wurstStackTrace returns nothing
	if Bar_typeId[this_57] == 0 then
		if this_57 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Bar.updateEx" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Bar.updateEx on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call Bar_updateEx(this_57, "\n   HeroBar, line 96" + wurstStackTrace)
endfunction

function Hero_updateLife takes integer this_57, string wurstStackTrace returns nothing
	call dispatch_Bar_updateEx(Hero_hb[this_57], "\n   HeroClass, line 165" + wurstStackTrace)
	call Unit_updateLife(this_57, "\n   HeroClass, line 166" + wurstStackTrace)
endfunction

function dispatch_Unit_updateLife takes integer this_57, string wurstStackTrace returns nothing
	if Unit_typeId[this_57] == 0 then
		if this_57 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Unit.updateLife" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Unit.updateLife on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	if Unit_typeId[this_57] <= 710 then
		call Unit_updateLife(this_57, "\n   UnitClass, line 791" + wurstStackTrace)
	else
		call Hero_updateLife(this_57, "\n   UnitClass, line 791" + wurstStackTrace)
	endif
endfunction

function closure_impl_9 takes integer this_57, string wurstStackTrace returns nothing
	set Unit_bonusLifePer[this_39[this_57]] = Unit_bonusLifePer[this_39[this_57]] - amount_37[this_57]
	call dispatch_Unit_updateLife(this_39[this_57], "\n   UnitClass, line 777" + wurstStackTrace)
endfunction

function closure_impl_10 takes integer this_57, string wurstStackTrace returns nothing
	set Unit_bonusLifeRegPer[this_43[this_57]] = Unit_bonusLifeRegPer[this_43[this_57]] - amount_41[this_57]
	call dispatch_Unit_updateLifeReg(this_43[this_57], "\n   UnitClass, line 818" + wurstStackTrace)
endfunction

function Unit_updateMovespeed takes integer this_57 returns nothing
	call SetUnitMoveSpeed(Unit_u[this_57], (Unit_movespeed[this_57] + Unit_bonusMovespeed[this_57]) * (1. + Unit_bonusMovespeedPer[this_57] / 100.))
endfunction

function alloc_LLEntry takes nothing returns integer
	local integer this_57
	if LLEntry_firstFree == 0 then
		set LLEntry_maxIndex = LLEntry_maxIndex + 1
		set this_57 = LLEntry_maxIndex
	else
		set LLEntry_firstFree = LLEntry_firstFree - 1
		set this_57 = LLEntry_nextFree[LLEntry_firstFree]
	endif
	set LLEntry_typeId[this_57] = 3
	return this_57
endfunction

function construct_LLEntry takes integer this_57, integer elem, integer prev, integer next returns nothing
	set LLEntry_elem[this_57] = elem
	set LLEntry_prev[this_57] = prev
	set LLEntry_next[this_57] = next
endfunction

function new_LLEntry takes integer elem, integer prev, integer next returns integer
	local integer this_57 = alloc_LLEntry()
	call construct_LLEntry(this_57, elem, prev, next)
	return this_57
endfunction

function LinkedList_add takes integer this_57, integer elem returns nothing
	local integer entry = new_LLEntry(elem, LLEntry_prev[LinkedList_dummy[this_57]], LinkedList_dummy[this_57])
	set LLEntry_next[LLEntry_prev[LinkedList_dummy[this_57]]] = entry
	set LLEntry_prev[LinkedList_dummy[this_57]] = entry
	set LinkedList_size[this_57] = LinkedList_size[this_57] + 1
endfunction

function dispatch_LinkedList_add takes integer this_57, integer elem, string wurstStackTrace returns nothing
	if LinkedList_typeId[this_57] == 0 then
		if this_57 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling LinkedList.add" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called LinkedList.add on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call LinkedList_add(this_57, elem)
endfunction

function LLEntry_onDestroy takes integer this_57 returns nothing
=======
	if Action_typeId[this_58] <= 689 then
		if Action_typeId[this_58] <= 686 then
			if Action_typeId[this_58] <= 682 then
				call destroyAction(this_58, "\n   CustomClosureEvents, line 62" + wurstStackTrace)
			else
				call destroyAction(this_58, "\n   CustomClosureEvents, line 62" + wurstStackTrace)
			endif
		else
			call destroyAction(this_58, "\n   CustomClosureEvents, line 62" + wurstStackTrace)
		endif
	elseif Action_typeId[this_58] <= 840 then
		call destroyAction(this_58, "\n   CustomClosureEvents, line 62" + wurstStackTrace)
	else
		call destroyAction(this_58, "\n   CustomClosureEvents, line 62" + wurstStackTrace)
	endif
endfunction

function alloc_DelayNode takes nothing returns integer
	local integer this_58
	if DelayNode_firstFree == 0 then
		set DelayNode_maxIndex = DelayNode_maxIndex + 1
		set this_58 = DelayNode_maxIndex
	else
		set DelayNode_firstFree = DelayNode_firstFree - 1
		set this_58 = DelayNode_nextFree[DelayNode_firstFree]
	endif
	set DelayNode_typeId[this_58] = 23
	return this_58
endfunction

function timer_getElapsed takes timer this_58 returns real
	return TimerGetElapsed(this_58)
endfunction

function getElapsedGameTime takes nothing returns real
	return timer_getElapsed(GameTimer_gameTimer)
endfunction

function timer_getRemaining takes timer this_58 returns real
	return TimerGetRemaining(this_58)
endfunction

function timer_start takes timer this_58, real time, code timerCallBack returns nothing
	call TimerStart(this_58, time, false, timerCallBack)
endfunction

function construct_DelayNode takes integer this_58, unit u_2, real time returns nothing
	local integer tmp
	set DelayNode_next[this_58] = 0
	set DelayNode_u[this_58] = u_2
	set DelayNode_delayTime[this_58] = getElapsedGameTime() + time
	if DelayNode_first == 0 then
		set DelayNode_first = this_58
		set DelayNode_last = DelayNode_first
	else
		set tmp = DelayNode_first
		loop
			exitwhen  not (DelayNode_next[tmp] != 0 and DelayNode_delayTime[tmp] < DelayNode_delayTime[this_58])
			set tmp = DelayNode_next[tmp]
		endloop
		if DelayNode_delayTime[tmp] < DelayNode_delayTime[this_58] then
			if tmp == DelayNode_last then
				set DelayNode_next[tmp] = this_58
				set DelayNode_last = this_58
			else
				set DelayNode_next[this_58] = DelayNode_next[tmp]
				set DelayNode_next[tmp] = this_58
			endif
		elseif tmp == DelayNode_first then
			set DelayNode_first = this_58
			set DelayNode_next[this_58] = tmp
		elseif tmp == DelayNode_last then
			set DelayNode_next[tmp] = this_58
			set DelayNode_last = tmp
		else
			set DelayNode_next[this_58] = DelayNode_next[tmp]
			set DelayNode_next[tmp] = this_58
		endif
		if timer_getRemaining(DelayNode_t) > 0. and time < timer_getRemaining(DelayNode_t) then
			call timer_start(DelayNode_t, time, ref_function_bridge_DelayNode_recycle_2)
		elseif timer_getRemaining(DelayNode_t) <= 0. then
			call timer_start(DelayNode_t, time, ref_function_bridge_DelayNode_recycle_3)
		endif
	endif
endfunction

function new_DelayNode takes unit u_2, real time returns integer
	local integer this_58 = alloc_DelayNode()
	call construct_DelayNode(this_58, u_2, time)
	return this_58
endfunction

function DummyRecycler_recycle takes unit u_2, real delay returns nothing
	call new_DelayNode(u_2, delay)
endfunction

function effect_destr takes effect this_58 returns nothing
	call DestroyEffect(this_58)
endfunction

function Fx_onDestroy takes integer this_58 returns nothing
	if Fx_fx[this_58] != null then
		call effect_destr(Fx_fx[this_58])
	endif
	call DummyRecycler_recycle(Fx_dummy[this_58], 1.)
endfunction

function dealloc_Fx takes integer obj, string wurstStackTrace returns nothing
	if Fx_typeId[obj] == 0 then
		call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Double free: object of type Fx" + wurstStackTrace)
		call I2S(1 / 0)
	else
		set Fx_nextFree[Fx_firstFree] = obj
		set Fx_firstFree = Fx_firstFree + 1
		set Fx_typeId[obj] = 0
	endif
endfunction

function destroyFx takes integer this_58, string wurstStackTrace returns nothing
	call Fx_onDestroy(this_58)
	call dealloc_Fx(this_58, "\n   Fx, line 202" + wurstStackTrace)
endfunction

function dispatch_Fx_destroyFx takes integer this_58, string wurstStackTrace returns nothing
	if Fx_typeId[this_58] == 0 then
		if this_58 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Fx.destroyFx" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Fx.destroyFx on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call destroyFx(this_58, "\n   Fx, line 20" + wurstStackTrace)
endfunction

function lightning_destr takes lightning this_58 returns nothing
	call DestroyLightning(this_58)
endfunction

function CaptureData_onDestroy takes integer this_58, string wurstStackTrace returns nothing
	call lightning_destr(CaptureData_l1[this_58])
	call lightning_destr(CaptureData_l2[this_58])
	if CaptureData_onDeath[this_58] != 0 then
		call dispatch_Action_destroyAction(CaptureData_onDeath[this_58], "\n   ControlPoint, line 53" + wurstStackTrace)
	endif
	if CaptureData_fx[this_58] != 0 then
		call dispatch_Fx_destroyFx(CaptureData_fx[this_58], "\n   ControlPoint, line 55" + wurstStackTrace)
	endif
endfunction

function dealloc_CaptureData takes integer obj, string wurstStackTrace returns nothing
	if CaptureData_typeId[obj] == 0 then
		call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Double free: object of type CaptureData" + wurstStackTrace)
		call I2S(1 / 0)
	else
		set CaptureData_nextFree[CaptureData_firstFree] = obj
		set CaptureData_firstFree = CaptureData_firstFree + 1
		set CaptureData_typeId[obj] = 0
	endif
endfunction

function destroyCaptureData takes integer this_58, string wurstStackTrace returns nothing
	call CaptureData_onDestroy(this_58, "\n   ControlPoint, line 49" + wurstStackTrace)
	call dealloc_CaptureData(this_58, "\n   ControlPoint, line 49" + wurstStackTrace)
endfunction

function dispatch_CaptureData_destroyCaptureData takes integer this_58, string wurstStackTrace returns nothing
	if CaptureData_typeId[this_58] == 0 then
		if this_58 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling CaptureData.destroyCaptureData" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called CaptureData.destroyCaptureData on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call destroyCaptureData(this_58, "\n   ControlPoint, line 36" + wurstStackTrace)
endfunction

function HashMap_get takes integer this_58, integer key returns integer
	return hashtable_loadInt(HashMap_ht, this_58, key)
endfunction

function dispatch_HashMap_get takes integer this_58, integer key, string wurstStackTrace returns integer
	local integer get_result
	if HashMap_typeId[this_58] == 0 then
		if this_58 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling HashMap.get" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called HashMap.get on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	set get_result = HashMap_get(this_58, key)
	return get_result
endfunction

function closure_impl takes integer this_58, integer u_2, string wurstStackTrace returns nothing
	call dispatch_CaptureData_destroyCaptureData(dispatch_HashMap_get(ControlPoint_captureData, u_2, "\n   ControlPoint, line 60" + wurstStackTrace), "\n   ControlPoint, line 60" + wurstStackTrace)
endfunction

function LinkedListModule_remove takes integer this_58 returns nothing
	set LinkedListModule_size = LinkedListModule_size - 1
	if this_58 != LinkedListModule_first then
		set LinkedListModule_next[LinkedListModule_prev[this_58]] = LinkedListModule_next[this_58]
	endif
	if this_58 != LinkedListModule_last then
		set LinkedListModule_prev[LinkedListModule_next[this_58]] = LinkedListModule_prev[this_58]
	endif
	if this_58 == LinkedListModule_last then
		set LinkedListModule_last = LinkedListModule_prev[this_58]
	endif
	if this_58 == LinkedListModule_first then
		set LinkedListModule_first = LinkedListModule_next[this_58]
	endif
endfunction

function dispatch_Dot_remove takes integer this_58, string wurstStackTrace returns nothing
	if Dot_typeId[this_58] == 0 then
		if this_58 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Dot.remove" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Dot.remove on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call LinkedListModule_remove(this_58)
endfunction

function LLEntry_onDestroy takes integer this_58 returns nothing
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
endfunction

function dealloc_LLEntry takes integer obj, string wurstStackTrace returns nothing
	if LLEntry_typeId[obj] == 0 then
		call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Double free: object of type LLEntry" + wurstStackTrace)
		call I2S(1 / 0)
	else
		set LLEntry_nextFree[LLEntry_firstFree] = obj
		set LLEntry_firstFree = LLEntry_firstFree + 1
		set LLEntry_typeId[obj] = 0
	endif
endfunction

<<<<<<< HEAD
function destroyLLEntry takes integer this_57, string wurstStackTrace returns nothing
	call LLEntry_onDestroy(this_57)
	call dealloc_LLEntry(this_57, "\n   LinkedList, line 132" + wurstStackTrace)
endfunction

function dispatch_LLEntry_destroyLLEntry takes integer this_57, string wurstStackTrace returns nothing
	if LLEntry_typeId[this_57] == 0 then
		if this_57 == 0 then
=======
function destroyLLEntry takes integer this_58, string wurstStackTrace returns nothing
	call LLEntry_onDestroy(this_58)
	call dealloc_LLEntry(this_58, "\n   LinkedList, line 132" + wurstStackTrace)
endfunction

function dispatch_LLEntry_destroyLLEntry takes integer this_58, string wurstStackTrace returns nothing
	if LLEntry_typeId[this_58] == 0 then
		if this_58 == 0 then
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling LLEntry.destroyLLEntry" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called LLEntry.destroyLLEntry on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
<<<<<<< HEAD
	call destroyLLEntry(this_57, "\n   LinkedList, line 132" + wurstStackTrace)
endfunction

function LinkedList_remove takes integer this_57, integer t, string wurstStackTrace returns nothing
	local integer r = LLEntry_next[LinkedList_dummy[this_57]]
	loop
		exitwhen  not (r != LinkedList_dummy[this_57])
=======
	call destroyLLEntry(this_58, "\n   LinkedList, line 132" + wurstStackTrace)
endfunction

function LinkedList_remove takes integer this_58, integer t, string wurstStackTrace returns nothing
	local integer r = LLEntry_next[LinkedList_dummy[this_58]]
	loop
		exitwhen  not (r != LinkedList_dummy[this_58])
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
		if LLEntry_elem[r] == t then
			set LLEntry_next[LLEntry_prev[r]] = LLEntry_next[r]
			set LLEntry_prev[LLEntry_next[r]] = LLEntry_prev[r]
			call dispatch_LLEntry_destroyLLEntry(r, "\n   LinkedList, line 41" + wurstStackTrace)
<<<<<<< HEAD
			set LinkedList_size[this_57] = LinkedList_size[this_57] - 1
=======
			set LinkedList_size[this_58] = LinkedList_size[this_58] - 1
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
			return
		endif
		set r = LLEntry_next[r]
	endloop
endfunction

<<<<<<< HEAD
function dispatch_LinkedList_remove takes integer this_57, integer t, string wurstStackTrace returns nothing
	if LinkedList_typeId[this_57] == 0 then
		if this_57 == 0 then
=======
function dispatch_LinkedList_remove takes integer this_58, integer t, string wurstStackTrace returns nothing
	if LinkedList_typeId[this_58] == 0 then
		if this_58 == 0 then
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling LinkedList.remove" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called LinkedList.remove on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
<<<<<<< HEAD
	call LinkedList_remove(this_57, t, "\n   LinkedList, line 34" + wurstStackTrace)
endfunction

function Unit_getMovespeed takes integer this_57, boolean withBonus returns real
	if withBonus then
		return (Unit_movespeed[this_57] + Unit_bonusMovespeed[this_57]) * (1. + Unit_bonusMovespeedPer[this_57] / 100.)
	else
		return Unit_movespeed[this_57]
	endif
endfunction

function dispatch_Unit_getMovespeed takes integer this_57, boolean withBonus, string wurstStackTrace returns real
	local real getMovespeed_result
	if Unit_typeId[this_57] == 0 then
		if this_57 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Unit.getMovespeed" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Unit.getMovespeed on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	if Unit_typeId[this_57] <= 710 then
		set getMovespeed_result = Unit_getMovespeed(this_57, withBonus)
	else
		set getMovespeed_result = Unit_getMovespeed(this_57, withBonus)
	endif
	return getMovespeed_result
endfunction

function Hero_updateMovespeed takes integer this_57, string wurstStackTrace returns nothing
	call Unit_updateMovespeed(this_57)
	if dispatch_Unit_getMovespeed(this_57, true, "\n   HeroClass, line 174" + wurstStackTrace) > 522. then
		call dispatch_LinkedList_add(Hero_toMove, this_57, "\n   HeroClass, line 175" + wurstStackTrace)
	else
		call dispatch_LinkedList_remove(Hero_toMove, this_57, "\n   HeroClass, line 177" + wurstStackTrace)
	endif
endfunction

function dispatch_Unit_updateMovespeed takes integer this_57, string wurstStackTrace returns nothing
	if Unit_typeId[this_57] == 0 then
		if this_57 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Unit.updateMovespeed" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Unit.updateMovespeed on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	if Unit_typeId[this_57] <= 710 then
		call Unit_updateMovespeed(this_57)
	else
		call Hero_updateMovespeed(this_57, "\n   UnitClass, line 750" + wurstStackTrace)
	endif
endfunction

function closure_impl_11 takes integer this_57, string wurstStackTrace returns nothing
	set Unit_bonusMovespeedPer[this_35[this_57]] = Unit_bonusMovespeedPer[this_35[this_57]] - amount_33[this_57]
	call dispatch_Unit_updateMovespeed(this_35[this_57], "\n   UnitClass, line 736" + wurstStackTrace)
endfunction

function closure_impl_12 takes integer this_57, string wurstStackTrace returns nothing
	set Unit_bonusArmorPer[this_25[this_57]] = Unit_bonusArmorPer[this_25[this_57]] - amount_23[this_57]
	call dispatch_Unit_updateArmor(this_25[this_57], "\n   UnitClass, line 643" + wurstStackTrace)
endfunction

function Unit_updateAttack takes integer this_57, string wurstStackTrace returns nothing
	call dispatch_Unit_updateState(this_57, roundReal((Unit_attack[this_57] + Unit_bonusAttack[this_57]) * (1. + Unit_bonusAttackPer[this_57] / 100.) - Unit_attack[this_57]), Setup_attackRaw, "\n   UnitClass, line 497" + wurstStackTrace)
endfunction

function dispatch_Unit_updateAttack takes integer this_57, string wurstStackTrace returns nothing
	if Unit_typeId[this_57] == 0 then
		if this_57 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Unit.updateAttack" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Unit.updateAttack on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	if Unit_typeId[this_57] <= 710 then
		call Unit_updateAttack(this_57, "\n   UnitClass, line 496" + wurstStackTrace)
	else
		call Unit_updateAttack(this_57, "\n   UnitClass, line 496" + wurstStackTrace)
	endif
endfunction

function closure_impl_13 takes integer this_57, string wurstStackTrace returns nothing
	set Unit_bonusAttackPer[this_5[this_57]] = Unit_bonusAttackPer[this_5[this_57]] - amount_3[this_57]
	call dispatch_Unit_updateAttack(this_5[this_57], "\n   UnitClass, line 482" + wurstStackTrace)
endfunction

function closure_impl_14 takes integer this_57 returns nothing
	set Unit_critdamage[this_19[this_57]] = Unit_critdamage[this_19[this_57]] - amount_17[this_57]
endfunction

function Unit_updateAttackspeed takes integer this_57, string wurstStackTrace returns nothing
	call dispatch_Unit_updateState(this_57, roundReal(Unit_bonusAttackspeed[this_57]), Setup_attackSpeedRaw, "\n   UnitClass, line 710" + wurstStackTrace)
endfunction

function dispatch_Unit_updateAttackspeed takes integer this_57, string wurstStackTrace returns nothing
	if Unit_typeId[this_57] == 0 then
		if this_57 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Unit.updateAttackspeed" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Unit.updateAttackspeed on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	if Unit_typeId[this_57] <= 710 then
		call Unit_updateAttackspeed(this_57, "\n   UnitClass, line 709" + wurstStackTrace)
	else
		call Unit_updateAttackspeed(this_57, "\n   UnitClass, line 709" + wurstStackTrace)
	endif
endfunction

function closure_impl_15 takes integer this_57, string wurstStackTrace returns nothing
	set Unit_bonusAttackspeed[this_31[this_57]] = Unit_bonusAttackspeed[this_31[this_57]] - amount_29[this_57]
	call dispatch_Unit_updateAttackspeed(this_31[this_57], "\n   UnitClass, line 695" + wurstStackTrace)
endfunction

function Unit_updateMana takes integer this_57, string wurstStackTrace returns nothing
	call dispatch_Unit_updateState(this_57, roundReal((Unit_mana[this_57] + Unit_bonusMana[this_57]) * (1. + Unit_bonusManaPer[this_57] / 100.) - Unit_mana[this_57]), Setup_manaRaw, "\n   UnitClass, line 874" + wurstStackTrace)
endfunction

function Hero_updateMana takes integer this_57, string wurstStackTrace returns nothing
	call dispatch_Bar_updateEx(Hero_hb[this_57], "\n   HeroClass, line 169" + wurstStackTrace)
	call Unit_updateMana(this_57, "\n   HeroClass, line 170" + wurstStackTrace)
endfunction

function dispatch_Unit_updateMana takes integer this_57, string wurstStackTrace returns nothing
	if Unit_typeId[this_57] == 0 then
		if this_57 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Unit.updateMana" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Unit.updateMana on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	if Unit_typeId[this_57] <= 710 then
		call Unit_updateMana(this_57, "\n   UnitClass, line 873" + wurstStackTrace)
	else
		call Hero_updateMana(this_57, "\n   UnitClass, line 873" + wurstStackTrace)
	endif
endfunction

function closure_impl_16 takes integer this_57, string wurstStackTrace returns nothing
	set Unit_bonusMana[this_45[this_57]] = Unit_bonusMana[this_45[this_57]] - amount_43[this_57]
	call dispatch_Unit_updateMana(this_45[this_57], "\n   UnitClass, line 840" + wurstStackTrace)
endfunction

function closure_impl_17 takes integer this_57 returns nothing
	set Unit_spellVamp[this_11[this_57]] = Unit_spellVamp[this_11[this_57]] - amount_9[this_57]
endfunction

function closure_impl_18 takes integer this_57, string wurstStackTrace returns nothing
	set Unit_bonusLife[this_37[this_57]] = Unit_bonusLife[this_37[this_57]] - amount_35[this_57]
	call dispatch_Unit_updateLife(this_37[this_57], "\n   UnitClass, line 758" + wurstStackTrace)
endfunction

function closure_impl_19 takes integer this_57, string wurstStackTrace returns nothing
	set Unit_bonusMovespeed[this_33[this_57]] = Unit_bonusMovespeed[this_33[this_57]] - amount_31[this_57]
	call dispatch_Unit_updateMovespeed(this_33[this_57], "\n   UnitClass, line 717" + wurstStackTrace)
endfunction

function closure_impl_20 takes integer this_57 returns nothing
	set Unit_normalReduction[this_13[this_57]] = Unit_normalReduction[this_13[this_57]] - amount_11[this_57]
endfunction

function closure_impl_21 takes integer this_57 returns nothing
	set Unit_spellpowerPer[this_21[this_57]] = Unit_spellpowerPer[this_21[this_57]] - amount_19[this_57]
endfunction

function closure_impl_22 takes integer this_57, string wurstStackTrace returns nothing
	set Unit_bonusManaReg[this_49[this_57]] = Unit_bonusManaReg[this_49[this_57]] - amount_47[this_57]
	call dispatch_Unit_updateManaReg(this_49[this_57], "\n   UnitClass, line 881" + wurstStackTrace)
endfunction

function closure_impl_23 takes integer this_57, string wurstStackTrace returns nothing
	set Unit_bonusManaPer[this_47[this_57]] = Unit_bonusManaPer[this_47[this_57]] - amount_45[this_57]
	call dispatch_Unit_updateMana(this_47[this_57], "\n   UnitClass, line 859" + wurstStackTrace)
endfunction

function closure_impl_24 takes integer this_57, string wurstStackTrace returns nothing
	set Unit_bonusAttack[this_3[this_57]] = Unit_bonusAttack[this_3[this_57]] - amount[this_57]
	call dispatch_Unit_updateAttack(this_3[this_57], "\n   UnitClass, line 463" + wurstStackTrace)
endfunction

function closure_impl_25 takes integer this_57 returns nothing
	set Unit_spellpower[this_7[this_57]] = Unit_spellpower[this_7[this_57]] - amount_5[this_57]
endfunction

function dispatch_Bonus_remove takes integer this_57, string wurstStackTrace returns nothing
	if Bonus_typeId[this_57] == 0 then
		if this_57 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Bonus.remove" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Bonus.remove on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	if Bonus_typeId[this_57] <= 736 then
		if Bonus_typeId[this_57] <= 724 then
			if Bonus_typeId[this_57] <= 718 then
				if Bonus_typeId[this_57] <= 714 then
					if Bonus_typeId[this_57] <= 711 then
						call closure_impl_24(this_57, "\n   Bonus, line 9" + wurstStackTrace)
					else
						call closure_impl_13(this_57, "\n   Bonus, line 9" + wurstStackTrace)
					endif
				elseif Bonus_typeId[this_57] <= 716 then
					call closure_impl_25(this_57)
				else
					call closure_impl_6(this_57)
				endif
			elseif Bonus_typeId[this_57] <= 722 then
				if Bonus_typeId[this_57] <= 720 then
					call closure_impl_17(this_57)
				else
					call closure_impl_20(this_57)
				endif
			else
				call closure_impl_7(this_57)
			endif
		elseif Bonus_typeId[this_57] <= 730 then
			if Bonus_typeId[this_57] <= 728 then
				if Bonus_typeId[this_57] <= 726 then
					call closure_impl_5(this_57)
				else
					call closure_impl_14(this_57)
				endif
			else
				call closure_impl_21(this_57)
			endif
		elseif Bonus_typeId[this_57] <= 734 then
			if Bonus_typeId[this_57] <= 732 then
				call closure_impl_2(this_57, "\n   Bonus, line 9" + wurstStackTrace)
			else
				call closure_impl_12(this_57, "\n   Bonus, line 9" + wurstStackTrace)
			endif
		else
			call closure_impl_8(this_57)
		endif
	elseif Bonus_typeId[this_57] <= 748 then
		if Bonus_typeId[this_57] <= 742 then
			if Bonus_typeId[this_57] <= 740 then
				if Bonus_typeId[this_57] <= 738 then
					call closure_impl_3(this_57)
				else
					call closure_impl_15(this_57, "\n   Bonus, line 9" + wurstStackTrace)
				endif
			else
				call closure_impl_19(this_57, "\n   Bonus, line 9" + wurstStackTrace)
			endif
		elseif Bonus_typeId[this_57] <= 746 then
			if Bonus_typeId[this_57] <= 744 then
				call closure_impl_11(this_57, "\n   Bonus, line 9" + wurstStackTrace)
			else
				call closure_impl_18(this_57, "\n   Bonus, line 9" + wurstStackTrace)
			endif
		else
			call closure_impl_9(this_57, "\n   Bonus, line 9" + wurstStackTrace)
		endif
	elseif Bonus_typeId[this_57] <= 754 then
		if Bonus_typeId[this_57] <= 752 then
			if Bonus_typeId[this_57] <= 750 then
				call closure_impl(this_57, "\n   Bonus, line 9" + wurstStackTrace)
			else
				call closure_impl_10(this_57, "\n   Bonus, line 9" + wurstStackTrace)
			endif
		else
			call closure_impl_16(this_57, "\n   Bonus, line 9" + wurstStackTrace)
		endif
	elseif Bonus_typeId[this_57] <= 758 then
		if Bonus_typeId[this_57] <= 756 then
			call closure_impl_23(this_57, "\n   Bonus, line 9" + wurstStackTrace)
		else
			call closure_impl_22(this_57, "\n   Bonus, line 9" + wurstStackTrace)
		endif
	else
		call closure_impl_4(this_57, "\n   Bonus, line 9" + wurstStackTrace)
	endif
endfunction

function Bonus_onDestroy takes integer this_57, string wurstStackTrace returns nothing
	call dispatch_Bonus_remove(this_57, "\n   Bonus, line 12" + wurstStackTrace)
endfunction

function dealloc_Bonus takes integer obj, string wurstStackTrace returns nothing
	if Bonus_typeId[obj] == 0 then
		call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Double free: object of type Bonus" + wurstStackTrace)
		call I2S(1 / 0)
	else
		set Bonus_nextFree[Bonus_firstFree] = obj
		set Bonus_firstFree = Bonus_firstFree + 1
		set Bonus_typeId[obj] = 0
	endif
endfunction

function destroyBonus takes integer this_57, string wurstStackTrace returns nothing
	call Bonus_onDestroy(this_57, "\n   Bonus, line 11" + wurstStackTrace)
	call dealloc_Bonus(this_57, "\n   Bonus, line 11" + wurstStackTrace)
endfunction

function dispatch_Bonus_destroyBonus takes integer this_57, string wurstStackTrace returns nothing
	if Bonus_typeId[this_57] == 0 then
		if this_57 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Bonus.destroyBonus" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Bonus.destroyBonus on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	if Bonus_typeId[this_57] <= 736 then
		if Bonus_typeId[this_57] <= 724 then
			if Bonus_typeId[this_57] <= 718 then
				if Bonus_typeId[this_57] <= 714 then
					if Bonus_typeId[this_57] <= 712 then
						call destroyBonus(this_57, "\n   Bonus, line 7" + wurstStackTrace)
					else
						call destroyBonus(this_57, "\n   Bonus, line 7" + wurstStackTrace)
					endif
				elseif Bonus_typeId[this_57] <= 716 then
					call destroyBonus(this_57, "\n   Bonus, line 7" + wurstStackTrace)
				else
					call destroyBonus(this_57, "\n   Bonus, line 7" + wurstStackTrace)
				endif
			elseif Bonus_typeId[this_57] <= 722 then
				if Bonus_typeId[this_57] <= 720 then
					call destroyBonus(this_57, "\n   Bonus, line 7" + wurstStackTrace)
				else
					call destroyBonus(this_57, "\n   Bonus, line 7" + wurstStackTrace)
				endif
			else
				call destroyBonus(this_57, "\n   Bonus, line 7" + wurstStackTrace)
			endif
		elseif Bonus_typeId[this_57] <= 730 then
			if Bonus_typeId[this_57] <= 728 then
				if Bonus_typeId[this_57] <= 726 then
					call destroyBonus(this_57, "\n   Bonus, line 7" + wurstStackTrace)
				else
					call destroyBonus(this_57, "\n   Bonus, line 7" + wurstStackTrace)
				endif
			else
				call destroyBonus(this_57, "\n   Bonus, line 7" + wurstStackTrace)
			endif
		elseif Bonus_typeId[this_57] <= 734 then
			if Bonus_typeId[this_57] <= 732 then
				call destroyBonus(this_57, "\n   Bonus, line 7" + wurstStackTrace)
			else
				call destroyBonus(this_57, "\n   Bonus, line 7" + wurstStackTrace)
			endif
		else
			call destroyBonus(this_57, "\n   Bonus, line 7" + wurstStackTrace)
		endif
	elseif Bonus_typeId[this_57] <= 748 then
		if Bonus_typeId[this_57] <= 742 then
			if Bonus_typeId[this_57] <= 740 then
				if Bonus_typeId[this_57] <= 738 then
					call destroyBonus(this_57, "\n   Bonus, line 7" + wurstStackTrace)
				else
					call destroyBonus(this_57, "\n   Bonus, line 7" + wurstStackTrace)
				endif
			else
				call destroyBonus(this_57, "\n   Bonus, line 7" + wurstStackTrace)
			endif
		elseif Bonus_typeId[this_57] <= 746 then
			if Bonus_typeId[this_57] <= 744 then
				call destroyBonus(this_57, "\n   Bonus, line 7" + wurstStackTrace)
			else
				call destroyBonus(this_57, "\n   Bonus, line 7" + wurstStackTrace)
			endif
		else
			call destroyBonus(this_57, "\n   Bonus, line 7" + wurstStackTrace)
		endif
	elseif Bonus_typeId[this_57] <= 754 then
		if Bonus_typeId[this_57] <= 752 then
			if Bonus_typeId[this_57] <= 750 then
				call destroyBonus(this_57, "\n   Bonus, line 7" + wurstStackTrace)
			else
				call destroyBonus(this_57, "\n   Bonus, line 7" + wurstStackTrace)
			endif
		else
			call destroyBonus(this_57, "\n   Bonus, line 7" + wurstStackTrace)
		endif
	elseif Bonus_typeId[this_57] <= 758 then
		if Bonus_typeId[this_57] <= 756 then
			call destroyBonus(this_57, "\n   Bonus, line 7" + wurstStackTrace)
		else
			call destroyBonus(this_57, "\n   Bonus, line 7" + wurstStackTrace)
		endif
	else
		call destroyBonus(this_57, "\n   Bonus, line 7" + wurstStackTrace)
	endif
endfunction

function Buff_onDestroy takes integer this_57, string wurstStackTrace returns nothing
	local integer tempIndex
	local integer tempTupleSelectionResult_1
	local integer temp_tempTupleSelectionResult_1
	local integer temp_tempTupleSelectionResult_2
	local integer tempIndex_2
	local integer tempTupleSelectionResult_2
	local integer temp_tempTupleSelectionResult_1_2
	local integer temp_tempTupleSelectionResult_2_2
	local unit temp
	local unit temp_2
	call dispatch_Action_destroyAction(Buff_action[this_57], "\n   Buff, line 63" + wurstStackTrace)
	call timer_release(Buff_t[this_57], "\n   Buff, line 64" + wurstStackTrace)
	call dispatch_LinkedList_remove(Unit_allBuffs[Buff_u[this_57]], this_57, "\n   Buff, line 65" + wurstStackTrace)
	if Buff_fxTimer[this_57] != null then
		call timer_release(Buff_fxTimer[this_57], "\n   Buff, line 67" + wurstStackTrace)
	endif
	set temp = Unit_u[Buff_u[this_57]]
	set tempIndex = this_57
	set temp_tempTupleSelectionResult_1 = Buff_btyp[tempIndex]
	set temp_tempTupleSelectionResult_2 = Buff_btyp_2[tempIndex]
	set tempTupleSelectionResult_1 = temp_tempTupleSelectionResult_1
	call UnitRemoveAbility(temp, tempTupleSelectionResult_1)
	set temp_2 = Unit_u[Buff_u[this_57]]
	set tempIndex_2 = this_57
	set temp_tempTupleSelectionResult_1_2 = Buff_btyp[tempIndex_2]
	set temp_tempTupleSelectionResult_2_2 = Buff_btyp_2[tempIndex_2]
	set tempTupleSelectionResult_2 = temp_tempTupleSelectionResult_2_2
	call UnitRemoveAbility(temp_2, tempTupleSelectionResult_2)
	if Buff_bon[this_57] != 0 then
		call dispatch_Bonus_destroyBonus(Buff_bon[this_57], "\n   Buff, line 71" + wurstStackTrace)
	endif
	if Buff_fx[this_57] != null then
		call DestroyEffect(Buff_fx[this_57])
	endif
	set temp = null
	set temp_2 = null
endfunction

function dealloc_Buff takes integer obj, string wurstStackTrace returns nothing
	if Buff_typeId[obj] == 0 then
		call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Double free: object of type Buff" + wurstStackTrace)
		call I2S(1 / 0)
	else
		set Buff_firstFree = Buff_firstFree + 1
		set Buff_typeId[obj] = 0
	endif
endfunction

function destroyBuff takes integer this_57, string wurstStackTrace returns nothing
	call Buff_onDestroy(this_57, "\n   Buff, line 62" + wurstStackTrace)
	call dealloc_Buff(this_57, "\n   Buff, line 62" + wurstStackTrace)
endfunction

function dispatch_Buff_destroyBuff takes integer this_57, string wurstStackTrace returns nothing
	if Buff_typeId[this_57] == 0 then
		if this_57 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Buff.destroyBuff" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Buff.destroyBuff on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call destroyBuff(this_57, "\n   Buff, line 7" + wurstStackTrace)
endfunction

function closure_impl_26 takes integer this_57, integer data, string wurstStackTrace returns nothing
	call dispatch_Buff_destroyBuff(this_2[this_57], "\n   Buff, line 28" + wurstStackTrace)
endfunction

function booleanToIndex takes boolean u_2 returns integer
	if u_2 then
		return 1
	endif
	return 0
endfunction

function HashMap_put takes integer this_57, integer key, integer value returns nothing
	call hashtable_saveInt(HashMap_ht, this_57, key, value)
endfunction

function dispatch_HashMap_put takes integer this_57, integer key, integer value, string wurstStackTrace returns nothing
	if HashMap_typeId[this_57] == 0 then
		if this_57 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling HashMap.put" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called HashMap.put on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call HashMap_put(this_57, key, value)
endfunction

function alloc_SEntry takes nothing returns integer
	local integer this_57
	if SEntry_firstFree_2 == 0 then
		set SEntry_maxIndex_2 = SEntry_maxIndex_2 + 1
		set this_57 = SEntry_maxIndex_2
	else
		set SEntry_firstFree_2 = SEntry_firstFree_2 - 1
		set this_57 = SEntry_nextFree_2[SEntry_firstFree_2]
	endif
	return this_57
endfunction

function construct_SEntry takes integer this_57, integer elem, integer prev returns nothing
	set SEntry_elem_2[this_57] = elem
	set SEntry_prev[this_57] = prev
endfunction

function new_SEntry takes integer elem, integer prev returns integer
	local integer this_57 = alloc_SEntry()
	call construct_SEntry(this_57, elem, prev)
	return this_57
endfunction

function Stack_push takes integer this_57, integer elem returns nothing
	set Stack_top[this_57] = new_SEntry(elem, Stack_top[this_57])
	set Stack_size[this_57] = Stack_size[this_57] + 1
endfunction

function dispatch_Stack_push takes integer this_57, integer elem, string wurstStackTrace returns nothing
	if Stack_typeId[this_57] == 0 then
		if this_57 == 0 then
=======
	call LinkedList_remove(this_58, t, "\n   LinkedList, line 34" + wurstStackTrace)
endfunction

function Dot_onDestroy takes integer this_58, string wurstStackTrace returns nothing
	call dispatch_Action_destroyAction(Dot_a[this_58], "\n   Dot, line 40" + wurstStackTrace)
	call timer_release(Dot_t[this_58], "\n   Dot, line 41" + wurstStackTrace)
	call dispatch_LinkedList_remove(Unit_allDots[Dot_u[this_58]], this_58, "\n   Dot, line 42" + wurstStackTrace)
	call dispatch_Dot_remove(this_58, "\n   LinkedListModule, line 44" + wurstStackTrace)
endfunction

function dealloc_Dot takes integer obj, string wurstStackTrace returns nothing
	if Dot_typeId[obj] == 0 then
		call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Double free: object of type Dot" + wurstStackTrace)
		call I2S(1 / 0)
	else
		set Dot_firstFree = Dot_firstFree + 1
		set Dot_typeId[obj] = 0
	endif
endfunction

function destroyDot takes integer this_58, string wurstStackTrace returns nothing
	call Dot_onDestroy(this_58, "\n   Dot, line 39" + wurstStackTrace)
	call dealloc_Dot(this_58, "\n   Dot, line 39" + wurstStackTrace)
endfunction

function dispatch_Dot_destroyDot takes integer this_58, string wurstStackTrace returns nothing
	if Dot_typeId[this_58] == 0 then
		if this_58 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Dot.destroyDot" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Dot.destroyDot on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call destroyDot(this_58, "\n   Dot, line 5" + wurstStackTrace)
endfunction

function closure_impl_2 takes integer this_58, integer data, string wurstStackTrace returns nothing
	call dispatch_Dot_destroyDot(this[this_58], "\n   Dot, line 23" + wurstStackTrace)
endfunction

function group_removeUnit takes group this_58, unit u_2 returns nothing
	call GroupRemoveUnit(this_58, u_2)
endfunction

function ControlPoint_leave takes integer this_58, integer u_2, string wurstStackTrace returns nothing
	local integer data
	call group_removeUnit(ControlPoint_inRange[this_58], Unit_u[u_2])
	set data = dispatch_HashMap_get(ControlPoint_captureData, u_2, "\n   ControlPoint, line 102" + wurstStackTrace)
	if Unit_team[u_2] != ControlPoint_owner[this_58] then
		call lightning_destr(CaptureData_l1[data])
		set CaptureData_l1[data] = null
		call dispatch_Fx_destroyFx(CaptureData_fx[data], "\n   ControlPoint, line 106" + wurstStackTrace)
		set CaptureData_fx[data] = 0
	endif
	call dispatch_Action_destroyAction(CaptureData_onDeath[data], "\n   ControlPoint, line 108" + wurstStackTrace)
	set CaptureData_onDeath[data] = 0
endfunction

function dispatch_ControlPoint_leave takes integer this_58, integer u_2, string wurstStackTrace returns nothing
	if ControlPoint_typeId[this_58] == 0 then
		if this_58 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling ControlPoint.leave" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called ControlPoint.leave on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call ControlPoint_leave(this_58, u_2, "\n   ControlPoint, line 100" + wurstStackTrace)
endfunction

function closure_impl_3 takes integer this_58, integer u_2, string wurstStackTrace returns nothing
	call dispatch_ControlPoint_leave(this_57[this_58], Units_target[u_2], "\n   ControlPoint, line 98" + wurstStackTrace)
endfunction

function HashMap_put takes integer this_58, integer key, integer value returns nothing
	call hashtable_saveInt(HashMap_ht, this_58, key, value)
endfunction

function dispatch_HashMap_put takes integer this_58, integer key, integer value, string wurstStackTrace returns nothing
	if HashMap_typeId[this_58] == 0 then
		if this_58 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling HashMap.put" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called HashMap.put on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call HashMap_put(this_58, key, value)
endfunction

function alloc_CaptureData takes nothing returns integer
	local integer this_58
	if CaptureData_firstFree == 0 then
		set CaptureData_maxIndex = CaptureData_maxIndex + 1
		set this_58 = CaptureData_maxIndex
	else
		set CaptureData_firstFree = CaptureData_firstFree - 1
		set this_58 = CaptureData_nextFree[CaptureData_firstFree]
	endif
	set CaptureData_typeId[this_58] = 836
	return this_58
endfunction

function construct_CaptureData takes integer this_58, integer u_2 returns nothing
	set CaptureData_l1[this_58] = null
	set CaptureData_l2[this_58] = null
	set CaptureData_onDeath[this_58] = 0
	set CaptureData_fx[this_58] = 0
endfunction

function new_CaptureData takes integer u_2 returns integer
	local integer this_58 = alloc_CaptureData()
	call construct_CaptureData(this_58, u_2)
	return this_58
endfunction

function closure_impl_4 takes integer this_58, integer u_2, string wurstStackTrace returns nothing
	call dispatch_HashMap_put(ControlPoint_captureData, u_2, new_CaptureData(u_2), "\n   ControlPoint, line 59" + wurstStackTrace)
endfunction

function booleanToIndex takes boolean u_2 returns integer
	if u_2 then
		return 1
	endif
	return 0
endfunction

function alloc_SEntry takes nothing returns integer
	local integer this_58
	if SEntry_firstFree_2 == 0 then
		set SEntry_maxIndex_2 = SEntry_maxIndex_2 + 1
		set this_58 = SEntry_maxIndex_2
	else
		set SEntry_firstFree_2 = SEntry_firstFree_2 - 1
		set this_58 = SEntry_nextFree_2[SEntry_firstFree_2]
	endif
	return this_58
endfunction

function construct_SEntry takes integer this_58, integer elem, integer prev returns nothing
	set SEntry_elem_2[this_58] = elem
	set SEntry_prev[this_58] = prev
endfunction

function new_SEntry takes integer elem, integer prev returns integer
	local integer this_58 = alloc_SEntry()
	call construct_SEntry(this_58, elem, prev)
	return this_58
endfunction

function Stack_push takes integer this_58, integer elem returns nothing
	set Stack_top[this_58] = new_SEntry(elem, Stack_top[this_58])
	set Stack_size[this_58] = Stack_size[this_58] + 1
endfunction

function dispatch_Stack_push takes integer this_58, integer elem, string wurstStackTrace returns nothing
	if Stack_typeId[this_58] == 0 then
		if this_58 == 0 then
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Stack.push" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Stack.push on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
<<<<<<< HEAD
	call Stack_push(this_57, elem)
=======
	call Stack_push(this_58, elem)
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
endfunction

function Icon_isDisabled_get takes integer index1, integer index2, string wurstStackTrace returns boolean
	local boolean returnVal
	if index2 < 0 or index2 >= 12 then
		call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Index out of Bounds" + wurstStackTrace)
		call I2S(1 / 0)
	elseif index2 <= 5 then
		if index2 <= 2 then
			if index2 <= 1 then
				if index2 <= 0 then
					set returnVal = Icon_isDisabled_0[index1]
				else
					set returnVal = Icon_isDisabled_1[index1]
				endif
			else
				set returnVal = Icon_isDisabled_2[index1]
			endif
		elseif index2 <= 4 then
			if index2 <= 3 then
				set returnVal = Icon_isDisabled_3[index1]
			else
				set returnVal = Icon_isDisabled_4[index1]
			endif
		else
			set returnVal = Icon_isDisabled_5[index1]
		endif
	elseif index2 <= 8 then
		if index2 <= 7 then
			if index2 <= 6 then
				set returnVal = Icon_isDisabled_6[index1]
			else
				set returnVal = Icon_isDisabled_7[index1]
			endif
		else
			set returnVal = Icon_isDisabled_8[index1]
		endif
	elseif index2 <= 10 then
		if index2 <= 9 then
			set returnVal = Icon_isDisabled_9[index1]
		else
			set returnVal = Icon_isDisabled_10[index1]
		endif
	else
		set returnVal = Icon_isDisabled_11[index1]
	endif
	return returnVal
endfunction

function Icon_structs_get takes integer index1, integer index2, string wurstStackTrace returns destructable
	local destructable returnVal
	if index2 < 0 or index2 >= 12 then
		call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Index out of Bounds" + wurstStackTrace)
		call I2S(1 / 0)
	elseif index2 <= 5 then
		if index2 <= 2 then
			if index2 <= 1 then
				if index2 <= 0 then
					set returnVal = Icon_structs_0[index1]
				else
					set returnVal = Icon_structs_1[index1]
				endif
			else
				set returnVal = Icon_structs_2[index1]
			endif
		elseif index2 <= 4 then
			if index2 <= 3 then
				set returnVal = Icon_structs_3[index1]
			else
				set returnVal = Icon_structs_4[index1]
			endif
		else
			set returnVal = Icon_structs_5[index1]
		endif
	elseif index2 <= 8 then
		if index2 <= 7 then
			if index2 <= 6 then
				set returnVal = Icon_structs_6[index1]
			else
				set returnVal = Icon_structs_7[index1]
			endif
		else
			set returnVal = Icon_structs_8[index1]
		endif
	elseif index2 <= 10 then
		if index2 <= 9 then
			set returnVal = Icon_structs_9[index1]
		else
			set returnVal = Icon_structs_10[index1]
		endif
	else
		set returnVal = Icon_structs_11[index1]
	endif
	set Icon_structs_gettempReturn = returnVal
	set returnVal = null
	return Icon_structs_gettempReturn
endfunction

function Icon_structs_set takes integer instanceId, integer arrayIndex, destructable value, string wurstStackTrace returns nothing
	if arrayIndex < 0 or arrayIndex >= 12 then
		call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Index out of Bounds" + wurstStackTrace)
		call I2S(1 / 0)
	elseif arrayIndex <= 5 then
		if arrayIndex <= 2 then
			if arrayIndex <= 1 then
				if arrayIndex <= 0 then
					set Icon_structs_0[instanceId] = value
				else
					set Icon_structs_1[instanceId] = value
				endif
			else
				set Icon_structs_2[instanceId] = value
			endif
		elseif arrayIndex <= 4 then
			if arrayIndex <= 3 then
				set Icon_structs_3[instanceId] = value
			else
				set Icon_structs_4[instanceId] = value
			endif
		else
			set Icon_structs_5[instanceId] = value
		endif
	elseif arrayIndex <= 8 then
		if arrayIndex <= 7 then
			if arrayIndex <= 6 then
				set Icon_structs_6[instanceId] = value
			else
				set Icon_structs_7[instanceId] = value
			endif
		else
			set Icon_structs_8[instanceId] = value
		endif
	elseif arrayIndex <= 10 then
		if arrayIndex <= 9 then
			set Icon_structs_9[instanceId] = value
		else
			set Icon_structs_10[instanceId] = value
		endif
	else
		set Icon_structs_11[instanceId] = value
	endif
endfunction

<<<<<<< HEAD
function player_getId takes player this_57 returns integer
	return GetPlayerId(this_57)
=======
function player_getId takes player this_58 returns integer
	return GetPlayerId(this_58)
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
endfunction

function print takes string msg returns nothing
	call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., PrintingHelper_DEBUG_MSG_DURATION, msg)
endfunction

<<<<<<< HEAD
function Icon_showDirect takes integer this_57, player p_2, string wurstStackTrace returns nothing
	local destructable d_2 = Icon_structs_get(this_57, player_getId(p_2), "\n   Icon, line 34" + wurstStackTrace)
=======
function Icon_showDirect takes integer this_58, player p_2, string wurstStackTrace returns nothing
	local destructable d_2 = Icon_structs_get(this_58, player_getId(p_2), "\n   Icon, line 34" + wurstStackTrace)
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
	local integer id
	local integer tempIndex
	local integer tempTupleSelectionResult_2
	local integer temp_tempTupleSelectionResult_1
	local integer temp_tempTupleSelectionResult_2
	local integer tempIndex_2
	local integer tempTupleSelectionResult_1
	local integer temp_tempTupleSelectionResult_1_2
	local integer temp_tempTupleSelectionResult_2_2
	local integer tempIndex_3
	local real tempTupleSelectionResult_1_2
	local real temp_tempTupleSelectionResult_1_3
	local real temp_tempTupleSelectionResult_2_3
	local integer tempIndex_4
	local real tempTupleSelectionResult_2_2
	local real temp_tempTupleSelectionResult_1_4
	local real temp_tempTupleSelectionResult_2_4
	local integer temp
	local real temp_2
	local integer temp_3
	local integer temp_4
	if d_2 == null then
		set id = Icon_dummyIcon
		if GetLocalPlayer() == p_2 then
<<<<<<< HEAD
			if Icon_isDisabled_get(this_57, player_getId(p_2), "\n   Icon, line 38" + wurstStackTrace) then
				set tempIndex = this_57
=======
			if Icon_isDisabled_get(this_58, player_getId(p_2), "\n   Icon, line 38" + wurstStackTrace) then
				set tempIndex = this_58
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
				set temp_tempTupleSelectionResult_1 = Icon_typ[tempIndex]
				set temp_tempTupleSelectionResult_2 = Icon_typ_2[tempIndex]
				set tempTupleSelectionResult_2 = temp_tempTupleSelectionResult_2
				set id = tempTupleSelectionResult_2
				call print("is Disabled")
			else
<<<<<<< HEAD
				set tempIndex_2 = this_57
=======
				set tempIndex_2 = this_58
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
				set temp_tempTupleSelectionResult_1_2 = Icon_typ[tempIndex_2]
				set temp_tempTupleSelectionResult_2_2 = Icon_typ_2[tempIndex_2]
				set tempTupleSelectionResult_1 = temp_tempTupleSelectionResult_1_2
				set id = tempTupleSelectionResult_1
			endif
		endif
<<<<<<< HEAD
		set temp_3 = this_57
		set temp_4 = player_getId(p_2)
		set temp = id
		set tempIndex_3 = this_57
=======
		set temp_3 = this_58
		set temp_4 = player_getId(p_2)
		set temp = id
		set tempIndex_3 = this_58
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
		set temp_tempTupleSelectionResult_1_3 = Icon_realPos[tempIndex_3]
		set temp_tempTupleSelectionResult_2_3 = Icon_realPos_2[tempIndex_3]
		set tempTupleSelectionResult_1_2 = temp_tempTupleSelectionResult_1_3
		set temp_2 = tempTupleSelectionResult_1_2
<<<<<<< HEAD
		set tempIndex_4 = this_57
		set temp_tempTupleSelectionResult_1_4 = Icon_realPos[tempIndex_4]
		set temp_tempTupleSelectionResult_2_4 = Icon_realPos_2[tempIndex_4]
		set tempTupleSelectionResult_2_2 = temp_tempTupleSelectionResult_2_4
		call Icon_structs_set(temp_3, temp_4, CreateDestructable(temp, temp_2, tempTupleSelectionResult_2_2, 0., Icon_scale[this_57] * 1., 1), "\n   Icon, line 43" + wurstStackTrace)
=======
		set tempIndex_4 = this_58
		set temp_tempTupleSelectionResult_1_4 = Icon_realPos[tempIndex_4]
		set temp_tempTupleSelectionResult_2_4 = Icon_realPos_2[tempIndex_4]
		set tempTupleSelectionResult_2_2 = temp_tempTupleSelectionResult_2_4
		call Icon_structs_set(temp_3, temp_4, CreateDestructable(temp, temp_2, tempTupleSelectionResult_2_2, 0., Icon_scale[this_58] * 1., 1), "\n   Icon, line 43" + wurstStackTrace)
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
	endif
	set d_2 = null
endfunction

<<<<<<< HEAD
function image_show takes image this_57, player p_2 returns nothing
	if GetLocalPlayer() == p_2 then
		call SetImageRenderAlways(this_57, true)
	endif
endfunction

function ImageEx_showDirect takes integer this_57, player p_2 returns nothing
	call image_show(ImageEx_content[this_57], p_2)
=======
function image_show takes image this_58, player p_2 returns nothing
	if GetLocalPlayer() == p_2 then
		call SetImageRenderAlways(this_58, true)
	endif
endfunction

function ImageEx_showDirect takes integer this_58, player p_2 returns nothing
	call image_show(ImageEx_content[this_58], p_2)
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
endfunction

function color_withAlpha takes integer this_red, integer this_green, integer this_blue, integer a returns integer
	set color_withAlpha_return_red = this_red
	set color_withAlpha_return_green = this_green
	set color_withAlpha_return_blue = this_blue
	set color_withAlpha_return_alpha = a
	return color_withAlpha_return_red
endfunction

<<<<<<< HEAD
function unit_setVertexColor takes unit this_57, integer col_red, integer col_green, integer col_blue, integer col_alpha returns nothing
	call SetUnitVertexColor(this_57, col_red, col_green, col_blue, col_alpha)
endfunction

function Model_showDirect takes integer this_57, player p_2 returns nothing
	local unit temp = Model_u[this_57]
	local integer tempIndex = this_57
=======
function unit_setVertexColor takes unit this_58, integer col_red, integer col_green, integer col_blue, integer col_alpha returns nothing
	call SetUnitVertexColor(this_58, col_red, col_green, col_blue, col_alpha)
endfunction

function Model_showDirect takes integer this_58, player p_2 returns nothing
	local unit temp = Model_u[this_58]
	local integer tempIndex = this_58
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
	call unit_setVertexColor(temp, color_withAlpha(Model_col[tempIndex], Model_col_2[tempIndex], Model_col_3[tempIndex], 255), color_withAlpha_return_green, color_withAlpha_return_blue, color_withAlpha_return_alpha)
	set temp = null
endfunction

function char takes string s returns integer
	local integer a
	if "\\" == s then
		return 92
	endif
	set a = Char_s2c[StringHash(s) / 2033480 + 1002]
	if s != Char_c2s[a] then
		return a + 32
	endif
	return a
endfunction

function alloc_ImageListEntry takes nothing returns integer
<<<<<<< HEAD
	local integer this_57
	if ImageListEntry_firstFree == 0 then
		set ImageListEntry_maxIndex = ImageListEntry_maxIndex + 1
		set this_57 = ImageListEntry_maxIndex
	else
		set ImageListEntry_firstFree = ImageListEntry_firstFree - 1
		set this_57 = ImageListEntry_nextFree[ImageListEntry_firstFree]
	endif
	set ImageListEntry_typeId[this_57] = 815
	return this_57
endfunction

function construct_ImageListEntry takes integer this_57, image img, integer prev returns nothing
	set ImageListEntry_img[this_57] = img
	set ImageListEntry_prev[this_57] = prev
endfunction

function new_ImageListEntry takes image img, integer prev returns integer
	local integer this_57 = alloc_ImageListEntry()
	call construct_ImageListEntry(this_57, img, prev)
	return this_57
endfunction

function ImageList_add takes integer this_57, image i returns nothing
	set ImageList_last[this_57] = new_ImageListEntry(i, ImageList_last[this_57])
endfunction

function dispatch_ImageList_add takes integer this_57, image i, string wurstStackTrace returns nothing
	if ImageList_typeId[this_57] == 0 then
		if this_57 == 0 then
=======
	local integer this_58
	if ImageListEntry_firstFree == 0 then
		set ImageListEntry_maxIndex = ImageListEntry_maxIndex + 1
		set this_58 = ImageListEntry_maxIndex
	else
		set ImageListEntry_firstFree = ImageListEntry_firstFree - 1
		set this_58 = ImageListEntry_nextFree[ImageListEntry_firstFree]
	endif
	set ImageListEntry_typeId[this_58] = 814
	return this_58
endfunction

function construct_ImageListEntry takes integer this_58, image img, integer prev returns nothing
	set ImageListEntry_img[this_58] = img
	set ImageListEntry_prev[this_58] = prev
endfunction

function new_ImageListEntry takes image img, integer prev returns integer
	local integer this_58 = alloc_ImageListEntry()
	call construct_ImageListEntry(this_58, img, prev)
	return this_58
endfunction

function ImageList_add takes integer this_58, image i returns nothing
	set ImageList_last[this_58] = new_ImageListEntry(i, ImageList_last[this_58])
endfunction

function dispatch_ImageList_add takes integer this_58, image i, string wurstStackTrace returns nothing
	if ImageList_typeId[this_58] == 0 then
		if this_58 == 0 then
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling ImageList.add" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called ImageList.add on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
<<<<<<< HEAD
	call ImageList_add(this_57, i)
endfunction

function TextSplat_updateDimY takes integer this_57 returns nothing
	local integer tempIndex = this_57
=======
	call ImageList_add(this_58, i)
endfunction

function TextSplat_updateDimY takes integer this_58 returns nothing
	local integer tempIndex = this_58
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
	local real temp_tempTupleSelectionResult_1 = TextSplat_cursor[tempIndex]
	local real temp_tempTupleSelectionResult_2 = TextSplat_cursor_2[tempIndex]
	local real tempTupleSelectionResult_2 = temp_tempTupleSelectionResult_2
	local real temp = tempTupleSelectionResult_2
<<<<<<< HEAD
	local integer tempIndex_2 = this_57
=======
	local integer tempIndex_2 = this_58
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
	local real temp_tempTupleSelectionResult_1_2 = TextSplat_dimensions[tempIndex_2]
	local real temp_tempTupleSelectionResult_2_2 = TextSplat_dimensions_2[tempIndex_2]
	local real tempTupleSelectionResult_2_2 = temp_tempTupleSelectionResult_2_2
	local integer tempIndex_3
	local integer tempIndex_4
	local real tempTupleSelectionResult_2_3
	local real temp_tempTupleSelectionResult_1_3
	local real temp_tempTupleSelectionResult_2_3
	if temp < tempTupleSelectionResult_2_2 then
<<<<<<< HEAD
		set tempIndex_3 = this_57
		set tempIndex_4 = this_57
=======
		set tempIndex_3 = this_58
		set tempIndex_4 = this_58
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
		set temp_tempTupleSelectionResult_1_3 = TextSplat_cursor[tempIndex_4]
		set temp_tempTupleSelectionResult_2_3 = TextSplat_cursor_2[tempIndex_4]
		set tempTupleSelectionResult_2_3 = temp_tempTupleSelectionResult_2_3
		set TextSplat_dimensions_2[tempIndex_3] = tempTupleSelectionResult_2_3
	endif
endfunction

<<<<<<< HEAD
function dispatch_TextSplat_updateDimY takes integer this_57, string wurstStackTrace returns nothing
	if TextSplat_typeId[this_57] == 0 then
		if this_57 == 0 then
=======
function dispatch_TextSplat_updateDimY takes integer this_58, string wurstStackTrace returns nothing
	if TextSplat_typeId[this_58] == 0 then
		if this_58 == 0 then
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling TextSplat.updateDimY" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called TextSplat.updateDimY on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
<<<<<<< HEAD
	call TextSplat_updateDimY(this_57)
=======
	call TextSplat_updateDimY(this_58)
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
endfunction

function getFontHeight takes nothing returns integer
	return FontArial_FONT_HEIGHT
endfunction

function getFontResolution takes nothing returns integer
	return FontArial_FONT_RESOLUTION
endfunction

<<<<<<< HEAD
function TextSplat_newline takes integer this_57, string wurstStackTrace returns nothing
	local integer tempIndex = this_57
	local integer tempIndex_2 = this_57
=======
function TextSplat_newline takes integer this_58, string wurstStackTrace returns nothing
	local integer tempIndex = this_58
	local integer tempIndex_2 = this_58
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
	local real temp_tempTupleSelectionResult_1 = TextSplat_pos[tempIndex_2]
	local real temp_tempTupleSelectionResult_2 = TextSplat_pos_2[tempIndex_2]
	local real tempTupleSelectionResult_1 = temp_tempTupleSelectionResult_1
	local integer tempIndex_3
	local integer tempIndex_4
	local real tempTupleSelectionResult_2
	local real temp_tempTupleSelectionResult_1_2
	local real temp_tempTupleSelectionResult_2_2
	local integer temp
	set TextSplat_cursor[tempIndex] = tempTupleSelectionResult_1
<<<<<<< HEAD
	set tempIndex_3 = this_57
	set temp = tempIndex_3
	set tempIndex_4 = this_57
	set temp_tempTupleSelectionResult_1_2 = TextSplat_cursor[tempIndex_4]
	set temp_tempTupleSelectionResult_2_2 = TextSplat_cursor_2[tempIndex_4]
	set tempTupleSelectionResult_2 = temp_tempTupleSelectionResult_2_2
	set TextSplat_cursor_2[temp] = tempTupleSelectionResult_2 - TextSplat_fontSize[this_57] * getFontHeight() / getFontResolution()
	call dispatch_TextSplat_updateDimY(this_57, "\n   TextSplat, line 124" + wurstStackTrace)
endfunction

function dispatch_TextSplat_newline takes integer this_57, string wurstStackTrace returns nothing
	if TextSplat_typeId[this_57] == 0 then
		if this_57 == 0 then
=======
	set tempIndex_3 = this_58
	set temp = tempIndex_3
	set tempIndex_4 = this_58
	set temp_tempTupleSelectionResult_1_2 = TextSplat_cursor[tempIndex_4]
	set temp_tempTupleSelectionResult_2_2 = TextSplat_cursor_2[tempIndex_4]
	set tempTupleSelectionResult_2 = temp_tempTupleSelectionResult_2_2
	set TextSplat_cursor_2[temp] = tempTupleSelectionResult_2 - TextSplat_fontSize[this_58] * getFontHeight() / getFontResolution()
	call dispatch_TextSplat_updateDimY(this_58, "\n   TextSplat, line 124" + wurstStackTrace)
endfunction

function dispatch_TextSplat_newline takes integer this_58, string wurstStackTrace returns nothing
	if TextSplat_typeId[this_58] == 0 then
		if this_58 == 0 then
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling TextSplat.newline" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called TextSplat.newline on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
<<<<<<< HEAD
	call TextSplat_newline(this_57, "\n   TextSplat, line 120" + wurstStackTrace)
endfunction

function TextSplat_updateDimX takes integer this_57 returns nothing
	local integer tempIndex = this_57
=======
	call TextSplat_newline(this_58, "\n   TextSplat, line 120" + wurstStackTrace)
endfunction

function TextSplat_updateDimX takes integer this_58 returns nothing
	local integer tempIndex = this_58
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
	local real temp_tempTupleSelectionResult_1 = TextSplat_cursor[tempIndex]
	local real temp_tempTupleSelectionResult_2 = TextSplat_cursor_2[tempIndex]
	local real tempTupleSelectionResult_1 = temp_tempTupleSelectionResult_1
	local real temp = tempTupleSelectionResult_1
<<<<<<< HEAD
	local integer tempIndex_2 = this_57
=======
	local integer tempIndex_2 = this_58
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
	local real temp_tempTupleSelectionResult_1_2 = TextSplat_dimensions[tempIndex_2]
	local real temp_tempTupleSelectionResult_2_2 = TextSplat_dimensions_2[tempIndex_2]
	local real tempTupleSelectionResult_1_2 = temp_tempTupleSelectionResult_1_2
	local integer tempIndex_3
	local integer tempIndex_4
	local real tempTupleSelectionResult_1_3
	local real temp_tempTupleSelectionResult_1_3
	local real temp_tempTupleSelectionResult_2_3
	if temp > tempTupleSelectionResult_1_2 then
<<<<<<< HEAD
		set tempIndex_3 = this_57
		set tempIndex_4 = this_57
=======
		set tempIndex_3 = this_58
		set tempIndex_4 = this_58
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
		set temp_tempTupleSelectionResult_1_3 = TextSplat_cursor[tempIndex_4]
		set temp_tempTupleSelectionResult_2_3 = TextSplat_cursor_2[tempIndex_4]
		set tempTupleSelectionResult_1_3 = temp_tempTupleSelectionResult_1_3
		set TextSplat_dimensions[tempIndex_3] = tempTupleSelectionResult_1_3
	endif
endfunction

<<<<<<< HEAD
function dispatch_TextSplat_updateDimX takes integer this_57, string wurstStackTrace returns nothing
	if TextSplat_typeId[this_57] == 0 then
		if this_57 == 0 then
=======
function dispatch_TextSplat_updateDimX takes integer this_58, string wurstStackTrace returns nothing
	if TextSplat_typeId[this_58] == 0 then
		if this_58 == 0 then
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling TextSplat.updateDimX" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called TextSplat.updateDimX on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
<<<<<<< HEAD
	call TextSplat_updateDimX(this_57)
=======
	call TextSplat_updateDimX(this_58)
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
endfunction

function char_toInt takes integer this_c returns integer
	return this_c
endfunction

function getFontPath takes integer c_c returns string
	return FontArial_paths[char_toInt(c_c)]
endfunction

function getFontWidth takes integer c_c returns integer
	return FontArial_widths[char_toInt(c_c)]
endfunction

<<<<<<< HEAD
function image_setColor takes image this_57, integer col_red, integer col_green, integer col_blue, integer col_alpha returns nothing
	call SetImageColor(this_57, col_red, col_green, col_blue, col_alpha)
endfunction

function image_show_2 takes image this_57 returns nothing
	call SetImageRenderAlways(this_57, true)
endfunction

function string_charAt takes string this_57, integer index returns string
	return SubString(this_57, index, index + 1)
endfunction

function string_length takes string this_57 returns integer
	return StringLength(this_57)
endfunction

function TextSplat_append takes integer this_57, string text, integer col_red, integer col_green, integer col_blue, integer col_alpha, player p_2, string wurstStackTrace returns nothing
=======
function image_setColor takes image this_58, integer col_red, integer col_green, integer col_blue, integer col_alpha returns nothing
	call SetImageColor(this_58, col_red, col_green, col_blue, col_alpha)
endfunction

function image_show_2 takes image this_58 returns nothing
	call SetImageRenderAlways(this_58, true)
endfunction

function string_charAt takes string this_58, integer index returns string
	return SubString(this_58, index, index + 1)
endfunction

function string_length takes string this_58 returns integer
	return StringLength(this_58)
endfunction

function TextSplat_append takes integer this_58, string text, integer col_red, integer col_green, integer col_blue, integer col_alpha, player p_2, string wurstStackTrace returns nothing
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
	local integer c_c
	local real charWidth
	local integer n
	local integer temp
	local image img
	local image receiver
	local integer tempIndex
	local real tempTupleSelectionResult_1
	local real temp_tempTupleSelectionResult_1
	local real temp_tempTupleSelectionResult_2
	local integer tempIndex_2
	local real tempTupleSelectionResult_1_2
	local real temp_tempTupleSelectionResult_1_2
	local real temp_tempTupleSelectionResult_2_2
	local integer tempIndex_3
	local real tempTupleSelectionResult_2
	local real temp_tempTupleSelectionResult_1_3
	local real temp_tempTupleSelectionResult_2_3
	local integer tempIndex_4
	local integer tempIndex_5
	local real tempTupleSelectionResult_1_3
	local real temp_tempTupleSelectionResult_1_4
	local real temp_tempTupleSelectionResult_2_4
	local string temp_2
	local real temp_3
	local real temp_4
	local real temp_5
	local integer temp_6
	if GetLocalPlayer() == p_2 then
		set n = 0
		set temp = string_length(text) - 1
		loop
			exitwhen n > temp
			set c_c = char(string_charAt(text, n))
<<<<<<< HEAD
			set charWidth = TextSplat_fontSize[this_57] * getFontWidth(c_c) / getFontResolution()
			set tempIndex = this_57
			set temp_tempTupleSelectionResult_1 = TextSplat_cursor[tempIndex]
			set temp_tempTupleSelectionResult_2 = TextSplat_cursor_2[tempIndex]
			set tempTupleSelectionResult_1 = temp_tempTupleSelectionResult_1
			if tempTupleSelectionResult_1 + charWidth > TextSplat_maxWidth[this_57] then
				call dispatch_TextSplat_newline(this_57, "\n   TextSplat, line 110" + wurstStackTrace)
			endif
			if c_c != 32 then
				set temp_2 = getFontPath(c_c)
				set temp_3 = TextSplat_fontSize[this_57]
				set temp_4 = TextSplat_fontSize[this_57]
				set tempIndex_2 = this_57
=======
			set charWidth = TextSplat_fontSize[this_58] * getFontWidth(c_c) / getFontResolution()
			set tempIndex = this_58
			set temp_tempTupleSelectionResult_1 = TextSplat_cursor[tempIndex]
			set temp_tempTupleSelectionResult_2 = TextSplat_cursor_2[tempIndex]
			set tempTupleSelectionResult_1 = temp_tempTupleSelectionResult_1
			if tempTupleSelectionResult_1 + charWidth > TextSplat_maxWidth[this_58] then
				call dispatch_TextSplat_newline(this_58, "\n   TextSplat, line 110" + wurstStackTrace)
			endif
			if c_c != 32 then
				set temp_2 = getFontPath(c_c)
				set temp_3 = TextSplat_fontSize[this_58]
				set temp_4 = TextSplat_fontSize[this_58]
				set tempIndex_2 = this_58
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
				set temp_tempTupleSelectionResult_1_2 = TextSplat_cursor[tempIndex_2]
				set temp_tempTupleSelectionResult_2_2 = TextSplat_cursor_2[tempIndex_2]
				set tempTupleSelectionResult_1_2 = temp_tempTupleSelectionResult_1_2
				set temp_5 = tempTupleSelectionResult_1_2
<<<<<<< HEAD
				set tempIndex_3 = this_57
				set temp_tempTupleSelectionResult_1_3 = TextSplat_cursor[tempIndex_3]
				set temp_tempTupleSelectionResult_2_3 = TextSplat_cursor_2[tempIndex_3]
				set tempTupleSelectionResult_2 = temp_tempTupleSelectionResult_2_3
				set receiver = CreateImage(temp_2, temp_3, temp_4, 0., temp_5, tempTupleSelectionResult_2, 0., 0., 0., 0., TextSplat_layer[this_57] + 1)
=======
				set tempIndex_3 = this_58
				set temp_tempTupleSelectionResult_1_3 = TextSplat_cursor[tempIndex_3]
				set temp_tempTupleSelectionResult_2_3 = TextSplat_cursor_2[tempIndex_3]
				set tempTupleSelectionResult_2 = temp_tempTupleSelectionResult_2_3
				set receiver = CreateImage(temp_2, temp_3, temp_4, 0., temp_5, tempTupleSelectionResult_2, 0., 0., 0., 0., TextSplat_layer[this_58] + 1)
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
				call image_show_2(receiver)
				set img = receiver
				if col_alpha != TextSplat_DISABLE_COLOR_ALPHA then
					call image_setColor(img, col_red, col_green, col_blue, col_alpha)
				endif
<<<<<<< HEAD
				call dispatch_ImageList_add(TextSplat_images[this_57], img, "\n   TextSplat, line 116" + wurstStackTrace)
			endif
			set tempIndex_4 = this_57
			set temp_6 = tempIndex_4
			set tempIndex_5 = this_57
=======
				call dispatch_ImageList_add(TextSplat_images[this_58], img, "\n   TextSplat, line 116" + wurstStackTrace)
			endif
			set tempIndex_4 = this_58
			set temp_6 = tempIndex_4
			set tempIndex_5 = this_58
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
			set temp_tempTupleSelectionResult_1_4 = TextSplat_cursor[tempIndex_5]
			set temp_tempTupleSelectionResult_2_4 = TextSplat_cursor_2[tempIndex_5]
			set tempTupleSelectionResult_1_3 = temp_tempTupleSelectionResult_1_4
			set TextSplat_cursor[temp_6] = tempTupleSelectionResult_1_3 + charWidth
<<<<<<< HEAD
			call dispatch_TextSplat_updateDimX(this_57, "\n   TextSplat, line 118" + wurstStackTrace)
=======
			call dispatch_TextSplat_updateDimX(this_58, "\n   TextSplat, line 118" + wurstStackTrace)
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
			set n = n + 1
		endloop
	endif
	set img = null
	set receiver = null
endfunction

<<<<<<< HEAD
function dispatch_TextSplat_append takes integer this_57, string text, integer col_red, integer col_green, integer col_blue, integer col_alpha, player p_2, string wurstStackTrace returns nothing
	if TextSplat_typeId[this_57] == 0 then
		if this_57 == 0 then
=======
function dispatch_TextSplat_append takes integer this_58, string text, integer col_red, integer col_green, integer col_blue, integer col_alpha, player p_2, string wurstStackTrace returns nothing
	if TextSplat_typeId[this_58] == 0 then
		if this_58 == 0 then
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling TextSplat.append" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called TextSplat.append on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
<<<<<<< HEAD
	call TextSplat_append(this_57, text, col_red, col_green, col_blue, col_alpha, p_2, "\n   TextSplat, line 101" + wurstStackTrace)
endfunction

function ImageListEntry_onDestroy takes integer this_57 returns nothing
=======
	call TextSplat_append(this_58, text, col_red, col_green, col_blue, col_alpha, p_2, "\n   TextSplat, line 101" + wurstStackTrace)
endfunction

function ImageListEntry_onDestroy takes integer this_58 returns nothing
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
endfunction

function dealloc_ImageListEntry takes integer obj, string wurstStackTrace returns nothing
	if ImageListEntry_typeId[obj] == 0 then
		call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Double free: object of type ImageListEntry" + wurstStackTrace)
		call I2S(1 / 0)
	else
		set ImageListEntry_nextFree[ImageListEntry_firstFree] = obj
		set ImageListEntry_firstFree = ImageListEntry_firstFree + 1
		set ImageListEntry_typeId[obj] = 0
	endif
endfunction

<<<<<<< HEAD
function destroyImageListEntry takes integer this_57, string wurstStackTrace returns nothing
	call ImageListEntry_onDestroy(this_57)
	call dealloc_ImageListEntry(this_57, "\n   TextSplat, line 165" + wurstStackTrace)
endfunction

function dispatch_ImageListEntry_destroyImageListEntry takes integer this_57, string wurstStackTrace returns nothing
	if ImageListEntry_typeId[this_57] == 0 then
		if this_57 == 0 then
=======
function destroyImageListEntry takes integer this_58, string wurstStackTrace returns nothing
	call ImageListEntry_onDestroy(this_58)
	call dealloc_ImageListEntry(this_58, "\n   TextSplat, line 165" + wurstStackTrace)
endfunction

function dispatch_ImageListEntry_destroyImageListEntry takes integer this_58, string wurstStackTrace returns nothing
	if ImageListEntry_typeId[this_58] == 0 then
		if this_58 == 0 then
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling ImageListEntry.destroyImageListEntry" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called ImageListEntry.destroyImageListEntry on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
<<<<<<< HEAD
	call destroyImageListEntry(this_57, "\n   TextSplat, line 165" + wurstStackTrace)
endfunction

function ImageList_eraseAll takes integer this_57, string wurstStackTrace returns nothing
	local integer e = ImageList_last[this_57]
=======
	call destroyImageListEntry(this_58, "\n   TextSplat, line 165" + wurstStackTrace)
endfunction

function ImageList_eraseAll takes integer this_58, string wurstStackTrace returns nothing
	local integer e = ImageList_last[this_58]
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
	loop
		exitwhen  not (e != 0)
		call image_remove(ImageListEntry_img[e], "\n   TextSplat, line 186" + wurstStackTrace)
		call dispatch_ImageListEntry_destroyImageListEntry(e, "\n   TextSplat, line 187" + wurstStackTrace)
		set e = ImageListEntry_prev[e]
	endloop
<<<<<<< HEAD
	set ImageList_last[this_57] = 0
endfunction

function dispatch_ImageList_eraseAll takes integer this_57, string wurstStackTrace returns nothing
	if ImageList_typeId[this_57] == 0 then
		if this_57 == 0 then
=======
	set ImageList_last[this_58] = 0
endfunction

function dispatch_ImageList_eraseAll takes integer this_58, string wurstStackTrace returns nothing
	if ImageList_typeId[this_58] == 0 then
		if this_58 == 0 then
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling ImageList.eraseAll" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called ImageList.eraseAll on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
<<<<<<< HEAD
	call ImageList_eraseAll(this_57, "\n   TextSplat, line 182" + wurstStackTrace)
endfunction

function TextSplat_clear takes integer this_57, player p_2, string wurstStackTrace returns nothing
=======
	call ImageList_eraseAll(this_58, "\n   TextSplat, line 182" + wurstStackTrace)
endfunction

function TextSplat_clear takes integer this_58, player p_2, string wurstStackTrace returns nothing
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
	local integer tempIndex
	local integer tempIndex_2
	local real tempTupleSelectionResult_1
	local real temp_tempTupleSelectionResult_1
	local real temp_tempTupleSelectionResult_2
	local integer tempIndex_3
	local real tempTupleSelectionResult_2
	local real temp_tempTupleSelectionResult_1_2
	local real temp_tempTupleSelectionResult_2_2
	local integer tempIndex_4
	local integer tempIndex_5
	local integer temp
	local integer temp_2
	if GetLocalPlayer() == p_2 then
<<<<<<< HEAD
		call dispatch_ImageList_eraseAll(TextSplat_images[this_57], "\n   TextSplat, line 153" + wurstStackTrace)
		set tempIndex = this_57
		set temp = tempIndex
		set tempIndex_2 = this_57
=======
		call dispatch_ImageList_eraseAll(TextSplat_images[this_58], "\n   TextSplat, line 153" + wurstStackTrace)
		set tempIndex = this_58
		set temp = tempIndex
		set tempIndex_2 = this_58
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
		set temp_tempTupleSelectionResult_1 = TextSplat_pos[tempIndex_2]
		set temp_tempTupleSelectionResult_2 = TextSplat_pos_2[tempIndex_2]
		set tempTupleSelectionResult_1 = temp_tempTupleSelectionResult_1
		set TextSplat_cursor[temp] = tempTupleSelectionResult_1
		set temp_2 = tempIndex
<<<<<<< HEAD
		set tempIndex_3 = this_57
		set temp_tempTupleSelectionResult_1_2 = TextSplat_pos[tempIndex_3]
		set temp_tempTupleSelectionResult_2_2 = TextSplat_pos_2[tempIndex_3]
		set tempTupleSelectionResult_2 = temp_tempTupleSelectionResult_2_2
		set TextSplat_cursor_2[temp_2] = tempTupleSelectionResult_2 - TextSplat_fontSize[this_57]
		set tempIndex_4 = this_57
		set tempIndex_5 = this_57
=======
		set tempIndex_3 = this_58
		set temp_tempTupleSelectionResult_1_2 = TextSplat_pos[tempIndex_3]
		set temp_tempTupleSelectionResult_2_2 = TextSplat_pos_2[tempIndex_3]
		set tempTupleSelectionResult_2 = temp_tempTupleSelectionResult_2_2
		set TextSplat_cursor_2[temp_2] = tempTupleSelectionResult_2 - TextSplat_fontSize[this_58]
		set tempIndex_4 = this_58
		set tempIndex_5 = this_58
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
		set TextSplat_dimensions[tempIndex_4] = TextSplat_pos[tempIndex_5]
		set TextSplat_dimensions_2[tempIndex_4] = TextSplat_pos_2[tempIndex_5]
	endif
endfunction

<<<<<<< HEAD
function dispatch_TextSplat_clear takes integer this_57, player p_2, string wurstStackTrace returns nothing
	if TextSplat_typeId[this_57] == 0 then
		if this_57 == 0 then
=======
function dispatch_TextSplat_clear takes integer this_58, player p_2, string wurstStackTrace returns nothing
	if TextSplat_typeId[this_58] == 0 then
		if this_58 == 0 then
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling TextSplat.clear" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called TextSplat.clear on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
<<<<<<< HEAD
	call TextSplat_clear(this_57, p_2, "\n   TextSplat, line 150" + wurstStackTrace)
endfunction

function TextBox_showDirect takes integer this_57, player p_2, string wurstStackTrace returns nothing
	local integer tempIndex
	local integer temp
	local string temp_2
	call dispatch_TextSplat_clear(TextBox_splat[this_57], p_2, "\n   TextBox, line 33" + wurstStackTrace)
	set temp = TextBox_splat[this_57]
	set temp_2 = TextBox_content[this_57]
	set tempIndex = this_57
=======
	call TextSplat_clear(this_58, p_2, "\n   TextSplat, line 150" + wurstStackTrace)
endfunction

function TextBox_showDirect takes integer this_58, player p_2, string wurstStackTrace returns nothing
	local integer tempIndex
	local integer temp
	local string temp_2
	call dispatch_TextSplat_clear(TextBox_splat[this_58], p_2, "\n   TextBox, line 33" + wurstStackTrace)
	set temp = TextBox_splat[this_58]
	set temp_2 = TextBox_content[this_58]
	set tempIndex = this_58
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
	call dispatch_TextSplat_append(temp, temp_2, color_withAlpha(TextBox_col[tempIndex], TextBox_col_2[tempIndex], TextBox_col_3[tempIndex], 255), color_withAlpha_return_green, color_withAlpha_return_blue, color_withAlpha_return_alpha, p_2, "\n   TextBox, line 34" + wurstStackTrace)
endfunction

function alloc_Closure takes nothing returns integer
<<<<<<< HEAD
	local integer this_57
	if CallbackSingle_firstFree == 0 then
		set CallbackSingle_maxIndex = CallbackSingle_maxIndex + 1
		set this_57 = CallbackSingle_maxIndex
	else
		set CallbackSingle_firstFree = CallbackSingle_firstFree - 1
		set this_57 = CallbackSingle_nextFree[CallbackSingle_firstFree]
	endif
	set CallbackSingle_typeId[this_57] = 811
	return this_57
endfunction

function CallbackSingle_start takes integer this_57, real time, string wurstStackTrace returns nothing
	local timer receiver = getTimer("\n   ClosureTimers, line 67" + wurstStackTrace)
	local timer receiver_2
	call timer_setData(receiver, this_57, "\n   ClosureTimers, line 67" + wurstStackTrace)
=======
	local integer this_58
	if CallbackSingle_firstFree == 0 then
		set CallbackSingle_maxIndex = CallbackSingle_maxIndex + 1
		set this_58 = CallbackSingle_maxIndex
	else
		set CallbackSingle_firstFree = CallbackSingle_firstFree - 1
		set this_58 = CallbackSingle_nextFree[CallbackSingle_firstFree]
	endif
	set CallbackSingle_typeId[this_58] = 810
	return this_58
endfunction

function getTimer takes string wurstStackTrace returns timer
	local timer receiver
	if TimerUtils_freeTimersCount > 0 then
		set TimerUtils_freeTimersCount = TimerUtils_freeTimersCount - 1
		call timer_setData(TimerUtils_freeTimers[TimerUtils_freeTimersCount], 0, "\n   TimerUtils, line 23" + wurstStackTrace)
		set receiver = null
		return TimerUtils_freeTimers[TimerUtils_freeTimersCount]
	else
		set receiver = CreateTimer()
		call timer_setData(receiver, 0, "\n   TimerUtils, line 26" + wurstStackTrace)
		set getTimertempReturn = receiver
		set receiver = null
		return getTimertempReturn
	endif
endfunction

function CallbackSingle_start takes integer this_58, real time, string wurstStackTrace returns nothing
	local timer receiver = getTimer("\n   ClosureTimers, line 67" + wurstStackTrace)
	local timer receiver_2
	call timer_setData(receiver, this_58, "\n   ClosureTimers, line 67" + wurstStackTrace)
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
	set receiver_2 = receiver
	call timer_start(receiver_2, time, ref_function_bridge_CallbackSingle_staticCallback)
	set receiver = null
	set receiver_2 = null
endfunction

<<<<<<< HEAD
function dispatch_CallbackSingle_start takes integer this_57, real time, string wurstStackTrace returns nothing
	if CallbackSingle_typeId[this_57] == 0 then
		if this_57 == 0 then
=======
function dispatch_CallbackSingle_start takes integer this_58, real time, string wurstStackTrace returns nothing
	if CallbackSingle_typeId[this_58] == 0 then
		if this_58 == 0 then
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling CallbackSingle.start" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called CallbackSingle.start on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
<<<<<<< HEAD
	if CallbackSingle_typeId[this_57] <= 737 then
		if CallbackSingle_typeId[this_57] <= 721 then
			if CallbackSingle_typeId[this_57] <= 713 then
				if CallbackSingle_typeId[this_57] <= 673 then
					if CallbackSingle_typeId[this_57] <= 666 then
						call CallbackSingle_start(this_57, time, "\n   ClosureTimers, line 66" + wurstStackTrace)
					else
						call CallbackSingle_start(this_57, time, "\n   ClosureTimers, line 66" + wurstStackTrace)
					endif
				elseif CallbackSingle_typeId[this_57] <= 678 then
					call CallbackSingle_start(this_57, time, "\n   ClosureTimers, line 66" + wurstStackTrace)
				else
					call CallbackSingle_start(this_57, time, "\n   ClosureTimers, line 66" + wurstStackTrace)
				endif
			elseif CallbackSingle_typeId[this_57] <= 717 then
				if CallbackSingle_typeId[this_57] <= 715 then
					call CallbackSingle_start(this_57, time, "\n   ClosureTimers, line 66" + wurstStackTrace)
				else
					call CallbackSingle_start(this_57, time, "\n   ClosureTimers, line 66" + wurstStackTrace)
				endif
			elseif CallbackSingle_typeId[this_57] <= 719 then
				call CallbackSingle_start(this_57, time, "\n   ClosureTimers, line 66" + wurstStackTrace)
			else
				call CallbackSingle_start(this_57, time, "\n   ClosureTimers, line 66" + wurstStackTrace)
			endif
		elseif CallbackSingle_typeId[this_57] <= 729 then
			if CallbackSingle_typeId[this_57] <= 725 then
				if CallbackSingle_typeId[this_57] <= 723 then
					call CallbackSingle_start(this_57, time, "\n   ClosureTimers, line 66" + wurstStackTrace)
				else
					call CallbackSingle_start(this_57, time, "\n   ClosureTimers, line 66" + wurstStackTrace)
				endif
			elseif CallbackSingle_typeId[this_57] <= 727 then
				call CallbackSingle_start(this_57, time, "\n   ClosureTimers, line 66" + wurstStackTrace)
			else
				call CallbackSingle_start(this_57, time, "\n   ClosureTimers, line 66" + wurstStackTrace)
			endif
		elseif CallbackSingle_typeId[this_57] <= 733 then
			if CallbackSingle_typeId[this_57] <= 731 then
				call CallbackSingle_start(this_57, time, "\n   ClosureTimers, line 66" + wurstStackTrace)
			else
				call CallbackSingle_start(this_57, time, "\n   ClosureTimers, line 66" + wurstStackTrace)
			endif
		elseif CallbackSingle_typeId[this_57] <= 735 then
			call CallbackSingle_start(this_57, time, "\n   ClosureTimers, line 66" + wurstStackTrace)
		else
			call CallbackSingle_start(this_57, time, "\n   ClosureTimers, line 66" + wurstStackTrace)
		endif
	elseif CallbackSingle_typeId[this_57] <= 753 then
		if CallbackSingle_typeId[this_57] <= 745 then
			if CallbackSingle_typeId[this_57] <= 741 then
				if CallbackSingle_typeId[this_57] <= 739 then
					call CallbackSingle_start(this_57, time, "\n   ClosureTimers, line 66" + wurstStackTrace)
				else
					call CallbackSingle_start(this_57, time, "\n   ClosureTimers, line 66" + wurstStackTrace)
				endif
			elseif CallbackSingle_typeId[this_57] <= 743 then
				call CallbackSingle_start(this_57, time, "\n   ClosureTimers, line 66" + wurstStackTrace)
			else
				call CallbackSingle_start(this_57, time, "\n   ClosureTimers, line 66" + wurstStackTrace)
			endif
		elseif CallbackSingle_typeId[this_57] <= 749 then
			if CallbackSingle_typeId[this_57] <= 747 then
				call CallbackSingle_start(this_57, time, "\n   ClosureTimers, line 66" + wurstStackTrace)
			else
				call CallbackSingle_start(this_57, time, "\n   ClosureTimers, line 66" + wurstStackTrace)
			endif
		elseif CallbackSingle_typeId[this_57] <= 751 then
			call CallbackSingle_start(this_57, time, "\n   ClosureTimers, line 66" + wurstStackTrace)
		else
			call CallbackSingle_start(this_57, time, "\n   ClosureTimers, line 66" + wurstStackTrace)
		endif
	elseif CallbackSingle_typeId[this_57] <= 761 then
		if CallbackSingle_typeId[this_57] <= 757 then
			if CallbackSingle_typeId[this_57] <= 755 then
				call CallbackSingle_start(this_57, time, "\n   ClosureTimers, line 66" + wurstStackTrace)
			else
				call CallbackSingle_start(this_57, time, "\n   ClosureTimers, line 66" + wurstStackTrace)
			endif
		elseif CallbackSingle_typeId[this_57] <= 759 then
			call CallbackSingle_start(this_57, time, "\n   ClosureTimers, line 66" + wurstStackTrace)
		else
			call CallbackSingle_start(this_57, time, "\n   ClosureTimers, line 66" + wurstStackTrace)
		endif
	elseif CallbackSingle_typeId[this_57] <= 812 then
		if CallbackSingle_typeId[this_57] <= 763 then
			call CallbackSingle_start(this_57, time, "\n   ClosureTimers, line 66" + wurstStackTrace)
		else
			call CallbackSingle_start(this_57, time, "\n   ClosureTimers, line 66" + wurstStackTrace)
		endif
	else
		call CallbackSingle_start(this_57, time, "\n   ClosureTimers, line 66" + wurstStackTrace)
=======
	if CallbackSingle_typeId[this_58] <= 736 then
		if CallbackSingle_typeId[this_58] <= 720 then
			if CallbackSingle_typeId[this_58] <= 712 then
				if CallbackSingle_typeId[this_58] <= 672 then
					if CallbackSingle_typeId[this_58] <= 665 then
						call CallbackSingle_start(this_58, time, "\n   ClosureTimers, line 66" + wurstStackTrace)
					else
						call CallbackSingle_start(this_58, time, "\n   ClosureTimers, line 66" + wurstStackTrace)
					endif
				elseif CallbackSingle_typeId[this_58] <= 677 then
					call CallbackSingle_start(this_58, time, "\n   ClosureTimers, line 66" + wurstStackTrace)
				else
					call CallbackSingle_start(this_58, time, "\n   ClosureTimers, line 66" + wurstStackTrace)
				endif
			elseif CallbackSingle_typeId[this_58] <= 716 then
				if CallbackSingle_typeId[this_58] <= 714 then
					call CallbackSingle_start(this_58, time, "\n   ClosureTimers, line 66" + wurstStackTrace)
				else
					call CallbackSingle_start(this_58, time, "\n   ClosureTimers, line 66" + wurstStackTrace)
				endif
			elseif CallbackSingle_typeId[this_58] <= 718 then
				call CallbackSingle_start(this_58, time, "\n   ClosureTimers, line 66" + wurstStackTrace)
			else
				call CallbackSingle_start(this_58, time, "\n   ClosureTimers, line 66" + wurstStackTrace)
			endif
		elseif CallbackSingle_typeId[this_58] <= 728 then
			if CallbackSingle_typeId[this_58] <= 724 then
				if CallbackSingle_typeId[this_58] <= 722 then
					call CallbackSingle_start(this_58, time, "\n   ClosureTimers, line 66" + wurstStackTrace)
				else
					call CallbackSingle_start(this_58, time, "\n   ClosureTimers, line 66" + wurstStackTrace)
				endif
			elseif CallbackSingle_typeId[this_58] <= 726 then
				call CallbackSingle_start(this_58, time, "\n   ClosureTimers, line 66" + wurstStackTrace)
			else
				call CallbackSingle_start(this_58, time, "\n   ClosureTimers, line 66" + wurstStackTrace)
			endif
		elseif CallbackSingle_typeId[this_58] <= 732 then
			if CallbackSingle_typeId[this_58] <= 730 then
				call CallbackSingle_start(this_58, time, "\n   ClosureTimers, line 66" + wurstStackTrace)
			else
				call CallbackSingle_start(this_58, time, "\n   ClosureTimers, line 66" + wurstStackTrace)
			endif
		elseif CallbackSingle_typeId[this_58] <= 734 then
			call CallbackSingle_start(this_58, time, "\n   ClosureTimers, line 66" + wurstStackTrace)
		else
			call CallbackSingle_start(this_58, time, "\n   ClosureTimers, line 66" + wurstStackTrace)
		endif
	elseif CallbackSingle_typeId[this_58] <= 752 then
		if CallbackSingle_typeId[this_58] <= 744 then
			if CallbackSingle_typeId[this_58] <= 740 then
				if CallbackSingle_typeId[this_58] <= 738 then
					call CallbackSingle_start(this_58, time, "\n   ClosureTimers, line 66" + wurstStackTrace)
				else
					call CallbackSingle_start(this_58, time, "\n   ClosureTimers, line 66" + wurstStackTrace)
				endif
			elseif CallbackSingle_typeId[this_58] <= 742 then
				call CallbackSingle_start(this_58, time, "\n   ClosureTimers, line 66" + wurstStackTrace)
			else
				call CallbackSingle_start(this_58, time, "\n   ClosureTimers, line 66" + wurstStackTrace)
			endif
		elseif CallbackSingle_typeId[this_58] <= 748 then
			if CallbackSingle_typeId[this_58] <= 746 then
				call CallbackSingle_start(this_58, time, "\n   ClosureTimers, line 66" + wurstStackTrace)
			else
				call CallbackSingle_start(this_58, time, "\n   ClosureTimers, line 66" + wurstStackTrace)
			endif
		elseif CallbackSingle_typeId[this_58] <= 750 then
			call CallbackSingle_start(this_58, time, "\n   ClosureTimers, line 66" + wurstStackTrace)
		else
			call CallbackSingle_start(this_58, time, "\n   ClosureTimers, line 66" + wurstStackTrace)
		endif
	elseif CallbackSingle_typeId[this_58] <= 760 then
		if CallbackSingle_typeId[this_58] <= 756 then
			if CallbackSingle_typeId[this_58] <= 754 then
				call CallbackSingle_start(this_58, time, "\n   ClosureTimers, line 66" + wurstStackTrace)
			else
				call CallbackSingle_start(this_58, time, "\n   ClosureTimers, line 66" + wurstStackTrace)
			endif
		elseif CallbackSingle_typeId[this_58] <= 758 then
			call CallbackSingle_start(this_58, time, "\n   ClosureTimers, line 66" + wurstStackTrace)
		else
			call CallbackSingle_start(this_58, time, "\n   ClosureTimers, line 66" + wurstStackTrace)
		endif
	elseif CallbackSingle_typeId[this_58] <= 811 then
		if CallbackSingle_typeId[this_58] <= 762 then
			call CallbackSingle_start(this_58, time, "\n   ClosureTimers, line 66" + wurstStackTrace)
		else
			call CallbackSingle_start(this_58, time, "\n   ClosureTimers, line 66" + wurstStackTrace)
		endif
	elseif CallbackSingle_typeId[this_58] <= 865 then
		call CallbackSingle_start(this_58, time, "\n   ClosureTimers, line 66" + wurstStackTrace)
	else
		call CallbackSingle_start(this_58, time, "\n   ClosureTimers, line 66" + wurstStackTrace)
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
	endif
endfunction

function doAfter takes real timeToWait, integer cb, string wurstStackTrace returns nothing
	call dispatch_CallbackSingle_start(cb, timeToWait, "\n   ClosureTimers, line 51" + wurstStackTrace)
endfunction

<<<<<<< HEAD
function int_asFourchar takes integer this_57 returns string
	local string charMap = ".................................!.#$%&'()*+,-./0123456789:;<=>.@ABCDEFGHIJKLMNOPQRSTUVWXYZ[.]^_`abcdefghijklmnopqrstuvwxyz{|}~................................................................................................................................."
	local string result = ""
	local integer remainingValue = this_57
	local integer byteno = 0
	local integer charValue
	loop
		exitwhen byteno > 3
		set charValue = ModuloInteger(remainingValue, 256)
		set remainingValue = remainingValue / 256
		set result = SubString(charMap, charValue, charValue + 1) + result
		set byteno = byteno + 1
	endloop
	return result
endfunction

function Tooltip_showDirect takes integer this_57, player p_2, string wurstStackTrace returns nothing
=======
function Tooltip_showDirect takes integer this_58, player p_2, string wurstStackTrace returns nothing
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
	local integer temp = Tooltip_dummyTip
	local integer clVar
	local integer tempIndex
	local real tempTupleSelectionResult_1
	local real temp_tempTupleSelectionResult_1
	local real temp_tempTupleSelectionResult_2
	local integer tempIndex_2
	local real tempTupleSelectionResult_2
	local real temp_tempTupleSelectionResult_1_2
	local real temp_tempTupleSelectionResult_2_2
	local integer temp_2
	local real temp_3
	local integer temp_4
	if GetLocalPlayer() == p_2 then
<<<<<<< HEAD
		set temp = Tooltip_id[this_57]
	endif
	set temp_4 = this_57
	set temp_2 = temp
	set tempIndex = this_57
=======
		set temp = Tooltip_id[this_58]
	endif
	set temp_4 = this_58
	set temp_2 = temp
	set tempIndex = this_58
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
	set temp_tempTupleSelectionResult_1 = Tooltip_realPos[tempIndex]
	set temp_tempTupleSelectionResult_2 = Tooltip_realPos_2[tempIndex]
	set tempTupleSelectionResult_1 = temp_tempTupleSelectionResult_1
	set temp_3 = tempTupleSelectionResult_1
<<<<<<< HEAD
	set tempIndex_2 = this_57
=======
	set tempIndex_2 = this_58
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
	set temp_tempTupleSelectionResult_1_2 = Tooltip_realPos[tempIndex_2]
	set temp_tempTupleSelectionResult_2_2 = Tooltip_realPos_2[tempIndex_2]
	set tempTupleSelectionResult_2 = temp_tempTupleSelectionResult_2_2
	set Tooltip_d[temp_4] = CreateDestructable(temp_2, temp_3, tempTupleSelectionResult_2, 0., 8., 0)
<<<<<<< HEAD
	call print("ID: " + int_asFourchar(temp))
	set clVar = alloc_Closure()
	set this_54[clVar] = this_57
	call doAfter(0.15, clVar, "\n   ToolTip, line 25" + wurstStackTrace)
endfunction

function ImageIterator_onDestroy takes integer this_57 returns nothing
=======
	set clVar = alloc_Closure()
	set this_54[clVar] = this_58
	call doAfter(0.15, clVar, "\n   ToolTip, line 24" + wurstStackTrace)
endfunction

function ImageIterator_onDestroy takes integer this_58 returns nothing
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
endfunction

function dealloc_ImageIterator takes integer obj, string wurstStackTrace returns nothing
	if ImageIterator_typeId[obj] == 0 then
		call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Double free: object of type ImageIterator" + wurstStackTrace)
		call I2S(1 / 0)
	else
		set ImageIterator_nextFree[ImageIterator_firstFree] = obj
		set ImageIterator_firstFree = ImageIterator_firstFree + 1
		set ImageIterator_typeId[obj] = 0
	endif
endfunction

<<<<<<< HEAD
function destroyImageIterator takes integer this_57, string wurstStackTrace returns nothing
	call ImageIterator_onDestroy(this_57)
	call dealloc_ImageIterator(this_57, "\n   ImageList, line 37" + wurstStackTrace)
endfunction

function dispatch_ImageIterator_destroyImageIterator takes integer this_57, string wurstStackTrace returns nothing
	if ImageIterator_typeId[this_57] == 0 then
		if this_57 == 0 then
=======
function destroyImageIterator takes integer this_58, string wurstStackTrace returns nothing
	call ImageIterator_onDestroy(this_58)
	call dealloc_ImageIterator(this_58, "\n   ImageList, line 37" + wurstStackTrace)
endfunction

function dispatch_ImageIterator_destroyImageIterator takes integer this_58, string wurstStackTrace returns nothing
	if ImageIterator_typeId[this_58] == 0 then
		if this_58 == 0 then
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling ImageIterator.destroyImageIterator" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called ImageIterator.destroyImageIterator on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
<<<<<<< HEAD
	call destroyImageIterator(this_57, "\n   ImageList, line 37" + wurstStackTrace)
endfunction

function ImageIterator_close takes integer this_57, string wurstStackTrace returns nothing
	call dispatch_ImageIterator_destroyImageIterator(this_57, "\n   ImageList, line 52" + wurstStackTrace)
endfunction

function dispatch_ImageIterator_close takes integer this_57, string wurstStackTrace returns nothing
	if ImageIterator_typeId[this_57] == 0 then
		if this_57 == 0 then
=======
	call destroyImageIterator(this_58, "\n   ImageList, line 37" + wurstStackTrace)
endfunction

function ImageIterator_close takes integer this_58, string wurstStackTrace returns nothing
	call dispatch_ImageIterator_destroyImageIterator(this_58, "\n   ImageList, line 52" + wurstStackTrace)
endfunction

function dispatch_ImageIterator_close takes integer this_58, string wurstStackTrace returns nothing
	if ImageIterator_typeId[this_58] == 0 then
		if this_58 == 0 then
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling ImageIterator.close" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called ImageIterator.close on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
<<<<<<< HEAD
	call ImageIterator_close(this_57, "\n   ImageList, line 51" + wurstStackTrace)
endfunction

function ImageIterator_hasNext takes integer this_57 returns boolean
	return ImageIterator_pos[this_57] != 0
endfunction

function dispatch_ImageIterator_hasNext takes integer this_57, string wurstStackTrace returns boolean
	local boolean hasNext_result
	if ImageIterator_typeId[this_57] == 0 then
		if this_57 == 0 then
=======
	call ImageIterator_close(this_58, "\n   ImageList, line 51" + wurstStackTrace)
endfunction

function ImageIterator_hasNext takes integer this_58 returns boolean
	return ImageIterator_pos[this_58] != 0
endfunction

function dispatch_ImageIterator_hasNext takes integer this_58, string wurstStackTrace returns boolean
	local boolean hasNext_result
	if ImageIterator_typeId[this_58] == 0 then
		if this_58 == 0 then
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling ImageIterator.hasNext" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called ImageIterator.hasNext on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
<<<<<<< HEAD
	set hasNext_result = ImageIterator_hasNext(this_57)
	return hasNext_result
endfunction

function ImageIterator_next takes integer this_57 returns image
	local image img = ListImage_img[ImageIterator_pos[this_57]]
	set ImageIterator_pos[this_57] = ListImage_next[ImageIterator_pos[this_57]]
=======
	set hasNext_result = ImageIterator_hasNext(this_58)
	return hasNext_result
endfunction

function ImageIterator_next takes integer this_58 returns image
	local image img = ListImage_img[ImageIterator_pos[this_58]]
	set ImageIterator_pos[this_58] = ListImage_next[ImageIterator_pos[this_58]]
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
	set ImageIterator_nexttempReturn = img
	set img = null
	return ImageIterator_nexttempReturn
endfunction

<<<<<<< HEAD
function dispatch_ImageIterator_next takes integer this_57, string wurstStackTrace returns image
	local image next_result
	if ImageIterator_typeId[this_57] == 0 then
		if this_57 == 0 then
=======
function dispatch_ImageIterator_next takes integer this_58, string wurstStackTrace returns image
	local image next_result
	if ImageIterator_typeId[this_58] == 0 then
		if this_58 == 0 then
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling ImageIterator.next" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called ImageIterator.next on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
<<<<<<< HEAD
	set next_result = ImageIterator_next(this_57)
=======
	set next_result = ImageIterator_next(this_58)
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
	set dispatch_ImageIterator_nexttempReturn = next_result
	set next_result = null
	return dispatch_ImageIterator_nexttempReturn
endfunction

function alloc_ImageIterator takes nothing returns integer
<<<<<<< HEAD
	local integer this_57
	if ImageIterator_firstFree == 0 then
		set ImageIterator_maxIndex = ImageIterator_maxIndex + 1
		set this_57 = ImageIterator_maxIndex
	else
		set ImageIterator_firstFree = ImageIterator_firstFree - 1
		set this_57 = ImageIterator_nextFree[ImageIterator_firstFree]
	endif
	set ImageIterator_typeId[this_57] = 822
	return this_57
endfunction

function construct_ImageIterator takes integer this_57, integer start returns nothing
	set ImageIterator_pos[this_57] = start
endfunction

function new_ImageIterator takes integer start returns integer
	local integer this_57 = alloc_ImageIterator()
	call construct_ImageIterator(this_57, start)
	return this_57
endfunction

function ImageList_iterator takes integer this_57 returns integer
	return new_ImageIterator(ImageList_first[this_57])
endfunction

function dispatch_ImageList_iterator takes integer this_57, string wurstStackTrace returns integer
	local integer iterator_result
	if ImageList_typeId_2[this_57] == 0 then
		if this_57 == 0 then
=======
	local integer this_58
	if ImageIterator_firstFree == 0 then
		set ImageIterator_maxIndex = ImageIterator_maxIndex + 1
		set this_58 = ImageIterator_maxIndex
	else
		set ImageIterator_firstFree = ImageIterator_firstFree - 1
		set this_58 = ImageIterator_nextFree[ImageIterator_firstFree]
	endif
	set ImageIterator_typeId[this_58] = 821
	return this_58
endfunction

function construct_ImageIterator takes integer this_58, integer start returns nothing
	set ImageIterator_pos[this_58] = start
endfunction

function new_ImageIterator takes integer start returns integer
	local integer this_58 = alloc_ImageIterator()
	call construct_ImageIterator(this_58, start)
	return this_58
endfunction

function ImageList_iterator takes integer this_58 returns integer
	return new_ImageIterator(ImageList_first[this_58])
endfunction

function dispatch_ImageList_iterator takes integer this_58, string wurstStackTrace returns integer
	local integer iterator_result
	if ImageList_typeId_2[this_58] == 0 then
		if this_58 == 0 then
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling ImageList.iterator" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called ImageList.iterator on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
<<<<<<< HEAD
	set iterator_result = ImageList_iterator(this_57)
	return iterator_result
endfunction

function LLIterator_onDestroy takes integer this_57 returns nothing
=======
	set iterator_result = ImageList_iterator(this_58)
	return iterator_result
endfunction

function LLIterator_onDestroy takes integer this_58 returns nothing
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
endfunction

function dealloc_LLIterator takes integer obj, string wurstStackTrace returns nothing
	if LLIterator_typeId[obj] == 0 then
		call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Double free: object of type LLIterator" + wurstStackTrace)
		call I2S(1 / 0)
	else
		set LLIterator_nextFree[LLIterator_firstFree] = obj
		set LLIterator_firstFree = LLIterator_firstFree + 1
		set LLIterator_typeId[obj] = 0
	endif
endfunction

<<<<<<< HEAD
function destroyLLIterator takes integer this_57, string wurstStackTrace returns nothing
	call LLIterator_onDestroy(this_57)
	call dealloc_LLIterator(this_57, "\n   LinkedList, line 142" + wurstStackTrace)
endfunction

function dispatch_LLIterator_destroyLLIterator takes integer this_57, string wurstStackTrace returns nothing
	if LLIterator_typeId[this_57] == 0 then
		if this_57 == 0 then
=======
function destroyLLIterator takes integer this_58, string wurstStackTrace returns nothing
	call LLIterator_onDestroy(this_58)
	call dealloc_LLIterator(this_58, "\n   LinkedList, line 142" + wurstStackTrace)
endfunction

function dispatch_LLIterator_destroyLLIterator takes integer this_58, string wurstStackTrace returns nothing
	if LLIterator_typeId[this_58] == 0 then
		if this_58 == 0 then
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling LLIterator.destroyLLIterator" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called LLIterator.destroyLLIterator on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
<<<<<<< HEAD
	call destroyLLIterator(this_57, "\n   LinkedList, line 142" + wurstStackTrace)
endfunction

function LLIterator_close takes integer this_57, string wurstStackTrace returns nothing
	call dispatch_LLIterator_destroyLLIterator(this_57, "\n   LinkedList, line 167" + wurstStackTrace)
endfunction

function dispatch_LLIterator_close takes integer this_57, string wurstStackTrace returns nothing
	if LLIterator_typeId[this_57] == 0 then
		if this_57 == 0 then
=======
	call destroyLLIterator(this_58, "\n   LinkedList, line 142" + wurstStackTrace)
endfunction

function LLIterator_close takes integer this_58, string wurstStackTrace returns nothing
	call dispatch_LLIterator_destroyLLIterator(this_58, "\n   LinkedList, line 167" + wurstStackTrace)
endfunction

function dispatch_LLIterator_close takes integer this_58, string wurstStackTrace returns nothing
	if LLIterator_typeId[this_58] == 0 then
		if this_58 == 0 then
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling LLIterator.close" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called LLIterator.close on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
<<<<<<< HEAD
	call LLIterator_close(this_57, "\n   LinkedList, line 166" + wurstStackTrace)
endfunction

function LLIterator_hasNext takes integer this_57 returns boolean
	return LLEntry_next[LLIterator_current[this_57]] != LLIterator_dummy[this_57]
endfunction

function dispatch_LLIterator_hasNext takes integer this_57, string wurstStackTrace returns boolean
	local boolean hasNext_result
	if LLIterator_typeId[this_57] == 0 then
		if this_57 == 0 then
=======
	call LLIterator_close(this_58, "\n   LinkedList, line 166" + wurstStackTrace)
endfunction

function LLIterator_hasNext takes integer this_58 returns boolean
	return LLEntry_next[LLIterator_current[this_58]] != LLIterator_dummy[this_58]
endfunction

function dispatch_LLIterator_hasNext takes integer this_58, string wurstStackTrace returns boolean
	local boolean hasNext_result
	if LLIterator_typeId[this_58] == 0 then
		if this_58 == 0 then
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling LLIterator.hasNext" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called LLIterator.hasNext on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
<<<<<<< HEAD
	set hasNext_result = LLIterator_hasNext(this_57)
	return hasNext_result
endfunction

function LLIterator_next takes integer this_57 returns integer
	set LLIterator_current[this_57] = LLEntry_next[LLIterator_current[this_57]]
	return LLEntry_elem[LLIterator_current[this_57]]
endfunction

function dispatch_LLIterator_next takes integer this_57, string wurstStackTrace returns integer
	local integer next_result
	if LLIterator_typeId[this_57] == 0 then
		if this_57 == 0 then
=======
	set hasNext_result = LLIterator_hasNext(this_58)
	return hasNext_result
endfunction

function LLIterator_next takes integer this_58 returns integer
	set LLIterator_current[this_58] = LLEntry_next[LLIterator_current[this_58]]
	return LLEntry_elem[LLIterator_current[this_58]]
endfunction

function dispatch_LLIterator_next takes integer this_58, string wurstStackTrace returns integer
	local integer next_result
	if LLIterator_typeId[this_58] == 0 then
		if this_58 == 0 then
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling LLIterator.next" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called LLIterator.next on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
<<<<<<< HEAD
	set next_result = LLIterator_next(this_57)
=======
	set next_result = LLIterator_next(this_58)
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
	return next_result
endfunction

function alloc_LLIterator takes nothing returns integer
<<<<<<< HEAD
	local integer this_57
	if LLIterator_firstFree == 0 then
		set LLIterator_maxIndex = LLIterator_maxIndex + 1
		set this_57 = LLIterator_maxIndex
	else
		set LLIterator_firstFree = LLIterator_firstFree - 1
		set this_57 = LLIterator_nextFree[LLIterator_firstFree]
	endif
	set LLIterator_typeId[this_57] = 4
	return this_57
endfunction

function construct_LLIterator takes integer this_57, integer dummy returns nothing
	set LLIterator_dummy[this_57] = dummy
	set LLIterator_current[this_57] = dummy
endfunction

function new_LLIterator takes integer dummy returns integer
	local integer this_57 = alloc_LLIterator()
	call construct_LLIterator(this_57, dummy)
	return this_57
endfunction

function LinkedList_iterator takes integer this_57 returns integer
	return new_LLIterator(LinkedList_dummy[this_57])
endfunction

function dispatch_LinkedList_iterator takes integer this_57, string wurstStackTrace returns integer
	local integer iterator_result
	if LinkedList_typeId[this_57] == 0 then
		if this_57 == 0 then
=======
	local integer this_58
	if LLIterator_firstFree == 0 then
		set LLIterator_maxIndex = LLIterator_maxIndex + 1
		set this_58 = LLIterator_maxIndex
	else
		set LLIterator_firstFree = LLIterator_firstFree - 1
		set this_58 = LLIterator_nextFree[LLIterator_firstFree]
	endif
	set LLIterator_typeId[this_58] = 4
	return this_58
endfunction

function construct_LLIterator takes integer this_58, integer dummy returns nothing
	set LLIterator_dummy[this_58] = dummy
	set LLIterator_current[this_58] = dummy
endfunction

function new_LLIterator takes integer dummy returns integer
	local integer this_58 = alloc_LLIterator()
	call construct_LLIterator(this_58, dummy)
	return this_58
endfunction

function LinkedList_iterator takes integer this_58 returns integer
	return new_LLIterator(LinkedList_dummy[this_58])
endfunction

function dispatch_LinkedList_iterator takes integer this_58, string wurstStackTrace returns integer
	local integer iterator_result
	if LinkedList_typeId[this_58] == 0 then
		if this_58 == 0 then
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling LinkedList.iterator" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called LinkedList.iterator on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
<<<<<<< HEAD
	set iterator_result = LinkedList_iterator(this_57)
	return iterator_result
endfunction

function TextSplat_append_2 takes integer this_57, string text, player p_2, string wurstStackTrace returns nothing
	call dispatch_TextSplat_append(this_57, text, 0, 0, 0, TextSplat_DISABLE_COLOR_ALPHA, p_2, "\n   TextSplat, line 99" + wurstStackTrace)
endfunction

function dispatch_TextSplat_append_2 takes integer this_57, string text, player p_2, string wurstStackTrace returns nothing
	if TextSplat_typeId[this_57] == 0 then
		if this_57 == 0 then
=======
	set iterator_result = LinkedList_iterator(this_58)
	return iterator_result
endfunction

function TextSplat_append_2 takes integer this_58, string text, player p_2, string wurstStackTrace returns nothing
	call dispatch_TextSplat_append(this_58, text, 0, 0, 0, TextSplat_DISABLE_COLOR_ALPHA, p_2, "\n   TextSplat, line 99" + wurstStackTrace)
endfunction

function dispatch_TextSplat_append_2 takes integer this_58, string text, player p_2, string wurstStackTrace returns nothing
	if TextSplat_typeId[this_58] == 0 then
		if this_58 == 0 then
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling TextSplat.append" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called TextSplat.append on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
<<<<<<< HEAD
	call TextSplat_append_2(this_57, text, p_2, "\n   TextSplat, line 97" + wurstStackTrace)
endfunction

function cyc_cyc_dispatch_Widget_showDirect takes integer funcChoice, integer funcChoice_2, integer this_57, player p_2, string wurstStackTrace returns nothing
=======
	call TextSplat_append_2(this_58, text, p_2, "\n   TextSplat, line 97" + wurstStackTrace)
endfunction

function cyc_cyc_cyc_dispatch_Widget_showDirect takes integer funcChoice, integer funcChoice_2, integer funcChoice_3, integer this_58, player p_2, string wurstStackTrace returns nothing
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
	local integer wurst__iterator1
	local image img
	local integer wurst__iterator2
	local integer w_2
	if funcChoice == 0 then
		if funcChoice_2 == 0 then
<<<<<<< HEAD
			if Widget_typeId[this_57] == 0 then
				if this_57 == 0 then
					call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Widget.showDirect" + wurstStackTrace)
					call I2S(1 / 0)
				else
					call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Widget.showDirect on invalid object." + wurstStackTrace)
					call I2S(1 / 0)
				endif
			endif
			if Widget_typeId[this_57] <= 819 then
				if Widget_typeId[this_57] <= 810 then
					if Widget_typeId[this_57] <= 802 then
						call cyc_cyc_dispatch_Widget_showDirect(0, 2, this_57, p_2, "\n   Menu, line 27" + wurstStackTrace)
					else
						call Tooltip_showDirect(this_57, p_2, "\n   Menu, line 27" + wurstStackTrace)
					endif
				elseif Widget_typeId[this_57] <= 818 then
					call TextBox_showDirect(this_57, p_2, "\n   Menu, line 27" + wurstStackTrace)
				else
					call ImageEx_showDirect(this_57, p_2)
				endif
			elseif Widget_typeId[this_57] <= 829 then
				if Widget_typeId[this_57] <= 823 then
					call cyc_cyc_dispatch_Widget_showDirect(1, this_57, 0, p_2, "\n   Menu, line 27" + wurstStackTrace)
				else
					call Model_showDirect(this_57, p_2)
				endif
			elseif Widget_typeId[this_57] <= 831 then
				call Icon_showDirect(this_57, p_2, "\n   Menu, line 27" + wurstStackTrace)
			else
				call cyc_cyc_dispatch_Widget_showDirect(0, 1, this_57, p_2, "\n   Menu, line 27" + wurstStackTrace)
			endif
		elseif funcChoice_2 == 1 then
			call dispatch_TextSplat_append_2(Button_splat[this_57], Button_name[this_57], p_2, "\n   Button, line 25" + wurstStackTrace)
			call cyc_cyc_dispatch_Widget_showDirect(0, 2, this_57, p_2, "\n   Button, line 26" + wurstStackTrace)
		elseif funcChoice_2 == 2 then
			call cyc_cyc_dispatch_Widget_showDirect(0, 0, Observable_content[this_57], p_2, "\n   Menu, line 55" + wurstStackTrace)
		endif
	elseif funcChoice == 1 then
		if GetLocalPlayer() == p_2 then
			set wurst__iterator1 = dispatch_ImageList_iterator(Pane_list[funcChoice_2], "\n   Pane, line 90" + wurstStackTrace)
			loop
				exitwhen  not dispatch_ImageIterator_hasNext(wurst__iterator1, "\n   Pane, line 90" + wurstStackTrace)
				set img = dispatch_ImageIterator_next(wurst__iterator1, "\n   Pane, line 90" + wurstStackTrace)
				call image_show_2(img)
			endloop
			call dispatch_ImageIterator_close(wurst__iterator1, "\n   Pane, line 90" + wurstStackTrace)
			set wurst__iterator2 = dispatch_LinkedList_iterator(Pane_content[funcChoice_2], "\n   Pane, line 92" + wurstStackTrace)
			loop
				exitwhen  not dispatch_LLIterator_hasNext(wurst__iterator2, "\n   Pane, line 92" + wurstStackTrace)
				set w_2 = dispatch_LLIterator_next(wurst__iterator2, "\n   Pane, line 92" + wurstStackTrace)
				call cyc_cyc_dispatch_Widget_showDirect(0, 0, w_2, p_2, "\n   Pane, line 93" + wurstStackTrace)
			endloop
			call dispatch_LLIterator_close(wurst__iterator2, "\n   Pane, line 92" + wurstStackTrace)
		endif
=======
			if funcChoice_3 == 0 then
				if Widget_typeId[this_58] == 0 then
					if this_58 == 0 then
						call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Widget.showDirect" + wurstStackTrace)
						call I2S(1 / 0)
					else
						call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Widget.showDirect on invalid object." + wurstStackTrace)
						call I2S(1 / 0)
					endif
				endif
				if Widget_typeId[this_58] <= 818 then
					if Widget_typeId[this_58] <= 809 then
						if Widget_typeId[this_58] <= 801 then
							call cyc_cyc_cyc_dispatch_Widget_showDirect(0, 1, this_58, 0, p_2, "\n   Menu, line 27" + wurstStackTrace)
						else
							call Tooltip_showDirect(this_58, p_2, "\n   Menu, line 27" + wurstStackTrace)
						endif
					elseif Widget_typeId[this_58] <= 817 then
						call TextBox_showDirect(this_58, p_2, "\n   Menu, line 27" + wurstStackTrace)
					else
						call ImageEx_showDirect(this_58, p_2)
					endif
				elseif Widget_typeId[this_58] <= 828 then
					if Widget_typeId[this_58] <= 822 then
						call cyc_cyc_cyc_dispatch_Widget_showDirect(0, 0, 1, this_58, p_2, "\n   Menu, line 27" + wurstStackTrace)
					else
						call Model_showDirect(this_58, p_2)
					endif
				elseif Widget_typeId[this_58] <= 830 then
					call Icon_showDirect(this_58, p_2, "\n   Menu, line 27" + wurstStackTrace)
				else
					call cyc_cyc_cyc_dispatch_Widget_showDirect(1, this_58, 0, 0, p_2, "\n   Menu, line 27" + wurstStackTrace)
				endif
			elseif funcChoice_3 == 1 then
				if GetLocalPlayer() == p_2 then
					set wurst__iterator1 = dispatch_ImageList_iterator(Pane_list[this_58], "\n   Pane, line 89" + wurstStackTrace)
					loop
						exitwhen  not dispatch_ImageIterator_hasNext(wurst__iterator1, "\n   Pane, line 89" + wurstStackTrace)
						set img = dispatch_ImageIterator_next(wurst__iterator1, "\n   Pane, line 89" + wurstStackTrace)
						call image_show_2(img)
					endloop
					call dispatch_ImageIterator_close(wurst__iterator1, "\n   Pane, line 89" + wurstStackTrace)
					set wurst__iterator2 = dispatch_LinkedList_iterator(Pane_content[this_58], "\n   Pane, line 91" + wurstStackTrace)
					loop
						exitwhen  not dispatch_LLIterator_hasNext(wurst__iterator2, "\n   Pane, line 91" + wurstStackTrace)
						set w_2 = dispatch_LLIterator_next(wurst__iterator2, "\n   Pane, line 91" + wurstStackTrace)
						call cyc_cyc_cyc_dispatch_Widget_showDirect(0, 0, 0, w_2, p_2, "\n   Pane, line 92" + wurstStackTrace)
					endloop
					call dispatch_LLIterator_close(wurst__iterator2, "\n   Pane, line 91" + wurstStackTrace)
				endif
			endif
		elseif funcChoice_2 == 1 then
			call cyc_cyc_cyc_dispatch_Widget_showDirect(0, 0, 0, Observable_content[funcChoice_3], p_2, "\n   Menu, line 55" + wurstStackTrace)
		endif
	elseif funcChoice == 1 then
		call dispatch_TextSplat_append_2(Button_splat[funcChoice_2], Button_name[funcChoice_2], p_2, "\n   Button, line 25" + wurstStackTrace)
		call cyc_cyc_cyc_dispatch_Widget_showDirect(0, 1, funcChoice_2, 0, p_2, "\n   Button, line 26" + wurstStackTrace)
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
	endif
	set img = null
endfunction

<<<<<<< HEAD
function Window_showContent takes integer this_57, player p_2, string wurstStackTrace returns nothing
	local integer wurst__iterator0 = dispatch_LinkedList_iterator(Window_content[this_57], "\n   Menu, line 169" + wurstStackTrace)
=======
function Window_showContent takes integer this_58, player p_2, string wurstStackTrace returns nothing
	local integer wurst__iterator0 = dispatch_LinkedList_iterator(Window_content[this_58], "\n   Menu, line 169" + wurstStackTrace)
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
	local integer g
	loop
		exitwhen  not dispatch_LLIterator_hasNext(wurst__iterator0, "\n   Menu, line 169" + wurstStackTrace)
		set g = dispatch_LLIterator_next(wurst__iterator0, "\n   Menu, line 169" + wurstStackTrace)
<<<<<<< HEAD
		call cyc_cyc_dispatch_Widget_showDirect(0, 0, g, p_2, "\n   Menu, line 170" + wurstStackTrace)
=======
		call cyc_cyc_cyc_dispatch_Widget_showDirect(0, 0, 0, g, p_2, "\n   Menu, line 170" + wurstStackTrace)
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
	endloop
	call dispatch_LLIterator_close(wurst__iterator0, "\n   Menu, line 169" + wurstStackTrace)
endfunction

<<<<<<< HEAD
function dispatch_Window_showContent takes integer this_57, player p_2, string wurstStackTrace returns nothing
	if Window_typeId[this_57] == 0 then
		if this_57 == 0 then
=======
function dispatch_Window_showContent takes integer this_58, player p_2, string wurstStackTrace returns nothing
	if Window_typeId[this_58] == 0 then
		if this_58 == 0 then
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Window.showContent" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Window.showContent on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
<<<<<<< HEAD
	if Window_typeId[this_57] <= 805 then
		call Window_showContent(this_57, p_2, "\n   Menu, line 168" + wurstStackTrace)
	else
		call Window_showContent(this_57, p_2, "\n   Menu, line 168" + wurstStackTrace)
	endif
endfunction

function handle_getHandleId takes handle this_57 returns integer
	return GetHandleId(this_57)
=======
	if Window_typeId[this_58] <= 804 then
		call Window_showContent(this_58, p_2, "\n   Menu, line 168" + wurstStackTrace)
	else
		call Window_showContent(this_58, p_2, "\n   Menu, line 168" + wurstStackTrace)
	endif
endfunction

function handle_getHandleId takes handle this_58 returns integer
	return GetHandleId(this_58)
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
endfunction

function playerToIndex takes player object returns integer
	return handle_getHandleId(object)
endfunction

function WindowManager_openWindow takes integer w_2, player p_2, string wurstStackTrace returns nothing
	call dispatch_HashMap_put(Window_wantToClose[w_2], playerToIndex(p_2), booleanToIndex(false), "\n   Menu, line 125" + wurstStackTrace)
	call dispatch_Window_showContent(w_2, p_2, "\n   Menu, line 126" + wurstStackTrace)
	call dispatch_Stack_push(WindowManager_currentWindow[GetPlayerId(p_2)], w_2, "\n   Menu, line 127" + wurstStackTrace)
endfunction

function afterPreload takes string wurstStackTrace returns nothing
<<<<<<< HEAD
	call WindowManager_openWindow(GameStart_shopWindow, Player(0), "\n   GameStart, line 739" + wurstStackTrace)
endfunction

function closure_impl_27 takes integer this_57, integer i, string wurstStackTrace returns nothing
	call afterPreload("\n   GameStart, line 183" + wurstStackTrace)
endfunction

function LinkedListModule_remove takes integer this_57 returns nothing
	set LinkedListModule_size = LinkedListModule_size - 1
	if this_57 != LinkedListModule_first then
		set LinkedListModule_next[LinkedListModule_prev[this_57]] = LinkedListModule_next[this_57]
	endif
	if this_57 != LinkedListModule_last then
		set LinkedListModule_prev[LinkedListModule_next[this_57]] = LinkedListModule_prev[this_57]
	endif
	if this_57 == LinkedListModule_last then
		set LinkedListModule_last = LinkedListModule_prev[this_57]
	endif
	if this_57 == LinkedListModule_first then
		set LinkedListModule_first = LinkedListModule_next[this_57]
	endif
endfunction

function dispatch_Dot_remove takes integer this_57, string wurstStackTrace returns nothing
	if Dot_typeId[this_57] == 0 then
		if this_57 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Dot.remove" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Dot.remove on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call LinkedListModule_remove(this_57)
endfunction

function Dot_onDestroy takes integer this_57, string wurstStackTrace returns nothing
	call dispatch_Action_destroyAction(Dot_a[this_57], "\n   Dot, line 40" + wurstStackTrace)
	call timer_release(Dot_t[this_57], "\n   Dot, line 41" + wurstStackTrace)
	call dispatch_LinkedList_remove(Unit_allDots[Dot_u[this_57]], this_57, "\n   Dot, line 42" + wurstStackTrace)
	call dispatch_Dot_remove(this_57, "\n   LinkedListModule, line 44" + wurstStackTrace)
endfunction

function dealloc_Dot takes integer obj, string wurstStackTrace returns nothing
	if Dot_typeId[obj] == 0 then
		call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Double free: object of type Dot" + wurstStackTrace)
		call I2S(1 / 0)
	else
		set Dot_firstFree = Dot_firstFree + 1
		set Dot_typeId[obj] = 0
	endif
endfunction

function destroyDot takes integer this_57, string wurstStackTrace returns nothing
	call Dot_onDestroy(this_57, "\n   Dot, line 39" + wurstStackTrace)
	call dealloc_Dot(this_57, "\n   Dot, line 39" + wurstStackTrace)
endfunction

function dispatch_Dot_destroyDot takes integer this_57, string wurstStackTrace returns nothing
	if Dot_typeId[this_57] == 0 then
		if this_57 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Dot.destroyDot" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Dot.destroyDot on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call destroyDot(this_57, "\n   Dot, line 5" + wurstStackTrace)
endfunction

function closure_impl_28 takes integer this_57, integer data, string wurstStackTrace returns nothing
	call dispatch_Dot_destroyDot(this[this_57], "\n   Dot, line 23" + wurstStackTrace)
endfunction

function dispatch_Action_fire takes integer this_57, integer d_2, string wurstStackTrace returns nothing
	if Action_typeId[this_57] == 0 then
		if this_57 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Action.fire" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Action.fire on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	if Action_typeId[this_57] <= 690 then
		if Action_typeId[this_57] <= 687 then
			call closure_impl_28(this_57, d_2, "\n   CustomClosureEvents, line 66" + wurstStackTrace)
		else
			call closure_impl_26(this_57, d_2, "\n   CustomClosureEvents, line 66" + wurstStackTrace)
		endif
	else
		call closure_impl_27(this_57, d_2, "\n   CustomClosureEvents, line 66" + wurstStackTrace)
	endif
endfunction

function Event_stop takes integer this_57, integer d_2 returns boolean
	return false
endfunction

function OnDamageEvent_stop takes integer this_57, integer data returns boolean
	return OnDamageData_stop[data]
endfunction

function SpellEvent_stop takes integer this_57, integer data returns boolean
	return  not SpellData_spellSuccess[data]
endfunction

function dispatch_Event_stop takes integer this_57, integer d_2, string wurstStackTrace returns boolean
	local boolean stop_result
	if Event_typeId[this_57] == 0 then
		if this_57 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Event.stop" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Event.stop on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	if Event_typeId[this_57] <= 789 then
		if Event_typeId[this_57] <= 787 then
			if Event_typeId[this_57] <= 682 then
				set stop_result = Event_stop(this_57, d_2)
			else
				set stop_result = Event_stop(this_57, d_2)
			endif
		else
			set stop_result = OnDamageEvent_stop(this_57, d_2)
		endif
	elseif Event_typeId[this_57] <= 792 then
		if Event_typeId[this_57] <= 791 then
			set stop_result = SpellEvent_stop(this_57, d_2)
		else
			set stop_result = Event_stop(this_57, d_2)
		endif
	else
		set stop_result = Event_stop(this_57, d_2)
	endif
	return stop_result
endfunction

function Event_callActions takes integer this_57, integer d_2, string wurstStackTrace returns nothing
	local integer buffer = Event_first[this_57]
	if Event_checkData[this_57] then
		loop
			exitwhen  not (buffer != 0)
			if dispatch_Event_stop(this_57, d_2, "\n   CustomClosureEvents, line 43" + wurstStackTrace) then
				return
			endif
			call dispatch_Action_fire(buffer, d_2, "\n   CustomClosureEvents, line 45" + wurstStackTrace)
			set buffer = Action_next[buffer]
		endloop
	else
		loop
			exitwhen  not (buffer != 0)
			call dispatch_Action_fire(buffer, d_2, "\n   CustomClosureEvents, line 49" + wurstStackTrace)
			set buffer = Action_next[buffer]
		endloop
	endif
endfunction

function UnitEvent_fire takes integer this_57, integer whichUnit, string wurstStackTrace returns nothing
	call Event_callActions(this_57, whichUnit, "\n   UnitEvents, line 93" + wurstStackTrace)
endfunction

function dispatch_UnitEvent_fire takes integer this_57, integer whichUnit, string wurstStackTrace returns nothing
	if Event_typeId[this_57] == 0 then
		if this_57 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling UnitEvent.fire" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called UnitEvent.fire on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call UnitEvent_fire(this_57, whichUnit, "\n   UnitEvents, line 92" + wurstStackTrace)
endfunction

function group_close takes group this_57 returns nothing
	call DestroyGroup(this_57)
endfunction

function group_hasNext takes group this_57 returns boolean
	return FirstOfGroup(this_57) != null
endfunction

function group_iterator takes group this_57 returns group
	set bj_groupAddGroupDest = CreateGroup()
	call ForGroup(this_57, ref_function_GroupAddGroupEnum_2)
	return bj_groupAddGroupDest
endfunction

function group_next takes group this_57 returns unit
	local unit u_2 = FirstOfGroup(this_57)
	call GroupRemoveUnit(this_57, u_2)
	set group_nexttempReturn = u_2
	set u_2 = null
	return group_nexttempReturn
endfunction

function unit_getX takes unit this_57 returns real
	return GetUnitX(this_57)
endfunction

function unit_getY takes unit this_57 returns real
	return GetUnitY(this_57)
endfunction

function unit_getPos takes unit this_57 returns real
	set unit_getPos_return_x = unit_getX(this_57)
	set unit_getPos_return_y = unit_getY(this_57)
	return unit_getPos_return_x
endfunction

function unit_getUserData takes unit this_57 returns integer
	return GetUnitUserData(this_57)
endfunction

function real_squared takes real this_57 returns real
	return this_57 * this_57
endfunction

function vec2_distToVec takes real this_x, real this_y, real v_x, real v_y returns real
	return SquareRoot(real_squared(v_x - this_x) + real_squared(v_y - this_y))
endfunction

function Aura_check takes integer this_57, string wurstStackTrace returns nothing
	local group wurst__iterator0 = group_iterator(Aura_g[this_57])
	local unit gu
	local integer obj
	local group tempGroup
	local unit gu_2
	local integer obj_2
	loop
		exitwhen  not group_hasNext(wurst__iterator0)
		set gu = group_next(wurst__iterator0)
		set obj = unit_getUserData(gu)
		if obj != 0 and vec2_distToVec(unit_getPos(gu), unit_getPos_return_y, unit_getPos(Unit_u[Aura_u[this_57]]), unit_getPos_return_y) > Aura_radius[this_57] then
			call dispatch_UnitEvent_fire(Aura_leave[this_57], obj, "\n   AuraHelper, line 45" + wurstStackTrace)
			call GroupRemoveUnit(Aura_g[this_57], gu)
		endif
	endloop
	call group_close(wurst__iterator0)
	set tempGroup = CreateGroup()
	call MoveRectTo(Aura_r[this_57], unit_getX(Unit_u[Aura_u[this_57]]), unit_getY(Unit_u[Aura_u[this_57]]))
	call GroupEnumUnitsInRect(tempGroup, Aura_r[this_57], Aura_filter[this_57])
	loop
		exitwhen  not group_hasNext(tempGroup)
		set gu_2 = group_next(tempGroup)
		set obj_2 = unit_getUserData(gu_2)
		if obj_2 != 0 and vec2_distToVec(unit_getPos(gu_2), unit_getPos_return_y, unit_getPos(Unit_u[Aura_u[this_57]]), unit_getPos_return_y) <= Aura_radius[this_57] and ( not IsUnitInGroup(gu_2, Aura_g[this_57])) then
			call dispatch_UnitEvent_fire(Aura_enter[this_57], obj_2, "\n   AuraHelper, line 53" + wurstStackTrace)
			call GroupAddUnit(Aura_g[this_57], gu_2)
		endif
	endloop
	call DestroyGroup(tempGroup)
	set wurst__iterator0 = null
	set gu = null
	set tempGroup = null
	set gu_2 = null
endfunction

function dispatch_Aura_check takes integer this_57, string wurstStackTrace returns nothing
	if Aura_typeId[this_57] == 0 then
		if this_57 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Aura.check" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Aura.check on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call Aura_check(this_57, "\n   AuraHelper, line 40" + wurstStackTrace)
endfunction

function Aura_callCheck takes string wurstStackTrace returns nothing
	call dispatch_Aura_check(timer_getData(GetExpiredTimer(), "\n   AuraHelper, line 32" + wurstStackTrace), "\n   AuraHelper, line 32" + wurstStackTrace)
endfunction

function bridge_Aura_callCheck takes nothing returns nothing
	call Aura_callCheck("\n   AuraHelper, line 29")
endfunction

function unit_getState takes unit this_57, unitstate state returns real
	return GetUnitState(this_57, state)
endfunction

function unit_getHP takes unit this_57 returns real
	return unit_getState(this_57, UNIT_STATE_LIFE)
endfunction

function Bar_update takes integer this_57 returns nothing
	local real hp = unit_getHP(Unit_u[Bar_owner[this_57]])
	local real maxHp = GetUnitState(Unit_u[Bar_owner[this_57]], UNIT_STATE_MAX_LIFE)
	local real per = hp / maxHp
	local integer barsGot = roundReal(per * HeroBar_realBarCount) * 2
	local integer shieldBars = roundReal(ShieldList_shieldSum[Unit_shieldList[Bar_owner[this_57]]] / maxHp * HeroBar_realBarCount) * 2
	local integer barsLeft = HeroBar_fakeBarCount - barsGot - shieldBars
	local string hpGot
	local string shield
	local integer manaBarsGot
	local integer manaBarsLeft
	local string manaGot
	local string manaDead
	local string final
	set barsGot = barsGot + barsGot / (Bar_markerDistance[this_57] + 2) * 12
	set hpGot = SubString(Bar_hpFull[this_57], 0, barsGot)
	set shield = SubString(HeroBar_bar, 0, shieldBars)
	set manaBarsGot = roundReal(GetUnitState(Unit_u[Bar_owner[this_57]], UNIT_STATE_MANA) / GetUnitState(Unit_u[Bar_owner[this_57]], UNIT_STATE_MAX_MANA) * HeroBar_realBarCount) * 2
	set manaBarsLeft = HeroBar_fakeBarCount - manaBarsGot
	set manaGot = SubString(HeroBar_bar, 0, manaBarsGot)
	set manaDead = SubString(HeroBar_bar, 0, manaBarsLeft)
	if barsLeft <= 0 then
		set final = hpGot + HeroBar_shieldColor + shield + HeroBar_endColor + "|n" + HeroBar_mpColor + manaGot + HeroBar_endColor + HeroBar_mpColorDead + manaDead + HeroBar_endColor
	else
		set final = hpGot + HeroBar_shieldColor + shield + HeroBar_endColor + HeroBar_hpColorDead + SubString(HeroBar_bar, 0, barsLeft) + HeroBar_endColor + "|n" + HeroBar_mpColor + manaGot + HeroBar_endColor + HeroBar_mpColorDead + manaDead + HeroBar_endColor
	endif
	call SetTextTagText(Bar_tt[this_57], final, 0.01)
endfunction

function dispatch_Bar_update takes integer this_57, string wurstStackTrace returns nothing
	if Bar_typeId[this_57] == 0 then
		if this_57 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Bar.update" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Bar.update on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call Bar_update(this_57)
endfunction

function Bar_updateExDirect takes integer this_57, string wurstStackTrace returns nothing
	local integer i
	local integer temp
	local integer charCount
	set Bar_markerDistance[this_57] = (HeroBar_seperateAt * HeroBar_realBarCount / R2I(GetUnitState(Unit_u[Bar_owner[this_57]], UNIT_STATE_MAX_LIFE)) - 1) * 2
	set Bar_hpFull[this_57] = ""
	set i = 1
	set temp = HeroBar_fakeBarCount / (Bar_markerDistance[this_57] + 2)
	loop
		exitwhen i > temp
		set Bar_hpFull[this_57] = Bar_hpFull[this_57] + SubString(HeroBar_bar, 0, Bar_markerDistance[this_57])
		set Bar_hpFull[this_57] = Bar_hpFull[this_57] + HeroBar_marker
		set i = i + 1
	endloop
	set charCount = HeroBar_fakeBarCount / (Bar_markerDistance[this_57] + 2) * (Bar_markerDistance[this_57] + 2)
	set Bar_hpFull[this_57] = Bar_hpFull[this_57] + SubString(HeroBar_bar, 0, HeroBar_fakeBarCount - charCount)
	call dispatch_Bar_update(this_57, "\n   HeroBar, line 114" + wurstStackTrace)
endfunction

function dispatch_Bar_updateExDirect takes integer this_57, string wurstStackTrace returns nothing
	if Bar_typeId[this_57] == 0 then
		if this_57 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Bar.updateExDirect" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Bar.updateExDirect on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call Bar_updateExDirect(this_57, "\n   HeroBar, line 106" + wurstStackTrace)
endfunction

function Bar_callUpdateEx takes string wurstStackTrace returns nothing
	local timer t = GetExpiredTimer()
	call dispatch_Bar_updateExDirect(timer_getData(t, "\n   HeroBar, line 102" + wurstStackTrace), "\n   HeroBar, line 102" + wurstStackTrace)
	call timer_release(t, "\n   HeroBar, line 103" + wurstStackTrace)
	set t = null
	set t = null
endfunction

function bridge_Bar_callUpdateEx takes nothing returns nothing
	call Bar_callUpdateEx("\n   HeroBar, line 98")
endfunction

function Hero_getBarPos takes integer this_57 returns real
	set Hero_getBarPos_return_x = unit_getX(Unit_u[this_57]) - 55.
	set Hero_getBarPos_return_y = unit_getY(Unit_u[this_57])
	set Hero_getBarPos_return_z = GetUnitFlyHeight(Unit_u[this_57]) + Unit_height[this_57]
	return Hero_getBarPos_return_x
endfunction

function dispatch_Hero_getBarPos takes integer this_57, string wurstStackTrace returns real
	local real getBarPos_result_x
	local real getBarPos_result_y
	local real getBarPos_result_z
	local real temp_getBarPos_result_x
	local real temp_getBarPos_result_y
	local real temp_getBarPos_result_z
	if Unit_typeId[this_57] == 0 then
		if this_57 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Hero.getBarPos" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Hero.getBarPos on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	set temp_getBarPos_result_x = Hero_getBarPos(this_57)
	set temp_getBarPos_result_y = Hero_getBarPos_return_y
	set temp_getBarPos_result_z = Hero_getBarPos_return_z
	set getBarPos_result_x = temp_getBarPos_result_x
	set getBarPos_result_y = temp_getBarPos_result_y
	set getBarPos_result_z = temp_getBarPos_result_z
	set dispatch_Hero_getBarPos_return_x = getBarPos_result_x
	set dispatch_Hero_getBarPos_return_y = getBarPos_result_y
	set dispatch_Hero_getBarPos_return_z = getBarPos_result_z
	return dispatch_Hero_getBarPos_return_x
endfunction

function texttag_setPos takes texttag this_57, real pos_x, real pos_y, real pos_z returns nothing
	call SetTextTagPos(this_57, pos_x, pos_y, pos_z)
endfunction

function Bar_updatePos_2 takes string wurstStackTrace returns nothing
	local integer b = LinkedListModule_first_2
	loop
		exitwhen  not (b != 0)
		if Bar_isVisible[b] then
			call texttag_setPos(Bar_tt[b], dispatch_Hero_getBarPos(Bar_owner[b], "\n   HeroBar, line 71" + wurstStackTrace), dispatch_Hero_getBarPos_return_y, dispatch_Hero_getBarPos_return_z)
		endif
		set b = LinkedListModule_next_2[b]
	endloop
endfunction

function bridge_Bar_updatePos takes nothing returns nothing
	call Bar_updatePos_2("\n   HeroBar, line 29")
endfunction

function texttag_setVisibility takes texttag this_57, boolean flag returns nothing
	call SetTextTagVisibility(this_57, flag)
endfunction

function Bar_updateVision_2 takes string wurstStackTrace returns nothing
	local integer b = LinkedListModule_first_2
	loop
		exitwhen  not (b != 0)
		if Bar_check[b] then
			if IsVisibleToPlayer(unit_getX(Unit_u[Bar_owner[b]]), unit_getY(Unit_u[Bar_owner[b]]), GetLocalPlayer()) then
				set Bar_isVisible[b] = true
				call texttag_setVisibility(Bar_tt[b], true)
			else
				set Bar_isVisible[b] = false
				call texttag_setVisibility(Bar_tt[b], false)
			endif
			call dispatch_Bar_update(b, "\n   HeroBar, line 64" + wurstStackTrace)
			set b = LinkedListModule_next_2[b]
		endif
	endloop
endfunction

function bridge_Bar_updateVision takes nothing returns nothing
	call Bar_updateVision_2("\n   HeroBar, line 30")
endfunction

function unit_addEffect takes unit this_57, string fx, string attachment returns effect
	return AddSpecialEffectTarget(fx, this_57, attachment)
endfunction

function Buff_createEffect takes string wurstStackTrace returns nothing
	local timer t = GetExpiredTimer()
	local integer b = timer_getData(t, "\n   Buff, line 55" + wurstStackTrace)
	if Buff_fxCounter[b] > 0 then
		call DestroyEffect(unit_addEffect(Unit_u[Buff_u[b]], Buff_fxType[b], Buff_attachment[b]))
		set Buff_fxCounter[b] = Buff_fxCounter[b] - 1
	else
		call timer_release(t, "\n   Buff, line 60" + wurstStackTrace)
	endif
	set t = null
endfunction

function bridge_Buff_createEffect takes nothing returns nothing
	call Buff_createEffect("\n   Buff, line 51")
endfunction

function Buff_timerDestroyBuff takes string wurstStackTrace returns nothing
	call dispatch_Buff_destroyBuff(timer_getData(GetExpiredTimer(), "\n   Buff, line 34" + wurstStackTrace), "\n   Buff, line 34" + wurstStackTrace)
endfunction

function bridge_Buff_timerDestroyBuff takes nothing returns nothing
	call Buff_timerDestroyBuff("\n   Buff, line 31")
endfunction

function dispatch_CallbackCounted_call takes integer this_57, integer cb returns nothing
endfunction

function CallbackCounted_onDestroy takes integer this_57, string wurstStackTrace returns nothing
	call timer_release(CallbackCounted_t[this_57], "\n   ClosureTimers, line 127" + wurstStackTrace)
endfunction

function dealloc_CallbackCounted takes integer obj, string wurstStackTrace returns nothing
	if CallbackCounted_typeId[obj] == 0 then
		call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Double free: object of type CallbackCounted" + wurstStackTrace)
		call I2S(1 / 0)
	else
		set CallbackCounted_firstFree = CallbackCounted_firstFree + 1
		set CallbackCounted_typeId[obj] = 0
	endif
endfunction

function destroyCallbackCounted takes integer this_57, string wurstStackTrace returns nothing
	call CallbackCounted_onDestroy(this_57, "\n   ClosureTimers, line 126" + wurstStackTrace)
	call dealloc_CallbackCounted(this_57, "\n   ClosureTimers, line 126" + wurstStackTrace)
endfunction

function dispatch_CallbackCounted_destroyCallbackCounted takes integer this_57, string wurstStackTrace returns nothing
	if CallbackCounted_typeId[this_57] == 0 then
		if this_57 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling CallbackCounted.destroyCallbackCounted" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called CallbackCounted.destroyCallbackCounted on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call destroyCallbackCounted(this_57, "\n   ClosureTimers, line 96" + wurstStackTrace)
endfunction

function CallbackCounted_callAndCount takes integer this_57, string wurstStackTrace returns nothing
	call dispatch_CallbackCounted_call(this_57, this_57)
	set CallbackCounted_count[this_57] = CallbackCounted_count[this_57] - 1
	if CallbackCounted_count[this_57] <= 0 then
		call dispatch_CallbackCounted_destroyCallbackCounted(this_57, "\n   ClosureTimers, line 124" + wurstStackTrace)
	endif
endfunction

function dispatch_CallbackCounted_callAndCount takes integer this_57, string wurstStackTrace returns nothing
	if CallbackCounted_typeId[this_57] == 0 then
		if this_57 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling CallbackCounted.callAndCount" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called CallbackCounted.callAndCount on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call CallbackCounted_callAndCount(this_57, "\n   ClosureTimers, line 120" + wurstStackTrace)
endfunction

function CallbackCounted_staticCallback takes string wurstStackTrace returns nothing
	call dispatch_CallbackCounted_callAndCount(timer_getData(GetExpiredTimer(), "\n   ClosureTimers, line 118" + wurstStackTrace), "\n   ClosureTimers, line 118" + wurstStackTrace)
endfunction

function bridge_CallbackCounted_staticCallback takes nothing returns nothing
	call CallbackCounted_staticCallback("\n   ClosureTimers, line 106")
endfunction

function dispatch_CallbackPeriodic_call takes integer this_57, integer cb returns nothing
endfunction

function CallbackPeriodic_staticCallback takes string wurstStackTrace returns nothing
	local integer cb = timer_getData(GetExpiredTimer(), "\n   ClosureTimers, line 90" + wurstStackTrace)
	call dispatch_CallbackPeriodic_call(cb, cb)
endfunction

function bridge_CallbackPeriodic_staticCallback takes nothing returns nothing
	call CallbackPeriodic_staticCallback("\n   ClosureTimers, line 87")
endfunction

function closure_impl_29 takes integer this_57, string wurstStackTrace returns nothing
	set Unit_bonusMovespeedPer[this_36[this_57]] = Unit_bonusMovespeedPer[this_36[this_57]] - amount_34[this_57]
	call dispatch_Unit_updateMovespeed(this_36[this_57], "\n   UnitClass, line 747" + wurstStackTrace)
endfunction

function closure_impl_30 takes integer this_57, string wurstStackTrace returns nothing
	set Unit_bonusManaReg[this_50[this_57]] = Unit_bonusManaReg[this_50[this_57]] - amount_48[this_57]
	call dispatch_Unit_updateManaReg(this_50[this_57], "\n   UnitClass, line 892" + wurstStackTrace)
endfunction

function closure_impl_31 takes integer this_57, string wurstStackTrace returns nothing
	set Unit_bonusManaRegPer[this_52[this_57]] = Unit_bonusManaRegPer[this_52[this_57]] - amount_50[this_57]
	call dispatch_Unit_updateManaReg(this_52[this_57], "\n   UnitClass, line 911" + wurstStackTrace)
endfunction

function HashList_add takes integer this_57, integer elem returns nothing
	call hashtable_saveInt(HashList_ht, this_57, HashList_size[this_57], elem)
	set HashList_size[this_57] = HashList_size[this_57] + 1
endfunction

function dispatch_HashList_add takes integer this_57, integer elem, string wurstStackTrace returns nothing
	if HashList_typeId[this_57] == 0 then
		if this_57 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling HashList.add" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called HashList.add on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call HashList_add(this_57, elem)
endfunction

function alloc_Ability takes nothing returns integer
	local integer this_57
	if Ability_firstFree == 0 then
		set Ability_maxIndex = Ability_maxIndex + 1
		set this_57 = Ability_maxIndex
	else
		set Ability_firstFree = Ability_firstFree - 1
		set this_57 = Ability_nextFree[Ability_firstFree]
	endif
	return this_57
endfunction

function construct_Ability takes integer this_57, integer id, integer lvl returns nothing
	set Ability_id[this_57] = id
	set Ability_lvl[this_57] = lvl
endfunction

function new_Ability takes integer id, integer lvl returns integer
	local integer this_57 = alloc_Ability()
	call construct_Ability(this_57, id, lvl)
	return this_57
endfunction

function addAbilityToPreload takes integer id, integer lvl, string wurstStackTrace returns nothing
	call dispatch_HashList_add(PreloadSystem_abilitysToPreload, new_Ability(id, lvl), "\n   PreloadSystem, line 40" + wurstStackTrace)
endfunction

function ObjectDefinition_setLvlDataInt takes integer this_key, string modification, integer lvl, integer dataPointer, integer value returns nothing
endfunction

function AbilityDefinitionAgilityBonusPlus1_setAgilityBonus takes integer this_57, integer level, integer value returns nothing
	local integer tempIndex = this_57
	call ObjectDefinition_setLvlDataInt(AbilityDefinition_def[tempIndex], "Iagi", level, 1, value)
endfunction

function dispatch_AbilityDefinitionAgilityBonusPlus1_setAgilityBonus takes integer this_57, integer level, integer value, string wurstStackTrace returns nothing
	if AbilityDefinition_typeId[this_57] == 0 then
		if this_57 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling AbilityDefinitionAgilityBonusPlus1.setAgilityBonus" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called AbilityDefinitionAgilityBonusPlus1.setAgilityBonus on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call AbilityDefinitionAgilityBonusPlus1_setAgilityBonus(this_57, level, value)
endfunction

function ObjectDefinition_setLvlDataBoolean takes integer this_key, string modification, integer lvl, integer dataPointer, boolean value returns nothing
	if value then
		call ObjectDefinition_setLvlDataInt(this_key, modification, lvl, dataPointer, 1)
	else
		call ObjectDefinition_setLvlDataInt(this_key, modification, lvl, dataPointer, 0)
	endif
endfunction

function AbilityDefinitionAgilityBonusPlus1_setHideButton takes integer this_57, integer level, boolean value returns nothing
	local integer tempIndex = this_57
	call ObjectDefinition_setLvlDataBoolean(AbilityDefinition_def[tempIndex], "Ihid", level, 4, value)
endfunction

function dispatch_AbilityDefinitionAgilityBonusPlus1_setHideButton takes integer this_57, integer level, boolean value, string wurstStackTrace returns nothing
	if AbilityDefinition_typeId[this_57] == 0 then
		if this_57 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling AbilityDefinitionAgilityBonusPlus1.setHideButton" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called AbilityDefinitionAgilityBonusPlus1.setHideButton on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call AbilityDefinitionAgilityBonusPlus1_setHideButton(this_57, level, value)
endfunction

function ObjectDefinition_setLvlDataString takes integer this_key, string modification, integer lvl, integer dataPointer, string value returns nothing
endfunction

function AbilityDefinition_setEditorSuffix takes integer this_57, string value returns nothing
	local integer tempIndex = this_57
	call ObjectDefinition_setLvlDataString(AbilityDefinition_def[tempIndex], "ansf", 0, 0, value)
endfunction

function dispatch_AbilityDefinition_setEditorSuffix takes integer this_57, string value, string wurstStackTrace returns nothing
	if AbilityDefinition_typeId[this_57] == 0 then
		if this_57 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling AbilityDefinition.setEditorSuffix" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called AbilityDefinition.setEditorSuffix on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	if AbilityDefinition_typeId[this_57] <= 33 then
		if AbilityDefinition_typeId[this_57] <= 28 then
			call AbilityDefinition_setEditorSuffix(this_57, value)
		else
			call AbilityDefinition_setEditorSuffix(this_57, value)
		endif
	else
		call AbilityDefinition_setEditorSuffix(this_57, value)
	endif
endfunction

function AbilityDefinition_setItemAbility takes integer this_57, boolean value returns nothing
	local integer tempIndex = this_57
	call ObjectDefinition_setLvlDataBoolean(AbilityDefinition_def[tempIndex], "aite", 0, 0, value)
endfunction

function dispatch_AbilityDefinition_setItemAbility takes integer this_57, boolean value, string wurstStackTrace returns nothing
	if AbilityDefinition_typeId[this_57] == 0 then
		if this_57 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling AbilityDefinition.setItemAbility" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called AbilityDefinition.setItemAbility on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	if AbilityDefinition_typeId[this_57] <= 33 then
		if AbilityDefinition_typeId[this_57] <= 28 then
			call AbilityDefinition_setItemAbility(this_57, value)
		else
			call AbilityDefinition_setItemAbility(this_57, value)
		endif
	else
		call AbilityDefinition_setItemAbility(this_57, value)
	endif
endfunction

function AbilityDefinition_setName takes integer this_57, string value returns nothing
	local integer tempIndex = this_57
	call ObjectDefinition_setLvlDataString(AbilityDefinition_def[tempIndex], "anam", 0, 0, value)
endfunction

function dispatch_AbilityDefinition_setName takes integer this_57, string value, string wurstStackTrace returns nothing
	if AbilityDefinition_typeId[this_57] == 0 then
		if this_57 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling AbilityDefinition.setName" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called AbilityDefinition.setName on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	if AbilityDefinition_typeId[this_57] <= 33 then
		if AbilityDefinition_typeId[this_57] <= 28 then
			call AbilityDefinition_setName(this_57, value)
		else
			call AbilityDefinition_setName(this_57, value)
		endif
	else
		call AbilityDefinition_setName(this_57, value)
	endif
endfunction

function int_pow takes integer this_57, integer n returns integer
	local integer result
	local integer i
	local integer temp
	if n == 0 then
		return 1
	endif
	set result = this_57
	set i = 1
	set temp = n - 1
	loop
		exitwhen i > temp
		set result = result * this_57
		set i = i + 1
	endloop
	return result
endfunction

function int_toString takes integer this_57 returns string
	return I2S(this_57)
endfunction

function alloc_AbilityDefinitionAgilityBonusPlus1 takes nothing returns integer
	local integer this_57
	if AbilityDefinition_firstFree == 0 then
		set AbilityDefinition_maxIndex = AbilityDefinition_maxIndex + 1
		set this_57 = AbilityDefinition_maxIndex
	else
		set AbilityDefinition_firstFree = AbilityDefinition_firstFree - 1
		set this_57 = AbilityDefinition_nextFree[AbilityDefinition_firstFree]
	endif
	set AbilityDefinition_typeId[this_57] = 48
	return this_57
endfunction

function createObjectDefinition takes string fileType, integer newId, integer deriveFrom returns integer
	return 0
endfunction

function construct_AbilityDefinition takes integer this_57, integer newAbilityId, integer origAbilityId returns nothing
	set AbilityDefinition_def[this_57] = createObjectDefinition("w3a", newAbilityId, origAbilityId)
endfunction

function construct_AbilityDefinitionAgilityBonusPlus1 takes integer this_57, integer newAbilityId returns nothing
	call construct_AbilityDefinition(this_57, newAbilityId, 1095328049)
endfunction

function new_AbilityDefinitionAgilityBonusPlus1 takes integer newAbilityId returns integer
	local integer this_57 = alloc_AbilityDefinitionAgilityBonusPlus1()
	call construct_AbilityDefinitionAgilityBonusPlus1(this_57, newAbilityId)
	return this_57
endfunction

function agiAbilitys takes string wurstStackTrace returns nothing
	local integer i = 97
	local integer temp = 97 + (Setup_maxBonSize - 1)
	local integer obj
	local integer objN
	loop
		exitwhen i > temp
		if CompiletimeInit_compiletime then
			set obj = new_AbilityDefinitionAgilityBonusPlus1(Setup_agiRaw + i)
			call dispatch_AbilityDefinitionAgilityBonusPlus1_setAgilityBonus(obj, 1, int_pow(2, i - 97), "\n   OeSetup, line 63" + wurstStackTrace)
			call dispatch_AbilityDefinition_setItemAbility(obj, false, "\n   OeSetup, line 64" + wurstStackTrace)
			call dispatch_AbilityDefinition_setName(obj, "Bonus Agi +", "\n   OeSetup, line 65" + wurstStackTrace)
			call dispatch_AbilityDefinition_setEditorSuffix(obj, int_toString(int_pow(2, i - 97)), "\n   OeSetup, line 66" + wurstStackTrace)
		else
			call addAbilityToPreload(Setup_agiRaw + i, 1, "\n   OeSetup, line 68" + wurstStackTrace)
		endif
		set i = i + 1
	endloop
	if CompiletimeInit_compiletime then
		set objN = new_AbilityDefinitionAgilityBonusPlus1(Setup_agiRaw + 45)
		call dispatch_AbilityDefinitionAgilityBonusPlus1_setHideButton(objN, 1, true, "\n   OeSetup, line 71" + wurstStackTrace)
		call dispatch_AbilityDefinitionAgilityBonusPlus1_setAgilityBonus(objN, 1,  - int_pow(2, Setup_maxBonSize), "\n   OeSetup, line 72" + wurstStackTrace)
		call dispatch_AbilityDefinition_setItemAbility(objN, false, "\n   OeSetup, line 73" + wurstStackTrace)
		call dispatch_AbilityDefinition_setName(objN, "Bonus Agi -", "\n   OeSetup, line 74" + wurstStackTrace)
		call dispatch_AbilityDefinition_setEditorSuffix(objN, int_toString(int_pow(2, Setup_maxBonSize)), "\n   OeSetup, line 75" + wurstStackTrace)
	endif
	call addAbilityToPreload(Setup_agiRaw + 45, 1, "\n   OeSetup, line 76" + wurstStackTrace)
endfunction

function AbilityDefinitionDefenseBonusPlus1_setDefenseBonus takes integer this_57, integer level, integer value returns nothing
	local integer tempIndex = this_57
	call ObjectDefinition_setLvlDataInt(AbilityDefinition_def[tempIndex], "Idef", level, 1, value)
endfunction

function dispatch_AbilityDefinitionDefenseBonusPlus1_setDefenseBonus takes integer this_57, integer level, integer value, string wurstStackTrace returns nothing
	if AbilityDefinition_typeId[this_57] == 0 then
		if this_57 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling AbilityDefinitionDefenseBonusPlus1.setDefenseBonus" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called AbilityDefinitionDefenseBonusPlus1.setDefenseBonus on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call AbilityDefinitionDefenseBonusPlus1_setDefenseBonus(this_57, level, value)
endfunction

function alloc_AbilityDefinitionDefenseBonusPlus1 takes nothing returns integer
	local integer this_57
	if AbilityDefinition_firstFree == 0 then
		set AbilityDefinition_maxIndex = AbilityDefinition_maxIndex + 1
		set this_57 = AbilityDefinition_maxIndex
	else
		set AbilityDefinition_firstFree = AbilityDefinition_firstFree - 1
		set this_57 = AbilityDefinition_nextFree[AbilityDefinition_firstFree]
	endif
	set AbilityDefinition_typeId[this_57] = 110
	return this_57
endfunction

function construct_AbilityDefinitionDefenseBonusPlus1 takes integer this_57, integer newAbilityId returns nothing
	call construct_AbilityDefinition(this_57, newAbilityId, 1095328817)
endfunction

function new_AbilityDefinitionDefenseBonusPlus1 takes integer newAbilityId returns integer
	local integer this_57 = alloc_AbilityDefinitionDefenseBonusPlus1()
	call construct_AbilityDefinitionDefenseBonusPlus1(this_57, newAbilityId)
	return this_57
endfunction

function armorAbilitys takes string wurstStackTrace returns nothing
	local integer i = 97
	local integer temp = 97 + (Setup_maxBonSize - 1)
	local integer obj
	local integer objN
	loop
		exitwhen i > temp
		if CompiletimeInit_compiletime then
			set obj = new_AbilityDefinitionDefenseBonusPlus1(Setup_armorRaw + i)
			call dispatch_AbilityDefinitionDefenseBonusPlus1_setDefenseBonus(obj, 1, int_pow(2, i - 97), "\n   OeSetup, line 157" + wurstStackTrace)
			call dispatch_AbilityDefinition_setItemAbility(obj, false, "\n   OeSetup, line 158" + wurstStackTrace)
			call dispatch_AbilityDefinition_setName(obj, "Bonus Armor +", "\n   OeSetup, line 159" + wurstStackTrace)
			call dispatch_AbilityDefinition_setEditorSuffix(obj, int_toString(int_pow(2, i - 97)), "\n   OeSetup, line 160" + wurstStackTrace)
		else
			call addAbilityToPreload(Setup_armorRaw + i, 1, "\n   OeSetup, line 162" + wurstStackTrace)
		endif
		set i = i + 1
	endloop
	if CompiletimeInit_compiletime then
		set objN = new_AbilityDefinitionDefenseBonusPlus1(Setup_armorRaw + 45)
		call dispatch_AbilityDefinitionDefenseBonusPlus1_setDefenseBonus(objN, 1,  - int_pow(2, Setup_maxBonSize), "\n   OeSetup, line 165" + wurstStackTrace)
		call dispatch_AbilityDefinition_setItemAbility(objN, false, "\n   OeSetup, line 166" + wurstStackTrace)
		call dispatch_AbilityDefinition_setName(objN, "Bonus Armor -", "\n   OeSetup, line 167" + wurstStackTrace)
		call dispatch_AbilityDefinition_setEditorSuffix(objN, int_toString(int_pow(2, Setup_maxBonSize)), "\n   OeSetup, line 168" + wurstStackTrace)
	else
		call addAbilityToPreload(Setup_armorRaw + 45, 1, "\n   OeSetup, line 170" + wurstStackTrace)
	endif
endfunction

function AbilityDefinitionAttackBonusAItf_setAttackBonus takes integer this_57, integer level, integer value returns nothing
	local integer tempIndex = this_57
	call ObjectDefinition_setLvlDataInt(AbilityDefinition_def[tempIndex], "Iatt", level, 1, value)
endfunction

function dispatch_AbilityDefinitionAttackBonusAItf_setAttackBonus takes integer this_57, integer level, integer value, string wurstStackTrace returns nothing
	if AbilityDefinition_typeId[this_57] == 0 then
		if this_57 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling AbilityDefinitionAttackBonusAItf.setAttackBonus" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called AbilityDefinitionAttackBonusAItf.setAttackBonus on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call AbilityDefinitionAttackBonusAItf_setAttackBonus(this_57, level, value)
endfunction

function alloc_AbilityDefinitionAttackBonusAItf takes nothing returns integer
	local integer this_57
	if AbilityDefinition_firstFree == 0 then
		set AbilityDefinition_maxIndex = AbilityDefinition_maxIndex + 1
		set this_57 = AbilityDefinition_maxIndex
	else
		set AbilityDefinition_firstFree = AbilityDefinition_firstFree - 1
		set this_57 = AbilityDefinition_nextFree[AbilityDefinition_firstFree]
	endif
	set AbilityDefinition_typeId[this_57] = 571
	return this_57
endfunction

function construct_AbilityDefinitionAttackBonusAItf takes integer this_57, integer newAbilityId returns nothing
	call construct_AbilityDefinition(this_57, newAbilityId, 1095332966)
endfunction

function new_AbilityDefinitionAttackBonusAItf takes integer newAbilityId returns integer
	local integer this_57 = alloc_AbilityDefinitionAttackBonusAItf()
	call construct_AbilityDefinitionAttackBonusAItf(this_57, newAbilityId)
	return this_57
endfunction

function attackAbilitys takes string wurstStackTrace returns nothing
	local integer i = 97
	local integer temp = 97 + (Setup_maxBonSize - 1)
	local integer obj
	local integer objN
	loop
		exitwhen i > temp
		if CompiletimeInit_compiletime then
			set obj = new_AbilityDefinitionAttackBonusAItf(Setup_attackRaw + i)
			call dispatch_AbilityDefinitionAttackBonusAItf_setAttackBonus(obj, 1, int_pow(2, i - 97), "\n   OeSetup, line 119" + wurstStackTrace)
			call dispatch_AbilityDefinition_setItemAbility(obj, false, "\n   OeSetup, line 120" + wurstStackTrace)
			call dispatch_AbilityDefinition_setName(obj, "Bonus Attack +", "\n   OeSetup, line 121" + wurstStackTrace)
			call dispatch_AbilityDefinition_setEditorSuffix(obj, int_toString(int_pow(2, i - 97)), "\n   OeSetup, line 122" + wurstStackTrace)
		else
			call addAbilityToPreload(Setup_attackRaw + i, 1, "\n   OeSetup, line 124" + wurstStackTrace)
		endif
		set i = i + 1
	endloop
	if CompiletimeInit_compiletime then
		set objN = new_AbilityDefinitionAttackBonusAItf(Setup_attackRaw + 45)
		call dispatch_AbilityDefinitionAttackBonusAItf_setAttackBonus(objN, 1,  - int_pow(2, Setup_maxBonSize), "\n   OeSetup, line 127" + wurstStackTrace)
		call dispatch_AbilityDefinition_setItemAbility(objN, false, "\n   OeSetup, line 128" + wurstStackTrace)
		call dispatch_AbilityDefinition_setName(objN, "Bonus Attack -", "\n   OeSetup, line 129" + wurstStackTrace)
		call dispatch_AbilityDefinition_setEditorSuffix(objN, int_toString(int_pow(2, Setup_maxBonSize)), "\n   OeSetup, line 130" + wurstStackTrace)
	else
		call addAbilityToPreload(Setup_attackRaw + 45, 1, "\n   OeSetup, line 132" + wurstStackTrace)
	endif
endfunction

function ObjectDefinition_setLvlDataUnreal takes integer this_key, string modification, integer lvl, integer dataPointer, real value returns nothing
endfunction

function AbilityDefinitionAttackSpeedIncrease_setAttackSpeedIncrease takes integer this_57, integer level, real value returns nothing
	local integer tempIndex = this_57
	call ObjectDefinition_setLvlDataUnreal(AbilityDefinition_def[tempIndex], "Isx1", level, 1, value)
endfunction

function dispatch_AbilityDefinitionAttackSpeedIncrease_setAttackSpeedIncrease takes integer this_57, integer level, real value, string wurstStackTrace returns nothing
	if AbilityDefinition_typeId[this_57] == 0 then
		if this_57 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling AbilityDefinitionAttackSpeedIncrease.setAttackSpeedIncrease" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called AbilityDefinitionAttackSpeedIncrease.setAttackSpeedIncrease on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call AbilityDefinitionAttackSpeedIncrease_setAttackSpeedIncrease(this_57, level, value)
endfunction

function alloc_AbilityDefinitionAttackSpeedIncrease takes nothing returns integer
	local integer this_57
	if AbilityDefinition_firstFree == 0 then
		set AbilityDefinition_maxIndex = AbilityDefinition_maxIndex + 1
		set this_57 = AbilityDefinition_maxIndex
	else
		set AbilityDefinition_firstFree = AbilityDefinition_firstFree - 1
		set this_57 = AbilityDefinition_nextFree[AbilityDefinition_firstFree]
	endif
	set AbilityDefinition_typeId[this_57] = 557
	return this_57
endfunction

function construct_AbilityDefinitionAttackSpeedIncrease takes integer this_57, integer newAbilityId returns nothing
	call construct_AbilityDefinition(this_57, newAbilityId, 1095332728)
endfunction

function new_AbilityDefinitionAttackSpeedIncrease takes integer newAbilityId returns integer
	local integer this_57 = alloc_AbilityDefinitionAttackSpeedIncrease()
	call construct_AbilityDefinitionAttackSpeedIncrease(this_57, newAbilityId)
	return this_57
endfunction

function attackSpeedAbilitys takes string wurstStackTrace returns nothing
	local integer i = 97
	local integer temp = 97 + (Setup_maxBonSize - 1)
	local integer obj
	local integer objN
	loop
		exitwhen i > temp
		if CompiletimeInit_compiletime then
			set obj = new_AbilityDefinitionAttackSpeedIncrease(Setup_attackSpeedRaw + i)
			call dispatch_AbilityDefinitionAttackSpeedIncrease_setAttackSpeedIncrease(obj, 1, int_pow(2, i - 97) * 1. / 100, "\n   OeSetup, line 138" + wurstStackTrace)
			call dispatch_AbilityDefinition_setItemAbility(obj, false, "\n   OeSetup, line 139" + wurstStackTrace)
			call dispatch_AbilityDefinition_setName(obj, "Bonus AttackSpeed +", "\n   OeSetup, line 140" + wurstStackTrace)
			call dispatch_AbilityDefinition_setEditorSuffix(obj, int_toString(int_pow(2, i - 97)), "\n   OeSetup, line 141" + wurstStackTrace)
		else
			call addAbilityToPreload(Setup_attackSpeedRaw + i, 1, "\n   OeSetup, line 143" + wurstStackTrace)
		endif
		set i = i + 1
	endloop
	if CompiletimeInit_compiletime then
		set objN = new_AbilityDefinitionAttackSpeedIncrease(Setup_attackSpeedRaw + 45)
		call dispatch_AbilityDefinitionAttackSpeedIncrease_setAttackSpeedIncrease(objN, 1,  - (int_pow(2, Setup_maxBonSize) * 1. / 100), "\n   OeSetup, line 146" + wurstStackTrace)
		call dispatch_AbilityDefinition_setItemAbility(objN, false, "\n   OeSetup, line 147" + wurstStackTrace)
		call dispatch_AbilityDefinition_setName(objN, "Bonus AttackSpeed -", "\n   OeSetup, line 148" + wurstStackTrace)
		call dispatch_AbilityDefinition_setEditorSuffix(objN, int_toString(int_pow(2, Setup_maxBonSize)), "\n   OeSetup, line 149" + wurstStackTrace)
	else
		call addAbilityToPreload(Setup_attackSpeedRaw + 45, 1, "\n   OeSetup, line 151" + wurstStackTrace)
	endif
endfunction

function AbilityDefinitionIntelligenceBonusPlus1_setIntelligenceBonus takes integer this_57, integer level, integer value returns nothing
	local integer tempIndex = this_57
	call ObjectDefinition_setLvlDataInt(AbilityDefinition_def[tempIndex], "Iint", level, 2, value)
endfunction

function dispatch_AbilityDefinitionIntelligenceBonusPlus1_setIntelligenceBonus takes integer this_57, integer level, integer value, string wurstStackTrace returns nothing
	if AbilityDefinition_typeId[this_57] == 0 then
		if this_57 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling AbilityDefinitionIntelligenceBonusPlus1.setIntelligenceBonus" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called AbilityDefinitionIntelligenceBonusPlus1.setIntelligenceBonus on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call AbilityDefinitionIntelligenceBonusPlus1_setIntelligenceBonus(this_57, level, value)
endfunction

function alloc_AbilityDefinitionIntelligenceBonusPlus1 takes nothing returns integer
	local integer this_57
	if AbilityDefinition_firstFree == 0 then
		set AbilityDefinition_maxIndex = AbilityDefinition_maxIndex + 1
		set this_57 = AbilityDefinition_maxIndex
	else
		set AbilityDefinition_firstFree = AbilityDefinition_firstFree - 1
		set this_57 = AbilityDefinition_nextFree[AbilityDefinition_firstFree]
	endif
	set AbilityDefinition_typeId[this_57] = 197
	return this_57
endfunction

function construct_AbilityDefinitionIntelligenceBonusPlus1 takes integer this_57, integer newAbilityId returns nothing
	call construct_AbilityDefinition(this_57, newAbilityId, 1095330097)
endfunction

function new_AbilityDefinitionIntelligenceBonusPlus1 takes integer newAbilityId returns integer
	local integer this_57 = alloc_AbilityDefinitionIntelligenceBonusPlus1()
	call construct_AbilityDefinitionIntelligenceBonusPlus1(this_57, newAbilityId)
	return this_57
endfunction

function intAbilitys takes string wurstStackTrace returns nothing
	local integer i = 97
	local integer temp = 97 + (Setup_maxBonSize - 1)
	local integer obj
	local integer objN
	loop
		exitwhen i > temp
		if CompiletimeInit_compiletime then
			set obj = new_AbilityDefinitionIntelligenceBonusPlus1(Setup_intRaw + i)
			call dispatch_AbilityDefinitionIntelligenceBonusPlus1_setIntelligenceBonus(obj, 1, int_pow(2, i - 97), "\n   OeSetup, line 101" + wurstStackTrace)
			call dispatch_AbilityDefinition_setItemAbility(obj, false, "\n   OeSetup, line 102" + wurstStackTrace)
			call dispatch_AbilityDefinition_setName(obj, "Bonus Int +", "\n   OeSetup, line 103" + wurstStackTrace)
			call dispatch_AbilityDefinition_setEditorSuffix(obj, int_toString(int_pow(2, i - 97)), "\n   OeSetup, line 104" + wurstStackTrace)
		else
			call addAbilityToPreload(Setup_intRaw + i, 1, "\n   OeSetup, line 106" + wurstStackTrace)
		endif
		set i = i + 1
	endloop
	if CompiletimeInit_compiletime then
		set objN = new_AbilityDefinitionIntelligenceBonusPlus1(Setup_intRaw + 45)
		call dispatch_AbilityDefinitionIntelligenceBonusPlus1_setIntelligenceBonus(objN, 1,  - int_pow(2, Setup_maxBonSize), "\n   OeSetup, line 109" + wurstStackTrace)
		call dispatch_AbilityDefinition_setItemAbility(objN, false, "\n   OeSetup, line 110" + wurstStackTrace)
		call dispatch_AbilityDefinition_setName(objN, "Bonus Int -", "\n   OeSetup, line 111" + wurstStackTrace)
		call dispatch_AbilityDefinition_setEditorSuffix(objN, int_toString(int_pow(2, Setup_maxBonSize)), "\n   OeSetup, line 112" + wurstStackTrace)
	endif
	call addAbilityToPreload(Setup_intRaw + 45, 1, "\n   OeSetup, line 113" + wurstStackTrace)
endfunction

function AbilityDefinitionMaxLifeBonusLesser_setMaxLifeGained takes integer this_57, integer level, integer value returns nothing
	local integer tempIndex = this_57
	call ObjectDefinition_setLvlDataInt(AbilityDefinition_def[tempIndex], "Ilif", level, 1, value)
endfunction

function dispatch_AbilityDefinitionMaxLifeBonusLesser_setMaxLifeGained takes integer this_57, integer level, integer value, string wurstStackTrace returns nothing
	if AbilityDefinition_typeId[this_57] == 0 then
		if this_57 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling AbilityDefinitionMaxLifeBonusLesser.setMaxLifeGained" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called AbilityDefinitionMaxLifeBonusLesser.setMaxLifeGained on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call AbilityDefinitionMaxLifeBonusLesser_setMaxLifeGained(this_57, level, value)
endfunction

function alloc_AbilityDefinitionMaxLifeBonusLesser takes nothing returns integer
	local integer this_57
	if AbilityDefinition_firstFree == 0 then
		set AbilityDefinition_maxIndex = AbilityDefinition_maxIndex + 1
		set this_57 = AbilityDefinition_maxIndex
	else
		set AbilityDefinition_firstFree = AbilityDefinition_firstFree - 1
		set this_57 = AbilityDefinition_nextFree[AbilityDefinition_firstFree]
	endif
	set AbilityDefinition_typeId[this_57] = 260
	return this_57
endfunction

function construct_AbilityDefinitionMaxLifeBonusLesser takes integer this_57, integer newAbilityId returns nothing
	call construct_AbilityDefinition(this_57, newAbilityId, 1095330865)
endfunction

function new_AbilityDefinitionMaxLifeBonusLesser takes integer newAbilityId returns integer
	local integer this_57 = alloc_AbilityDefinitionMaxLifeBonusLesser()
	call construct_AbilityDefinitionMaxLifeBonusLesser(this_57, newAbilityId)
	return this_57
endfunction

function lifeAbilitys takes string wurstStackTrace returns nothing
	local integer i = 97
	local integer temp = 97 + (Setup_maxBonSize - 1)
	local integer obj
	local integer objN
	loop
		exitwhen i > temp
		if CompiletimeInit_compiletime then
			set obj = new_AbilityDefinitionMaxLifeBonusLesser(Setup_lifeRaw + i)
			call dispatch_AbilityDefinitionMaxLifeBonusLesser_setMaxLifeGained(obj, 1, int_pow(2, i - 97), "\n   OeSetup, line 25" + wurstStackTrace)
			call dispatch_AbilityDefinition_setItemAbility(obj, false, "\n   OeSetup, line 26" + wurstStackTrace)
			call dispatch_AbilityDefinition_setName(obj, "Bonus Life +", "\n   OeSetup, line 27" + wurstStackTrace)
			call dispatch_AbilityDefinition_setEditorSuffix(obj, int_toString(int_pow(2, i - 97)), "\n   OeSetup, line 28" + wurstStackTrace)
		else
			call addAbilityToPreload(Setup_lifeRaw + i, 1, "\n   OeSetup, line 30" + wurstStackTrace)
		endif
		set i = i + 1
	endloop
	if CompiletimeInit_compiletime then
		set objN = new_AbilityDefinitionMaxLifeBonusLesser(Setup_lifeRaw + 45)
		call dispatch_AbilityDefinitionMaxLifeBonusLesser_setMaxLifeGained(objN, 1,  - int_pow(2, Setup_maxBonSize), "\n   OeSetup, line 33" + wurstStackTrace)
		call dispatch_AbilityDefinition_setItemAbility(objN, false, "\n   OeSetup, line 34" + wurstStackTrace)
		call dispatch_AbilityDefinition_setName(objN, "Bonus Life -", "\n   OeSetup, line 35" + wurstStackTrace)
		call dispatch_AbilityDefinition_setEditorSuffix(objN, int_toString(int_pow(2, Setup_maxBonSize)), "\n   OeSetup, line 36" + wurstStackTrace)
	else
		call addAbilityToPreload(Setup_lifeRaw + 45, 1, "\n   OeSetup, line 38" + wurstStackTrace)
	endif
endfunction

function AbilityDefinitionNeutralRegenhealthonly_setAmountofHitPointsRegenerated takes integer this_57, integer level, real value returns nothing
	local integer tempIndex = this_57
	call ObjectDefinition_setLvlDataUnreal(AbilityDefinition_def[tempIndex], "Oar1", level, 1, value)
endfunction

function dispatch_AbilityDefinitionNeutralRegenhealthonly_setAmountofHitPointsRegenerated takes integer this_57, integer level, real value, string wurstStackTrace returns nothing
	if AbilityDefinition_typeId[this_57] == 0 then
		if this_57 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling AbilityDefinitionNeutralRegenhealthonly.setAmountofHitPointsRegenerated" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called AbilityDefinitionNeutralRegenhealthonly.setAmountofHitPointsRegenerated on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call AbilityDefinitionNeutralRegenhealthonly_setAmountofHitPointsRegenerated(this_57, level, value)
endfunction

function AbilityDefinitionNeutralRegenhealthonly_setPercentage takes integer this_57, integer level, boolean value returns nothing
	local integer tempIndex = this_57
	call ObjectDefinition_setLvlDataBoolean(AbilityDefinition_def[tempIndex], "Oar2", level, 2, value)
endfunction

function dispatch_AbilityDefinitionNeutralRegenhealthonly_setPercentage takes integer this_57, integer level, boolean value, string wurstStackTrace returns nothing
	if AbilityDefinition_typeId[this_57] == 0 then
		if this_57 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling AbilityDefinitionNeutralRegenhealthonly.setPercentage" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called AbilityDefinitionNeutralRegenhealthonly.setPercentage on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call AbilityDefinitionNeutralRegenhealthonly_setPercentage(this_57, level, value)
endfunction

function AbilityDefinition_setAreaofEffect takes integer this_57, integer level, real value returns nothing
	local integer tempIndex = this_57
	call ObjectDefinition_setLvlDataUnreal(AbilityDefinition_def[tempIndex], "aare", level, 0, value)
endfunction

function dispatch_AbilityDefinition_setAreaofEffect takes integer this_57, integer level, real value, string wurstStackTrace returns nothing
	if AbilityDefinition_typeId[this_57] == 0 then
		if this_57 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling AbilityDefinition.setAreaofEffect" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called AbilityDefinition.setAreaofEffect on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	if AbilityDefinition_typeId[this_57] <= 33 then
		if AbilityDefinition_typeId[this_57] <= 28 then
			call AbilityDefinition_setAreaofEffect(this_57, level, value)
		else
			call AbilityDefinition_setAreaofEffect(this_57, level, value)
		endif
	else
		call AbilityDefinition_setAreaofEffect(this_57, level, value)
	endif
endfunction

function Race_toObjectString takes integer this_57 returns string
	local string result = "unknown"
	local integer temp = this_57
	if temp == 0 then
		set result = "commoner"
	elseif temp == 1 then
		set result = "creeps"
	elseif temp == 2 then
		set result = "critters"
	elseif temp == 3 then
		set result = "demon"
	elseif temp == 4 then
		set result = "human"
	elseif temp == 5 then
		set result = "naga"
	elseif temp == 6 then
		set result = "nightelf"
	elseif temp == 7 then
		set result = "orc"
	elseif temp == 8 then
		set result = "other"
	elseif temp == 9 then
		set result = "undead"
	elseif temp == 10 then
		set result = "unknown"
	endif
	return result
endfunction

function AbilityDefinition_setRace takes integer this_57, integer rce returns nothing
	local integer tempIndex = this_57
	call ObjectDefinition_setLvlDataString(AbilityDefinition_def[tempIndex], "arac", 0, 0, Race_toObjectString(rce))
endfunction

function dispatch_AbilityDefinition_setRace takes integer this_57, integer rce, string wurstStackTrace returns nothing
	if AbilityDefinition_typeId[this_57] == 0 then
		if this_57 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling AbilityDefinition.setRace" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called AbilityDefinition.setRace on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	if AbilityDefinition_typeId[this_57] <= 33 then
		if AbilityDefinition_typeId[this_57] <= 28 then
			call AbilityDefinition_setRace(this_57, rce)
		else
			call AbilityDefinition_setRace(this_57, rce)
		endif
	else
		call AbilityDefinition_setRace(this_57, rce)
	endif
endfunction

function AbilityDefinition_setTargetsAllowed takes integer this_57, integer level, string value returns nothing
	local integer tempIndex = this_57
	call ObjectDefinition_setLvlDataString(AbilityDefinition_def[tempIndex], "atar", level, 0, value)
endfunction

function dispatch_AbilityDefinition_setTargetsAllowed takes integer this_57, integer level, string value, string wurstStackTrace returns nothing
	if AbilityDefinition_typeId[this_57] == 0 then
		if this_57 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling AbilityDefinition.setTargetsAllowed" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called AbilityDefinition.setTargetsAllowed on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	if AbilityDefinition_typeId[this_57] <= 33 then
		if AbilityDefinition_typeId[this_57] <= 28 then
			call AbilityDefinition_setTargetsAllowed(this_57, level, value)
		else
			call AbilityDefinition_setTargetsAllowed(this_57, level, value)
		endif
	else
		call AbilityDefinition_setTargetsAllowed(this_57, level, value)
	endif
endfunction

function alloc_AbilityDefinitionNeutralRegenhealthonly takes nothing returns integer
	local integer this_57
	if AbilityDefinition_firstFree == 0 then
		set AbilityDefinition_maxIndex = AbilityDefinition_maxIndex + 1
		set this_57 = AbilityDefinition_maxIndex
	else
		set AbilityDefinition_firstFree = AbilityDefinition_firstFree - 1
		set this_57 = AbilityDefinition_nextFree[AbilityDefinition_firstFree]
	endif
	set AbilityDefinition_typeId[this_57] = 182
	return this_57
endfunction

function construct_AbilityDefinitionNeutralRegenhealthonly takes integer this_57, integer newAbilityId returns nothing
	call construct_AbilityDefinition(this_57, newAbilityId, 1094938226)
endfunction

function new_AbilityDefinitionNeutralRegenhealthonly takes integer newAbilityId returns integer
	local integer this_57 = alloc_AbilityDefinitionNeutralRegenhealthonly()
	call construct_AbilityDefinitionNeutralRegenhealthonly(this_57, newAbilityId)
	return this_57
endfunction

function lifeRegAbilitys takes string wurstStackTrace returns nothing
	local integer i = 97
	local integer temp = 97 + (Setup_maxBonSize - 1)
	local integer obj
	local integer objN
	loop
		exitwhen i > temp
		if CompiletimeInit_compiletime then
			set obj = new_AbilityDefinitionNeutralRegenhealthonly(Setup_lifeRegRaw + i)
			call dispatch_AbilityDefinition_setRace(obj, 8, "\n   OeSetup, line 176" + wurstStackTrace)
			call dispatch_AbilityDefinitionNeutralRegenhealthonly_setPercentage(obj, 1, false, "\n   OeSetup, line 177" + wurstStackTrace)
			call dispatch_AbilityDefinition_setAreaofEffect(obj, 1, 1., "\n   OeSetup, line 178" + wurstStackTrace)
			call dispatch_AbilityDefinition_setTargetsAllowed(obj, 1, "self", "\n   OeSetup, line 179" + wurstStackTrace)
			call dispatch_AbilityDefinitionNeutralRegenhealthonly_setAmountofHitPointsRegenerated(obj, 1, int_pow(2, i - 97) * 0.05, "\n   OeSetup, line 180" + wurstStackTrace)
			call dispatch_AbilityDefinition_setItemAbility(obj, false, "\n   OeSetup, line 181" + wurstStackTrace)
			call dispatch_AbilityDefinition_setName(obj, "Bonus LifeReg +", "\n   OeSetup, line 182" + wurstStackTrace)
			call dispatch_AbilityDefinition_setEditorSuffix(obj, int_toString(int_pow(2, i - 97)), "\n   OeSetup, line 183" + wurstStackTrace)
		else
			call addAbilityToPreload(Setup_lifeRegRaw + i, 1, "\n   OeSetup, line 185" + wurstStackTrace)
		endif
		set i = i + 1
	endloop
	if CompiletimeInit_compiletime then
		set objN = new_AbilityDefinitionNeutralRegenhealthonly(Setup_lifeRegRaw + 45)
		call dispatch_AbilityDefinition_setRace(objN, 8, "\n   OeSetup, line 188" + wurstStackTrace)
		call dispatch_AbilityDefinitionNeutralRegenhealthonly_setPercentage(objN, 1, false, "\n   OeSetup, line 189" + wurstStackTrace)
		call dispatch_AbilityDefinition_setAreaofEffect(objN, 1, 1., "\n   OeSetup, line 190" + wurstStackTrace)
		call dispatch_AbilityDefinition_setTargetsAllowed(objN, 1, "self", "\n   OeSetup, line 191" + wurstStackTrace)
		call dispatch_AbilityDefinitionNeutralRegenhealthonly_setAmountofHitPointsRegenerated(objN, 1,  - (int_pow(2, Setup_maxBonSize) * 0.05), "\n   OeSetup, line 192" + wurstStackTrace)
		call dispatch_AbilityDefinition_setItemAbility(objN, false, "\n   OeSetup, line 193" + wurstStackTrace)
		call dispatch_AbilityDefinition_setName(objN, "Bonus LifeReg -", "\n   OeSetup, line 194" + wurstStackTrace)
		call dispatch_AbilityDefinition_setEditorSuffix(objN, int_toString(int_pow(2, Setup_maxBonSize)), "\n   OeSetup, line 195" + wurstStackTrace)
	else
		call addAbilityToPreload(Setup_lifeRegRaw + 45, 1, "\n   OeSetup, line 197" + wurstStackTrace)
	endif
endfunction

function AbilityDefinitionMaxManaBonusLeast_setMaxManaGained takes integer this_57, integer level, integer value returns nothing
	local integer tempIndex = this_57
	call ObjectDefinition_setLvlDataInt(AbilityDefinition_def[tempIndex], "Iman", level, 1, value)
endfunction

function dispatch_AbilityDefinitionMaxManaBonusLeast_setMaxManaGained takes integer this_57, integer level, integer value, string wurstStackTrace returns nothing
	if AbilityDefinition_typeId[this_57] == 0 then
		if this_57 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling AbilityDefinitionMaxManaBonusLeast.setMaxManaGained" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called AbilityDefinitionMaxManaBonusLeast.setMaxManaGained on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call AbilityDefinitionMaxManaBonusLeast_setMaxManaGained(this_57, level, value)
endfunction

function alloc_AbilityDefinitionMaxManaBonusLeast takes nothing returns integer
	local integer this_57
	if AbilityDefinition_firstFree == 0 then
		set AbilityDefinition_maxIndex = AbilityDefinition_maxIndex + 1
		set this_57 = AbilityDefinition_maxIndex
	else
		set AbilityDefinition_firstFree = AbilityDefinition_firstFree - 1
		set this_57 = AbilityDefinition_nextFree[AbilityDefinition_firstFree]
	endif
	set AbilityDefinition_typeId[this_57] = 296
	return this_57
endfunction

function construct_AbilityDefinitionMaxManaBonusLeast takes integer this_57, integer newAbilityId returns nothing
	call construct_AbilityDefinition(this_57, newAbilityId, 1095331170)
endfunction

function new_AbilityDefinitionMaxManaBonusLeast takes integer newAbilityId returns integer
	local integer this_57 = alloc_AbilityDefinitionMaxManaBonusLeast()
	call construct_AbilityDefinitionMaxManaBonusLeast(this_57, newAbilityId)
	return this_57
endfunction

function manaAbilitys takes string wurstStackTrace returns nothing
	local integer i = 97
	local integer temp = 97 + (Setup_maxBonSize - 1)
	local integer obj
	local integer objN
	loop
		exitwhen i > temp
		if CompiletimeInit_compiletime then
			set obj = new_AbilityDefinitionMaxManaBonusLeast(Setup_manaRaw + i)
			call dispatch_AbilityDefinitionMaxManaBonusLeast_setMaxManaGained(obj, 1, int_pow(2, i - 97), "\n   OeSetup, line 44" + wurstStackTrace)
			call dispatch_AbilityDefinition_setItemAbility(obj, false, "\n   OeSetup, line 45" + wurstStackTrace)
			call dispatch_AbilityDefinition_setName(obj, "Bonus Mana +", "\n   OeSetup, line 46" + wurstStackTrace)
			call dispatch_AbilityDefinition_setEditorSuffix(obj, int_toString(int_pow(2, i - 97)), "\n   OeSetup, line 47" + wurstStackTrace)
		else
			call addAbilityToPreload(Setup_manaRaw + i, 1, "\n   OeSetup, line 49" + wurstStackTrace)
		endif
		set i = i + 1
	endloop
	if CompiletimeInit_compiletime then
		set objN = new_AbilityDefinitionMaxManaBonusLeast(Setup_manaRaw + 45)
		call dispatch_AbilityDefinitionMaxManaBonusLeast_setMaxManaGained(objN, 1,  - int_pow(2, Setup_maxBonSize), "\n   OeSetup, line 52" + wurstStackTrace)
		call dispatch_AbilityDefinition_setItemAbility(objN, false, "\n   OeSetup, line 53" + wurstStackTrace)
		call dispatch_AbilityDefinition_setName(objN, "Bonus Mana -", "\n   OeSetup, line 54" + wurstStackTrace)
		call dispatch_AbilityDefinition_setEditorSuffix(objN, int_toString(int_pow(2, Setup_maxBonSize)), "\n   OeSetup, line 55" + wurstStackTrace)
	else
		call addAbilityToPreload(Setup_manaRaw + 45, 1, "\n   OeSetup, line 57" + wurstStackTrace)
	endif
endfunction

function AbilityDefinitionNeutralRegenmanaonly_setAmountRegenerated takes integer this_57, integer level, real value returns nothing
	local integer tempIndex = this_57
	call ObjectDefinition_setLvlDataUnreal(AbilityDefinition_def[tempIndex], "Arm1", level, 1, value)
endfunction

function dispatch_AbilityDefinitionNeutralRegenmanaonly_setAmountRegenerated takes integer this_57, integer level, real value, string wurstStackTrace returns nothing
	if AbilityDefinition_typeId[this_57] == 0 then
		if this_57 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling AbilityDefinitionNeutralRegenmanaonly.setAmountRegenerated" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called AbilityDefinitionNeutralRegenmanaonly.setAmountRegenerated on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call AbilityDefinitionNeutralRegenmanaonly_setAmountRegenerated(this_57, level, value)
endfunction

function AbilityDefinitionNeutralRegenmanaonly_setPercentage takes integer this_57, integer level, boolean value returns nothing
	local integer tempIndex = this_57
	call ObjectDefinition_setLvlDataBoolean(AbilityDefinition_def[tempIndex], "Arm2", level, 2, value)
endfunction

function dispatch_AbilityDefinitionNeutralRegenmanaonly_setPercentage takes integer this_57, integer level, boolean value, string wurstStackTrace returns nothing
	if AbilityDefinition_typeId[this_57] == 0 then
		if this_57 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling AbilityDefinitionNeutralRegenmanaonly.setPercentage" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called AbilityDefinitionNeutralRegenmanaonly.setPercentage on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call AbilityDefinitionNeutralRegenmanaonly_setPercentage(this_57, level, value)
endfunction

function alloc_AbilityDefinitionNeutralRegenmanaonly takes nothing returns integer
	local integer this_57
	if AbilityDefinition_firstFree == 0 then
		set AbilityDefinition_maxIndex = AbilityDefinition_maxIndex + 1
		set this_57 = AbilityDefinition_maxIndex
	else
		set AbilityDefinition_firstFree = AbilityDefinition_firstFree - 1
		set this_57 = AbilityDefinition_nextFree[AbilityDefinition_firstFree]
	endif
	set AbilityDefinition_typeId[this_57] = 94
	return this_57
endfunction

function construct_AbilityDefinitionNeutralRegenmanaonly takes integer this_57, integer newAbilityId returns nothing
	call construct_AbilityDefinition(this_57, newAbilityId, 1095660133)
endfunction

function new_AbilityDefinitionNeutralRegenmanaonly takes integer newAbilityId returns integer
	local integer this_57 = alloc_AbilityDefinitionNeutralRegenmanaonly()
	call construct_AbilityDefinitionNeutralRegenmanaonly(this_57, newAbilityId)
	return this_57
endfunction

function manaRegAbilitys takes string wurstStackTrace returns nothing
	local integer i = 97
	local integer temp = 97 + (Setup_maxBonSize - 1)
	local integer obj
	local integer objN
	loop
		exitwhen i > temp
		if CompiletimeInit_compiletime then
			set obj = new_AbilityDefinitionNeutralRegenmanaonly(Setup_manaRegRaw + i)
			call dispatch_AbilityDefinition_setRace(obj, 8, "\n   OeSetup, line 203" + wurstStackTrace)
			call dispatch_AbilityDefinitionNeutralRegenmanaonly_setPercentage(obj, 1, false, "\n   OeSetup, line 204" + wurstStackTrace)
			call dispatch_AbilityDefinition_setAreaofEffect(obj, 1, 1., "\n   OeSetup, line 205" + wurstStackTrace)
			call dispatch_AbilityDefinition_setTargetsAllowed(obj, 1, "self", "\n   OeSetup, line 206" + wurstStackTrace)
			call dispatch_AbilityDefinitionNeutralRegenmanaonly_setAmountRegenerated(obj, 1, int_pow(2, i - 97) * 0.05, "\n   OeSetup, line 207" + wurstStackTrace)
			call dispatch_AbilityDefinition_setItemAbility(obj, false, "\n   OeSetup, line 208" + wurstStackTrace)
			call dispatch_AbilityDefinition_setName(obj, "Bonus ManaReg +", "\n   OeSetup, line 209" + wurstStackTrace)
			call dispatch_AbilityDefinition_setEditorSuffix(obj, int_toString(int_pow(2, i - 97)), "\n   OeSetup, line 210" + wurstStackTrace)
		else
			call addAbilityToPreload(Setup_manaRegRaw + i, 1, "\n   OeSetup, line 212" + wurstStackTrace)
		endif
		set i = i + 1
	endloop
	if CompiletimeInit_compiletime then
		set objN = new_AbilityDefinitionNeutralRegenmanaonly(Setup_manaRegRaw + 45)
		call dispatch_AbilityDefinition_setRace(objN, 8, "\n   OeSetup, line 215" + wurstStackTrace)
		call dispatch_AbilityDefinitionNeutralRegenmanaonly_setPercentage(objN, 1, false, "\n   OeSetup, line 216" + wurstStackTrace)
		call dispatch_AbilityDefinition_setAreaofEffect(objN, 1, 1., "\n   OeSetup, line 217" + wurstStackTrace)
		call dispatch_AbilityDefinition_setTargetsAllowed(objN, 1, "self", "\n   OeSetup, line 218" + wurstStackTrace)
		call dispatch_AbilityDefinitionNeutralRegenmanaonly_setAmountRegenerated(objN, 1,  - (int_pow(2, Setup_maxBonSize) * 0.05), "\n   OeSetup, line 219" + wurstStackTrace)
		call dispatch_AbilityDefinition_setItemAbility(objN, false, "\n   OeSetup, line 220" + wurstStackTrace)
		call dispatch_AbilityDefinition_setName(objN, "Bonus manaReg -", "\n   OeSetup, line 221" + wurstStackTrace)
		call dispatch_AbilityDefinition_setEditorSuffix(objN, int_toString(int_pow(2, Setup_maxBonSize)), "\n   OeSetup, line 222" + wurstStackTrace)
	else
		call addAbilityToPreload(Setup_manaRegRaw + 45, 1, "\n   OeSetup, line 223" + wurstStackTrace)
	endif
endfunction

function AbilityDefinitionStrengthBonusPlus1_setStrengthBonus takes integer this_57, integer level, integer value returns nothing
	local integer tempIndex = this_57
	call ObjectDefinition_setLvlDataInt(AbilityDefinition_def[tempIndex], "Istr", level, 3, value)
endfunction

function dispatch_AbilityDefinitionStrengthBonusPlus1_setStrengthBonus takes integer this_57, integer level, integer value, string wurstStackTrace returns nothing
	if AbilityDefinition_typeId[this_57] == 0 then
		if this_57 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling AbilityDefinitionStrengthBonusPlus1.setStrengthBonus" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called AbilityDefinitionStrengthBonusPlus1.setStrengthBonus on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call AbilityDefinitionStrengthBonusPlus1_setStrengthBonus(this_57, level, value)
endfunction

function alloc_AbilityDefinitionStrengthBonusPlus1 takes nothing returns integer
	local integer this_57
	if AbilityDefinition_firstFree == 0 then
		set AbilityDefinition_maxIndex = AbilityDefinition_maxIndex + 1
		set this_57 = AbilityDefinition_maxIndex
	else
		set AbilityDefinition_firstFree = AbilityDefinition_firstFree - 1
		set this_57 = AbilityDefinition_nextFree[AbilityDefinition_firstFree]
	endif
	set AbilityDefinition_typeId[this_57] = 428
	return this_57
endfunction

function construct_AbilityDefinitionStrengthBonusPlus1 takes integer this_57, integer newAbilityId returns nothing
	call construct_AbilityDefinition(this_57, newAbilityId, 1095332657)
endfunction

function new_AbilityDefinitionStrengthBonusPlus1 takes integer newAbilityId returns integer
	local integer this_57 = alloc_AbilityDefinitionStrengthBonusPlus1()
	call construct_AbilityDefinitionStrengthBonusPlus1(this_57, newAbilityId)
	return this_57
endfunction

function strAbilitys takes string wurstStackTrace returns nothing
	local integer i = 97
	local integer temp = 97 + (Setup_maxBonSize - 1)
	local integer obj
	local integer objN
	loop
		exitwhen i > temp
		if CompiletimeInit_compiletime then
			set obj = new_AbilityDefinitionStrengthBonusPlus1(Setup_strRaw + i)
			call dispatch_AbilityDefinitionStrengthBonusPlus1_setStrengthBonus(obj, 1, int_pow(2, i - 97), "\n   OeSetup, line 82" + wurstStackTrace)
			call dispatch_AbilityDefinition_setItemAbility(obj, false, "\n   OeSetup, line 83" + wurstStackTrace)
			call dispatch_AbilityDefinition_setName(obj, "Bonus Str +", "\n   OeSetup, line 84" + wurstStackTrace)
			call dispatch_AbilityDefinition_setEditorSuffix(obj, int_toString(int_pow(2, i - 97)), "\n   OeSetup, line 85" + wurstStackTrace)
		else
			call addAbilityToPreload(Setup_strRaw + i, 1, "\n   OeSetup, line 87" + wurstStackTrace)
		endif
		set i = i + 1
	endloop
	if CompiletimeInit_compiletime then
		set objN = new_AbilityDefinitionStrengthBonusPlus1(Setup_strRaw + 45)
		call dispatch_AbilityDefinitionStrengthBonusPlus1_setStrengthBonus(objN, 1,  - int_pow(2, Setup_maxBonSize), "\n   OeSetup, line 90" + wurstStackTrace)
		call dispatch_AbilityDefinition_setItemAbility(objN, false, "\n   OeSetup, line 91" + wurstStackTrace)
		call dispatch_AbilityDefinition_setName(objN, "Bonus Str -", "\n   OeSetup, line 92" + wurstStackTrace)
		call dispatch_AbilityDefinition_setEditorSuffix(objN, int_toString(int_pow(2, Setup_maxBonSize)), "\n   OeSetup, line 93" + wurstStackTrace)
	else
		call addAbilityToPreload(Setup_strRaw + 45, 1, "\n   OeSetup, line 95" + wurstStackTrace)
	endif
endfunction

function createObjects takes string wurstStackTrace returns nothing
	call lifeAbilitys("\n   OeSetup, line 10" + wurstStackTrace)
	call manaAbilitys("\n   OeSetup, line 11" + wurstStackTrace)
	call agiAbilitys("\n   OeSetup, line 12" + wurstStackTrace)
	call strAbilitys("\n   OeSetup, line 13" + wurstStackTrace)
	call intAbilitys("\n   OeSetup, line 14" + wurstStackTrace)
	call attackAbilitys("\n   OeSetup, line 15" + wurstStackTrace)
	call attackSpeedAbilitys("\n   OeSetup, line 16" + wurstStackTrace)
	call armorAbilitys("\n   OeSetup, line 17" + wurstStackTrace)
	call lifeRegAbilitys("\n   OeSetup, line 18" + wurstStackTrace)
	call manaRegAbilitys("\n   OeSetup, line 19" + wurstStackTrace)
endfunction

function ObjectDefinition_setInt takes integer this_key, string modification, integer value returns nothing
endfunction

function ObjectDefinition_setReal takes integer this_key, string modification, real value returns nothing
endfunction

function ObjectDefinition_setString takes integer this_key, string modification, string value returns nothing
endfunction

function ObjectDefinition_setUnreal takes integer this_key, string modification, real value returns nothing
endfunction

function addDestructableToPreload takes integer id, string wurstStackTrace returns nothing
	call dispatch_HashList_add(PreloadSystem_destructablesToPreload, id, "\n   PreloadSystem, line 52" + wurstStackTrace)
endfunction

function fourChar takes integer a, integer b, integer c, integer d_2 returns integer
	return ((a * 256 + b) * 256 + c) * 256 + d_2
endfunction

function nextValid takes integer c returns integer
	local integer r = c + 1
	if r == 95 then
		set r = r + 1
	endif
	return r
endfunction

function newId takes integer prefix, string wurstStackTrace returns integer
	local integer i
	local integer j
	local integer temp
	if ObjectIdGenerator_helperActivator then
		set i = 0
		loop
			exitwhen i > 2
			if ObjectIdGenerator_id[i] < 126 then
				set ObjectIdGenerator_id[i] = nextValid(ObjectIdGenerator_id[i])
				set j = 0
				set temp = i - 1
				loop
					exitwhen j > temp
					set ObjectIdGenerator_id[j] = 33
					set j = j + 1
				endloop
				return fourChar(prefix, ObjectIdGenerator_id[2], ObjectIdGenerator_id[1], ObjectIdGenerator_id[0])
			endif
			set i = i + 1
		endloop
		call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "No vaild id left" + wurstStackTrace)
		call I2S(1 / 0)
	endif
	return 0
endfunction

function genId takes string wurstStackTrace returns integer
	return newId(ObjectIdGenerator_nonheroPrefix, "\n   ObjectIdGenerator, line 34" + wurstStackTrace)
endfunction

function real_toInt takes real this_57 returns integer
	return R2I(this_57)
endfunction

function addIconType takes string name, string iconPath, string wurstStackTrace returns nothing
	local integer icon1 = genId("\n   IconType, line 253" + wurstStackTrace)
	local integer icon2 = genId("\n   IconType, line 254" + wurstStackTrace)
	local integer u_key
	if  not CompiletimeInit_compiletime then
		call dispatch_HashMap_put(IconType_iconMap1, StringHash(name), icon1, "\n   IconType, line 256" + wurstStackTrace)
		call dispatch_HashMap_put(IconType_iconMap2, StringHash(name), icon2, "\n   IconType, line 257" + wurstStackTrace)
		call addDestructableToPreload(icon1, "\n   IconType, line 258" + wurstStackTrace)
		call addDestructableToPreload(icon2, "\n   IconType, line 259" + wurstStackTrace)
	else
		set u_key = createObjectDefinition("w3b", icon1, 1498704994)
		call ObjectDefinition_setReal(u_key, "bgsc", 0.0)
		call ObjectDefinition_setString(u_key, "bshd", "")
		call ObjectDefinition_setInt(u_key, "bcpd", 0)
		call ObjectDefinition_setString(u_key, "bsuf", "Icon")
		call ObjectDefinition_setUnreal(u_key, "boch", 0.0)
		call ObjectDefinition_setUnreal(u_key, "bsel", 0.0)
		call ObjectDefinition_setString(u_key, "bfil", "war3mapImported\\ButtonC.mdl")
		call ObjectDefinition_setString(u_key, "bnam", name)
		call ObjectDefinition_setString(u_key, "barm", "Ethereal")
		call ObjectDefinition_setString(u_key, "btar", "")
		call ObjectDefinition_setInt(u_key, "bcpr", 0)
		call ObjectDefinition_setString(u_key, "bptx", "")
		call ObjectDefinition_setInt(u_key, "btxi", 31)
		call ObjectDefinition_setString(u_key, "btxf", iconPath)
		set u_key = createObjectDefinition("w3b", icon2, 1498704994)
		call ObjectDefinition_setReal(u_key, "bgsc", 0.0)
		call ObjectDefinition_setString(u_key, "bshd", "")
		call ObjectDefinition_setInt(u_key, "bcpd", 0)
		call ObjectDefinition_setString(u_key, "bsuf", "Icon")
		call ObjectDefinition_setUnreal(u_key, "boch", 0.0)
		call ObjectDefinition_setUnreal(u_key, "bsel", 0.0)
		call ObjectDefinition_setString(u_key, "bfil", "war3mapImported\\ButtonC.mdl")
		call ObjectDefinition_setString(u_key, "bnam", name)
		call ObjectDefinition_setString(u_key, "barm", "Ethereal")
		call ObjectDefinition_setString(u_key, "btar", "")
		call ObjectDefinition_setInt(u_key, "bcpr", 0)
		call ObjectDefinition_setString(u_key, "bptx", "")
		call ObjectDefinition_setInt(u_key, "btxi", 31)
		call ObjectDefinition_setString(u_key, "btxf", iconPath)
		call ObjectDefinition_setInt(u_key, "bvcr", real_toInt(255. * IconType_restColor))
		call ObjectDefinition_setInt(u_key, "bvcg", real_toInt(255. * IconType_restColor))
		call ObjectDefinition_setInt(u_key, "bvcb", real_toInt(255. * IconType_restColor))
	endif
endfunction

function types takes string wurstStackTrace returns nothing
	call addIconType("RingDesCrigges", "ReplaceableTextures\\CommandButtons\\BTNSlow.blp", "\n   IconType, line 13" + wurstStackTrace)
	call addIconType("3M1", "ReplaceableTextures\\CommandButtons\\BTN3M1.blp", "\n   IconType, line 14" + wurstStackTrace)
	call addIconType("Bash", "ReplaceableTextures\\CommandButtons\\BTNBash.blp", "\n   IconType, line 16" + wurstStackTrace)
	call addIconType("Glove", "ReplaceableTextures\\CommandButtons\\BTNGlove.blp", "\n   IconType, line 18" + wurstStackTrace)
endfunction

function boolean_toInt takes boolean this_57 returns integer
	if this_57 then
		return 1
	else
		return 0
	endif
endfunction

function ObjectDefinition_setBoolean takes integer this_key, string modification, boolean value returns nothing
	call ObjectDefinition_setInt(this_key, modification, boolean_toInt(value))
endfunction

function addTipType takes string name, string content, string wurstStackTrace returns nothing
	local integer tip = genId("\n   ToolTipTypes, line 16" + wurstStackTrace)
	local integer u_key
	if  not CompiletimeInit_compiletime then
		call dispatch_HashMap_put(ToolTipTypes_tipMap, StringHash(name), tip, "\n   ToolTipTypes, line 18" + wurstStackTrace)
		call addDestructableToPreload(tip, "\n   ToolTipTypes, line 19" + wurstStackTrace)
	else
		set u_key = createObjectDefinition("w3b", tip, 1498704994)
		call ObjectDefinition_setReal(u_key, "bgsc", 0.01)
		call ObjectDefinition_setString(u_key, "bshd", "")
		call ObjectDefinition_setInt(u_key, "bcpd", 0)
		call ObjectDefinition_setString(u_key, "bsuf", "Tip")
		call ObjectDefinition_setUnreal(u_key, "boch", 0.0)
		call ObjectDefinition_setUnreal(u_key, "bsel", 0.0)
		call ObjectDefinition_setString(u_key, "bfil", "war3mapImported\\ButtonC2.mdl")
		call ObjectDefinition_setString(u_key, "bnam", content)
		call ObjectDefinition_setString(u_key, "barm", "Ethereal")
		call ObjectDefinition_setString(u_key, "btar", "")
		call ObjectDefinition_setInt(u_key, "bcpr", 0)
		call ObjectDefinition_setString(u_key, "bptx", "")
		call ObjectDefinition_setInt(u_key, "btxi", 31)
		call ObjectDefinition_setString(u_key, "btxf", "Alphaicon.blp")
		call ObjectDefinition_setBoolean(u_key, "bgse", true)
		call ObjectDefinition_setUnreal(u_key, "bmas", 5.)
		call ObjectDefinition_setUnreal(u_key, "bmis", 5.)
	endif
endfunction

function types_2 takes string wurstStackTrace returns nothing
	call addTipType("test", "|cffb9d1eaHarry Potter is a series of seven epic fantasy|nnovels written by the British author J. K.|nRowling.|n|n|cff98fb98+60 Movement Speed|n+50 Traction|n+2% Critical Hit Chance|n|n|cfff0e68cActive Ability:|nThe series was originally printed in English by|ntwo major publishers, Bloomsbury in the United|nKingdom and Scholastic Press in the United States.|nThe books have since been published by many|npublishers worldwide. The books, with the seventh|nbook split into two parts.|n|cff00ffffCooldown 30sec.|nBuy it or die!", "\n   ToolTipTypes, line 11" + wurstStackTrace)
endfunction

function types2 takes string wurstStackTrace returns nothing
	call addIconType("Grunt", "ReplaceableTextures\\CommandButtons\\BTNGrunt.blp", "\n   IconType, line 23" + wurstStackTrace)
	call addIconType("HealingSpray", "ReplaceableTextures\\CommandButtons\\BTNHealingSpray.blp", "\n   IconType, line 42" + wurstStackTrace)
	call addIconType("Hex", "ReplaceableTextures\\CommandButtons\\BTNHex.blp", "\n   IconType, line 71" + wurstStackTrace)
	call addIconType("Hydra", "ReplaceableTextures\\CommandButtons\\BTNHydra.blp", "\n   IconType, line 105" + wurstStackTrace)
	call addIconType("Impale", "ReplaceableTextures\\CommandButtons\\BTNImpale.blp", "\n   IconType, line 119" + wurstStackTrace)
	call addIconType("ManaStone", "ReplaceableTextures\\CommandButtons\\BTNManaStone.blp", "\n   IconType, line 199" + wurstStackTrace)
endfunction

function closure_impl_32 takes integer this_57, string wurstStackTrace returns nothing
	call createObjects("\n   CompiletimeInit, line 8" + wurstStackTrace)
	call types_2("\n   CompiletimeInit, line 8" + wurstStackTrace)
	call types("\n   CompiletimeInit, line 8" + wurstStackTrace)
	call types2("\n   CompiletimeInit, line 8" + wurstStackTrace)
endfunction

function closure_impl_33 takes integer this_57, string wurstStackTrace returns nothing
	set Unit_bonusLifePer[this_40[this_57]] = Unit_bonusLifePer[this_40[this_57]] - amount_38[this_57]
	call dispatch_Unit_updateLife(this_40[this_57], "\n   UnitClass, line 788" + wurstStackTrace)
endfunction

function closure_impl_34 takes integer this_57, string wurstStackTrace returns nothing
	set Unit_bonusMana[this_48[this_57]] = Unit_bonusMana[this_48[this_57]] - amount_46[this_57]
	call dispatch_Unit_updateMana(this_48[this_57], "\n   UnitClass, line 870" + wurstStackTrace)
endfunction

function closure_impl_35 takes integer this_57 returns nothing
	set Unit_critdamage[this_20[this_57]] = Unit_critdamage[this_20[this_57]] - amount_18[this_57]
endfunction

function closure_impl_36 takes integer this_57 returns nothing
	set Unit_magicReduction[this_16[this_57]] = Unit_magicReduction[this_16[this_57]] - amount_14[this_57]
endfunction

function closure_impl_37 takes integer this_57, string wurstStackTrace returns nothing
	set Unit_bonusAttack[this_4[this_57]] = Unit_bonusAttack[this_4[this_57]] - amount_2[this_57]
	call dispatch_Unit_updateAttack(this_4[this_57], "\n   UnitClass, line 474" + wurstStackTrace)
endfunction

function closure_impl_38 takes integer this_57, string wurstStackTrace returns nothing
	set Unit_bonusLife[this_38[this_57]] = Unit_bonusLife[this_38[this_57]] - amount_36[this_57]
	call dispatch_Unit_updateLife(this_38[this_57], "\n   UnitClass, line 769" + wurstStackTrace)
endfunction

function closure_impl_39 takes integer this_57, string wurstStackTrace returns nothing
	set Unit_bonusArmorPer[this_26[this_57]] = Unit_bonusArmorPer[this_26[this_57]] - amount_24[this_57]
	call dispatch_Unit_updateArmor(this_26[this_57], "\n   UnitClass, line 654" + wurstStackTrace)
endfunction

function closure_impl_40 takes integer this_57, string wurstStackTrace returns nothing
	set Unit_bonusMovespeed[this_34[this_57]] = Unit_bonusMovespeed[this_34[this_57]] - amount_32[this_57]
	call dispatch_Unit_updateMovespeed(this_34[this_57], "\n   UnitClass, line 728" + wurstStackTrace)
endfunction

function closure_impl_41 takes integer this_57 returns nothing
	set Unit_normalReduction[this_14[this_57]] = Unit_normalReduction[this_14[this_57]] - amount_12[this_57]
endfunction

function closure_impl_42 takes integer this_57, string wurstStackTrace returns nothing
	set Unit_bonusMana[this_46[this_57]] = Unit_bonusMana[this_46[this_57]] - amount_44[this_57]
	call dispatch_Unit_updateMana(this_46[this_57], "\n   UnitClass, line 851" + wurstStackTrace)
endfunction

function closure_impl_43 takes integer this_57, string wurstStackTrace returns nothing
	set Unit_bonusAttackspeed[this_32[this_57]] = Unit_bonusAttackspeed[this_32[this_57]] - amount_30[this_57]
	call dispatch_Unit_updateAttackspeed(this_32[this_57], "\n   UnitClass, line 706" + wurstStackTrace)
endfunction

function closure_impl_44 takes integer this_57 returns nothing
	set Unit_lifesteal[this_10[this_57]] = Unit_lifesteal[this_10[this_57]] - amount_8[this_57]
endfunction

function closure_impl_45 takes integer this_57, string wurstStackTrace returns nothing
	set Unit_bonusLifeReg[this_42[this_57]] = Unit_bonusLifeReg[this_42[this_57]] - amount_40[this_57]
	call dispatch_Unit_updateLifeReg(this_42[this_57], "\n   UnitClass, line 810" + wurstStackTrace)
endfunction

function dispatch_Hero_updateLife takes integer this_57, string wurstStackTrace returns nothing
	if Unit_typeId[this_57] == 0 then
		if this_57 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Hero.updateLife" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Hero.updateLife on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call Hero_updateLife(this_57, "\n   HeroClass, line 164" + wurstStackTrace)
endfunction

function dispatch_Hero_updateMana takes integer this_57, string wurstStackTrace returns nothing
	if Unit_typeId[this_57] == 0 then
		if this_57 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Hero.updateMana" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Hero.updateMana on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call Hero_updateMana(this_57, "\n   HeroClass, line 168" + wurstStackTrace)
endfunction

function closure_impl_46 takes integer this_57, string wurstStackTrace returns nothing
	call dispatch_Unit_updateArmor(this_53[this_57], "\n   HeroClass, line 130" + wurstStackTrace)
	call dispatch_Hero_updateLife(this_53[this_57], "\n   HeroClass, line 131" + wurstStackTrace)
	call dispatch_Hero_updateMana(this_53[this_57], "\n   HeroClass, line 132" + wurstStackTrace)
endfunction

function closure_impl_47 takes integer this_57 returns nothing
	call RemoveDestructable(Tooltip_d[this_54[this_57]])
endfunction

function closure_impl_48 takes integer this_57 returns nothing
	if GetLocalPlayer() == p[this_57] then
	endif
endfunction

function closure_impl_49 takes integer this_57 returns nothing
	set Unit_critchance[this_18[this_57]] = Unit_critchance[this_18[this_57]] - amount_16[this_57]
endfunction

function closure_impl_50 takes integer this_57, string wurstStackTrace returns nothing
	set Unit_bonusArmor[this_24[this_57]] = Unit_bonusArmor[this_24[this_57]] - amount_22[this_57]
	call dispatch_Unit_updateArmor(this_24[this_57], "\n   UnitClass, line 635" + wurstStackTrace)
endfunction

function dispatch_Tooltip_showDirect takes integer this_57, player p_2, string wurstStackTrace returns nothing
	if Widget_typeId[this_57] == 0 then
		if this_57 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Tooltip.showDirect" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Tooltip.showDirect on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call Tooltip_showDirect(this_57, p_2, "\n   ToolTip, line 19" + wurstStackTrace)
endfunction

function alloc_Tooltip takes nothing returns integer
	local integer this_57
	if Widget_firstFree == 0 then
		set Widget_maxIndex = Widget_maxIndex + 1
		set this_57 = Widget_maxIndex
	else
		set Widget_firstFree = Widget_firstFree - 1
		set this_57 = Widget_nextFree[Widget_firstFree]
	endif
	set Widget_typeId[this_57] = 810
	return this_57
endfunction

function construct_Widget takes integer this_57, integer pos_x, integer pos_y, integer size_x, integer size_y returns nothing
	local integer tempIndex = this_57
	local integer tempIndex_2
	set Widget_pos[tempIndex] = pos_x
	set Widget_pos_2[tempIndex] = pos_y
	set tempIndex_2 = this_57
	set Widget_size[tempIndex_2] = size_x
	set Widget_size_2[tempIndex_2] = size_y
endfunction

function element_toVec takes integer this_x, integer this_y returns real
	set element_toVec_return_x = this_x * Setup_tileSize * 1.
	set element_toVec_return_y = this_y * Setup_tileSize * 1.
	return element_toVec_return_x
endfunction

function HashMap_get takes integer this_57, integer key returns integer
	return hashtable_loadInt(HashMap_ht, this_57, key)
endfunction

function dispatch_HashMap_get takes integer this_57, integer key, string wurstStackTrace returns integer
	local integer get_result
	if HashMap_typeId[this_57] == 0 then
		if this_57 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling HashMap.get" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called HashMap.get on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	set get_result = HashMap_get(this_57, key)
	return get_result
endfunction

function getTipType takes string s, string wurstStackTrace returns integer
	return dispatch_HashMap_get(ToolTipTypes_tipMap, StringHash(s), "\n   ToolTipTypes, line 40" + wurstStackTrace)
endfunction

function vec2_op_plus takes real this_x, real this_y, real v_x, real v_y returns real
	set vec2_op_plus_return_x = this_x + v_x
	set vec2_op_plus_return_y = this_y + v_y
	return vec2_op_plus_return_x
endfunction

function construct_Tooltip takes integer this_57, integer pos_x, integer pos_y, string tiptype, string wurstStackTrace returns nothing
	local integer tempIndex
	call construct_Widget(this_57, pos_x, pos_y, 10, 10)
	set Tooltip_id[this_57] = getTipType(tiptype, "\n   ToolTip, line 16" + wurstStackTrace)
	set tempIndex = this_57
	set Tooltip_realPos[tempIndex] = vec2_op_plus(element_toVec(pos_x, pos_y), element_toVec_return_y, Setup_menuStart_x, Setup_menuStart_y)
	set Tooltip_realPos_2[tempIndex] = vec2_op_plus_return_y
endfunction

function new_Tooltip takes integer pos_x, integer pos_y, string tiptype, string wurstStackTrace returns integer
	local integer this_57 = alloc_Tooltip()
	call construct_Tooltip(this_57, pos_x, pos_y, tiptype, "\n   ToolTip, line 14" + wurstStackTrace)
	return this_57
endfunction

function closure_impl_51 takes integer this_57, string wurstStackTrace returns nothing
	call dispatch_Tooltip_showDirect(new_Tooltip(35, 0, "test", "\n   GameStart, line 334" + wurstStackTrace), Player(0), "\n   GameStart, line 334" + wurstStackTrace)
endfunction

function closure_impl_52 takes integer this_57 returns nothing
	set Unit_spellpower[this_8[this_57]] = Unit_spellpower[this_8[this_57]] - amount_6[this_57]
endfunction

function unit_remove takes unit this_57 returns nothing
	call RemoveUnit(this_57)
endfunction

function closure_impl_53 takes integer this_57 returns nothing
	call unit_remove(u[this_57])
endfunction

function closure_impl_54 takes integer this_57 returns nothing
	set Unit_bonusResistancePer[this_30[this_57]] = Unit_bonusResistancePer[this_30[this_57]] - amount_28[this_57]
endfunction

function closure_impl_55 takes integer this_57 returns nothing
	set Unit_spellpowerPer[this_22[this_57]] = Unit_spellpowerPer[this_22[this_57]] - amount_20[this_57]
endfunction

function closure_impl_56 takes integer this_57 returns nothing
	set Unit_bonusResistance[this_28[this_57]] = Unit_bonusResistance[this_28[this_57]] - amount_26[this_57]
endfunction

function closure_impl_57 takes integer this_57, string wurstStackTrace returns nothing
	set Unit_bonusAttackPer[this_6[this_57]] = Unit_bonusAttackPer[this_6[this_57]] - amount_4[this_57]
	call dispatch_Unit_updateAttack(this_6[this_57], "\n   UnitClass, line 493" + wurstStackTrace)
endfunction

function closure_impl_58 takes integer this_57 returns nothing
	set Unit_spellVamp[this_12[this_57]] = Unit_spellVamp[this_12[this_57]] - amount_10[this_57]
endfunction

function closure_impl_59 takes integer this_57, string wurstStackTrace returns nothing
	set Unit_bonusLifeRegPer[this_44[this_57]] = Unit_bonusLifeRegPer[this_44[this_57]] - amount_42[this_57]
	call dispatch_Unit_updateLifeReg(this_44[this_57], "\n   UnitClass, line 829" + wurstStackTrace)
endfunction

function closure_impl_60 takes integer this_57 returns nothing
	call RemoveDestructable(d[this_57])
endfunction

function dispatch_CallbackSingle_call takes integer this_57, string wurstStackTrace returns nothing
	if CallbackSingle_typeId[this_57] == 0 then
		if this_57 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling CallbackSingle.call" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called CallbackSingle.call on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	if CallbackSingle_typeId[this_57] <= 737 then
		if CallbackSingle_typeId[this_57] <= 721 then
			if CallbackSingle_typeId[this_57] <= 713 then
				if CallbackSingle_typeId[this_57] <= 677 then
					if CallbackSingle_typeId[this_57] <= 673 then
						call closure_impl_53(this_57)
					else
						call closure_impl_60(this_57)
					endif
				elseif CallbackSingle_typeId[this_57] <= 678 then
					call closure_impl_32(this_57, "\n   ClosureTimers, line 64" + wurstStackTrace)
				else
					call closure_impl_37(this_57, "\n   ClosureTimers, line 64" + wurstStackTrace)
				endif
			elseif CallbackSingle_typeId[this_57] <= 717 then
				if CallbackSingle_typeId[this_57] <= 715 then
					call closure_impl_57(this_57, "\n   ClosureTimers, line 64" + wurstStackTrace)
				else
					call closure_impl_52(this_57)
				endif
			elseif CallbackSingle_typeId[this_57] <= 719 then
				call closure_impl_44(this_57)
			else
				call closure_impl_58(this_57)
			endif
		elseif CallbackSingle_typeId[this_57] <= 729 then
			if CallbackSingle_typeId[this_57] <= 725 then
				if CallbackSingle_typeId[this_57] <= 723 then
					call closure_impl_41(this_57)
				else
					call closure_impl_36(this_57)
				endif
			elseif CallbackSingle_typeId[this_57] <= 727 then
				call closure_impl_49(this_57)
			else
				call closure_impl_35(this_57)
			endif
		elseif CallbackSingle_typeId[this_57] <= 733 then
			if CallbackSingle_typeId[this_57] <= 731 then
				call closure_impl_55(this_57)
			else
				call closure_impl_50(this_57, "\n   ClosureTimers, line 64" + wurstStackTrace)
			endif
		elseif CallbackSingle_typeId[this_57] <= 735 then
			call closure_impl_39(this_57, "\n   ClosureTimers, line 64" + wurstStackTrace)
		else
			call closure_impl_56(this_57)
		endif
	elseif CallbackSingle_typeId[this_57] <= 753 then
		if CallbackSingle_typeId[this_57] <= 745 then
			if CallbackSingle_typeId[this_57] <= 741 then
				if CallbackSingle_typeId[this_57] <= 739 then
					call closure_impl_54(this_57)
				else
					call closure_impl_43(this_57, "\n   ClosureTimers, line 64" + wurstStackTrace)
				endif
			elseif CallbackSingle_typeId[this_57] <= 743 then
				call closure_impl_40(this_57, "\n   ClosureTimers, line 64" + wurstStackTrace)
			else
				call closure_impl_29(this_57, "\n   ClosureTimers, line 64" + wurstStackTrace)
			endif
		elseif CallbackSingle_typeId[this_57] <= 749 then
			if CallbackSingle_typeId[this_57] <= 747 then
				call closure_impl_38(this_57, "\n   ClosureTimers, line 64" + wurstStackTrace)
			else
				call closure_impl_33(this_57, "\n   ClosureTimers, line 64" + wurstStackTrace)
			endif
		elseif CallbackSingle_typeId[this_57] <= 751 then
			call closure_impl_45(this_57, "\n   ClosureTimers, line 64" + wurstStackTrace)
		else
			call closure_impl_59(this_57, "\n   ClosureTimers, line 64" + wurstStackTrace)
		endif
	elseif CallbackSingle_typeId[this_57] <= 761 then
		if CallbackSingle_typeId[this_57] <= 757 then
			if CallbackSingle_typeId[this_57] <= 755 then
				call closure_impl_42(this_57, "\n   ClosureTimers, line 64" + wurstStackTrace)
			else
				call closure_impl_34(this_57, "\n   ClosureTimers, line 64" + wurstStackTrace)
			endif
		elseif CallbackSingle_typeId[this_57] <= 759 then
			call closure_impl_30(this_57, "\n   ClosureTimers, line 64" + wurstStackTrace)
		else
			call closure_impl_31(this_57, "\n   ClosureTimers, line 64" + wurstStackTrace)
		endif
	elseif CallbackSingle_typeId[this_57] <= 811 then
		if CallbackSingle_typeId[this_57] <= 763 then
			call closure_impl_46(this_57, "\n   ClosureTimers, line 64" + wurstStackTrace)
		else
			call closure_impl_47(this_57)
		endif
	elseif CallbackSingle_typeId[this_57] <= 812 then
		call closure_impl_48(this_57)
	else
		call closure_impl_51(this_57, "\n   ClosureTimers, line 64" + wurstStackTrace)
	endif
endfunction

function CallbackSingle_onDestroy takes integer this_57 returns nothing
endfunction

function dealloc_CallbackSingle takes integer obj, string wurstStackTrace returns nothing
	if CallbackSingle_typeId[obj] == 0 then
		call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Double free: object of type CallbackSingle" + wurstStackTrace)
		call I2S(1 / 0)
	else
		set CallbackSingle_nextFree[CallbackSingle_firstFree] = obj
		set CallbackSingle_firstFree = CallbackSingle_firstFree + 1
		set CallbackSingle_typeId[obj] = 0
	endif
endfunction

function destroyCallbackSingle takes integer this_57, string wurstStackTrace returns nothing
	call CallbackSingle_onDestroy(this_57)
	call dealloc_CallbackSingle(this_57, "\n   ClosureTimers, line 62" + wurstStackTrace)
endfunction

function dispatch_CallbackSingle_destroyCallbackSingle takes integer this_57, string wurstStackTrace returns nothing
	if CallbackSingle_typeId[this_57] == 0 then
		if this_57 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling CallbackSingle.destroyCallbackSingle" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called CallbackSingle.destroyCallbackSingle on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	if CallbackSingle_typeId[this_57] <= 737 then
		if CallbackSingle_typeId[this_57] <= 721 then
			if CallbackSingle_typeId[this_57] <= 713 then
				if CallbackSingle_typeId[this_57] <= 673 then
					if CallbackSingle_typeId[this_57] <= 666 then
						call destroyCallbackSingle(this_57, "\n   ClosureTimers, line 62" + wurstStackTrace)
					else
						call destroyCallbackSingle(this_57, "\n   ClosureTimers, line 62" + wurstStackTrace)
					endif
				elseif CallbackSingle_typeId[this_57] <= 678 then
					call destroyCallbackSingle(this_57, "\n   ClosureTimers, line 62" + wurstStackTrace)
				else
					call destroyCallbackSingle(this_57, "\n   ClosureTimers, line 62" + wurstStackTrace)
				endif
			elseif CallbackSingle_typeId[this_57] <= 717 then
				if CallbackSingle_typeId[this_57] <= 715 then
					call destroyCallbackSingle(this_57, "\n   ClosureTimers, line 62" + wurstStackTrace)
				else
					call destroyCallbackSingle(this_57, "\n   ClosureTimers, line 62" + wurstStackTrace)
				endif
			elseif CallbackSingle_typeId[this_57] <= 719 then
				call destroyCallbackSingle(this_57, "\n   ClosureTimers, line 62" + wurstStackTrace)
			else
				call destroyCallbackSingle(this_57, "\n   ClosureTimers, line 62" + wurstStackTrace)
			endif
		elseif CallbackSingle_typeId[this_57] <= 729 then
			if CallbackSingle_typeId[this_57] <= 725 then
				if CallbackSingle_typeId[this_57] <= 723 then
					call destroyCallbackSingle(this_57, "\n   ClosureTimers, line 62" + wurstStackTrace)
				else
					call destroyCallbackSingle(this_57, "\n   ClosureTimers, line 62" + wurstStackTrace)
				endif
			elseif CallbackSingle_typeId[this_57] <= 727 then
				call destroyCallbackSingle(this_57, "\n   ClosureTimers, line 62" + wurstStackTrace)
			else
				call destroyCallbackSingle(this_57, "\n   ClosureTimers, line 62" + wurstStackTrace)
			endif
		elseif CallbackSingle_typeId[this_57] <= 733 then
			if CallbackSingle_typeId[this_57] <= 731 then
				call destroyCallbackSingle(this_57, "\n   ClosureTimers, line 62" + wurstStackTrace)
			else
				call destroyCallbackSingle(this_57, "\n   ClosureTimers, line 62" + wurstStackTrace)
			endif
		elseif CallbackSingle_typeId[this_57] <= 735 then
			call destroyCallbackSingle(this_57, "\n   ClosureTimers, line 62" + wurstStackTrace)
		else
			call destroyCallbackSingle(this_57, "\n   ClosureTimers, line 62" + wurstStackTrace)
		endif
	elseif CallbackSingle_typeId[this_57] <= 753 then
		if CallbackSingle_typeId[this_57] <= 745 then
			if CallbackSingle_typeId[this_57] <= 741 then
				if CallbackSingle_typeId[this_57] <= 739 then
					call destroyCallbackSingle(this_57, "\n   ClosureTimers, line 62" + wurstStackTrace)
				else
					call destroyCallbackSingle(this_57, "\n   ClosureTimers, line 62" + wurstStackTrace)
				endif
			elseif CallbackSingle_typeId[this_57] <= 743 then
				call destroyCallbackSingle(this_57, "\n   ClosureTimers, line 62" + wurstStackTrace)
			else
				call destroyCallbackSingle(this_57, "\n   ClosureTimers, line 62" + wurstStackTrace)
			endif
		elseif CallbackSingle_typeId[this_57] <= 749 then
			if CallbackSingle_typeId[this_57] <= 747 then
				call destroyCallbackSingle(this_57, "\n   ClosureTimers, line 62" + wurstStackTrace)
			else
				call destroyCallbackSingle(this_57, "\n   ClosureTimers, line 62" + wurstStackTrace)
			endif
		elseif CallbackSingle_typeId[this_57] <= 751 then
			call destroyCallbackSingle(this_57, "\n   ClosureTimers, line 62" + wurstStackTrace)
		else
			call destroyCallbackSingle(this_57, "\n   ClosureTimers, line 62" + wurstStackTrace)
		endif
	elseif CallbackSingle_typeId[this_57] <= 761 then
		if CallbackSingle_typeId[this_57] <= 757 then
			if CallbackSingle_typeId[this_57] <= 755 then
				call destroyCallbackSingle(this_57, "\n   ClosureTimers, line 62" + wurstStackTrace)
			else
				call destroyCallbackSingle(this_57, "\n   ClosureTimers, line 62" + wurstStackTrace)
			endif
		elseif CallbackSingle_typeId[this_57] <= 759 then
			call destroyCallbackSingle(this_57, "\n   ClosureTimers, line 62" + wurstStackTrace)
		else
			call destroyCallbackSingle(this_57, "\n   ClosureTimers, line 62" + wurstStackTrace)
		endif
	elseif CallbackSingle_typeId[this_57] <= 812 then
		if CallbackSingle_typeId[this_57] <= 763 then
			call destroyCallbackSingle(this_57, "\n   ClosureTimers, line 62" + wurstStackTrace)
		else
			call destroyCallbackSingle(this_57, "\n   ClosureTimers, line 62" + wurstStackTrace)
		endif
	else
		call destroyCallbackSingle(this_57, "\n   ClosureTimers, line 62" + wurstStackTrace)
	endif
endfunction

function CallbackSingle_staticCallback takes string wurstStackTrace returns nothing
	local timer t = GetExpiredTimer()
	local integer cb = timer_getData(t, "\n   ClosureTimers, line 73" + wurstStackTrace)
	call dispatch_CallbackSingle_call(cb, "\n   ClosureTimers, line 74" + wurstStackTrace)
	call dispatch_CallbackSingle_destroyCallbackSingle(cb, "\n   ClosureTimers, line 75" + wurstStackTrace)
	call timer_release(t, "\n   ClosureTimers, line 76" + wurstStackTrace)
	set t = null
endfunction

function bridge_CallbackSingle_staticCallback takes nothing returns nothing
	call CallbackSingle_staticCallback("\n   ClosureTimers, line 67")
endfunction

function CustomBar_unlock takes integer this_57 returns nothing
	if  not CustomBar_locked[this_57] then
		return
	endif
	set CustomBar_count = CustomBar_count - 1
	if CustomBar_count == 0 then
		call PauseTimer(CustomBar_animationTimer)
	endif
	set CustomBar_bars[CustomBar_lockindex[this_57]] = CustomBar_bars[CustomBar_count]
	set CustomBar_lockindex[CustomBar_bars[CustomBar_count]] = CustomBar_lockindex[this_57]
	set CustomBar_locked[this_57] = false
endfunction

function dispatch_CustomBar_unlock takes integer this_57, string wurstStackTrace returns nothing
	if CustomBar_typeId[this_57] == 0 then
		if this_57 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling CustomBar.unlock" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called CustomBar.unlock on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call CustomBar_unlock(this_57)
endfunction

function CustomBar_onDestroy takes integer this_57, string wurstStackTrace returns nothing
	if CustomBar_t[this_57] != null then
		call DestroyTextTag(CustomBar_t[this_57])
	endif
	if CustomBar_locked[this_57] then
		call dispatch_CustomBar_unlock(this_57, "\n   CustomBar, line 357" + wurstStackTrace)
	endif
endfunction

function dealloc_CustomBar takes integer obj, string wurstStackTrace returns nothing
	if CustomBar_typeId[obj] == 0 then
		call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Double free: object of type CustomBar" + wurstStackTrace)
		call I2S(1 / 0)
	else
		set CustomBar_firstFree = CustomBar_firstFree + 1
		set CustomBar_typeId[obj] = 0
	endif
endfunction

function destroyCustomBar takes integer this_57, string wurstStackTrace returns nothing
	call CustomBar_onDestroy(this_57, "\n   CustomBar, line 352" + wurstStackTrace)
	call dealloc_CustomBar(this_57, "\n   CustomBar, line 352" + wurstStackTrace)
endfunction

function dispatch_CustomBar_destroyCustomBar takes integer this_57, string wurstStackTrace returns nothing
	if CustomBar_typeId[this_57] == 0 then
		if this_57 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling CustomBar.destroyCustomBar" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called CustomBar.destroyCustomBar on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call destroyCustomBar(this_57, "\n   CustomBar, line 110" + wurstStackTrace)
endfunction

function CustomBar_fadeOutCallback takes string wurstStackTrace returns nothing
	local integer bar = timer_getData(GetExpiredTimer(), "\n   CustomBar, line 361" + wurstStackTrace)
	set CustomBar_t[bar] = null
	call dispatch_CustomBar_destroyCustomBar(bar, "\n   CustomBar, line 363" + wurstStackTrace)
	call timer_release(GetExpiredTimer(), "\n   CustomBar, line 364" + wurstStackTrace)
endfunction

function bridge_CustomBar_fadeOutCallback takes nothing returns nothing
	call CustomBar_fadeOutCallback("\n   CustomBar, line 377")
endfunction

function ArrayQueue_units_set takes integer instanceId, integer arrayIndex, unit value, string wurstStackTrace returns nothing
	if arrayIndex < 0 or arrayIndex >= 6 then
		call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Index out of Bounds" + wurstStackTrace)
		call I2S(1 / 0)
	elseif arrayIndex <= 2 then
		if arrayIndex <= 1 then
			if arrayIndex <= 0 then
				set ArrayQueue_units_0[instanceId] = value
			else
				set ArrayQueue_units_1[instanceId] = value
			endif
		else
			set ArrayQueue_units_2[instanceId] = value
		endif
	elseif arrayIndex <= 4 then
		if arrayIndex <= 3 then
			set ArrayQueue_units_3[instanceId] = value
		else
			set ArrayQueue_units_4[instanceId] = value
		endif
	else
		set ArrayQueue_units_5[instanceId] = value
	endif
endfunction

function ArrayQueue_enqueue takes integer this_57, unit u_2, string wurstStackTrace returns nothing
	if ArrayQueue_size[this_57] < NewDummyRecycler_SAVED_UNITS_PER_ANGLE then
		set ArrayQueue_size[this_57] = ArrayQueue_size[this_57] + 1
		set ArrayQueue_rp[this_57] = ModuloInteger(ArrayQueue_rp[this_57] + 1, NewDummyRecycler_SAVED_UNITS_PER_ANGLE)
		call ArrayQueue_units_set(this_57, ArrayQueue_rp[this_57], u_2, "\n   NewDummyRecycler, line 47" + wurstStackTrace)
	else
		call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Queue Overflow" + wurstStackTrace)
		call I2S(1 / 0)
	endif
endfunction

function dispatch_ArrayQueue_enqueue takes integer this_57, unit u_2, string wurstStackTrace returns nothing
	if ArrayQueue_typeId[this_57] == 0 then
		if this_57 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling ArrayQueue.enqueue" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called ArrayQueue.enqueue on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call ArrayQueue_enqueue(this_57, u_2, "\n   NewDummyRecycler, line 43" + wurstStackTrace)
endfunction

function unit_pause takes unit this_57 returns nothing
	call PauseUnit(this_57, true)
endfunction

function unit_setFacing takes unit this_57, real deg returns nothing
	call SetUnitFacing(this_57, deg)
endfunction

function unit_setXY takes unit this_57, real pos_x, real pos_y returns nothing
	call SetUnitX(this_57, pos_x)
	call SetUnitY(this_57, pos_y)
endfunction

function DummyRecycler_recycle takes unit u_2, string wurstStackTrace returns nothing
	local integer smallestQueue = 0
	local integer i = 1
	local integer temp = NewDummyRecycler_DIFFERENT_ANGLES - 1
	local unit receiver
	local unit receiver_2
	local unit receiver_3
	loop
		exitwhen i > temp
		if ArrayQueue_size[DummyRecycler_angleQueues[smallestQueue]] > ArrayQueue_size[DummyRecycler_angleQueues[i]] then
			set smallestQueue = i
		endif
		set i = i + 1
	endloop
	if ArrayQueue_size[DummyRecycler_angleQueues[smallestQueue]] >= NewDummyRecycler_SAVED_UNITS_PER_ANGLE then
		call unit_remove(u_2)
	else
		call dispatch_ArrayQueue_enqueue(DummyRecycler_angleQueues[smallestQueue], u_2, "\n   NewDummyRecycler, line 27" + wurstStackTrace)
		set receiver = u_2
		call unit_setXY(receiver, MapBounds_boundMax_x, MapBounds_boundMax_y)
		set receiver_2 = receiver
		call unit_pause(receiver_2)
		set receiver_3 = receiver_2
		call unit_setFacing(receiver_3, smallestQueue * NewDummyRecycler_ANGLE_DEGREE)
	endif
	set receiver = null
	set receiver_2 = null
	set receiver_3 = null
endfunction

function DelayNode_onDestroy takes integer this_57 returns nothing
endfunction

function dealloc_DelayNode takes integer obj, string wurstStackTrace returns nothing
	if DelayNode_typeId[obj] == 0 then
		call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Double free: object of type DelayNode" + wurstStackTrace)
		call I2S(1 / 0)
	else
		set DelayNode_nextFree[DelayNode_firstFree] = obj
		set DelayNode_firstFree = DelayNode_firstFree + 1
		set DelayNode_typeId[obj] = 0
	endif
endfunction

function destroyDelayNode takes integer this_57, string wurstStackTrace returns nothing
	call DelayNode_onDestroy(this_57)
	call dealloc_DelayNode(this_57, "\n   NewDummyRecycler, line 60" + wurstStackTrace)
endfunction

function dispatch_DelayNode_destroyDelayNode takes integer this_57, string wurstStackTrace returns nothing
	if DelayNode_typeId[this_57] == 0 then
		if this_57 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling DelayNode.destroyDelayNode" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called DelayNode.destroyDelayNode on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call destroyDelayNode(this_57, "\n   NewDummyRecycler, line 60" + wurstStackTrace)
endfunction

function timer_getElapsed takes timer this_57 returns real
	return TimerGetElapsed(this_57)
endfunction

function getElapsedGameTime takes nothing returns real
	return timer_getElapsed(GameTimer_gameTimer)
endfunction

function DelayNode_recycle takes string wurstStackTrace returns nothing
	local integer tmp
	call DummyRecycler_recycle(DelayNode_u[DelayNode_first], "\n   NewDummyRecycler, line 109" + wurstStackTrace)
	set tmp = DelayNode_first
	if DelayNode_next[DelayNode_first] == 0 then
		set DelayNode_first = 0
	endif
	if DelayNode_next[DelayNode_first] != 0 then
		set DelayNode_first = DelayNode_next[DelayNode_first]
		call timer_start(DelayNode_t, DelayNode_delayTime[DelayNode_first] - getElapsedGameTime(), ref_function_bridge_DelayNode_recycle)
	else
		set DelayNode_first = 0
	endif
	call dispatch_DelayNode_destroyDelayNode(tmp, "\n   NewDummyRecycler, line 119" + wurstStackTrace)
endfunction

function bridge_DelayNode_recycle takes nothing returns nothing
	call DelayNode_recycle("\n   NewDummyRecycler, line 104")
endfunction

function bridge_DelayNode_recycle_2 takes nothing returns nothing
	call DelayNode_recycle("\n   NewDummyRecycler, line 116")
endfunction

function bridge_DelayNode_recycle_3 takes nothing returns nothing
	call DelayNode_recycle("\n   NewDummyRecycler, line 106")
endfunction

function LinkedListModule_getFirst takes nothing returns integer
	return LinkedListModule_first
endfunction

function LinkedListModule_getNext takes integer this_57 returns integer
	return LinkedListModule_next[this_57]
endfunction

function dispatch_Dot_getNext takes integer this_57, string wurstStackTrace returns integer
	local integer getNext_result
	if Dot_typeId[this_57] == 0 then
		if this_57 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Dot.getNext" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Dot.getNext on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	set getNext_result = LinkedListModule_getNext(this_57)
	return getNext_result
endfunction

function Event_onDestroy takes integer this_57, string wurstStackTrace returns nothing
	local integer buffer1 = Event_first[this_57]
	local integer buffer2
	loop
		exitwhen  not (buffer1 != 0)
		set buffer2 = Action_next[buffer1]
		call dispatch_Action_destroyAction(buffer1, "\n   CustomClosureEvents, line 57" + wurstStackTrace)
		set buffer1 = buffer2
	endloop
endfunction

function Unit2Event_onDestroy takes integer this_57, string wurstStackTrace returns nothing
	call Event_onDestroy(this_57, "\n   UnitEvents, line 105" + wurstStackTrace)
endfunction

function dealloc_Unit2Event takes integer obj, string wurstStackTrace returns nothing
	if Event_typeId[obj] == 0 then
		call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Double free: object of type Unit2Event" + wurstStackTrace)
		call I2S(1 / 0)
	else
		set Event_nextFree[Event_firstFree] = obj
		set Event_firstFree = Event_firstFree + 1
		set Event_typeId[obj] = 0
	endif
endfunction

function destroyUnit2Event takes integer this_57, string wurstStackTrace returns nothing
	call Unit2Event_onDestroy(this_57, "\n   UnitEvents, line 105" + wurstStackTrace)
	call dealloc_Unit2Event(this_57, "\n   UnitEvents, line 105" + wurstStackTrace)
endfunction

function dispatch_Unit2Event_destroyUnit2Event takes integer this_57, string wurstStackTrace returns nothing
	if Event_typeId[this_57] == 0 then
		if this_57 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Unit2Event.destroyUnit2Event" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Unit2Event.destroyUnit2Event on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call destroyUnit2Event(this_57, "\n   UnitEvents, line 105" + wurstStackTrace)
endfunction

function Shield_onDestroy takes integer this_57, string wurstStackTrace returns nothing
	set ShieldList_shieldSum[Shield_referingList[this_57]] = ShieldList_shieldSum[Shield_referingList[this_57]] - Shield_amount[this_57]
	call timer_release(Shield_t[this_57], "\n   Shield, line 93" + wurstStackTrace)
	if Shield_shieldDestroyed[this_57] != 0 then
		call dispatch_Unit2Event_destroyUnit2Event(Shield_shieldDestroyed[this_57], "\n   Shield, line 95" + wurstStackTrace)
	endif
	if Shield_prev[this_57] != 0 then
		set Shield_next[Shield_prev[this_57]] = Shield_next[this_57]
	endif
	if Shield_next[this_57] != 0 then
		set Shield_prev[Shield_next[this_57]] = Shield_prev[this_57]
	endif
	if ShieldList_first[Shield_referingList[this_57]] == this_57 then
		set ShieldList_first[Shield_referingList[this_57]] = Shield_next[this_57]
	endif
	if ShieldList_last[Shield_referingList[this_57]] == this_57 then
		set ShieldList_last[Shield_referingList[this_57]] = Shield_prev[this_57]
	endif
endfunction

function dealloc_Shield takes integer obj, string wurstStackTrace returns nothing
	if Shield_typeId[obj] == 0 then
		call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Double free: object of type Shield" + wurstStackTrace)
		call I2S(1 / 0)
	else
		set Shield_nextFree[Shield_firstFree] = obj
		set Shield_firstFree = Shield_firstFree + 1
		set Shield_typeId[obj] = 0
	endif
endfunction

function destroyShield takes integer this_57, string wurstStackTrace returns nothing
	call Shield_onDestroy(this_57, "\n   Shield, line 91" + wurstStackTrace)
	call dealloc_Shield(this_57, "\n   Shield, line 91" + wurstStackTrace)
endfunction

function dispatch_Shield_destroyShield takes integer this_57, string wurstStackTrace returns nothing
	if Shield_typeId[this_57] == 0 then
		if this_57 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Shield.destroyShield" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Shield.destroyShield on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call destroyShield(this_57, "\n   Shield, line 64" + wurstStackTrace)
endfunction

function Units_onDestroy takes integer this_57 returns nothing
endfunction

function dealloc_Units takes integer obj, string wurstStackTrace returns nothing
	if Units_typeId[obj] == 0 then
		call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Double free: object of type Units" + wurstStackTrace)
		call I2S(1 / 0)
	else
		set Units_nextFree[Units_firstFree] = obj
		set Units_firstFree = Units_firstFree + 1
		set Units_typeId[obj] = 0
	endif
endfunction

function destroyUnits takes integer this_57, string wurstStackTrace returns nothing
	call Units_onDestroy(this_57)
	call dealloc_Units(this_57, "\n   UnitEvents, line 99" + wurstStackTrace)
endfunction

function dispatch_Units_destroyUnits takes integer this_57, string wurstStackTrace returns nothing
	if Units_typeId[this_57] == 0 then
		if this_57 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Units.destroyUnits" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Units.destroyUnits on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call destroyUnits(this_57, "\n   UnitEvents, line 99" + wurstStackTrace)
endfunction

function alloc_Units takes nothing returns integer
	local integer this_57
	if Units_firstFree == 0 then
		set Units_maxIndex = Units_maxIndex + 1
		set this_57 = Units_maxIndex
	else
		set Units_firstFree = Units_firstFree - 1
		set this_57 = Units_nextFree[Units_firstFree]
	endif
	set Units_typeId[this_57] = 793
	return this_57
endfunction

function construct_Units takes integer this_57 returns nothing
endfunction

function new_Units takes nothing returns integer
	local integer this_57 = alloc_Units()
	call construct_Units(this_57)
	return this_57
endfunction

function Unit2Event_fire takes integer this_57, integer source, integer target, string wurstStackTrace returns nothing
	local integer data = new_Units()
	call Event_callActions(this_57, data, "\n   UnitEvents, line 111" + wurstStackTrace)
	call dispatch_Units_destroyUnits(data, "\n   UnitEvents, line 112" + wurstStackTrace)
endfunction

function dispatch_Unit2Event_fire takes integer this_57, integer source, integer target, string wurstStackTrace returns nothing
	if Event_typeId[this_57] == 0 then
		if this_57 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Unit2Event.fire" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Unit2Event.fire on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call Unit2Event_fire(this_57, source, target, "\n   UnitEvents, line 107" + wurstStackTrace)
endfunction

function ShieldList_damage takes integer this_57, real amount_51, integer source, string wurstStackTrace returns real
	local real remainingDmg
	local integer pos
	local integer buffer
	if ShieldList_first[this_57] == 0 then
		return amount_51
	endif
	if amount_51 > ShieldList_shieldSum[this_57] then
		set ShieldList_shieldSum[this_57] = 0.
	else
		set ShieldList_shieldSum[this_57] = ShieldList_shieldSum[this_57] - amount_51
	endif
	set remainingDmg = amount_51
	set pos = ShieldList_first[this_57]
	loop
		exitwhen  not (remainingDmg > 0. and pos != 0)
		if Shield_amount[pos] >= remainingDmg then
			set Shield_amount[pos] = Shield_amount[pos] - remainingDmg
			return 0.
		else
			set remainingDmg = remainingDmg - Shield_amount[pos]
			set Shield_amount[pos] = 0.
			if Shield_shieldDestroyed[pos] != 0 then
				call dispatch_Unit2Event_fire(Shield_shieldDestroyed[pos], source, Shield_target[pos], "\n   Shield, line 29" + wurstStackTrace)
			endif
			set buffer = pos
			set pos = Shield_next[buffer]
			call dispatch_Shield_destroyShield(buffer, "\n   Shield, line 32" + wurstStackTrace)
		endif
	endloop
	return remainingDmg
endfunction

function dispatch_ShieldList_damage takes integer this_57, real amount_51, integer source, string wurstStackTrace returns real
	local real damage_result
	if ShieldList_typeId[this_57] == 0 then
		if this_57 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling ShieldList.damage" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called ShieldList.damage on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	set damage_result = ShieldList_damage(this_57, amount_51, source, "\n   Shield, line 11" + wurstStackTrace)
	return damage_result
endfunction

function hashtable_loadReal takes hashtable this_57, integer parentKey, integer childKey returns real
	return LoadReal(this_57, parentKey, childKey)
endfunction

function Table_loadReal takes integer this_57, integer parentKey returns real
	return hashtable_loadReal(Table_ht, this_57, parentKey)
endfunction

function dispatch_Table_loadReal takes integer this_57, integer parentKey, string wurstStackTrace returns real
	local real loadReal_result
	if Table_typeId[this_57] == 0 then
		if this_57 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Table.loadReal" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Table.loadReal on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	set loadReal_result = Table_loadReal(this_57, parentKey)
	return loadReal_result
endfunction

function hashtable_saveReal takes hashtable this_57, integer parentKey, integer childKey, real value returns nothing
	call SaveReal(this_57, parentKey, childKey, value)
endfunction

function Table_saveReal takes integer this_57, integer parentKey, real value returns nothing
	call hashtable_saveReal(Table_ht, this_57, parentKey, value)
endfunction

function dispatch_Table_saveReal takes integer this_57, integer parentKey, real value, string wurstStackTrace returns nothing
	if Table_typeId[this_57] == 0 then
		if this_57 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Table.saveReal" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Table.saveReal on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call Table_saveReal(this_57, parentKey, value)
endfunction

function Unit_invuTT takes integer this_57 returns nothing
endfunction

function dispatch_Unit_invuTT takes integer this_57, string wurstStackTrace returns nothing
	if Unit_typeId[this_57] == 0 then
		if this_57 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Unit.invuTT" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Unit.invuTT on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	if Unit_typeId[this_57] <= 710 then
		call Unit_invuTT(this_57)
	else
		call Unit_invuTT(this_57)
	endif
endfunction

function Unit_goldTT takes integer this_57, real dmg, player p_2 returns nothing
endfunction

function dispatch_Unit_goldTT takes integer this_57, real dmg, player p_2, string wurstStackTrace returns nothing
	if Unit_typeId[this_57] == 0 then
		if this_57 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Unit.goldTT" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Unit.goldTT on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	if Unit_typeId[this_57] <= 710 then
		call Unit_goldTT(this_57, dmg, p_2)
	else
		call Unit_goldTT(this_57, dmg, p_2)
	endif
endfunction

function unit_kill takes unit this_57 returns nothing
	call KillUnit(this_57)
endfunction

function Unit_kill takes integer this_57, integer source, string wurstStackTrace returns nothing
	local integer i
	local integer goldAmount
	if  not Unit_isDead[this_57] then
		set Unit_isDead[this_57] = true
		call unit_addAbility(Unit_u[this_57], 1684365668)
		if Unit_onDeath[this_57] != 0 then
			call dispatch_Unit2Event_fire(Unit_onDeath[this_57], source, this_57, "\n   UnitClass, line 246" + wurstStackTrace)
		endif
		if Unit_causeDeath[this_57] != 0 then
			call dispatch_Unit2Event_fire(Unit_causeDeath[this_57], source, this_57, "\n   UnitClass, line 248" + wurstStackTrace)
		endif
		set i = 0
		loop
			exitwhen i > 11
			if dispatch_Table_loadReal(Unit_playerDamage[this_57], i, "\n   UnitClass, line 250" + wurstStackTrace) != 0. then
				set goldAmount = roundReal(dispatch_Table_loadReal(Unit_playerDamage[this_57], i, "\n   UnitClass, line 251" + wurstStackTrace) / Unit_totalDamage[this_57] * Unit_bounty[this_57])
				call SetPlayerState(Player(i), PLAYER_STATE_RESOURCE_GOLD, GetPlayerState(Player(i), PLAYER_STATE_RESOURCE_GOLD) + goldAmount)
				call dispatch_Unit_goldTT(this_57, goldAmount * 1., Player(i), "\n   UnitClass, line 253" + wurstStackTrace)
			endif
			set i = i + 1
		endloop
		call unit_kill(Unit_u[this_57])
	endif
endfunction

function Bar_disable takes integer this_57 returns nothing
	call texttag_setVisibility(Bar_tt[this_57], false)
	set Bar_check[this_57] = false
endfunction

function dispatch_Bar_disable takes integer this_57, string wurstStackTrace returns nothing
	if Bar_typeId[this_57] == 0 then
		if this_57 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Bar.disable" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Bar.disable on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call Bar_disable(this_57)
endfunction

function Hero_kill takes integer this_57, integer source, string wurstStackTrace returns nothing
	call dispatch_Bar_disable(Hero_hb[this_57], "\n   HeroClass, line 88" + wurstStackTrace)
	call Unit_kill(this_57, source, "\n   HeroClass, line 89" + wurstStackTrace)
endfunction

function dispatch_Unit_kill takes integer this_57, integer source, string wurstStackTrace returns nothing
	if Unit_typeId[this_57] == 0 then
		if this_57 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Unit.kill" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Unit.kill on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	if Unit_typeId[this_57] <= 710 then
		call Unit_kill(this_57, source, "\n   UnitClass, line 241" + wurstStackTrace)
	else
		call Hero_kill(this_57, source, "\n   UnitClass, line 241" + wurstStackTrace)
	endif
endfunction

function unit_setState takes unit this_57, unitstate state, real value returns nothing
	call SetUnitState(this_57, state, value)
endfunction

function unit_setHP takes unit this_57, real hp returns nothing
	call unit_setState(this_57, UNIT_STATE_LIFE, hp)
endfunction

function Unit_dealDamage takes integer this_57, real amount_51, integer source, boolean reward, string wurstStackTrace returns boolean
	local real tHP
	local real currentAmount
	if Unit_isHero[source] then
	endif
	if Unit_vunerable[this_57] then
		set tHP = unit_getHP(Unit_u[this_57])
		set currentAmount = dispatch_ShieldList_damage(Unit_shieldList[this_57], amount_51, source, "\n   UnitClass, line 1090" + wurstStackTrace)
		set Unit_totalDamage[this_57] = Unit_totalDamage[this_57] + amount_51
		if  not reward then
			set Unit_systemDamage[this_57] = Unit_systemDamage[this_57] + amount_51
		endif
		if tHP - 0.405 <= currentAmount then
			if reward then
				call dispatch_Table_saveReal(Unit_playerDamage[this_57], Unit_ownerId[this_57], dispatch_Table_loadReal(Unit_playerDamage[this_57], Unit_ownerId[this_57], "\n   UnitClass, line 1096" + wurstStackTrace) + tHP, "\n   UnitClass, line 1096" + wurstStackTrace)
			endif
			call dispatch_Unit_kill(this_57, source, "\n   UnitClass, line 1097" + wurstStackTrace)
		elseif reward then
			call dispatch_Table_saveReal(Unit_playerDamage[this_57], Unit_ownerId[this_57], dispatch_Table_loadReal(Unit_playerDamage[this_57], Unit_ownerId[this_57], "\n   UnitClass, line 1100" + wurstStackTrace) + amount_51, "\n   UnitClass, line 1100" + wurstStackTrace)
		endif
		call unit_setHP(Unit_u[this_57], tHP - currentAmount)
		if Unit_isHero[this_57] or Unit_isHero[source] then
			return true
		else
			return false
		endif
	else
		if Unit_isHero[this_57] or Unit_isHero[source] then
			call dispatch_Unit_invuTT(this_57, "\n   UnitClass, line 1108" + wurstStackTrace)
		endif
		return false
	endif
endfunction

function Hero_dealDamage takes integer this_57, real amount_51, integer source, boolean bonus, string wurstStackTrace returns boolean
	call dispatch_Bar_update(Hero_hb[this_57], "\n   HeroClass, line 161" + wurstStackTrace)
	return Unit_dealDamage(this_57, amount_51, source, bonus, "\n   HeroClass, line 162" + wurstStackTrace)
endfunction

function dispatch_Unit_dealDamage takes integer this_57, real amount_51, integer source, boolean reward, string wurstStackTrace returns boolean
	local boolean dealDamage_result
	if Unit_typeId[this_57] == 0 then
		if this_57 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Unit.dealDamage" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Unit.dealDamage on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	if Unit_typeId[this_57] <= 710 then
		set dealDamage_result = Unit_dealDamage(this_57, amount_51, source, reward, "\n   UnitClass, line 1084" + wurstStackTrace)
	else
		set dealDamage_result = Hero_dealDamage(this_57, amount_51, source, reward, "\n   UnitClass, line 1084" + wurstStackTrace)
	endif
	return dealDamage_result
endfunction

function Unit_dotTT_2 takes integer this_57, real dmg returns nothing
endfunction

function dispatch_Unit_dotTT takes integer this_57, real dmg, string wurstStackTrace returns nothing
	if Unit_typeId[this_57] == 0 then
		if this_57 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Unit.dotTT" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Unit.dotTT on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	if Unit_typeId[this_57] <= 710 then
		call Unit_dotTT_2(this_57, dmg)
	else
		call Unit_dotTT_2(this_57, dmg)
	endif
endfunction

function Unit_damageDot takes integer this_57, integer source, real amount_51, string wurstStackTrace returns nothing
	if dispatch_Unit_dealDamage(this_57, amount_51, source, true, "\n   UnitClass, line 1119" + wurstStackTrace) then
		call dispatch_Unit_dotTT(this_57, amount_51, "\n   UnitClass, line 1120" + wurstStackTrace)
	endif
endfunction

function dispatch_Unit_damageDot takes integer this_57, integer source, real amount_51, string wurstStackTrace returns nothing
	if Unit_typeId[this_57] == 0 then
		if this_57 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Unit.damageDot" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Unit.damageDot on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	if Unit_typeId[this_57] <= 710 then
		call Unit_damageDot(this_57, source, amount_51, "\n   UnitClass, line 1118" + wurstStackTrace)
	else
		call Unit_damageDot(this_57, source, amount_51, "\n   UnitClass, line 1118" + wurstStackTrace)
	endif
endfunction

function Dot_loopList takes string wurstStackTrace returns nothing
	local integer d_2 = LinkedListModule_getFirst()
	local integer buffer
	loop
		exitwhen  not (d_2 != 0)
		set buffer = d_2
		set d_2 = dispatch_Dot_getNext(d_2, "\n   Dot, line 36" + wurstStackTrace)
		call dispatch_Unit_damageDot(Dot_u[buffer], Dot_source[buffer], Dot_damage[buffer], "\n   Dot, line 37" + wurstStackTrace)
	endloop
endfunction

function bridge_Dot_loopList takes nothing returns nothing
	call Dot_loopList("\n   GameStart, line 88")
endfunction

function Dot_timerDestroyDot takes string wurstStackTrace returns nothing
	call dispatch_Dot_destroyDot(timer_getData(GetExpiredTimer(), "\n   Dot, line 30" + wurstStackTrace), "\n   Dot, line 30" + wurstStackTrace)
endfunction

function bridge_Dot_timerDestroyDot takes nothing returns nothing
	call Dot_timerDestroyDot("\n   Dot, line 27")
endfunction

function timerToIndex takes timer object returns integer
	return handle_getHandleId(object)
endfunction

function Hero_addAbilityCastProtection takes integer this_57, integer abiId, string wurstStackTrace returns nothing
	local timer t
	call SetPlayerAbilityAvailable(Unit_owner[this_57], abiId, false)
	set t = getTimer("\n   HeroClass, line 239" + wurstStackTrace)
	call timer_setData(t, this_57, "\n   HeroClass, line 240" + wurstStackTrace)
	call dispatch_HashMap_put(Hero_enableAbility[this_57], timerToIndex(t), abiId, "\n   HeroClass, line 241" + wurstStackTrace)
	call timer_start(t, 0.0, ref_function_bridge_Hero_enableAbilityTimed)
	set t = null
endfunction

function dispatch_Hero_addAbilityCastProtection takes integer this_57, integer abiId, string wurstStackTrace returns nothing
	if Unit_typeId[this_57] == 0 then
		if this_57 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Hero.addAbilityCastProtection" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Hero.addAbilityCastProtection on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call Hero_addAbilityCastProtection(this_57, abiId, "\n   HeroClass, line 237" + wurstStackTrace)
endfunction

function Hero_channelCancel_2 takes integer this_57, string wurstStackTrace returns nothing
	call dispatch_UnitEvent_fire(Hero_channelCancel[this_57], this_57, "\n   HeroClass, line 353" + wurstStackTrace)
endfunction

function dispatch_Hero_channelCancel takes integer this_57, string wurstStackTrace returns nothing
	if Unit_typeId[this_57] == 0 then
		if this_57 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Hero.channelCancel" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Hero.channelCancel on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call Hero_channelCancel_2(this_57, "\n   HeroClass, line 351" + wurstStackTrace)
endfunction

function Queue_dequeue takes integer this_57 returns integer
	local integer tmp = Queue_front[this_57]
	set Queue_front[this_57] = SEntry_next[Queue_front[this_57]]
	set Queue_size[this_57] = Queue_size[this_57] - 1
	return SEntry_elem[tmp]
endfunction

function dispatch_Queue_dequeue takes integer this_57, string wurstStackTrace returns integer
	local integer dequeue_result
	if Queue_typeId[this_57] == 0 then
		if this_57 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Queue.dequeue" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Queue.dequeue on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	set dequeue_result = Queue_dequeue(this_57)
	return dequeue_result
endfunction

function Hero_cleanCastQueue takes integer this_57, string wurstStackTrace returns nothing
	loop
		exitwhen  not (dispatch_Queue_dequeue(Hero_castQueue[this_57], "\n   HeroClass, line 344" + wurstStackTrace) != 0)
	endloop
endfunction

function dispatch_Hero_cleanCastQueue takes integer this_57, string wurstStackTrace returns nothing
	if Unit_typeId[this_57] == 0 then
		if this_57 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Hero.cleanCastQueue" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Hero.cleanCastQueue on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call Hero_cleanCastQueue(this_57, "\n   HeroClass, line 343" + wurstStackTrace)
endfunction

function multiboard_getItem takes multiboard this_57, integer row, integer column returns multiboarditem
	return MultiboardGetItem(this_57, row, column)
endfunction

function multiboarditem_release takes multiboarditem this_57 returns nothing
	call MultiboardReleaseItem(this_57)
endfunction

function multiboarditem_setValue takes multiboarditem this_57, string value returns nothing
	call MultiboardSetItemValue(this_57, value)
endfunction

function Order_onDestroy takes integer this_57 returns nothing
	local multiboarditem mbi
	local multiboarditem receiver
	set InstanceBoard_count[ShowInstances_classId_2] = InstanceBoard_count[ShowInstances_classId_2] - 1
	set mbi = multiboard_getItem(InstanceBoard_mb, ShowInstances_classId_2, 1)
	set receiver = mbi
	call multiboarditem_setValue(receiver, int_toString(InstanceBoard_count[ShowInstances_classId_2]))
	call multiboarditem_release(receiver)
	set mbi = null
	set receiver = null
endfunction

function dealloc_Order takes integer obj, string wurstStackTrace returns nothing
	if Order_typeId[obj] == 0 then
		call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Double free: object of type Order" + wurstStackTrace)
		call I2S(1 / 0)
	else
		set Order_nextFree[Order_firstFree] = obj
		set Order_firstFree = Order_firstFree + 1
		set Order_typeId[obj] = 0
	endif
endfunction

function destroyOrder takes integer this_57, string wurstStackTrace returns nothing
	call Order_onDestroy(this_57)
	call dealloc_Order(this_57, "\n   OrderHandling, line 61" + wurstStackTrace)
endfunction

function dispatch_Order_destroyOrder takes integer this_57, string wurstStackTrace returns nothing
	if Order_typeId[this_57] == 0 then
		if this_57 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Order.destroyOrder" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Order.destroyOrder on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call destroyOrder(this_57, "\n   OrderHandling, line 61" + wurstStackTrace)
endfunction

function Hero_setMainOrder takes integer this_57, integer o, string wurstStackTrace returns nothing
	if Hero_mainOrder[this_57] != 0 then
		call dispatch_Order_destroyOrder(Hero_mainOrder[this_57], "\n   HeroClass, line 246" + wurstStackTrace)
	endif
	set Hero_mainOrder[this_57] = o
endfunction

function dispatch_Hero_setMainOrder takes integer this_57, integer o, string wurstStackTrace returns nothing
	if Unit_typeId[this_57] == 0 then
		if this_57 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Hero.setMainOrder" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Hero.setMainOrder on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call Hero_setMainOrder(this_57, o, "\n   HeroClass, line 244" + wurstStackTrace)
endfunction

function trigger_disable takes trigger this_57 returns nothing
	call DisableTrigger(this_57)
endfunction

function trigger_enable takes trigger this_57 returns nothing
	call EnableTrigger(this_57)
endfunction

function AttackOrder_issueToUnit takes integer this_57, unit u_2 returns boolean
	call trigger_disable(GetOrders_orderDetect)
	call IssueTargetOrderById(u_2, AttackOrder_atkOrderId, AttackOrder_target[this_57])
	call trigger_enable(GetOrders_orderDetect)
	return GetUnitAbilityLevel(u_2, 1684365668) == 1
endfunction

function MoveOrder_issueToUnit takes integer this_57, unit u_2 returns boolean
	local real currentPos_x
	local real currentPos_y
	local boolean b
	local integer tempIndex
	local real tempTupleSelectionResult_1
	local real temp_tempTupleSelectionResult_1
	local real temp_tempTupleSelectionResult_2
	local integer tempIndex_2
	local real tempTupleSelectionResult_2
	local real temp_tempTupleSelectionResult_1_2
	local real temp_tempTupleSelectionResult_2_2
	local real temp_currentPos_x
	local real temp_currentPos_y
	local integer tempIndex_3
	local integer tempIndex_4
	local unit temp
	local integer temp_2
	local real temp_3
	local real temp_4
	call trigger_disable(GetOrders_orderDetect)
	set temp = u_2
	set temp_2 = MoveOrder_moveOrderId
	set tempIndex = this_57
	set temp_tempTupleSelectionResult_1 = MoveOrder_pos[tempIndex]
	set temp_tempTupleSelectionResult_2 = MoveOrder_pos_2[tempIndex]
	set tempTupleSelectionResult_1 = temp_tempTupleSelectionResult_1
	set temp_3 = tempTupleSelectionResult_1
	set tempIndex_2 = this_57
	set temp_tempTupleSelectionResult_1_2 = MoveOrder_pos[tempIndex_2]
	set temp_tempTupleSelectionResult_2_2 = MoveOrder_pos_2[tempIndex_2]
	set tempTupleSelectionResult_2 = temp_tempTupleSelectionResult_2_2
	call IssuePointOrderById(temp, temp_2, temp_3, tempTupleSelectionResult_2)
	call trigger_enable(GetOrders_orderDetect)
	set temp_currentPos_x = unit_getPos(u_2)
	set temp_currentPos_y = unit_getPos_return_y
	set currentPos_x = temp_currentPos_x
	set currentPos_y = temp_currentPos_y
	set temp_4 = currentPos_x
	set tempIndex_3 = this_57
	set b = temp_4 == MoveOrder_lastPos[tempIndex_3] and currentPos_y == MoveOrder_lastPos_2[tempIndex_3]
	set tempIndex_4 = this_57
	set MoveOrder_lastPos[tempIndex_4] = currentPos_x
	set MoveOrder_lastPos_2[tempIndex_4] = currentPos_y
	set temp = null
	return b
endfunction

function dispatch_Order_issueToUnit takes integer this_57, unit u_2, string wurstStackTrace returns boolean
	local boolean issueToUnit_result
	if Order_typeId[this_57] == 0 then
		if this_57 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Order.issueToUnit" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Order.issueToUnit on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	if Order_typeId[this_57] <= 700 then
		set issueToUnit_result = MoveOrder_issueToUnit(this_57, u_2)
	else
		set issueToUnit_result = AttackOrder_issueToUnit(this_57, u_2)
	endif
	return issueToUnit_result
endfunction

function alloc_SEntry_2 takes nothing returns integer
	local integer this_57
	if SEntry_firstFree == 0 then
		set SEntry_maxIndex = SEntry_maxIndex + 1
		set this_57 = SEntry_maxIndex
	else
		set SEntry_firstFree = SEntry_firstFree - 1
		set this_57 = SEntry_nextFree[SEntry_firstFree]
	endif
	return this_57
endfunction

function construct_SEntry_2 takes integer this_57, integer elem, integer next returns nothing
	set SEntry_elem[this_57] = elem
	set SEntry_next[this_57] = next
endfunction

function new_SEntry_2 takes integer elem, integer next returns integer
	local integer this_57 = alloc_SEntry_2()
	call construct_SEntry_2(this_57, elem, next)
	return this_57
endfunction

function Queue_enqueue takes integer this_57, integer elem returns nothing
	if Queue_front[this_57] == Queue_dummy[this_57] then
		set Queue_front[this_57] = new_SEntry_2(elem, Queue_dummy[this_57])
		set Queue_back[this_57] = Queue_front[this_57]
		set SEntry_next[Queue_front[this_57]] = Queue_dummy[this_57]
	else
		set SEntry_next[Queue_back[this_57]] = new_SEntry_2(elem, Queue_dummy[this_57])
		set Queue_back[this_57] = SEntry_next[Queue_back[this_57]]
	endif
	set Queue_size[this_57] = Queue_size[this_57] + 1
endfunction

function dispatch_Queue_enqueue takes integer this_57, integer elem, string wurstStackTrace returns nothing
	if Queue_typeId[this_57] == 0 then
		if this_57 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Queue.enqueue" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Queue.enqueue on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call Queue_enqueue(this_57, elem)
endfunction

function alloc_Spellcast takes nothing returns integer
	local integer this_57
	if Spellcast_firstFree == 0 then
		set Spellcast_maxIndex = Spellcast_maxIndex + 1
		set this_57 = Spellcast_maxIndex
	else
		set Spellcast_firstFree = Spellcast_firstFree - 1
		set this_57 = Spellcast_nextFree[Spellcast_firstFree]
	endif
	set Spellcast_typeId[this_57] = 704
	return this_57
endfunction

function construct_Spellcast takes integer this_57 returns nothing
endfunction

function new_Spellcast takes nothing returns integer
	local integer this_57 = alloc_Spellcast()
	call construct_Spellcast(this_57)
	return this_57
endfunction

function Spell_getInstantSpellCast takes integer this_57 returns integer
	local integer sc = new_Spellcast()
	set Spellcast_spell[sc] = this_57
	return sc
endfunction

function dispatch_Spell_getInstantSpellCast takes integer this_57, string wurstStackTrace returns integer
	local integer getInstantSpellCast_result
	if Spell_typeId[this_57] == 0 then
		if this_57 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Spell.getInstantSpellCast" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Spell.getInstantSpellCast on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	if Spell_typeId[this_57] <= 838 then
		if Spell_typeId[this_57] <= 709 then
			set getInstantSpellCast_result = Spell_getInstantSpellCast(this_57)
		else
			set getInstantSpellCast_result = Spell_getInstantSpellCast(this_57)
		endif
	else
		set getInstantSpellCast_result = Spell_getInstantSpellCast(this_57)
	endif
	return getInstantSpellCast_result
endfunction

function Spell_getPointSpellCast takes integer this_57, real pos_x, real pos_y returns integer
	local integer sc = new_Spellcast()
	local integer tempIndex
	set Spellcast_spell[sc] = this_57
	set tempIndex = sc
	set Spellcast_pos[tempIndex] = pos_x
	set Spellcast_pos_2[tempIndex] = pos_y
	return sc
endfunction

function dispatch_Spell_getPointSpellCast takes integer this_57, real pos_x, real pos_y, string wurstStackTrace returns integer
	local integer getPointSpellCast_result
	if Spell_typeId[this_57] == 0 then
		if this_57 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Spell.getPointSpellCast" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Spell.getPointSpellCast on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	if Spell_typeId[this_57] <= 838 then
		if Spell_typeId[this_57] <= 709 then
			set getPointSpellCast_result = Spell_getPointSpellCast(this_57, pos_x, pos_y)
		else
			set getPointSpellCast_result = Spell_getPointSpellCast(this_57, pos_x, pos_y)
		endif
	else
		set getPointSpellCast_result = Spell_getPointSpellCast(this_57, pos_x, pos_y)
	endif
	return getPointSpellCast_result
endfunction

function Spell_getUnitSpellCast takes integer this_57, unit target returns integer
	local integer sc = new_Spellcast()
	set Spellcast_spell[sc] = this_57
	set Spellcast_target[sc] = target
	return sc
endfunction

function dispatch_Spell_getUnitSpellCast takes integer this_57, unit target, string wurstStackTrace returns integer
	local integer getUnitSpellCast_result
	if Spell_typeId[this_57] == 0 then
		if this_57 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Spell.getUnitSpellCast" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Spell.getUnitSpellCast on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	if Spell_typeId[this_57] <= 838 then
		if Spell_typeId[this_57] <= 709 then
			set getUnitSpellCast_result = Spell_getUnitSpellCast(this_57, target)
		else
			set getUnitSpellCast_result = Spell_getUnitSpellCast(this_57, target)
		endif
	else
		set getUnitSpellCast_result = Spell_getUnitSpellCast(this_57, target)
	endif
	return getUnitSpellCast_result
endfunction

function alloc_AttackOrder takes nothing returns integer
	local integer this_57
	if Order_firstFree == 0 then
		set Order_maxIndex = Order_maxIndex + 1
		set this_57 = Order_maxIndex
	else
		set Order_firstFree = Order_firstFree - 1
		set this_57 = Order_nextFree[Order_firstFree]
	endif
	set Order_typeId[this_57] = 701
	return this_57
endfunction

function construct_Order takes integer this_57 returns nothing
	local multiboarditem mbi
	local multiboarditem receiver
	set InstanceBoard_count[ShowInstances_classId_2] = InstanceBoard_count[ShowInstances_classId_2] + 1
	set mbi = multiboard_getItem(InstanceBoard_mb, ShowInstances_classId_2, 1)
	set receiver = mbi
	call multiboarditem_setValue(receiver, int_toString(InstanceBoard_count[ShowInstances_classId_2]))
	call multiboarditem_release(receiver)
	set mbi = null
	set receiver = null
endfunction

function construct_AttackOrder takes integer this_57, unit target returns nothing
	call construct_Order(this_57)
	set Order_orderId[this_57] = Order_orderId[this_57]
	set AttackOrder_target[this_57] = target
endfunction

function new_AttackOrder takes unit target returns integer
	local integer this_57 = alloc_AttackOrder()
	call construct_AttackOrder(this_57, target)
	return this_57
endfunction

function alloc_MoveOrder takes nothing returns integer
	local integer this_57
	if Order_firstFree == 0 then
		set Order_maxIndex = Order_maxIndex + 1
		set this_57 = Order_maxIndex
	else
		set Order_firstFree = Order_firstFree - 1
		set this_57 = Order_nextFree[Order_firstFree]
	endif
	set Order_typeId[this_57] = 700
	return this_57
endfunction

function construct_MoveOrder takes integer this_57, real pos_x, real pos_y returns nothing
	local integer tempIndex
	local integer tempIndex_2
	call construct_Order(this_57)
	set tempIndex = this_57
	set MoveOrder_lastPos[tempIndex] = 0.
	set MoveOrder_lastPos_2[tempIndex] = 0.
	set Order_orderId[this_57] = Order_orderId[this_57]
	set tempIndex_2 = this_57
	set MoveOrder_pos[tempIndex_2] = pos_x
	set MoveOrder_pos_2[tempIndex_2] = pos_y
endfunction

function new_MoveOrder takes real pos_x, real pos_y returns integer
	local integer this_57 = alloc_MoveOrder()
	call construct_MoveOrder(this_57, pos_x, pos_y)
	return this_57
endfunction

function Hero_onOrder takes integer this_57, real pos_x, real pos_y, unit target, integer orderId, string wurstStackTrace returns nothing
	local integer temp
	local integer temp_2
	local integer casted
	local integer temp_3
	set Hero_lastOrdered[this_57] = 0
	set temp = orderId
	if temp == OrderHandling_exitDetectId then
		call SetPlayerAbilityAvailable(Unit_owner[this_57], 1702390132, false)
		return
	elseif temp == OrderHandling_scoreboardId then
		call dispatch_Hero_addAbilityCastProtection(this_57, 1935896434, "\n   HeroClass, line 258" + wurstStackTrace)
		return
	endif
	if Hero_acceptOrders[this_57] then
		set temp_2 = orderId
		if temp_2 == OrderHandling_smartId then
			if target == null then
				call dispatch_Hero_setMainOrder(this_57, new_MoveOrder(pos_x, pos_y), "\n   HeroClass, line 265" + wurstStackTrace)
				call dispatch_Order_issueToUnit(Hero_mainOrder[this_57], Unit_u[this_57], "\n   HeroClass, line 266" + wurstStackTrace)
			elseif IsUnitAlly(target, Unit_owner[this_57]) then
				call dispatch_Hero_setMainOrder(this_57, new_MoveOrder(unit_getPos(target), unit_getPos_return_y), "\n   HeroClass, line 269" + wurstStackTrace)
				call dispatch_Order_issueToUnit(Hero_mainOrder[this_57], Unit_u[this_57], "\n   HeroClass, line 270" + wurstStackTrace)
			else
				call dispatch_Hero_setMainOrder(this_57, new_AttackOrder(target), "\n   HeroClass, line 272" + wurstStackTrace)
				call dispatch_Order_issueToUnit(Hero_mainOrder[this_57], Unit_u[this_57], "\n   HeroClass, line 273" + wurstStackTrace)
			endif
		elseif temp_2 == OrderHandling_attackId then
			if IsUnitAlly(target, Unit_owner[this_57]) then
				call dispatch_Hero_setMainOrder(this_57, new_MoveOrder(unit_getPos(target), unit_getPos_return_y), "\n   HeroClass, line 276" + wurstStackTrace)
				call dispatch_Order_issueToUnit(Hero_mainOrder[this_57], Unit_u[this_57], "\n   HeroClass, line 277" + wurstStackTrace)
			else
				call dispatch_Hero_setMainOrder(this_57, new_AttackOrder(target), "\n   HeroClass, line 279" + wurstStackTrace)
				call dispatch_Order_issueToUnit(Hero_mainOrder[this_57], Unit_u[this_57], "\n   HeroClass, line 280" + wurstStackTrace)
			endif
		elseif temp_2 == OrderHandling_stopId then
			call dispatch_Hero_setMainOrder(this_57, 0, "\n   HeroClass, line 282" + wurstStackTrace)
			call IssueImmediateOrderById(Unit_u[this_57], 851972)
		endif
		if Hero_channelCancel[this_57] != 0 and GetUnitTypeId(target) != 1668314229 then
			call dispatch_Hero_channelCancel(this_57, "\n   HeroClass, line 285" + wurstStackTrace)
		elseif GetUnitTypeId(target) == 1668314229 then
		endif
	else
		set casted = 0
		set temp_3 = orderId
		if temp_3 == OrderHandling_smartId then
			call dispatch_Hero_cleanCastQueue(this_57, "\n   HeroClass, line 292" + wurstStackTrace)
			if target == null then
				call dispatch_Hero_setMainOrder(this_57, new_MoveOrder(pos_x, pos_y), "\n   HeroClass, line 294" + wurstStackTrace)
			elseif IsUnitAlly(target, Unit_owner[this_57]) then
				call dispatch_Hero_setMainOrder(this_57, new_MoveOrder(unit_getPos(target), unit_getPos_return_y), "\n   HeroClass, line 297" + wurstStackTrace)
			else
				call dispatch_Hero_setMainOrder(this_57, new_AttackOrder(target), "\n   HeroClass, line 299" + wurstStackTrace)
			endif
		elseif temp_3 == OrderHandling_attackId then
			call dispatch_Hero_cleanCastQueue(this_57, "\n   HeroClass, line 301" + wurstStackTrace)
			call dispatch_Hero_addAbilityCastProtection(this_57, OrderHandling_attackSpell, "\n   HeroClass, line 302" + wurstStackTrace)
			if IsUnitAlly(target, Unit_owner[this_57]) then
				call dispatch_Hero_setMainOrder(this_57, new_MoveOrder(unit_getPos(target), unit_getPos_return_y), "\n   HeroClass, line 304" + wurstStackTrace)
			else
				call dispatch_Hero_setMainOrder(this_57, new_AttackOrder(target), "\n   HeroClass, line 306" + wurstStackTrace)
			endif
		elseif temp_3 == OrderHandling_stopId then
			call dispatch_Hero_cleanCastQueue(this_57, "\n   HeroClass, line 308" + wurstStackTrace)
			call dispatch_Hero_addAbilityCastProtection(this_57, OrderHandling_stopSpell, "\n   HeroClass, line 309" + wurstStackTrace)
			call dispatch_Hero_setMainOrder(this_57, 0, "\n   HeroClass, line 310" + wurstStackTrace)
		elseif temp_3 == Spell_qSpellId then
			set casted = Hero_spellQ[this_57]
			call dispatch_Hero_addAbilityCastProtection(this_57, Spell_spell[Hero_spellQ[this_57]], "\n   HeroClass, line 313" + wurstStackTrace)
		elseif temp_3 == Spell_wSpellId then
			set casted = Hero_spellW[this_57]
			call dispatch_Hero_addAbilityCastProtection(this_57, Spell_spell[Hero_spellW[this_57]], "\n   HeroClass, line 316" + wurstStackTrace)
		elseif temp_3 == Spell_eSpellId then
			set casted = Hero_spellE[this_57]
			call dispatch_Hero_addAbilityCastProtection(this_57, Spell_spell[Hero_spellE[this_57]], "\n   HeroClass, line 319" + wurstStackTrace)
		elseif temp_3 == Spell_rSpellId then
			set casted = Hero_spellR[this_57]
			call dispatch_Hero_addAbilityCastProtection(this_57, Spell_spell[Hero_spellR[this_57]], "\n   HeroClass, line 322" + wurstStackTrace)
		elseif temp_3 == Spell_dSpellId then
			set casted = Hero_spellD[this_57]
			call dispatch_Hero_addAbilityCastProtection(this_57, Spell_spell[Hero_spellD[this_57]], "\n   HeroClass, line 325" + wurstStackTrace)
		elseif temp_3 == Spell_fSpellId then
			set casted = Hero_spellF[this_57]
			call dispatch_Hero_addAbilityCastProtection(this_57, Spell_spell[Hero_spellF[this_57]], "\n   HeroClass, line 328" + wurstStackTrace)
		endif
		if casted != 0 then
			if target == null then
				if pos_x == 0. and pos_y == 0. then
					call dispatch_Queue_enqueue(Hero_castQueue[this_57], dispatch_Spell_getInstantSpellCast(casted, "\n   HeroClass, line 332" + wurstStackTrace), "\n   HeroClass, line 332" + wurstStackTrace)
				else
					call dispatch_Queue_enqueue(Hero_castQueue[this_57], dispatch_Spell_getPointSpellCast(casted, pos_x, pos_y, "\n   HeroClass, line 334" + wurstStackTrace), "\n   HeroClass, line 334" + wurstStackTrace)
				endif
			else
				call dispatch_Queue_enqueue(Hero_castQueue[this_57], dispatch_Spell_getUnitSpellCast(casted, target, "\n   HeroClass, line 336" + wurstStackTrace), "\n   HeroClass, line 336" + wurstStackTrace)
			endif
		endif
		if Hero_channelCancel[this_57] != 0 and GetUnitTypeId(target) != 1668314229 then
			call dispatch_Hero_channelCancel(this_57, "\n   HeroClass, line 338" + wurstStackTrace)
		elseif GetUnitTypeId(target) == 1668314229 then
		endif
	endif
endfunction

function dispatch_Hero_onOrder takes integer this_57, real pos_x, real pos_y, unit target, integer orderId, string wurstStackTrace returns nothing
	if Unit_typeId[this_57] == 0 then
		if this_57 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Hero.onOrder" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Hero.onOrder on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call Hero_onOrder(this_57, pos_x, pos_y, target, orderId, "\n   HeroClass, line 249" + wurstStackTrace)
endfunction

function GetOrders_callOnOrder takes string wurstStackTrace returns nothing
	call trigger_disable(GetOrders_orderDetect)
	call dispatch_Hero_onOrder(unit_getUserData(GetTriggerUnit()), GetOrderPointX(), GetOrderPointY(), GetOrderTargetUnit(), GetIssuedOrderId(), "\n   OrderHandling, line 56" + wurstStackTrace)
	call trigger_enable(GetOrders_orderDetect)
endfunction

function bridge_GetOrders_callOnOrder takes nothing returns nothing
	call GetOrders_callOnOrder("\n   OrderHandling, line 47")
endfunction

function Hero_enableAbilityTimed takes string wurstStackTrace returns nothing
	local timer t = GetExpiredTimer()
	local integer obj = timer_getData(t, "\n   HeroClass, line 232" + wurstStackTrace)
	call SetPlayerAbilityAvailable(Unit_owner[obj], dispatch_HashMap_get(Hero_enableAbility[obj], timerToIndex(t), "\n   HeroClass, line 233" + wurstStackTrace), true)
	call timer_release(t, "\n   HeroClass, line 234" + wurstStackTrace)
	set t = null
	set t = null
endfunction

function bridge_Hero_enableAbilityTimed takes nothing returns nothing
	call Hero_enableAbilityTimed("\n   HeroClass, line 242")
endfunction

function dispatch_InstantSpell_onCast takes integer this_57, integer caster returns nothing
endfunction

function InstantSpell_callOnCast takes integer this_57, integer caster, real targetPos_x, real targetPos_y, integer target returns nothing
	call dispatch_InstantSpell_onCast(this_57, caster)
endfunction

function dispatch_PointOrUnitSpell_onPointCast takes integer this_57, integer caster, real targetPos_x, real targetPos_y returns nothing
endfunction

function dispatch_PointOrUnitSpell_onUnitCast takes integer this_57, integer caster, integer target returns nothing
endfunction

function PointOrUnitSpell_callOnCast takes integer this_57, integer caster, real targetPos_x, real targetPos_y, integer target returns nothing
	if target == 0 then
		call dispatch_PointOrUnitSpell_onPointCast(this_57, caster, targetPos_x, targetPos_y)
	else
		call dispatch_PointOrUnitSpell_onUnitCast(this_57, caster, target)
	endif
endfunction

function alloc_SamplePointSpell takes nothing returns integer
	local integer this_57
	if SamplePointSpell_firstFree == 0 then
		set SamplePointSpell_maxIndex = SamplePointSpell_maxIndex + 1
		set this_57 = SamplePointSpell_maxIndex
	else
		set SamplePointSpell_firstFree = SamplePointSpell_firstFree - 1
		set this_57 = SamplePointSpell_nextFree[SamplePointSpell_firstFree]
	endif
	set SamplePointSpell_typeId[this_57] = 839
	return this_57
endfunction

function timer_startPeriodic takes timer this_57, real time, code timerCallBack returns nothing
	call TimerStart(this_57, time, true, timerCallBack)
endfunction

function construct_SamplePointSpell takes integer this_57, integer caster, real pos_x, real pos_y, integer setupData, string wurstStackTrace returns nothing
	set SamplePointSpell_t[this_57] = getTimer("\n   SpellTemplate, line 60" + wurstStackTrace)
	call timer_setData(SamplePointSpell_t[this_57], this_57, "\n   SpellTemplate, line 61" + wurstStackTrace)
	call timer_startPeriodic(SamplePointSpell_t[this_57], 0.03, ref_function_bridge_SamplePointSpell_callCallback)
endfunction

function new_SamplePointSpell takes integer caster, real pos_x, real pos_y, integer setupData, string wurstStackTrace returns integer
	local integer this_57 = alloc_SamplePointSpell()
	call construct_SamplePointSpell(this_57, caster, pos_x, pos_y, setupData, "\n   SpellTemplate, line 59" + wurstStackTrace)
	return this_57
endfunction

function SamplePointSpellSetup_onCast takes integer this_57, integer caster, real pos_x, real pos_y, string wurstStackTrace returns nothing
	call new_SamplePointSpell(caster, pos_x, pos_y, this_57, "\n   SpellTemplate, line 53" + wurstStackTrace)
endfunction

function alloc_TestSpell1 takes nothing returns integer
	local integer this_57
	if TestSpell1_firstFree == 0 then
		set TestSpell1_maxIndex = TestSpell1_maxIndex + 1
		set this_57 = TestSpell1_maxIndex
	else
		set TestSpell1_firstFree = TestSpell1_firstFree - 1
		set this_57 = TestSpell1_nextFree[TestSpell1_firstFree]
	endif
	set TestSpell1_typeId[this_57] = 841
	return this_57
endfunction

function Hero_spellStart takes integer this_57 returns nothing
	set Hero_acceptOrders[this_57] = false
endfunction

function dispatch_Hero_spellStart takes integer this_57, string wurstStackTrace returns nothing
	if Unit_typeId[this_57] == 0 then
		if this_57 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Hero.spellStart" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Hero.spellStart on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call Hero_spellStart(this_57)
endfunction

function int_toReal takes integer this_57 returns real
	return I2R(this_57)
endfunction

function construct_TestSpell1 takes integer this_57, integer caster, integer setup, string wurstStackTrace returns nothing
	call SetUnitAnimationByIndex(Unit_u[caster], TestSpell1_animationType)
	call timer_start(getTimer("\n   SampleSpells, line 40" + wurstStackTrace), 0.0, ref_function_TestSpell1_bla)
	set TestSpell1_caster[this_57] = caster
	call dispatch_Hero_spellStart(caster, "\n   SampleSpells, line 43" + wurstStackTrace)
	set TestSpell1_t[this_57] = getTimer("\n   SampleSpells, line 44" + wurstStackTrace)
	call timer_setData(TestSpell1_t[this_57], this_57, "\n   SampleSpells, line 45" + wurstStackTrace)
	call timer_start(TestSpell1_t[this_57], int_toReal(Spell_lvl[setup]) + 3., ref_function_bridge_TestSpell1_callCallback)
endfunction

function new_TestSpell1 takes integer caster, integer setup, string wurstStackTrace returns integer
	local integer this_57 = alloc_TestSpell1()
	call construct_TestSpell1(this_57, caster, setup, "\n   SampleSpells, line 38" + wurstStackTrace)
	return this_57
endfunction

function TestSpell1Setup_onCast takes integer this_57, integer caster, real pos_x, real pos_y, string wurstStackTrace returns nothing
	call new_TestSpell1(caster, this_57, "\n   SampleSpells, line 27" + wurstStackTrace)
endfunction

function dispatch_PointSpell_onCast takes integer this_57, integer caster, real targetPos_x, real targetPos_y, string wurstStackTrace returns nothing
	if Spell_typeId[this_57] == 0 then
		if this_57 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling PointSpell.onCast" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called PointSpell.onCast on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	if Spell_typeId[this_57] <= 838 then
		call SamplePointSpellSetup_onCast(this_57, caster, targetPos_x, targetPos_y, "\n   Spell, line 244" + wurstStackTrace)
	else
		call TestSpell1Setup_onCast(this_57, caster, targetPos_x, targetPos_y, "\n   Spell, line 244" + wurstStackTrace)
	endif
endfunction

function PointSpell_callOnCast takes integer this_57, integer caster, real targetPos_x, real targetPos_y, integer target, string wurstStackTrace returns nothing
	call dispatch_PointSpell_onCast(this_57, caster, targetPos_x, targetPos_y, "\n   Spell, line 237" + wurstStackTrace)
endfunction

function dispatch_UnitSpell_onCast takes integer this_57, integer caster, integer target returns nothing
endfunction

function UnitSpell_callOnCast takes integer this_57, integer caster, real targetPos_x, real targetPos_y, integer target returns nothing
	call dispatch_UnitSpell_onCast(this_57, caster, target)
endfunction

function dispatch_Spell_callOnCast takes integer this_57, integer caster, real targetPos_x, real targetPos_y, integer target, string wurstStackTrace returns nothing
	if Spell_typeId[this_57] == 0 then
		if this_57 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Spell.callOnCast" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Spell.callOnCast on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	if Spell_typeId[this_57] <= 708 then
		if Spell_typeId[this_57] <= 707 then
			if Spell_typeId[this_57] <= 706 then
				call InstantSpell_callOnCast(this_57, caster, targetPos_x, targetPos_y, target)
			else
				call PointSpell_callOnCast(this_57, caster, targetPos_x, targetPos_y, target, "\n   Spell, line 146" + wurstStackTrace)
			endif
		else
			call UnitSpell_callOnCast(this_57, caster, targetPos_x, targetPos_y, target)
		endif
	elseif Spell_typeId[this_57] <= 838 then
		if Spell_typeId[this_57] <= 709 then
			call PointOrUnitSpell_callOnCast(this_57, caster, targetPos_x, targetPos_y, target)
		else
			call PointSpell_callOnCast(this_57, caster, targetPos_x, targetPos_y, target, "\n   Spell, line 146" + wurstStackTrace)
		endif
	else
		call PointSpell_callOnCast(this_57, caster, targetPos_x, targetPos_y, target, "\n   Spell, line 146" + wurstStackTrace)
	endif
endfunction

function Hero_handleCasts takes string wurstStackTrace returns nothing
	local integer s = dispatch_HashMap_get(Hero_abiIdToSpell, GetSpellAbilityId(), "\n   HeroClass, line 196" + wurstStackTrace)
	local integer h
	local real pos_x
	local real pos_y
	local integer un
	local real temp_pos_x
	local real temp_pos_y
	if s != 0 then
		set h = unit_getUserData(GetTriggerUnit())
		set temp_pos_x = GetSpellTargetX()
		set temp_pos_y = GetSpellTargetY()
		set pos_x = temp_pos_x
		set pos_y = temp_pos_y
		set un = unit_getUserData(GetSpellTargetUnit())
		call dispatch_Spell_callOnCast(s, h, pos_x, pos_y, un, "\n   HeroClass, line 201" + wurstStackTrace)
	endif
endfunction

function bridge_Hero_handleCasts takes nothing returns nothing
	call Hero_handleCasts("\n   HeroClass, line 18")
endfunction

function Fx_getX takes integer this_57 returns real
	return unit_getX(Fx_dummy[this_57])
endfunction

function dispatch_Fx_getX takes integer this_57, string wurstStackTrace returns real
	local real getX_result
	if Fx_typeId[this_57] == 0 then
		if this_57 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Fx.getX" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Fx.getX on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	set getX_result = Fx_getX(this_57)
	return getX_result
endfunction

function Fx_getY takes integer this_57 returns real
	return unit_getY(Fx_dummy[this_57])
endfunction

function dispatch_Fx_getY takes integer this_57, string wurstStackTrace returns real
	local real getY_result
	if Fx_typeId[this_57] == 0 then
		if this_57 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Fx.getY" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Fx.getY on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	set getY_result = Fx_getY(this_57)
	return getY_result
endfunction

function Fx_getPos2 takes integer this_57, string wurstStackTrace returns real
	set Fx_getPos2_return_x = dispatch_Fx_getX(this_57, "\n   Fx, line 150" + wurstStackTrace)
	set Fx_getPos2_return_y = dispatch_Fx_getY(this_57, "\n   Fx, line 150" + wurstStackTrace)
	return Fx_getPos2_return_x
endfunction

function dispatch_Fx_getPos2 takes integer this_57, string wurstStackTrace returns real
	local real getPos2_result_x
	local real getPos2_result_y
	local real temp_getPos2_result_x
	local real temp_getPos2_result_y
	if Fx_typeId[this_57] == 0 then
		if this_57 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Fx.getPos2" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Fx.getPos2 on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	set temp_getPos2_result_x = Fx_getPos2(this_57, "\n   Fx, line 148" + wurstStackTrace)
	set temp_getPos2_result_y = Fx_getPos2_return_y
	set getPos2_result_x = temp_getPos2_result_x
	set getPos2_result_y = temp_getPos2_result_y
	set dispatch_Fx_getPos2_return_x = getPos2_result_x
	set dispatch_Fx_getPos2_return_y = getPos2_result_y
	return dispatch_Fx_getPos2_return_x
endfunction

function Fx_setXY takes integer this_57, real pos_x, real pos_y returns nothing
	call unit_setXY(Fx_dummy[this_57], pos_x, pos_y)
endfunction

function dispatch_Fx_setXY takes integer this_57, real pos_x, real pos_y, string wurstStackTrace returns nothing
	if Fx_typeId[this_57] == 0 then
		if this_57 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Fx.setXY" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Fx.setXY on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call Fx_setXY(this_57, pos_x, pos_y)
endfunction

function alloc_DelayNode takes nothing returns integer
	local integer this_57
	if DelayNode_firstFree == 0 then
		set DelayNode_maxIndex = DelayNode_maxIndex + 1
		set this_57 = DelayNode_maxIndex
	else
		set DelayNode_firstFree = DelayNode_firstFree - 1
		set this_57 = DelayNode_nextFree[DelayNode_firstFree]
	endif
	set DelayNode_typeId[this_57] = 24
	return this_57
endfunction

function timer_getRemaining takes timer this_57 returns real
	return TimerGetRemaining(this_57)
endfunction

function construct_DelayNode takes integer this_57, unit u_2, real time returns nothing
	local integer tmp
	set DelayNode_next[this_57] = 0
	set DelayNode_u[this_57] = u_2
	set DelayNode_delayTime[this_57] = getElapsedGameTime() + time
	if DelayNode_first == 0 then
		set DelayNode_first = this_57
		set DelayNode_last = DelayNode_first
	else
		set tmp = DelayNode_first
		loop
			exitwhen  not (DelayNode_next[tmp] != 0 and DelayNode_delayTime[tmp] < DelayNode_delayTime[this_57])
			set tmp = DelayNode_next[tmp]
		endloop
		if DelayNode_delayTime[tmp] < DelayNode_delayTime[this_57] then
			if tmp == DelayNode_last then
				set DelayNode_next[tmp] = this_57
				set DelayNode_last = this_57
			else
				set DelayNode_next[this_57] = DelayNode_next[tmp]
				set DelayNode_next[tmp] = this_57
			endif
		elseif tmp == DelayNode_first then
			set DelayNode_first = this_57
			set DelayNode_next[this_57] = tmp
		elseif tmp == DelayNode_last then
			set DelayNode_next[tmp] = this_57
			set DelayNode_last = tmp
		else
			set DelayNode_next[this_57] = DelayNode_next[tmp]
			set DelayNode_next[tmp] = this_57
		endif
		if timer_getRemaining(DelayNode_t) > 0. and time < timer_getRemaining(DelayNode_t) then
			call timer_start(DelayNode_t, time, ref_function_bridge_DelayNode_recycle_2)
		elseif timer_getRemaining(DelayNode_t) <= 0. then
			call timer_start(DelayNode_t, time, ref_function_bridge_DelayNode_recycle_3)
		endif
	endif
endfunction

function new_DelayNode takes unit u_2, real time returns integer
	local integer this_57 = alloc_DelayNode()
	call construct_DelayNode(this_57, u_2, time)
	return this_57
endfunction

function DummyRecycler_recycle_2 takes unit u_2, real delay returns nothing
	call new_DelayNode(u_2, delay)
endfunction

function effect_destr takes effect this_57 returns nothing
	call DestroyEffect(this_57)
endfunction

function Fx_onDestroy takes integer this_57 returns nothing
	if Fx_fx[this_57] != null then
		call effect_destr(Fx_fx[this_57])
	endif
	call DummyRecycler_recycle_2(Fx_dummy[this_57], 1.)
endfunction

function dealloc_Fx takes integer obj, string wurstStackTrace returns nothing
	if Fx_typeId[obj] == 0 then
		call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Double free: object of type Fx" + wurstStackTrace)
		call I2S(1 / 0)
	else
		set Fx_nextFree[Fx_firstFree] = obj
		set Fx_firstFree = Fx_firstFree + 1
		set Fx_typeId[obj] = 0
	endif
endfunction

function destroyFx takes integer this_57, string wurstStackTrace returns nothing
	call Fx_onDestroy(this_57)
	call dealloc_Fx(this_57, "\n   Fx, line 202" + wurstStackTrace)
endfunction

function dispatch_Fx_destroyFx takes integer this_57, string wurstStackTrace returns nothing
	if Fx_typeId[this_57] == 0 then
		if this_57 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Fx.destroyFx" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Fx.destroyFx on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call destroyFx(this_57, "\n   Fx, line 20" + wurstStackTrace)
endfunction

function Missle_onDestroy takes integer this_57, string wurstStackTrace returns nothing
	call dispatch_Unit2Event_destroyUnit2Event(Missle_atHit[this_57], "\n   Missle, line 114" + wurstStackTrace)
	call dispatch_Unit2Event_destroyUnit2Event(Missle_atEnd[this_57], "\n   Missle, line 115" + wurstStackTrace)
	call timer_release(Missle_t[this_57], "\n   Missle, line 116" + wurstStackTrace)
	call dispatch_Fx_destroyFx(Missle_fx[this_57], "\n   Missle, line 117" + wurstStackTrace)
endfunction

function dealloc_Missle takes integer obj, string wurstStackTrace returns nothing
	if Missle_typeId[obj] == 0 then
		call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Double free: object of type Missle" + wurstStackTrace)
		call I2S(1 / 0)
	else
		set Missle_firstFree = Missle_firstFree + 1
		set Missle_typeId[obj] = 0
	endif
endfunction

function destroyMissle takes integer this_57, string wurstStackTrace returns nothing
	call Missle_onDestroy(this_57, "\n   Missle, line 113" + wurstStackTrace)
	call dealloc_Missle(this_57, "\n   Missle, line 113" + wurstStackTrace)
endfunction

function dispatch_Missle_destroyMissle takes integer this_57, string wurstStackTrace returns nothing
	if Missle_typeId[this_57] == 0 then
		if this_57 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Missle.destroyMissle" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Missle.destroyMissle on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call destroyMissle(this_57, "\n   Missle, line 9" + wurstStackTrace)
endfunction

function vec2_op_minus takes real this_x, real this_y, real v_x, real v_y returns real
	set vec2_op_minus_return_x = this_x - v_x
	set vec2_op_minus_return_y = this_y - v_y
	return vec2_op_minus_return_x
endfunction

function Missle_move takes integer this_57, string wurstStackTrace returns nothing
	local group g
	local unit u_2
	local real prePos_x
	local real prePos_y
	local unit hitUnit
	local real minDist
	local unit lu
	local real targetPos_x
	local real targetPos_y
	local real currentDist
	local integer tempIndex
	local integer tempIndex_2
	local real temp_prePos_x
	local real temp_prePos_y
	local real temp_targetPos_x
	local real temp_targetPos_y
	local real temp
	local real temp_2
	local integer temp_3
	local real temp_4
	local real temp_5
	if Missle_dl[this_57] <= 0 then
		call dispatch_Unit2Event_fire(Missle_atEnd[this_57], Missle_source[this_57], 0, "\n   Missle, line 76" + wurstStackTrace)
		call dispatch_Missle_destroyMissle(this_57, "\n   Missle, line 77" + wurstStackTrace)
	else
		set temp_3 = Missle_fx[this_57]
		set temp = dispatch_Fx_getPos2(Missle_fx[this_57], "\n   Missle, line 79" + wurstStackTrace)
		set temp_2 = dispatch_Fx_getPos2_return_y
		set tempIndex = this_57
		call dispatch_Fx_setXY(temp_3, vec2_op_plus(temp, temp_2, Missle_vel[tempIndex], Missle_vel_2[tempIndex]), vec2_op_plus_return_y, "\n   Missle, line 79" + wurstStackTrace)
		set g = CreateGroup()
		set Filter_filterCheckUnit = Unit_u[Missle_source[this_57]]
		call GroupEnumUnitsInRange(g, dispatch_Fx_getX(Missle_fx[this_57], "\n   Missle, line 83" + wurstStackTrace), dispatch_Fx_getY(Missle_fx[this_57], "\n   Missle, line 83" + wurstStackTrace), Missle_radius[this_57], Missle_filter[this_57])
		set u_2 = FirstOfGroup(g)
		if u_2 == null then
			set Missle_dl[this_57] = Missle_dl[this_57] - 1
		else
			call GroupRemoveUnit(g, u_2)
			if FirstOfGroup(g) == null then
				call dispatch_Unit2Event_fire(Missle_atHit[this_57], Missle_source[this_57], unit_getUserData(u_2), "\n   Missle, line 90" + wurstStackTrace)
				call DestroyGroup(g)
				call dispatch_Missle_destroyMissle(this_57, "\n   Missle, line 92" + wurstStackTrace)
				set g = null
				set u_2 = null
			else
				call GroupAddUnit(g, u_2)
				set temp_4 = dispatch_Fx_getPos2(Missle_fx[this_57], "\n   Missle, line 97" + wurstStackTrace)
				set temp_5 = dispatch_Fx_getPos2_return_y
				set tempIndex_2 = this_57
				set temp_prePos_x = vec2_op_minus(temp_4, temp_5, Missle_vel[tempIndex_2], Missle_vel_2[tempIndex_2])
				set temp_prePos_y = vec2_op_minus_return_y
				set prePos_x = temp_prePos_x
				set prePos_y = temp_prePos_y
				set hitUnit = null
				set minDist = 10000.
				loop
					exitwhen  not group_hasNext(g)
					set lu = group_next(g)
					set temp_targetPos_x = unit_getPos(lu)
					set temp_targetPos_y = unit_getPos_return_y
					set targetPos_x = temp_targetPos_x
					set targetPos_y = temp_targetPos_y
					set currentDist = vec2_distToVec(targetPos_x, targetPos_y, prePos_x, prePos_y)
					if currentDist > minDist then
						set minDist = currentDist
						set hitUnit = lu
					endif
				endloop
				call dispatch_Unit2Event_fire(Missle_atHit[this_57], Missle_source[this_57], unit_getUserData(hitUnit), "\n   Missle, line 106" + wurstStackTrace)
				call DestroyGroup(g)
				set u_2 = null
				set g = null
				set hitUnit = null
				call dispatch_Missle_destroyMissle(this_57, "\n   Missle, line 111" + wurstStackTrace)
			endif
		endif
	endif
	set g = null
	set u_2 = null
	set hitUnit = null
	set lu = null
endfunction

function dispatch_Missle_move takes integer this_57, string wurstStackTrace returns nothing
	if Missle_typeId[this_57] == 0 then
		if this_57 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Missle.move" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Missle.move on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call Missle_move(this_57, "\n   Missle, line 74" + wurstStackTrace)
endfunction

function Missle_callMove takes string wurstStackTrace returns nothing
	call dispatch_Missle_move(timer_getData(GetExpiredTimer(), "\n   Missle, line 46" + wurstStackTrace), "\n   Missle, line 46" + wurstStackTrace)
endfunction

function bridge_Missle_callMove takes nothing returns nothing
	call Missle_callMove("\n   Missle, line 32")
endfunction

function bridge_Missle_callMove_2 takes nothing returns nothing
	call Missle_callMove("\n   Missle, line 43")
endfunction

function dispatch_OnDamage_run takes integer this_57, unit damaged, unit source, real amount_51 returns nothing
endfunction

function triggerToIndex takes trigger object returns integer
	return handle_getHandleId(object)
endfunction

function OnDamage_damageHandler takes string wurstStackTrace returns boolean
	call dispatch_OnDamage_run(dispatch_HashMap_get(OnDamage_damageActions, triggerToIndex(GetTriggeringTrigger()), "\n   ClosureEvents, line 95" + wurstStackTrace), GetTriggerUnit(), GetEventDamageSource(), GetEventDamage())
	return false
endfunction

function bridge_OnDamage_damageHandler takes nothing returns boolean
	return OnDamage_damageHandler("\n   ClosureEvents, line 99")
endfunction

function Player_setCam takes string wurstStackTrace returns nothing
	local timer t = GetExpiredTimer()
	call timer_getData(t, "\n   PlayerClass, line 44" + wurstStackTrace)
	set t = null
endfunction

function bridge_Player_setCam takes nothing returns nothing
	call Player_setCam("\n   PlayerClass, line 38")
endfunction

function dispatch_Event_callActions takes integer this_57, integer d_2, string wurstStackTrace returns nothing
	if Event_typeId[this_57] == 0 then
		if this_57 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Event.callActions" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Event.callActions on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	if Event_typeId[this_57] <= 789 then
		if Event_typeId[this_57] <= 787 then
			if Event_typeId[this_57] <= 682 then
				call Event_callActions(this_57, d_2, "\n   CustomClosureEvents, line 38" + wurstStackTrace)
			else
				call Event_callActions(this_57, d_2, "\n   CustomClosureEvents, line 38" + wurstStackTrace)
			endif
		else
			call Event_callActions(this_57, d_2, "\n   CustomClosureEvents, line 38" + wurstStackTrace)
		endif
	elseif Event_typeId[this_57] <= 792 then
		call Event_callActions(this_57, d_2, "\n   CustomClosureEvents, line 38" + wurstStackTrace)
	else
		call Event_callActions(this_57, d_2, "\n   CustomClosureEvents, line 38" + wurstStackTrace)
	endif
endfunction

function alloc_Closure_2 takes nothing returns integer
	local integer this_57
	if CallbackSingle_firstFree == 0 then
		set CallbackSingle_maxIndex = CallbackSingle_maxIndex + 1
		set this_57 = CallbackSingle_maxIndex
	else
		set CallbackSingle_firstFree = CallbackSingle_firstFree - 1
		set this_57 = CallbackSingle_nextFree[CallbackSingle_firstFree]
	endif
	set CallbackSingle_typeId[this_57] = 673
	return this_57
endfunction

function HashList_get takes integer this_57, integer index returns integer
	return hashtable_loadInt(HashList_ht, this_57, index)
endfunction

function dispatch_HashList_get takes integer this_57, integer index, string wurstStackTrace returns integer
	local integer get_result
	if HashList_typeId[this_57] == 0 then
		if this_57 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling HashList.get" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called HashList.get on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	set get_result = HashList_get(this_57, index)
	return get_result
endfunction

function HashList_getSize takes integer this_57 returns integer
	return HashList_size[this_57]
endfunction

function dispatch_HashList_getSize takes integer this_57, string wurstStackTrace returns integer
	local integer getSize_result
	if HashList_typeId[this_57] == 0 then
		if this_57 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling HashList.getSize" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called HashList.getSize on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	set getSize_result = HashList_getSize(this_57)
	return getSize_result
endfunction

function unit_getName takes unit this_57 returns string
	return GetUnitName(this_57)
endfunction

function closure_impl_61 takes integer this_57, integer i, string wurstStackTrace returns real
	local real ret = 0.
	local integer id
	local unit u_2
	local integer clVar
	if i >= dispatch_HashList_getSize(PreloadSystem_unitsToPreload, "\n   PreloadSystem, line 80" + wurstStackTrace) then
		call unit_remove(PreloadSystem_preloadDummy)
		set ret = -1.
	else
		set id = dispatch_HashList_get(PreloadSystem_unitsToPreload, i, "\n   PreloadSystem, line 84" + wurstStackTrace)
		set u_2 = CreateUnit(Basics_DUMMY_PLAYER, id, 0., 0., 0.)
		if unit_getName(u_2) == "" or unit_getName(u_2) == null then
			set ret = -2.
		else
			set clVar = alloc_Closure_2()
			set u[clVar] = u_2
			call doAfter(1., clVar, "\n   PreloadSystem, line 89" + wurstStackTrace)
			set ret = PreloadSystem_unitLoadTime
		endif
	endif
	set u_2 = null
	return ret
endfunction

function alloc_Closure_3 takes nothing returns integer
	local integer this_57
	if PlayerAction_firstFree == 0 then
		set PlayerAction_maxIndex = PlayerAction_maxIndex + 1
		set this_57 = PlayerAction_maxIndex
	else
		set PlayerAction_firstFree = PlayerAction_firstFree - 1
		set this_57 = PlayerAction_nextFree[PlayerAction_firstFree]
	endif
	set PlayerAction_typeId[this_57] = 864
	return this_57
endfunction

function alloc_Closure_4 takes nothing returns integer
	local integer this_57
	if PlayerAction_firstFree == 0 then
		set PlayerAction_maxIndex = PlayerAction_maxIndex + 1
		set this_57 = PlayerAction_maxIndex
	else
		set PlayerAction_firstFree = PlayerAction_firstFree - 1
		set this_57 = PlayerAction_nextFree[PlayerAction_firstFree]
	endif
	set PlayerAction_typeId[this_57] = 866
	return this_57
endfunction

function alloc_Closure_5 takes nothing returns integer
	local integer this_57
	if CallbackSingle_firstFree == 0 then
		set CallbackSingle_maxIndex = CallbackSingle_maxIndex + 1
		set this_57 = CallbackSingle_maxIndex
	else
		set CallbackSingle_firstFree = CallbackSingle_firstFree - 1
		set this_57 = CallbackSingle_nextFree[CallbackSingle_firstFree]
	endif
	set CallbackSingle_typeId[this_57] = 863
	return this_57
endfunction

function alloc_Closure_6 takes nothing returns integer
	local integer this_57
	if PlayerAction_firstFree == 0 then
		set PlayerAction_maxIndex = PlayerAction_maxIndex + 1
		set this_57 = PlayerAction_maxIndex
	else
		set PlayerAction_firstFree = PlayerAction_firstFree - 1
		set this_57 = PlayerAction_nextFree[PlayerAction_firstFree]
	endif
	set PlayerAction_typeId[this_57] = 865
	return this_57
endfunction

function alloc_Closure_7 takes nothing returns integer
	local integer this_57
	if PlayerAction_firstFree == 0 then
		set PlayerAction_maxIndex = PlayerAction_maxIndex + 1
		set this_57 = PlayerAction_maxIndex
	else
		set PlayerAction_firstFree = PlayerAction_firstFree - 1
		set this_57 = PlayerAction_nextFree[PlayerAction_firstFree]
	endif
	set PlayerAction_typeId[this_57] = 867
	return this_57
endfunction

function ElementLoop_onDestroy takes integer this_57 returns nothing
endfunction

function dealloc_ElementLoop takes integer obj, string wurstStackTrace returns nothing
	if ElementLoop_typeId[obj] == 0 then
		call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Double free: object of type ElementLoop" + wurstStackTrace)
		call I2S(1 / 0)
	else
		set ElementLoop_nextFree[ElementLoop_firstFree] = obj
		set ElementLoop_firstFree = ElementLoop_firstFree + 1
		set ElementLoop_typeId[obj] = 0
	endif
endfunction

function destroyElementLoop takes integer this_57, string wurstStackTrace returns nothing
	call ElementLoop_onDestroy(this_57)
	call dealloc_ElementLoop(this_57, "\n   Setup, line 105" + wurstStackTrace)
endfunction

function dispatch_ElementLoop_destroyElementLoop takes integer this_57, string wurstStackTrace returns nothing
	if ElementLoop_typeId[this_57] == 0 then
		if this_57 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling ElementLoop.destroyElementLoop" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called ElementLoop.destroyElementLoop on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call destroyElementLoop(this_57, "\n   Setup, line 105" + wurstStackTrace)
endfunction

function ElementLoop_close takes integer this_57, string wurstStackTrace returns nothing
	call dispatch_ElementLoop_destroyElementLoop(this_57, "\n   Setup, line 131" + wurstStackTrace)
endfunction

function dispatch_ElementLoop_close takes integer this_57, string wurstStackTrace returns nothing
	if ElementLoop_typeId[this_57] == 0 then
		if this_57 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling ElementLoop.close" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called ElementLoop.close on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call ElementLoop_close(this_57, "\n   Setup, line 130" + wurstStackTrace)
endfunction

function ElementLoop_hasNext takes integer this_57 returns boolean
	local integer tempIndex = this_57
	local integer temp_tempTupleSelectionResult_1 = ElementLoop_a[tempIndex]
	local integer temp_tempTupleSelectionResult_2 = ElementLoop_a_2[tempIndex]
	local integer tempTupleSelectionResult_1 = temp_tempTupleSelectionResult_1
	local integer temp = tempTupleSelectionResult_1
	local integer tempIndex_2 = this_57
	local integer temp_tempTupleSelectionResult_1_2 = ElementLoop_b[tempIndex_2]
	local integer temp_tempTupleSelectionResult_2_2 = ElementLoop_b_2[tempIndex_2]
	local integer tempTupleSelectionResult_1_2 = temp_tempTupleSelectionResult_1_2
	local integer tempIndex_3
	local integer tempTupleSelectionResult_2
	local integer temp_tempTupleSelectionResult_1_3
	local integer temp_tempTupleSelectionResult_2_3
	local integer tempIndex_4
	local integer tempTupleSelectionResult_2_2
	local integer temp_tempTupleSelectionResult_1_4
	local integer temp_tempTupleSelectionResult_2_4
	local integer temp_2
	local boolean andLeft
	if temp <= tempTupleSelectionResult_1_2 then
		set tempIndex_3 = this_57
		set temp_tempTupleSelectionResult_1_3 = ElementLoop_a[tempIndex_3]
		set temp_tempTupleSelectionResult_2_3 = ElementLoop_a_2[tempIndex_3]
		set tempTupleSelectionResult_2 = temp_tempTupleSelectionResult_2_3
		set temp_2 = tempTupleSelectionResult_2
		set tempIndex_4 = this_57
		set temp_tempTupleSelectionResult_1_4 = ElementLoop_b[tempIndex_4]
		set temp_tempTupleSelectionResult_2_4 = ElementLoop_b_2[tempIndex_4]
		set tempTupleSelectionResult_2_2 = temp_tempTupleSelectionResult_2_4
		set andLeft = temp_2 <= tempTupleSelectionResult_2_2
	else
		set andLeft = false
	endif
	return andLeft
endfunction

function dispatch_ElementLoop_hasNext takes integer this_57, string wurstStackTrace returns boolean
	local boolean hasNext_result
	if ElementLoop_typeId[this_57] == 0 then
		if this_57 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling ElementLoop.hasNext" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called ElementLoop.hasNext on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	set hasNext_result = ElementLoop_hasNext(this_57)
	return hasNext_result
endfunction

function ElementLoop_iterator takes integer this_57 returns integer
	return this_57
endfunction

function dispatch_ElementLoop_iterator takes integer this_57, string wurstStackTrace returns integer
	local integer iterator_result
	if ElementLoop_typeId[this_57] == 0 then
		if this_57 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling ElementLoop.iterator" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called ElementLoop.iterator on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	set iterator_result = ElementLoop_iterator(this_57)
	return iterator_result
endfunction

function ElementLoop_next takes integer this_57 returns integer
	local integer tempIndex = this_57
	local integer temp_ret_x = ElementLoop_a[tempIndex]
	local integer temp_ret_y = ElementLoop_a_2[tempIndex]
	local integer ret_x = temp_ret_x
	local integer ret_y = temp_ret_y
	local integer tempIndex_2 = this_57
	local integer temp_tempTupleSelectionResult_1 = ElementLoop_a[tempIndex_2]
	local integer temp_tempTupleSelectionResult_2 = ElementLoop_a_2[tempIndex_2]
	local integer tempTupleSelectionResult_1 = temp_tempTupleSelectionResult_1
	local integer temp = tempTupleSelectionResult_1
	local integer tempIndex_3 = this_57
	local integer temp_tempTupleSelectionResult_1_2 = ElementLoop_b[tempIndex_3]
	local integer temp_tempTupleSelectionResult_2_2 = ElementLoop_b_2[tempIndex_3]
	local integer tempTupleSelectionResult_1_2 = temp_tempTupleSelectionResult_1_2
	local integer tempIndex_4
	local integer tempIndex_5
	local integer tempTupleSelectionResult_2
	local integer temp_tempTupleSelectionResult_1_3
	local integer temp_tempTupleSelectionResult_2_3
	local integer tempIndex_6
	local integer tempIndex_7
	local integer tempIndex_8
	local integer tempTupleSelectionResult_1_3
	local integer temp_tempTupleSelectionResult_1_4
	local integer temp_tempTupleSelectionResult_2_4
	local integer temp_2
	local integer temp_3
	if temp >= tempTupleSelectionResult_1_2 then
		set tempIndex_4 = this_57
		set temp_2 = tempIndex_4
		set tempIndex_5 = this_57
		set temp_tempTupleSelectionResult_1_3 = ElementLoop_a[tempIndex_5]
		set temp_tempTupleSelectionResult_2_3 = ElementLoop_a_2[tempIndex_5]
		set tempTupleSelectionResult_2 = temp_tempTupleSelectionResult_2_3
		set ElementLoop_a_2[temp_2] = tempTupleSelectionResult_2 + 1
		set tempIndex_6 = this_57
		set ElementLoop_a[tempIndex_6] = ElementLoop_start[this_57]
	else
		set tempIndex_7 = this_57
		set temp_3 = tempIndex_7
		set tempIndex_8 = this_57
		set temp_tempTupleSelectionResult_1_4 = ElementLoop_a[tempIndex_8]
		set temp_tempTupleSelectionResult_2_4 = ElementLoop_a_2[tempIndex_8]
		set tempTupleSelectionResult_1_3 = temp_tempTupleSelectionResult_1_4
		set ElementLoop_a[temp_3] = tempTupleSelectionResult_1_3 + 1
	endif
	set ElementLoop_next_return_x = ret_x
	set ElementLoop_next_return_y = ret_y
	return ElementLoop_next_return_x
endfunction

function dispatch_ElementLoop_next takes integer this_57, string wurstStackTrace returns integer
	local integer next_result_x
	local integer next_result_y
	local integer temp_next_result_x
	local integer temp_next_result_y
	if ElementLoop_typeId[this_57] == 0 then
		if this_57 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling ElementLoop.next" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called ElementLoop.next on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	set temp_next_result_x = ElementLoop_next(this_57)
	set temp_next_result_y = ElementLoop_next_return_y
	set next_result_x = temp_next_result_x
	set next_result_y = temp_next_result_y
	set dispatch_ElementLoop_next_return_x = next_result_x
	set dispatch_ElementLoop_next_return_y = next_result_y
	return dispatch_ElementLoop_next_return_x
endfunction

function element_op_minus takes integer this_x, integer this_y, integer other_x, integer other_y returns integer
	set element_op_minus_return_x = this_x - other_x
	set element_op_minus_return_y = this_y - other_y
	return element_op_minus_return_x
endfunction

function element_op_plus takes integer this_x, integer this_y, integer other_x, integer other_y returns integer
	set element_op_plus_return_x = this_x + other_x
	set element_op_plus_return_y = this_y + other_y
	return element_op_plus_return_x
endfunction

function getTrackableAt takes integer pos_x, integer pos_y returns integer
	return Setup_tracks[(Setup_menuWidth + 1) * pos_x + pos_y]
endfunction

function alloc_ElementLoop takes nothing returns integer
	local integer this_57
	if ElementLoop_firstFree == 0 then
		set ElementLoop_maxIndex = ElementLoop_maxIndex + 1
		set this_57 = ElementLoop_maxIndex
	else
		set ElementLoop_firstFree = ElementLoop_firstFree - 1
		set this_57 = ElementLoop_nextFree[ElementLoop_firstFree]
	endif
	set ElementLoop_typeId[this_57] = 685
	return this_57
endfunction

function construct_ElementLoop takes integer this_57, integer a_x, integer a_y, integer b_x, integer b_y returns nothing
	local integer tempIndex = this_57
	local integer tempIndex_2
	set ElementLoop_a[tempIndex] = a_x
	set ElementLoop_a_2[tempIndex] = a_y
	set tempIndex_2 = this_57
	set ElementLoop_b[tempIndex_2] = b_x
	set ElementLoop_b_2[tempIndex_2] = b_y
	set ElementLoop_start[this_57] = a_x
endfunction

function new_ElementLoop takes integer a_x, integer a_y, integer b_x, integer b_y returns integer
	local integer this_57 = alloc_ElementLoop()
	call construct_ElementLoop(this_57, a_x, a_y, b_x, b_y)
	return this_57
endfunction

function Window_addClickDetection takes integer this_57, integer o, string wurstStackTrace returns nothing
	local integer tempIndex = o
	local integer temp_3 = Widget_pos[tempIndex]
	local integer temp_4 = Widget_pos_2[tempIndex]
	local integer tempIndex_2 = o
	local integer temp = Widget_pos[tempIndex_2]
	local integer temp_2 = Widget_pos_2[tempIndex_2]
	local integer tempIndex_3 = o
	local integer wurst__iterator2 = dispatch_ElementLoop_iterator(new_ElementLoop(temp_3, temp_4, element_op_minus(element_op_plus(temp, temp_2, Widget_size[tempIndex_3], Widget_size_2[tempIndex_3]), element_op_plus_return_y, 1, 1), element_op_minus_return_y), "\n   Menu, line 181" + wurstStackTrace)
	local integer e_x
	local integer e_y
	local integer temp_e_x
	local integer temp_e_y
	loop
		exitwhen  not dispatch_ElementLoop_hasNext(wurst__iterator2, "\n   Menu, line 181" + wurstStackTrace)
		set temp_e_x = dispatch_ElementLoop_next(wurst__iterator2, "\n   Menu, line 181" + wurstStackTrace)
		set temp_e_y = dispatch_ElementLoop_next_return_y
		set e_x = temp_e_x
		set e_y = temp_e_y
		call dispatch_HashMap_put(Window_trackMap[this_57], getTrackableAt(e_x, e_y), o, "\n   Menu, line 182" + wurstStackTrace)
	endloop
	call dispatch_ElementLoop_close(wurst__iterator2, "\n   Menu, line 181" + wurstStackTrace)
endfunction

function dispatch_Window_addClickDetection takes integer this_57, integer o, string wurstStackTrace returns nothing
	if Window_typeId[this_57] == 0 then
		if this_57 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Window.addClickDetection" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Window.addClickDetection on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	if Window_typeId[this_57] <= 805 then
		call Window_addClickDetection(this_57, o, "\n   Menu, line 180" + wurstStackTrace)
	else
		call Window_addClickDetection(this_57, o, "\n   Menu, line 180" + wurstStackTrace)
	endif
endfunction

function Observable_onAdd takes integer this_57, integer w_2, string wurstStackTrace returns nothing
	call dispatch_Window_addClickDetection(w_2, this_57, "\n   Menu, line 52" + wurstStackTrace)
endfunction

function Widget_onAdd takes integer this_57, integer w_2 returns nothing
endfunction

function cyc_dispatch_Window_add takes integer funcChoice, integer this_57, integer g, string wurstStackTrace returns nothing
	local integer wurst__iterator0
	local integer wi
	if funcChoice == 0 then
		if Window_typeId[this_57] == 0 then
			if this_57 == 0 then
				call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Window.add" + wurstStackTrace)
				call I2S(1 / 0)
			else
				call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Window.add on invalid object." + wurstStackTrace)
				call I2S(1 / 0)
			endif
		endif
		if Window_typeId[this_57] <= 805 then
			call cyc_dispatch_Window_add(1, this_57, g, "\n   Menu, line 176" + wurstStackTrace)
		else
			call cyc_dispatch_Window_add(1, this_57, g, "\n   Menu, line 176" + wurstStackTrace)
		endif
	elseif funcChoice == 1 then
		call dispatch_LinkedList_add(Window_content[this_57], g, "\n   Menu, line 177" + wurstStackTrace)
		call cyc_dispatch_Window_add(2, g, this_57, "\n   Menu, line 178" + wurstStackTrace)
	elseif funcChoice == 2 then
		if Widget_typeId[this_57] == 0 then
			if this_57 == 0 then
				call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Widget.onAdd" + wurstStackTrace)
				call I2S(1 / 0)
			else
				call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Widget.onAdd on invalid object." + wurstStackTrace)
				call I2S(1 / 0)
			endif
		endif
		if Widget_typeId[this_57] <= 819 then
			if Widget_typeId[this_57] <= 802 then
				if Widget_typeId[this_57] <= 801 then
					call Widget_onAdd(this_57, g)
				else
					call Observable_onAdd(this_57, g, "\n   Menu, line 25" + wurstStackTrace)
				endif
			elseif Widget_typeId[this_57] <= 810 then
				call Widget_onAdd(this_57, g)
			else
				call Widget_onAdd(this_57, g)
			endif
		elseif Widget_typeId[this_57] <= 829 then
			if Widget_typeId[this_57] <= 823 then
				call cyc_dispatch_Window_add(3, this_57, g, "\n   Menu, line 25" + wurstStackTrace)
			else
				call Widget_onAdd(this_57, g)
			endif
		elseif Widget_typeId[this_57] <= 831 then
			call Widget_onAdd(this_57, g)
		else
			call Observable_onAdd(this_57, g, "\n   Menu, line 25" + wurstStackTrace)
		endif
	elseif funcChoice == 3 then
		set wurst__iterator0 = dispatch_LinkedList_iterator(Pane_content[this_57], "\n   Pane, line 85" + wurstStackTrace)
		loop
			exitwhen  not dispatch_LLIterator_hasNext(wurst__iterator0, "\n   Pane, line 85" + wurstStackTrace)
			set wi = dispatch_LLIterator_next(wurst__iterator0, "\n   Pane, line 85" + wurstStackTrace)
			call cyc_dispatch_Window_add(0, g, wi, "\n   Pane, line 86" + wurstStackTrace)
		endloop
		call dispatch_LLIterator_close(wurst__iterator0, "\n   Pane, line 85" + wurstStackTrace)
	endif
endfunction

function Observable_setClickAction takes integer this_57, integer p_2 returns nothing
	set Observable_click[this_57] = p_2
endfunction

function dispatch_Observable_setClickAction takes integer this_57, integer p_2, string wurstStackTrace returns nothing
	if Widget_typeId[this_57] == 0 then
		if this_57 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Observable.setClickAction" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Observable.setClickAction on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	if Widget_typeId[this_57] <= 802 then
		call Observable_setClickAction(this_57, p_2)
	else
		call Observable_setClickAction(this_57, p_2)
	endif
endfunction

function TextBox_setColor takes integer this_57, integer c_red, integer c_green, integer c_blue returns nothing
	local integer tempIndex = this_57
	set TextBox_col[tempIndex] = c_red
	set TextBox_col_2[tempIndex] = c_green
	set TextBox_col_3[tempIndex] = c_blue
endfunction

function dispatch_TextBox_setColor takes integer this_57, integer c_red, integer c_green, integer c_blue, string wurstStackTrace returns nothing
	if Widget_typeId[this_57] == 0 then
		if this_57 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling TextBox.setColor" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called TextBox.setColor on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call TextBox_setColor(this_57, c_red, c_green, c_blue)
endfunction

function TextBox_setText takes integer this_57, string s, player p_2 returns nothing
	if GetLocalPlayer() == p_2 then
		set TextBox_content[this_57] = s
	endif
endfunction

function dispatch_TextBox_setText takes integer this_57, string s, player p_2, string wurstStackTrace returns nothing
	if Widget_typeId[this_57] == 0 then
		if this_57 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling TextBox.setText" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called TextBox.setText on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call TextBox_setText(this_57, s, p_2)
endfunction

function image_setColor_2 takes image this_57, integer col_red, integer col_green, integer col_blue returns nothing
	call SetImageColor(this_57, col_red, col_green, col_blue, 255)
endfunction

function alloc_Button takes nothing returns integer
	local integer this_57
	if Widget_firstFree == 0 then
		set Widget_maxIndex = Widget_maxIndex + 1
		set this_57 = Widget_maxIndex
	else
		set Widget_firstFree = Widget_firstFree - 1
		set this_57 = Widget_nextFree[Widget_firstFree]
	endif
	set Widget_typeId[this_57] = 832
	return this_57
endfunction

function construct_Observable takes integer this_57, integer w_2 returns nothing
	local integer temp = this_57
	local integer tempIndex = w_2
	local integer temp_2 = Widget_pos[tempIndex]
	local integer temp_3 = Widget_pos_2[tempIndex]
	local integer tempIndex_2 = w_2
	call construct_Widget(temp, temp_2, temp_3, Widget_size[tempIndex_2], Widget_size_2[tempIndex_2])
	set Observable_click[this_57] = 0
	set Observable_dClick[this_57] = 0
	set Observable_track[this_57] = 0
	set Observable_unTrack[this_57] = 0
	set Observable_playClickAnimation[this_57] = true
	set Observable_playDoubleClickAnimation[this_57] = true
	set Observable_playHoverAnimation[this_57] = true
	set Observable_content[this_57] = w_2
endfunction

function TextSplat_setMaxWidth takes integer this_57, real maxWidth returns nothing
	local integer temp = this_57
	local integer tempIndex = this_57
	local real temp_tempTupleSelectionResult_1 = TextSplat_pos[tempIndex]
	local real temp_tempTupleSelectionResult_2 = TextSplat_pos_2[tempIndex]
	local real tempTupleSelectionResult_1 = temp_tempTupleSelectionResult_1
	set TextSplat_maxWidth[temp] = tempTupleSelectionResult_1 + maxWidth
endfunction

function dispatch_TextSplat_setMaxWidth takes integer this_57, real maxWidth, string wurstStackTrace returns nothing
	if TextSplat_typeId[this_57] == 0 then
		if this_57 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling TextSplat.setMaxWidth" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called TextSplat.setMaxWidth on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call TextSplat_setMaxWidth(this_57, maxWidth)
endfunction

function alloc_ImageEx takes nothing returns integer
	local integer this_57
	if Widget_firstFree == 0 then
		set Widget_maxIndex = Widget_maxIndex + 1
		set this_57 = Widget_maxIndex
	else
		set Widget_firstFree = Widget_firstFree - 1
		set this_57 = Widget_nextFree[Widget_firstFree]
	endif
	set Widget_typeId[this_57] = 819
	return this_57
endfunction

function createImage takes string path, real pos_x, real pos_y, real sizeX, real sizeY, integer layer returns image
	local image temp = CreateImage(path, sizeX, sizeY, 0., pos_x, pos_y, 0., 32., 32., 0., layer + 1)
	set createImagetempReturn_2 = temp
	set temp = null
	return createImagetempReturn_2
endfunction

function construct_ImageEx takes integer this_57, integer pos_x, integer pos_y, real posOffset_x, real posOffset_y, integer size_x, integer size_y, real sizeFix_x, real sizeFix_y, string filePath, integer layer returns nothing
	call construct_Widget(this_57, pos_x, pos_y, size_x, size_y)
	set ImageEx_content[this_57] = createImage(filePath, vec2_op_plus(vec2_op_plus(element_toVec(pos_x, pos_y), element_toVec_return_y, Setup_menuStart_x, Setup_menuStart_y), vec2_op_plus_return_y, posOffset_x, posOffset_y), vec2_op_plus_return_y, size_x * Setup_tileSize + sizeFix_x, size_y * Setup_tileSize + sizeFix_y, layer)
endfunction

function new_ImageEx takes integer pos_x, integer pos_y, real posOffset_x, real posOffset_y, integer size_x, integer size_y, real sizeFix_x, real sizeFix_y, string filePath, integer layer returns integer
	local integer this_57 = alloc_ImageEx()
	call construct_ImageEx(this_57, pos_x, pos_y, posOffset_x, posOffset_y, size_x, size_y, sizeFix_x, sizeFix_y, filePath, layer)
	return this_57
endfunction

function alloc_TextSplat takes nothing returns integer
	local integer this_57
	if TextSplat_firstFree == 0 then
		set TextSplat_maxIndex = TextSplat_maxIndex + 1
		set this_57 = TextSplat_maxIndex
	else
		set TextSplat_firstFree = TextSplat_firstFree - 1
		set this_57 = TextSplat_nextFree[TextSplat_firstFree]
	endif
	set TextSplat_typeId[this_57] = 814
	return this_57
endfunction

function alloc_ImageList takes nothing returns integer
	local integer this_57
	if ImageList_firstFree == 0 then
		set ImageList_maxIndex = ImageList_maxIndex + 1
		set this_57 = ImageList_maxIndex
	else
		set ImageList_firstFree = ImageList_firstFree - 1
		set this_57 = ImageList_nextFree[ImageList_firstFree]
	endif
	set ImageList_typeId[this_57] = 816
	return this_57
endfunction

function construct_ImageList takes integer this_57 returns nothing
	set ImageList_last[this_57] = 0
endfunction

function new_ImageList takes nothing returns integer
	local integer this_57 = alloc_ImageList()
	call construct_ImageList(this_57)
	return this_57
endfunction

function construct_TextSplat takes integer this_57, real pos_x, real pos_y, real fontSize, integer l returns nothing
	local integer tempIndex = this_57
	local integer tempIndex_2
	local integer tempIndex_3
	set TextSplat_pos[tempIndex] = pos_x
	set TextSplat_pos_2[tempIndex] = pos_y
	set TextSplat_fontSize[this_57] = fontSize
	set TextSplat_images[this_57] = new_ImageList()
	set TextSplat_layer[this_57] = l
	set TextSplat_maxWidth[this_57] = TextSplat_DISABLE_MAX_WIDTH
	set tempIndex_2 = this_57
	set TextSplat_cursor[tempIndex_2] = pos_x
	set TextSplat_cursor_2[tempIndex_2] = pos_y - fontSize
	set tempIndex_3 = this_57
	set TextSplat_dimensions[tempIndex_3] = pos_x
	set TextSplat_dimensions_2[tempIndex_3] = pos_y
endfunction

function new_TextSplat takes real pos_x, real pos_y, real fontSize, integer l returns integer
	local integer this_57 = alloc_TextSplat()
	call construct_TextSplat(this_57, pos_x, pos_y, fontSize, l)
	return this_57
endfunction

function construct_Button takes integer this_57, integer pos_x, integer pos_y, integer scale, integer l, string name, string wurstStackTrace returns nothing
	local real textsize
	local real vecSize_x
	local real vecSize_y
	local integer receiver
	local integer tempIndex
	local real temp_vecSize_x
	local real temp_vecSize_y
	call construct_Observable(this_57, new_ImageEx(pos_x, pos_y, Button_posFix_x, Button_posFix_y, scale * 4, scale, Button_sizeFix_x, Button_sizeFix_y, Button_buttonTexture, l))
	set Button_name[this_57] = name
	set textsize = 32. + scale * 20
	set tempIndex = this_57
	set temp_vecSize_x = element_toVec(Widget_size[tempIndex], Widget_size_2[tempIndex])
	set temp_vecSize_y = element_toVec_return_y
	set vecSize_x = temp_vecSize_x
	set vecSize_y = temp_vecSize_y
	set receiver = new_TextSplat(vec2_op_plus(vec2_op_plus(element_toVec(pos_x, pos_y), element_toVec_return_y, vecSize_x / 4. - string_length(name) * (textsize / 2.), vecSize_y / 2.), vec2_op_plus_return_y, Setup_menuStart_x, Setup_menuStart_y), vec2_op_plus_return_y, textsize, l)
	call dispatch_TextSplat_setMaxWidth(receiver, 1000., "\n   Button, line 21" + wurstStackTrace)
	set Button_splat[this_57] = receiver
endfunction

function new_Button takes integer pos_x, integer pos_y, integer scale, integer l, string name, string wurstStackTrace returns integer
	local integer this_57 = alloc_Button()
	call construct_Button(this_57, pos_x, pos_y, scale, l, name, "\n   Button, line 16" + wurstStackTrace)
	return this_57
endfunction

function alloc_Icon takes nothing returns integer
	local integer this_57
	if Widget_firstFree == 0 then
		set Widget_maxIndex = Widget_maxIndex + 1
		set this_57 = Widget_maxIndex
	else
		set Widget_firstFree = Widget_firstFree - 1
		set this_57 = Widget_nextFree[Widget_firstFree]
	endif
	set Widget_typeId[this_57] = 831
	return this_57
endfunction

function getIconType takes string name, string wurstStackTrace returns integer
	local integer i = dispatch_HashMap_get(IconType_iconMap1, StringHash(name), "\n   IconType, line 297" + wurstStackTrace)
	local integer i2 = dispatch_HashMap_get(IconType_iconMap2, StringHash(name), "\n   IconType, line 298" + wurstStackTrace)
	set getIconType_return_normalId = i
	set getIconType_return_diableId = i2
	return getIconType_return_normalId
endfunction

function construct_Icon takes integer this_57, string name, integer pos_x, integer pos_y, integer scale, string wurstStackTrace returns nothing
	local integer tempIndex
	local integer tempIndex_2
	local integer tempIndex_3
	local integer tempIndex_4
	local integer temp
	call construct_Widget(this_57, pos_x, pos_y, scale, scale)
	set tempIndex = this_57
	set Icon_realPos[tempIndex] = vec2_op_plus(element_toVec(pos_x, pos_y), element_toVec_return_y, Setup_menuStart_x, Setup_menuStart_y)
	set Icon_realPos_2[tempIndex] = vec2_op_plus_return_y
	set tempIndex_2 = this_57
	set temp = tempIndex_2
	set tempIndex_3 = this_57
	set Icon_realPos[temp] = vec2_op_plus(Icon_realPos[tempIndex_3], Icon_realPos_2[tempIndex_3], (scale - 1) * Setup_tileSize * 0.5, (scale - 1) * Setup_tileSize * 0.5)
	set Icon_realPos_2[tempIndex_2] = vec2_op_plus_return_y
	set tempIndex_4 = this_57
	set Icon_typ[tempIndex_4] = getIconType(name, "\n   Icon, line 24" + wurstStackTrace)
	set Icon_typ_2[tempIndex_4] = getIconType_return_diableId
	set Icon_scale[this_57] = scale
endfunction

function new_Icon takes string name, integer pos_x, integer pos_y, integer scale, string wurstStackTrace returns integer
	local integer this_57 = alloc_Icon()
	call construct_Icon(this_57, name, pos_x, pos_y, scale, "\n   Icon, line 20" + wurstStackTrace)
	return this_57
endfunction

function construct_ImageEx_2 takes integer this_57, integer pos_x, integer pos_y, integer size_x, integer size_y, string filePath, integer layer returns nothing
	call construct_Widget(this_57, pos_x, pos_y, size_x, size_y)
	set ImageEx_content[this_57] = createImage(filePath, vec2_op_plus(element_toVec(pos_x, pos_y), element_toVec_return_y, Setup_menuStart_x, Setup_menuStart_y), vec2_op_plus_return_y, size_x * Setup_tileSize * 1., size_y * Setup_tileSize * 1., layer)
endfunction

function new_ImageEx_2 takes integer pos_x, integer pos_y, integer size_x, integer size_y, string filePath, integer layer returns integer
	local integer this_57 = alloc_ImageEx()
	call construct_ImageEx_2(this_57, pos_x, pos_y, size_x, size_y, filePath, layer)
	return this_57
endfunction

function alloc_Observable takes nothing returns integer
	local integer this_57
	if Widget_firstFree == 0 then
		set Widget_maxIndex = Widget_maxIndex + 1
		set this_57 = Widget_maxIndex
	else
		set Widget_firstFree = Widget_firstFree - 1
		set this_57 = Widget_nextFree[Widget_firstFree]
	endif
	set Widget_typeId[this_57] = 802
	return this_57
endfunction

function new_Observable takes integer w_2 returns integer
	local integer this_57 = alloc_Observable()
	call construct_Observable(this_57, w_2)
	return this_57
endfunction

function alloc_Pane takes nothing returns integer
	local integer this_57
	if Widget_firstFree == 0 then
		set Widget_maxIndex = Widget_maxIndex + 1
		set this_57 = Widget_maxIndex
	else
		set Widget_firstFree = Widget_firstFree - 1
		set this_57 = Widget_nextFree[Widget_firstFree]
	endif
	set Widget_typeId[this_57] = 823
	return this_57
endfunction

function alloc_Closure_8 takes nothing returns integer
	local integer this_57
	if PlayerAction_firstFree == 0 then
		set PlayerAction_maxIndex = PlayerAction_maxIndex + 1
		set this_57 = PlayerAction_maxIndex
	else
		set PlayerAction_firstFree = PlayerAction_firstFree - 1
		set this_57 = PlayerAction_nextFree[PlayerAction_firstFree]
	endif
	set PlayerAction_typeId[this_57] = 824
	return this_57
endfunction

function createImage_2 takes string filePath, integer pos_x, integer pos_y, real posOffset_x, real posOffset_y, integer size_x, integer size_y, real sizeFix_x, real sizeFix_y, integer layer returns image
	return createImage(filePath, vec2_op_plus(vec2_op_plus(element_toVec(pos_x, pos_y), element_toVec_return_y, Setup_menuStart_x, Setup_menuStart_y), vec2_op_plus_return_y, posOffset_x, posOffset_y), vec2_op_plus_return_y, size_x * Setup_tileSize + sizeFix_x, size_y * Setup_tileSize + sizeFix_y, layer)
endfunction

function createImage_3 takes string filePath, integer pos_x, integer pos_y, integer size_x, integer size_y, real sizeFix_x, real sizeFix_y, integer layer returns image
	return createImage(filePath, vec2_op_plus(element_toVec(pos_x, pos_y), element_toVec_return_y, Setup_menuStart_x, Setup_menuStart_y), vec2_op_plus_return_y, size_x * Setup_tileSize + sizeFix_x, size_y * Setup_tileSize + sizeFix_y, layer)
endfunction

function alloc_ListImage takes nothing returns integer
	local integer this_57
	if ListImage_firstFree == 0 then
		set ListImage_maxIndex = ListImage_maxIndex + 1
		set this_57 = ListImage_maxIndex
	else
		set ListImage_firstFree = ListImage_firstFree - 1
		set this_57 = ListImage_nextFree[ListImage_firstFree]
	endif
	return this_57
endfunction

function construct_ListImage takes integer this_57, image img returns nothing
	set ListImage_img[this_57] = img
endfunction

function new_ListImage takes image img returns integer
	local integer this_57 = alloc_ListImage()
	call construct_ListImage(this_57, img)
	return this_57
endfunction

function ImageList_add_2 takes integer this_57, image img returns nothing
	local integer temp
	if ImageList_first[this_57] == 0 then
		set ImageList_first[this_57] = new_ListImage(img)
		set ImageList_last_2[this_57] = ImageList_first[this_57]
	else
		set temp = new_ListImage(img)
		set ListImage_next[ImageList_last_2[this_57]] = temp
		set ImageList_last_2[this_57] = temp
	endif
endfunction

function dispatch_ImageList_add_2 takes integer this_57, image img, string wurstStackTrace returns nothing
	if ImageList_typeId_2[this_57] == 0 then
		if this_57 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling ImageList.add" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called ImageList.add on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call ImageList_add_2(this_57, img)
endfunction

function construct_ImageEx_3 takes integer this_57, integer pos_x, integer pos_y, integer size_x, integer size_y, real sizeFix_x, real sizeFix_y, string filePath, integer layer returns nothing
	call construct_Widget(this_57, pos_x, pos_y, size_x, size_y)
	set ImageEx_content[this_57] = createImage(filePath, vec2_op_plus(element_toVec(pos_x, pos_y), element_toVec_return_y, Setup_menuStart_x, Setup_menuStart_y), vec2_op_plus_return_y, size_x * Setup_tileSize + sizeFix_x, size_y * Setup_tileSize + sizeFix_y, layer)
endfunction

function new_ImageEx_3 takes integer pos_x, integer pos_y, integer size_x, integer size_y, real sizeFix_x, real sizeFix_y, string filePath, integer layer returns integer
	local integer this_57 = alloc_ImageEx()
	call construct_ImageEx_3(this_57, pos_x, pos_y, size_x, size_y, sizeFix_x, sizeFix_y, filePath, layer)
	return this_57
endfunction

function alloc_ImageList_2 takes nothing returns integer
	local integer this_57
	if ImageList_firstFree_2 == 0 then
		set ImageList_maxIndex_2 = ImageList_maxIndex_2 + 1
		set this_57 = ImageList_maxIndex_2
	else
		set ImageList_firstFree_2 = ImageList_firstFree_2 - 1
		set this_57 = ImageList_nextFree_2[ImageList_firstFree_2]
	endif
	set ImageList_typeId_2[this_57] = 820
	return this_57
endfunction

function construct_ImageList_2 takes integer this_57 returns nothing
	set ImageList_first[this_57] = 0
	set ImageList_last_2[this_57] = 0
endfunction

function new_ImageList_2 takes nothing returns integer
	local integer this_57 = alloc_ImageList_2()
	call construct_ImageList_2(this_57)
	return this_57
endfunction

function alloc_LinkedList takes nothing returns integer
	local integer this_57
	if LinkedList_firstFree == 0 then
		set LinkedList_maxIndex = LinkedList_maxIndex + 1
		set this_57 = LinkedList_maxIndex
	else
		set LinkedList_firstFree = LinkedList_firstFree - 1
		set this_57 = LinkedList_nextFree[LinkedList_firstFree]
	endif
	set LinkedList_typeId[this_57] = 2
	return this_57
endfunction

function construct_LinkedList takes integer this_57 returns nothing
	set LinkedList_size[this_57] = 0
	set LinkedList_dummy[this_57] = new_LLEntry(0, 0, 0)
	set LLEntry_next[LinkedList_dummy[this_57]] = LinkedList_dummy[this_57]
	set LLEntry_prev[LinkedList_dummy[this_57]] = LinkedList_dummy[this_57]
endfunction

function new_LinkedList takes nothing returns integer
	local integer this_57 = alloc_LinkedList()
	call construct_LinkedList(this_57)
	return this_57
endfunction

function construct_Pane takes integer this_57, integer pos_x, integer pos_y, integer size_x, integer size_y, integer l, boolean exitable, string wurstStackTrace returns nothing
	local integer i
	local integer temp
	local integer temp_2
	local integer i_2
	local integer temp_3
	local integer temp_4
	local integer clVar
	local integer receiver
	local integer temp_5
	local integer temp_6
	call construct_Widget(this_57, pos_x, pos_y, size_x, size_y)
	set Pane_onExit[this_57] = 0
	set Pane_list[this_57] = new_ImageList_2()
	set Pane_content[this_57] = new_LinkedList()
	call dispatch_ImageList_add_2(Pane_list[this_57], createImage_3(Pane_leftBotCorner, pos_x, pos_y, Pane_tileDimensions_x, Pane_tileDimensions_y, Pane_sizeFix_x, Pane_sizeFix_y, l), "\n   Pane, line 32" + wurstStackTrace)
	call dispatch_ImageList_add_2(Pane_list[this_57], createImage_3(Pane_leftTopCorner, element_op_plus(pos_x, pos_y, 0, size_y), element_op_plus_return_y, Pane_tileDimensions_x, Pane_tileDimensions_y, Pane_sizeFix_x, Pane_sizeFix_y, l), "\n   Pane, line 33" + wurstStackTrace)
	call dispatch_ImageList_add_2(Pane_list[this_57], createImage_3(Pane_rightBotCorner, element_op_plus(pos_x, pos_y, size_x, 0), element_op_plus_return_y, Pane_tileDimensions_x, Pane_tileDimensions_y, Pane_sizeFix_x, Pane_sizeFix_y, l), "\n   Pane, line 34" + wurstStackTrace)
	call dispatch_ImageList_add_2(Pane_list[this_57], createImage_3(Pane_rightTopCorner, element_op_plus(pos_x, pos_y, size_x, size_y), element_op_plus_return_y, Pane_tileDimensions_x, Pane_tileDimensions_y, Pane_sizeFix_x, Pane_sizeFix_y, l), "\n   Pane, line 35" + wurstStackTrace)
	set i = pos_x + Pane_tileSize
	set temp = pos_x + size_x - Pane_tileSize
	set temp_2 = Pane_tileSize
	loop
		exitwhen i > temp
		call dispatch_ImageList_add_2(Pane_list[this_57], createImage_2(Pane_horizontalSide, i, pos_y, Pane_posFixBot_x, Pane_posFixBot_y, Pane_tileDimensions_x, Pane_tileDimensions_y, Pane_sizeFix_x, Pane_sizeFix_y, l), "\n   Pane, line 37" + wurstStackTrace)
		call dispatch_ImageList_add_2(Pane_list[this_57], createImage_2(Pane_horizontalSide, i, pos_y + size_y, Pane_posFixTop_x, Pane_posFixTop_y, Pane_tileDimensions_x, Pane_tileDimensions_y, Pane_sizeFix_x, Pane_sizeFix_y, l), "\n   Pane, line 38" + wurstStackTrace)
		set i = i + temp_2
	endloop
	set i_2 = pos_y + Pane_tileSize
	set temp_3 = pos_y + size_y - Pane_tileSize
	set temp_4 = Pane_tileSize
	loop
		exitwhen i_2 > temp_3
		call dispatch_ImageList_add_2(Pane_list[this_57], createImage_2(Pane_verticalSide, pos_x, i_2, Pane_posFixLeft_x, Pane_posFixLeft_y, Pane_tileDimensions_x, Pane_tileDimensions_y, Pane_sizeFix_x, Pane_sizeFix_y, l), "\n   Pane, line 40" + wurstStackTrace)
		call dispatch_ImageList_add_2(Pane_list[this_57], createImage_2(Pane_verticalSide, pos_x + size_x, i_2, Pane_posFixRight_x, Pane_posFixRight_y, Pane_tileDimensions_x, Pane_tileDimensions_y, Pane_sizeFix_x, Pane_sizeFix_y, l), "\n   Pane, line 41" + wurstStackTrace)
		set i_2 = i_2 + temp_4
	endloop
	if exitable then
		set temp_6 = Pane_content[this_57]
		set receiver = new_Observable(new_ImageEx_3(element_op_minus(element_op_plus(pos_x, pos_y, size_x, size_y), element_op_plus_return_y, 1, 1), element_op_minus_return_y, 1, 1, 20., 20., "menuExit.blp", l))
		set temp_5 = receiver
		set clVar = alloc_Closure_8()
		set this_55[clVar] = this_57
		call dispatch_Observable_setClickAction(temp_5, clVar, "\n   Pane, line 43" + wurstStackTrace)
		call dispatch_LinkedList_add(temp_6, receiver, "\n   Pane, line 43" + wurstStackTrace)
	endif
endfunction

function new_Pane takes integer pos_x, integer pos_y, integer size_x, integer size_y, integer l, boolean exitable, string wurstStackTrace returns integer
	local integer this_57 = alloc_Pane()
	call construct_Pane(this_57, pos_x, pos_y, size_x, size_y, l, exitable, "\n   Pane, line 30" + wurstStackTrace)
	return this_57
endfunction

function alloc_Closure_9 takes nothing returns integer
	local integer this_57
	if PlayerAction_firstFree == 0 then
		set PlayerAction_maxIndex = PlayerAction_maxIndex + 1
		set this_57 = PlayerAction_maxIndex
	else
		set PlayerAction_firstFree = PlayerAction_firstFree - 1
		set this_57 = PlayerAction_nextFree[PlayerAction_firstFree]
	endif
	set PlayerAction_typeId[this_57] = 825
	return this_57
endfunction

function vec2_op_mult takes real this_x, real this_y, real factor returns real
	set vec2_op_mult_return_x = this_x * factor
	set vec2_op_mult_return_y = this_y * factor
	return vec2_op_mult_return_x
endfunction

function real_toString takes real this_57 returns string
	return R2S(this_57)
endfunction

function vec2_toString takes real this_x, real this_y returns string
	return "Vector2 [ " + real_toString(this_x) + ", " + real_toString(this_y) + " ]"
endfunction

function construct_Pane_2 takes integer this_57, integer pos_x, integer pos_y, integer size_x, integer size_y, integer l, integer backgroundScale, boolean exitable, string wurstStackTrace returns nothing
	local real backgroundOffset_x
	local real backgroundOffset_y
	local real backgroundSizeFix_x
	local real backgroundSizeFix_y
	local integer i
	local integer temp
	local integer temp_2
	local integer i2
	local integer temp_3
	local integer temp_4
	local integer i_2
	local integer temp_5
	local integer temp_6
	local integer i_3
	local integer temp_7
	local integer temp_8
	local integer clVar
	local integer receiver
	local real temp_backgroundOffset_x
	local real temp_backgroundOffset_y
	local real temp_backgroundOffset_x_2
	local real temp_backgroundOffset_y_2
	local real temp_backgroundSizeFix_x
	local real temp_backgroundSizeFix_y
	local integer temp_9
	local integer temp_10
	call construct_Widget(this_57, pos_x, pos_y, size_x, size_y)
	set Pane_onExit[this_57] = 0
	set Pane_list[this_57] = new_ImageList_2()
	set Pane_content[this_57] = new_LinkedList()
	set temp_backgroundOffset_x = element_toVec(backgroundScale, backgroundScale)
	set temp_backgroundOffset_y = element_toVec_return_y
	set backgroundOffset_x = temp_backgroundOffset_x
	set backgroundOffset_y = temp_backgroundOffset_y
	set backgroundOffset_x = backgroundOffset_x / 2.
	set backgroundOffset_y = backgroundOffset_y / 2.
	set temp_backgroundOffset_x_2 = vec2_op_minus(backgroundOffset_x, backgroundOffset_y, 64., 64.)
	set temp_backgroundOffset_y_2 = vec2_op_minus_return_y
	set backgroundOffset_x = temp_backgroundOffset_x_2
	set backgroundOffset_y = temp_backgroundOffset_y_2
	set temp_backgroundSizeFix_x = vec2_op_mult(element_toVec(backgroundScale, backgroundScale), element_toVec_return_y, 0.01)
	set temp_backgroundSizeFix_y = vec2_op_mult_return_y
	set backgroundSizeFix_x = temp_backgroundSizeFix_x
	set backgroundSizeFix_y = temp_backgroundSizeFix_y
	set i = pos_x
	set temp = pos_x + size_x - backgroundScale
	set temp_2 = backgroundScale
	loop
		exitwhen i > temp
		set i2 = pos_y
		set temp_3 = pos_y + size_y - backgroundScale
		set temp_4 = backgroundScale
		loop
			exitwhen i2 > temp_3
			call dispatch_ImageList_add_2(Pane_list[this_57], createImage_2(Widget_backgroundTexture[GetRandomInt(1, 8)], i, i2, backgroundOffset_x, backgroundOffset_y, backgroundScale, backgroundScale, backgroundSizeFix_x, backgroundSizeFix_y, l), "\n   Pane, line 58" + wurstStackTrace)
			set i2 = i2 + temp_4
		endloop
		set i = i + temp_2
	endloop
	call dispatch_ImageList_add_2(Pane_list[this_57], createImage_3(Pane_leftBotCorner, pos_x, pos_y, Pane_tileDimensions_x, Pane_tileDimensions_y, Pane_sizeFix_x, Pane_sizeFix_y, l), "\n   Pane, line 59" + wurstStackTrace)
	call dispatch_ImageList_add_2(Pane_list[this_57], createImage_3(Pane_leftTopCorner, element_op_plus(pos_x, pos_y, 0, size_y), element_op_plus_return_y, Pane_tileDimensions_x, Pane_tileDimensions_y, Pane_sizeFix_x, Pane_sizeFix_y, l), "\n   Pane, line 60" + wurstStackTrace)
	call dispatch_ImageList_add_2(Pane_list[this_57], createImage_3(Pane_rightBotCorner, element_op_plus(pos_x, pos_y, size_x, 0), element_op_plus_return_y, Pane_tileDimensions_x, Pane_tileDimensions_y, Pane_sizeFix_x, Pane_sizeFix_y, l), "\n   Pane, line 61" + wurstStackTrace)
	call dispatch_ImageList_add_2(Pane_list[this_57], createImage_3(Pane_rightTopCorner, element_op_plus(pos_x, pos_y, size_x, size_y), element_op_plus_return_y, Pane_tileDimensions_x, Pane_tileDimensions_y, Pane_sizeFix_x, Pane_sizeFix_y, l), "\n   Pane, line 62" + wurstStackTrace)
	set i_2 = pos_x + Pane_tileSize
	set temp_5 = pos_x + size_x - Pane_tileSize
	set temp_6 = Pane_tileSize
	loop
		exitwhen i_2 > temp_5
		call dispatch_ImageList_add_2(Pane_list[this_57], createImage_2(Pane_horizontalSide, i_2, pos_y, Pane_posFixBot_x, Pane_posFixBot_y, Pane_tileDimensions_x, Pane_tileDimensions_y, Pane_sizeFix_x, Pane_sizeFix_y, l), "\n   Pane, line 64" + wurstStackTrace)
		call dispatch_ImageList_add_2(Pane_list[this_57], createImage_2(Pane_horizontalSide, i_2, pos_y + size_y, Pane_posFixTop_x, Pane_posFixTop_y, Pane_tileDimensions_x, Pane_tileDimensions_y, Pane_sizeFix_x, Pane_sizeFix_y, l), "\n   Pane, line 65" + wurstStackTrace)
		call print(vec2_toString(element_toVec(i_2, pos_y), element_toVec_return_y))
		set i_2 = i_2 + temp_6
	endloop
	set i_3 = pos_y + Pane_tileSize
	set temp_7 = pos_y + size_y - Pane_tileSize
	set temp_8 = Pane_tileSize
	loop
		exitwhen i_3 > temp_7
		call dispatch_ImageList_add_2(Pane_list[this_57], createImage_2(Pane_verticalSide, pos_x, i_3, Pane_posFixLeft_x, Pane_posFixLeft_y, Pane_tileDimensions_x, Pane_tileDimensions_y, Pane_sizeFix_x, Pane_sizeFix_y, l), "\n   Pane, line 68" + wurstStackTrace)
		call dispatch_ImageList_add_2(Pane_list[this_57], createImage_2(Pane_verticalSide, pos_x + size_x, i_3, Pane_posFixRight_x, Pane_posFixRight_y, Pane_tileDimensions_x, Pane_tileDimensions_y, Pane_sizeFix_x, Pane_sizeFix_y, l), "\n   Pane, line 69" + wurstStackTrace)
		set i_3 = i_3 + temp_8
	endloop
	if exitable then
		set temp_10 = Pane_content[this_57]
		set receiver = new_Observable(new_ImageEx_3(element_op_minus(element_op_plus(pos_x, pos_y, size_x, size_y), element_op_plus_return_y, 1, 1), element_op_minus_return_y, 1, 1, 20., 20., "menuExit.blp", l))
		set temp_9 = receiver
		set clVar = alloc_Closure_9()
		set this_56[clVar] = this_57
		call dispatch_Observable_setClickAction(temp_9, clVar, "\n   Pane, line 71" + wurstStackTrace)
		call dispatch_LinkedList_add(temp_10, receiver, "\n   Pane, line 71" + wurstStackTrace)
	endif
endfunction

function new_Pane_2 takes integer pos_x, integer pos_y, integer size_x, integer size_y, integer l, integer backgroundScale, boolean exitable, string wurstStackTrace returns integer
	local integer this_57 = alloc_Pane()
	call construct_Pane_2(this_57, pos_x, pos_y, size_x, size_y, l, backgroundScale, exitable, "\n   Pane, line 49" + wurstStackTrace)
	return this_57
endfunction

function alloc_TextBox takes nothing returns integer
	local integer this_57
	if Widget_firstFree == 0 then
		set Widget_maxIndex = Widget_maxIndex + 1
		set this_57 = Widget_maxIndex
	else
		set Widget_firstFree = Widget_firstFree - 1
		set this_57 = Widget_nextFree[Widget_firstFree]
	endif
	set Widget_typeId[this_57] = 818
	return this_57
endfunction

function construct_TextBox takes integer this_57, integer pos_x, integer pos_y, integer size_x, integer size_y, real fontsize, integer l, string wurstStackTrace returns nothing
	local real posFix_x
	local real posFix_y
	local integer receiver
	local integer tempIndex
	local real tempTupleSelectionResult_2
	local real temp_tempTupleSelectionResult_1
	local real temp_tempTupleSelectionResult_2
	local real temp_posFix_x
	local real temp_posFix_y
	local real tempTupleSelectionResult_1
	local real temp_tempTupleSelectionResult_1_2
	local real temp_tempTupleSelectionResult_2_2
	local integer temp
	call construct_Widget(this_57, pos_x, pos_y, size_x, size_y)
	set TextBox_content[this_57] = ""
	set tempIndex = this_57
	set TextBox_col[tempIndex] = 0
	set TextBox_col_2[tempIndex] = 0
	set TextBox_col_3[tempIndex] = 0
	set temp_posFix_x = 30.
	set temp_tempTupleSelectionResult_1 = element_toVec(size_x, size_y)
	set temp_tempTupleSelectionResult_2 = element_toVec_return_y
	set tempTupleSelectionResult_2 = temp_tempTupleSelectionResult_2
	set temp_posFix_y = tempTupleSelectionResult_2 - 30.
	set posFix_x = temp_posFix_x
	set posFix_y = temp_posFix_y
	set receiver = new_TextSplat(vec2_op_plus(vec2_op_plus(element_toVec(pos_x, pos_y), element_toVec_return_y, posFix_x, posFix_y), vec2_op_plus_return_y, Setup_menuStart_x, Setup_menuStart_y), vec2_op_plus_return_y, fontsize, l)
	set temp = receiver
	set temp_tempTupleSelectionResult_1_2 = element_toVec(size_x, size_y)
	set temp_tempTupleSelectionResult_2_2 = element_toVec_return_y
	set tempTupleSelectionResult_1 = temp_tempTupleSelectionResult_1_2
	call dispatch_TextSplat_setMaxWidth(temp, tempTupleSelectionResult_1 - 60., "\n   TextBox, line 19" + wurstStackTrace)
	set TextBox_splat[this_57] = receiver
endfunction

function new_TextBox takes integer pos_x, integer pos_y, integer size_x, integer size_y, real fontsize, integer l, string wurstStackTrace returns integer
	local integer this_57 = alloc_TextBox()
	call construct_TextBox(this_57, pos_x, pos_y, size_x, size_y, fontsize, l, "\n   TextBox, line 15" + wurstStackTrace)
	return this_57
endfunction

function closure_impl_62 takes integer this_57, integer i, string wurstStackTrace returns real
	local real ret = 0.01
	local integer temp = i
	local integer i2
	local integer clVar
	local integer row1
	local integer blub
	local integer cc
	local integer pp
	local integer tt
	local integer clVar_2
	local integer clVar_3
	local integer clVar_4
	local integer clVar_5
	local integer temp_2
	local integer temp_3
	local integer temp_4
	local integer temp_5
	if temp == 0 then
		set i2 = 9
		set shopB[this_57] = new_Button(i2, 22, 1, 0, "Shop", "\n   GameStart, line 317" + wurstStackTrace)
		set i2 = i2 + 5
		set scoreB[this_57] = new_Button(i2, 22, 1, 0, "Score", "\n   GameStart, line 319" + wurstStackTrace)
		set i2 = i2 + 5
		set guideB[this_57] = new_Button(i2, 22, 1, 0, "Guide", "\n   GameStart, line 321" + wurstStackTrace)
		set i2 = i2 + 5
		set statsB[this_57] = new_Button(i2, 22, 1, 0, "Stats", "\n   GameStart, line 323" + wurstStackTrace)
	elseif temp == 1 then
		set shopPleft[this_57] = new_Pane_2(7, 0, 20, 20, 1, 4, false, "\n   GameStart, line 331" + wurstStackTrace)
		set shopPright[this_57] = new_Pane_2(30, 0, 12, 20, 2, 4, false, "\n   GameStart, line 333" + wurstStackTrace)
		set clVar = alloc_Closure_5()
		call doAfter(10., clVar, "\n   GameStart, line 334" + wurstStackTrace)
		set shopPleftBot[this_57] = new_Pane(1, 13, 4, 2, 1, false, "\n   GameStart, line 335" + wurstStackTrace)
		set shopPleftBot2[this_57] = new_Pane(1, 6, 4, 6, 1, false, "\n   GameStart, line 336" + wurstStackTrace)
	elseif temp == 2 then
		set shopT1[this_57] = new_TextBox(36, 16, 16, 4, 65., 0, "\n   GameStart, line 341" + wurstStackTrace)
		call dispatch_TextBox_setColor(shopT1[this_57], 255, 201, 14, "\n   GameStart, line 342" + wurstStackTrace)
		call dispatch_TextBox_setText(shopT1[this_57], "Mighty Frog Sense", Player(0), "\n   GameStart, line 343" + wurstStackTrace)
		set shopT3[this_57] = new_TextBox(36, 13, 16, 4, 100., 0, "\n   GameStart, line 345" + wurstStackTrace)
		call dispatch_TextBox_setColor(shopT3[this_57], 238, 232, 170, "\n   GameStart, line 346" + wurstStackTrace)
		call dispatch_TextBox_setText(shopT3[this_57], "1234 g", Player(0), "\n   GameStart, line 347" + wurstStackTrace)
		set shopT2[this_57] = new_TextBox(14, 20, 13, 1, 70., 0, "\n   GameStart, line 349" + wurstStackTrace)
		call dispatch_TextBox_setColor(shopT2[this_57], 255, 180, 220, "\n   GameStart, line 350" + wurstStackTrace)
		call dispatch_TextBox_setText(shopT2[this_57], "I", Player(0), "\n   GameStart, line 351" + wurstStackTrace)
		set shopT7[this_57] = new_TextBox(18, 20, 13, 1, 70., 0, "\n   GameStart, line 353" + wurstStackTrace)
		call dispatch_TextBox_setColor(shopT7[this_57], 0, 162, 232, "\n   GameStart, line 354" + wurstStackTrace)
		call dispatch_TextBox_setText(shopT7[this_57], "II", Player(0), "\n   GameStart, line 355" + wurstStackTrace)
		set shopT8[this_57] = new_TextBox(22, 20, 13, 1, 70., 0, "\n   GameStart, line 357" + wurstStackTrace)
		call dispatch_TextBox_setColor(shopT8[this_57], 181, 230, 29, "\n   GameStart, line 358" + wurstStackTrace)
		call dispatch_TextBox_setText(shopT8[this_57], "III", Player(0), "\n   GameStart, line 359" + wurstStackTrace)
		set shopT9[this_57] = new_TextBox(26, 20, 13, 1, 70., 0, "\n   GameStart, line 361" + wurstStackTrace)
		call dispatch_TextBox_setColor(shopT9[this_57], 255, 201, 14, "\n   GameStart, line 362" + wurstStackTrace)
		call dispatch_TextBox_setText(shopT9[this_57], "IV", Player(0), "\n   GameStart, line 363" + wurstStackTrace)
	elseif temp == 3 then
		set row1 = 14
		set blub = 18
		set shop1[this_57] = new_Icon("Hydra", row1, blub, 2, "\n   GameStart, line 386" + wurstStackTrace)
		set blub = blub - 4
		set shop2[this_57] = new_Icon("3M1", row1, blub, 2, "\n   GameStart, line 388" + wurstStackTrace)
		set blub = blub - 4
		set shop3[this_57] = new_Icon("3M1", row1, blub, 2, "\n   GameStart, line 390" + wurstStackTrace)
		set blub = blub - 4
		set shop4[this_57] = new_Icon("3M1", row1, blub, 2, "\n   GameStart, line 392" + wurstStackTrace)
		set blub = blub - 4
		set shop5[this_57] = new_Icon("Grunt", row1, blub, 2, "\n   GameStart, line 394" + wurstStackTrace)
		set blub = 18
		set buttonLayerShop01[this_57] = new_ImageEx_2(row1, blub, 2, 2, "64x64LayerShopIcon.blp", 0)
		call image_setColor_2(ImageEx_content[buttonLayerShop01[this_57]], 255, 180, 220)
		set blub = blub - 4
		set buttonLayerShop02[this_57] = new_ImageEx_2(row1, blub, 2, 2, "64x64LayerShopIcon.blp", 0)
		call image_setColor_2(ImageEx_content[buttonLayerShop02[this_57]], 255, 180, 220)
		set blub = blub - 4
		set buttonLayerShop03[this_57] = new_ImageEx_2(row1, blub, 2, 2, "64x64LayerShopIcon.blp", 0)
		call image_setColor_2(ImageEx_content[buttonLayerShop03[this_57]], 255, 180, 220)
		set blub = blub - 4
		set buttonLayerShop04[this_57] = new_ImageEx_2(row1, blub, 2, 2, "64x64LayerShopIcon.blp", 0)
		call image_setColor_2(ImageEx_content[buttonLayerShop04[this_57]], 255, 180, 220)
		set blub = blub - 4
		set buttonLayerShop05[this_57] = new_ImageEx_2(row1, blub, 2, 2, "64x64LayerShopIcon.blp", 0)
		call image_setColor_2(ImageEx_content[buttonLayerShop05[this_57]], 255, 180, 220)
		set row1 = row1 + 4
		set blub = 18
		set shop6[this_57] = new_Icon("Glove", row1, blub, 2, "\n   GameStart, line 419" + wurstStackTrace)
		set blub = blub - 4
		set shop7[this_57] = new_Icon("Grunt", row1, blub, 2, "\n   GameStart, line 421" + wurstStackTrace)
		set blub = blub - 4
		set shop8[this_57] = new_Icon("3M1", row1, blub, 2, "\n   GameStart, line 423" + wurstStackTrace)
		set blub = blub - 4
		set shop9[this_57] = new_Icon("3M1", row1, blub, 2, "\n   GameStart, line 425" + wurstStackTrace)
		set blub = blub - 4
		set shop10[this_57] = new_Icon("3M1", row1, blub, 2, "\n   GameStart, line 427" + wurstStackTrace)
		set blub = 18
		set buttonLayerShop06[this_57] = new_ImageEx_2(row1, blub, 2, 2, "64x64LayerShopIcon.blp", 0)
		call image_setColor_2(ImageEx_content[buttonLayerShop06[this_57]], 0, 162, 232)
		set blub = blub - 4
		set buttonLayerShop07[this_57] = new_ImageEx_2(row1, blub, 2, 2, "64x64LayerShopIcon.blp", 0)
		call image_setColor_2(ImageEx_content[buttonLayerShop07[this_57]], 0, 162, 232)
		set blub = blub - 4
		set buttonLayerShop08[this_57] = new_ImageEx_2(row1, blub, 2, 2, "64x64LayerShopIcon.blp", 0)
		call image_setColor_2(ImageEx_content[buttonLayerShop08[this_57]], 0, 162, 232)
		set blub = blub - 4
		set buttonLayerShop09[this_57] = new_ImageEx_2(row1, blub, 2, 2, "64x64LayerShopIcon.blp", 0)
		call image_setColor_2(ImageEx_content[buttonLayerShop09[this_57]], 0, 162, 232)
		set blub = blub - 4
		set buttonLayerShop10[this_57] = new_ImageEx_2(row1, blub, 2, 2, "64x64LayerShopIcon.blp", 0)
		call image_setColor_2(ImageEx_content[buttonLayerShop10[this_57]], 0, 162, 232)
		set row1 = row1 + 4
		set blub = 18
		set shop11[this_57] = new_Icon("HealingSpray", row1, blub, 2, "\n   GameStart, line 450" + wurstStackTrace)
		set blub = blub - 4
		set shop12[this_57] = new_Icon("HealingSpray", row1, blub, 2, "\n   GameStart, line 452" + wurstStackTrace)
		set blub = blub - 4
		set shop13[this_57] = new_Icon("Impale", row1, blub, 2, "\n   GameStart, line 454" + wurstStackTrace)
		set blub = blub - 4
		set shop14[this_57] = new_Icon("Impale", row1, blub, 2, "\n   GameStart, line 456" + wurstStackTrace)
		set blub = blub - 4
		set shop15[this_57] = new_Icon("Impale", row1, blub, 2, "\n   GameStart, line 458" + wurstStackTrace)
		set blub = 18
		set buttonLayerShop11[this_57] = new_ImageEx_2(row1, blub, 2, 2, "64x64LayerShopIcon.blp", 0)
		call image_setColor_2(ImageEx_content[buttonLayerShop11[this_57]], 181, 230, 29)
		set blub = blub - 4
		set buttonLayerShop12[this_57] = new_ImageEx_2(row1, blub, 2, 2, "64x64LayerShopIcon.blp", 0)
		call image_setColor_2(ImageEx_content[buttonLayerShop12[this_57]], 181, 230, 29)
		set blub = blub - 4
		set buttonLayerShop13[this_57] = new_ImageEx_2(row1, blub, 2, 2, "64x64LayerShopIcon.blp", 0)
		call image_setColor_2(ImageEx_content[buttonLayerShop13[this_57]], 181, 230, 29)
		set blub = blub - 4
		set buttonLayerShop14[this_57] = new_ImageEx_2(row1, blub, 2, 2, "64x64LayerShopIcon.blp", 0)
		call image_setColor_2(ImageEx_content[buttonLayerShop14[this_57]], 181, 230, 29)
		set blub = blub - 4
		set buttonLayerShop15[this_57] = new_ImageEx_2(row1, blub, 2, 2, "64x64LayerShopIcon.blp", 0)
		call image_setColor_2(ImageEx_content[buttonLayerShop15[this_57]], 181, 230, 29)
		set row1 = row1 + 4
		set blub = 18
		set shop16[this_57] = new_Icon("Hex", row1, blub, 2, "\n   GameStart, line 480" + wurstStackTrace)
		set blub = blub - 4
		set shop17[this_57] = new_Icon("Impale", row1, blub, 2, "\n   GameStart, line 482" + wurstStackTrace)
		set blub = blub - 4
		set shop18[this_57] = new_Icon("Impale", row1, blub, 2, "\n   GameStart, line 484" + wurstStackTrace)
		set blub = blub - 4
		set shop19[this_57] = new_Icon("Bash", row1, blub, 2, "\n   GameStart, line 486" + wurstStackTrace)
		set blub = blub - 4
		set shop20[this_57] = new_Icon("Bash", row1, blub, 2, "\n   GameStart, line 488" + wurstStackTrace)
		set blub = blub - 4
		set blub = 18
		set buttonLayerShop16[this_57] = new_ImageEx_2(row1, blub, 2, 2, "64x64LayerShopIcon.blp", 0)
		call image_setColor_2(ImageEx_content[buttonLayerShop16[this_57]], 255, 201, 14)
		set blub = blub - 4
		set buttonLayerShop17[this_57] = new_ImageEx_2(row1, blub, 2, 2, "64x64LayerShopIcon.blp", 0)
		call image_setColor_2(ImageEx_content[buttonLayerShop17[this_57]], 255, 201, 14)
		set blub = blub - 4
		set buttonLayerShop18[this_57] = new_ImageEx_2(row1, blub, 2, 2, "64x64LayerShopIcon.blp", 0)
		call image_setColor_2(ImageEx_content[buttonLayerShop18[this_57]], 255, 201, 14)
		set blub = blub - 4
		set buttonLayerShop19[this_57] = new_ImageEx_2(row1, blub, 2, 2, "64x64LayerShopIcon.blp", 0)
		call image_setColor_2(ImageEx_content[buttonLayerShop19[this_57]], 255, 201, 14)
		set blub = blub - 4
		set buttonLayerShop20[this_57] = new_ImageEx_2(row1, blub, 2, 2, "64x64LayerShopIcon.blp", 0)
		call image_setColor_2(ImageEx_content[buttonLayerShop20[this_57]], 255, 201, 14)
		set blub = blub - 4
		set row1 = row1 - 16
		set blub = 14
		set shop21[this_57] = new_Icon("Bash", row1, blub, 2, "\n   GameStart, line 518" + wurstStackTrace)
		set blub = blub - 4
		set shop22[this_57] = new_Icon("Bash", row1, blub, 2, "\n   GameStart, line 520" + wurstStackTrace)
		set blub = blub - 4
		set shop23[this_57] = new_Icon("ManaStone", row1, blub, 2, "\n   GameStart, line 522" + wurstStackTrace)
		set blub = blub - 4
		set blub = 14
		set buttonLayerShop21[this_57] = new_ImageEx_2(row1, blub, 2, 2, "64x64LayerShopIcon.blp", 0)
		call image_setColor_2(ImageEx_content[buttonLayerShop21[this_57]], 155, 155, 155)
		set blub = blub - 4
		set buttonLayerShop22[this_57] = new_ImageEx_2(row1, blub, 2, 2, "64x64LayerShopIcon.blp", 0)
		call image_setColor_2(ImageEx_content[buttonLayerShop22[this_57]], 155, 155, 155)
		set blub = blub - 4
		set buttonLayerShop23[this_57] = new_ImageEx_2(row1, blub, 2, 2, "64x64LayerShopIcon.blp", 0)
		call image_setColor_2(ImageEx_content[buttonLayerShop23[this_57]], 155, 155, 155)
		set blub = blub - 4
		set row1 = 2
		set blub = 14
		set shop24[this_57] = new_Icon("Hex", row1, blub, 2, "\n   GameStart, line 542" + wurstStackTrace)
		set shop25[this_57] = new_Icon("Hex", row1 + 2, blub, 2, "\n   GameStart, line 543" + wurstStackTrace)
		set blub = blub - 3
		set shop26[this_57] = new_Icon("Hex", row1, blub, 2, "\n   GameStart, line 545" + wurstStackTrace)
		set shop27[this_57] = new_Icon("Hex", row1 + 2, blub, 2, "\n   GameStart, line 546" + wurstStackTrace)
		set blub = blub - 2
		set shop28[this_57] = new_Icon("Hex", row1, blub, 2, "\n   GameStart, line 548" + wurstStackTrace)
		set shop29[this_57] = new_Icon("Hex", row1 + 2, blub, 2, "\n   GameStart, line 549" + wurstStackTrace)
		set blub = blub - 2
		set shop30[this_57] = new_Icon("Hex", row1, blub, 2, "\n   GameStart, line 551" + wurstStackTrace)
		set shop31[this_57] = new_Icon("Hex", row1 + 2, blub, 2, "\n   GameStart, line 552" + wurstStackTrace)
		set cc = 33
		set pp = 16
		set tt = 4
		set shop32[this_57] = new_Icon("Hex", cc, pp, tt, "\n   GameStart, line 559" + wurstStackTrace)
		set buttonLayerShop32[this_57] = new_ImageEx_2(cc, pp, tt, tt, "64x64LayerShopIcon.blp", 0)
		call image_setColor_2(ImageEx_content[buttonLayerShop32[this_57]], 255, 201, 14)
	elseif temp == 4 then
		set shopOb[this_57] = new_Observable(shopB[this_57])
		set temp_2 = shopOb[this_57]
		set clVar_2 = alloc_Closure_3()
		call dispatch_Observable_setClickAction(temp_2, clVar_2, "\n   GameStart, line 568" + wurstStackTrace)
		set scoreOb[this_57] = new_Observable(scoreB[this_57])
		set temp_3 = scoreOb[this_57]
		set clVar_3 = alloc_Closure_6()
		call dispatch_Observable_setClickAction(temp_3, clVar_3, "\n   GameStart, line 574" + wurstStackTrace)
		set guideOb[this_57] = new_Observable(guideB[this_57])
		set temp_4 = guideOb[this_57]
		set clVar_4 = alloc_Closure_4()
		call dispatch_Observable_setClickAction(temp_4, clVar_4, "\n   GameStart, line 580" + wurstStackTrace)
		set statsOb[this_57] = new_Observable(statsB[this_57])
		set temp_5 = statsOb[this_57]
		set clVar_5 = alloc_Closure_7()
		call dispatch_Observable_setClickAction(temp_5, clVar_5, "\n   GameStart, line 586" + wurstStackTrace)
	elseif temp == 5 then
		call cyc_dispatch_Window_add(0, GameStart_shopWindow, shopOb[this_57], "\n   GameStart, line 592" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_shopWindow, scoreOb[this_57], "\n   GameStart, line 593" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_shopWindow, guideOb[this_57], "\n   GameStart, line 594" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_shopWindow, statsOb[this_57], "\n   GameStart, line 595" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_shopWindow, shopPright[this_57], "\n   GameStart, line 604" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_shopWindow, shopPleft[this_57], "\n   GameStart, line 606" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_shopWindow, shopPleftBot[this_57], "\n   GameStart, line 608" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_shopWindow, shopPleftBot2[this_57], "\n   GameStart, line 609" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_shopWindow, shop1[this_57], "\n   GameStart, line 613" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_shopWindow, shop2[this_57], "\n   GameStart, line 614" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_shopWindow, shop3[this_57], "\n   GameStart, line 615" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_shopWindow, shop4[this_57], "\n   GameStart, line 616" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_shopWindow, shop5[this_57], "\n   GameStart, line 617" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_shopWindow, shop6[this_57], "\n   GameStart, line 618" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_shopWindow, shop7[this_57], "\n   GameStart, line 619" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_shopWindow, shop8[this_57], "\n   GameStart, line 620" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_shopWindow, shop9[this_57], "\n   GameStart, line 621" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_shopWindow, shop10[this_57], "\n   GameStart, line 622" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_shopWindow, shop11[this_57], "\n   GameStart, line 623" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_shopWindow, shop12[this_57], "\n   GameStart, line 624" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_shopWindow, shop13[this_57], "\n   GameStart, line 625" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_shopWindow, shop14[this_57], "\n   GameStart, line 626" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_shopWindow, shop15[this_57], "\n   GameStart, line 627" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_shopWindow, shop16[this_57], "\n   GameStart, line 628" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_shopWindow, shop17[this_57], "\n   GameStart, line 629" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_shopWindow, shop18[this_57], "\n   GameStart, line 630" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_shopWindow, shop19[this_57], "\n   GameStart, line 631" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_shopWindow, shop20[this_57], "\n   GameStart, line 632" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_shopWindow, shop21[this_57], "\n   GameStart, line 633" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_shopWindow, shop22[this_57], "\n   GameStart, line 634" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_shopWindow, shop23[this_57], "\n   GameStart, line 635" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_shopWindow, shop24[this_57], "\n   GameStart, line 639" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_shopWindow, shop25[this_57], "\n   GameStart, line 640" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_shopWindow, shop26[this_57], "\n   GameStart, line 641" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_shopWindow, shop27[this_57], "\n   GameStart, line 642" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_shopWindow, shop28[this_57], "\n   GameStart, line 643" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_shopWindow, shop29[this_57], "\n   GameStart, line 644" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_shopWindow, shop30[this_57], "\n   GameStart, line 645" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_shopWindow, shop31[this_57], "\n   GameStart, line 646" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_shopWindow, shop32[this_57], "\n   GameStart, line 648" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_shopWindow, shopT1[this_57], "\n   GameStart, line 676" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_shopWindow, shopT2[this_57], "\n   GameStart, line 677" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_shopWindow, shopT3[this_57], "\n   GameStart, line 678" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_shopWindow, shopT7[this_57], "\n   GameStart, line 682" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_shopWindow, shopT8[this_57], "\n   GameStart, line 683" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_shopWindow, shopT9[this_57], "\n   GameStart, line 684" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_scoreWindow, shopOb[this_57], "\n   GameStart, line 686" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_scoreWindow, scoreOb[this_57], "\n   GameStart, line 687" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_scoreWindow, guideOb[this_57], "\n   GameStart, line 688" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_scoreWindow, statsOb[this_57], "\n   GameStart, line 689" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_guideWindow, shopOb[this_57], "\n   GameStart, line 691" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_guideWindow, scoreOb[this_57], "\n   GameStart, line 692" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_guideWindow, guideOb[this_57], "\n   GameStart, line 693" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_guideWindow, statsOb[this_57], "\n   GameStart, line 694" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_statsWindow, shopOb[this_57], "\n   GameStart, line 696" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_statsWindow, scoreOb[this_57], "\n   GameStart, line 697" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_statsWindow, guideOb[this_57], "\n   GameStart, line 698" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_statsWindow, statsOb[this_57], "\n   GameStart, line 699" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_shopWindow, buttonLayerShop01[this_57], "\n   GameStart, line 701" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_shopWindow, buttonLayerShop02[this_57], "\n   GameStart, line 702" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_shopWindow, buttonLayerShop03[this_57], "\n   GameStart, line 703" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_shopWindow, buttonLayerShop04[this_57], "\n   GameStart, line 704" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_shopWindow, buttonLayerShop05[this_57], "\n   GameStart, line 705" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_shopWindow, buttonLayerShop06[this_57], "\n   GameStart, line 706" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_shopWindow, buttonLayerShop07[this_57], "\n   GameStart, line 707" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_shopWindow, buttonLayerShop08[this_57], "\n   GameStart, line 708" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_shopWindow, buttonLayerShop09[this_57], "\n   GameStart, line 709" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_shopWindow, buttonLayerShop10[this_57], "\n   GameStart, line 710" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_shopWindow, buttonLayerShop11[this_57], "\n   GameStart, line 711" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_shopWindow, buttonLayerShop12[this_57], "\n   GameStart, line 712" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_shopWindow, buttonLayerShop13[this_57], "\n   GameStart, line 713" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_shopWindow, buttonLayerShop14[this_57], "\n   GameStart, line 714" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_shopWindow, buttonLayerShop15[this_57], "\n   GameStart, line 715" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_shopWindow, buttonLayerShop16[this_57], "\n   GameStart, line 716" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_shopWindow, buttonLayerShop17[this_57], "\n   GameStart, line 717" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_shopWindow, buttonLayerShop18[this_57], "\n   GameStart, line 718" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_shopWindow, buttonLayerShop19[this_57], "\n   GameStart, line 719" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_shopWindow, buttonLayerShop20[this_57], "\n   GameStart, line 720" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_shopWindow, buttonLayerShop21[this_57], "\n   GameStart, line 721" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_shopWindow, buttonLayerShop22[this_57], "\n   GameStart, line 722" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_shopWindow, buttonLayerShop23[this_57], "\n   GameStart, line 723" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_shopWindow, buttonLayerShop32[this_57], "\n   GameStart, line 724" + wurstStackTrace)
	else
		set ret =  - 1.
	endif
	return ret
endfunction

function alloc_Closure_10 takes nothing returns integer
	local integer this_57
	if CallbackSingle_firstFree == 0 then
		set CallbackSingle_maxIndex = CallbackSingle_maxIndex + 1
		set this_57 = CallbackSingle_maxIndex
	else
		set CallbackSingle_firstFree = CallbackSingle_firstFree - 1
		set this_57 = CallbackSingle_nextFree[CallbackSingle_firstFree]
	endif
	set CallbackSingle_typeId[this_57] = 677
	return this_57
endfunction

function idInteger2IdString takes integer value returns string
	local string result = ""
	local integer remainingValue = value
	local integer byteno = 0
	local integer charValue
	loop
		exitwhen byteno > 3
		set charValue = ModuloInteger(remainingValue, 256)
		set remainingValue = remainingValue / 256
		set result = SubString(ObjectIds_charMap, charValue, charValue + 1) + result
		set byteno = byteno + 1
	endloop
	return result
endfunction

function printError takes string msg returns nothing
	call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., PrintingHelper_DEBUG_MSG_DURATION, "|cffFF0000[ERROR]|r - " + msg)
endfunction

function closure_impl_63 takes integer this_57, integer i, string wurstStackTrace returns real
	local real ret = 0.
	local integer id
	local destructable d_2
	local integer clVar
	if i >= dispatch_HashList_getSize(PreloadSystem_destructablesToPreload, "\n   PreloadSystem, line 121" + wurstStackTrace) then
		set ret = -1.
	else
		set id = dispatch_HashList_get(PreloadSystem_destructablesToPreload, i, "\n   PreloadSystem, line 124" + wurstStackTrace)
		set d_2 = CreateDestructable(id, 0., 0., 0., 0., 0)
		if GetDestructableName(d_2) == null or GetDestructableName(d_2) == "" then
			call printError("Following destructable is missing or invaild and could not be loaded: " + idInteger2IdString(id))
			set ret = -2.
		else
			set clVar = alloc_Closure_10()
			set d[clVar] = d_2
			call doAfter(1., clVar, "\n   PreloadSystem, line 130" + wurstStackTrace)
			set ret = PreloadSystem_destructableLoadTime
		endif
	endif
	set d_2 = null
	return ret
endfunction

function item_getName takes item this_57 returns string
	return GetItemName(this_57)
endfunction

function item_remove takes item this_57 returns nothing
	call RemoveItem(this_57)
endfunction

function closure_impl_64 takes integer this_57, integer i, string wurstStackTrace returns real
	local real ret = 0.
	local integer id
	local item ite
	if i >= dispatch_HashList_getSize(PreloadSystem_itemsToPreload, "\n   PreloadSystem, line 107" + wurstStackTrace) then
		set ret = -1.
	else
		set id = dispatch_HashList_get(PreloadSystem_itemsToPreload, i, "\n   PreloadSystem, line 110" + wurstStackTrace)
		set ite = CreateItem(id, 0., 0.)
		if item_getName(ite) == null or item_getName(ite) == "" then
			set ret = -2.
		else
			call item_remove(ite)
			set ret = PreloadSystem_itemLoadTime
		endif
	endif
	set ite = null
	return ret
endfunction

function unit_getAbilityLevel takes unit this_57, integer id returns integer
	return GetUnitAbilityLevel(this_57, id)
endfunction

function closure_impl_65 takes integer this_57, integer i, string wurstStackTrace returns real
	local real ret = 0.
	local integer a
	if i >= dispatch_HashList_getSize(PreloadSystem_abilitysToPreload, "\n   PreloadSystem, line 65" + wurstStackTrace) then
		call unit_remove(PreloadSystem_preloadDummy)
		set ret = -1.
	else
		set a = dispatch_HashList_get(PreloadSystem_abilitysToPreload, i, "\n   PreloadSystem, line 69" + wurstStackTrace)
		call unit_addAbility(PreloadSystem_preloadDummy, Ability_id[a])
		if unit_getAbilityLevel(PreloadSystem_preloadDummy, Ability_id[a]) == 0 then
			call printError("Could not load the ability " + idInteger2IdString(Ability_id[a]))
			set ret = -2.
		else
			set ret = PreloadSystem_abilityLoadTime + PreloadSystem_abilityLoadTimeLvlBonus * (Ability_lvl[a] - 1)
		endif
	endif
	return ret
endfunction

function alloc_Closure_11 takes nothing returns integer
	local integer this_57
	if TrackableAction_firstFree == 0 then
		set TrackableAction_maxIndex = TrackableAction_maxIndex + 1
		set this_57 = TrackableAction_maxIndex
	else
		set TrackableAction_firstFree = TrackableAction_firstFree - 1
		set this_57 = TrackableAction_nextFree[TrackableAction_firstFree]
	endif
	set TrackableAction_typeId[this_57] = 807
	return this_57
endfunction

function alloc_Closure_12 takes nothing returns integer
	local integer this_57
	if TrackableAction_firstFree == 0 then
		set TrackableAction_maxIndex = TrackableAction_maxIndex + 1
		set this_57 = TrackableAction_maxIndex
	else
		set TrackableAction_firstFree = TrackableAction_firstFree - 1
		set this_57 = TrackableAction_nextFree[TrackableAction_firstFree]
	endif
	set TrackableAction_typeId[this_57] = 808
	return this_57
endfunction

function alloc_Closure_13 takes nothing returns integer
	local integer this_57
	if TrackableAction_firstFree == 0 then
		set TrackableAction_maxIndex = TrackableAction_maxIndex + 1
		set this_57 = TrackableAction_maxIndex
	else
		set TrackableAction_firstFree = TrackableAction_firstFree - 1
		set this_57 = TrackableAction_nextFree[TrackableAction_firstFree]
	endif
	set TrackableAction_typeId[this_57] = 809
	return this_57
endfunction

function TrackableEx_onClick_2 takes integer this_57, integer action returns nothing
	set TrackableEx_onClick[this_57] = action
endfunction

function dispatch_TrackableEx_onClick takes integer this_57, integer action, string wurstStackTrace returns nothing
	if TrackableEx_typeId[this_57] == 0 then
		if this_57 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling TrackableEx.onClick" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called TrackableEx.onClick on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call TrackableEx_onClick_2(this_57, action)
endfunction

function TrackableEx_onDoubleClick_2 takes integer this_57, integer action, string wurstStackTrace returns nothing
	local integer i
	local timer receiver
	if TrackableEx_onDoubleClick[this_57] == 0 then
		set i = 0
		loop
			exitwhen i > 11
			if GetPlayerSlotState(Player(i)) == PLAYER_SLOT_STATE_PLAYING and GetPlayerController(Player(i)) == MAP_CONTROL_USER then
				set receiver = getTimer("\n   Trackable, line 81" + wurstStackTrace)
				call timer_setData(receiver, i, "\n   Trackable, line 81" + wurstStackTrace)
				set TrackableEx_playerDoubleClickTimer[i] = receiver
			endif
			set i = i + 1
		endloop
	endif
	set TrackableEx_onDoubleClick[this_57] = action
	set receiver = null
endfunction

function dispatch_TrackableEx_onDoubleClick takes integer this_57, integer action, string wurstStackTrace returns nothing
	if TrackableEx_typeId[this_57] == 0 then
		if this_57 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling TrackableEx.onDoubleClick" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called TrackableEx.onDoubleClick on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call TrackableEx_onDoubleClick_2(this_57, action, "\n   Trackable, line 76" + wurstStackTrace)
endfunction

function TrackableEx_onTrack_2 takes integer this_57, integer action returns nothing
	set TrackableEx_onTrack[this_57] = action
endfunction

function dispatch_TrackableEx_onTrack takes integer this_57, integer action, string wurstStackTrace returns nothing
	if TrackableEx_typeId[this_57] == 0 then
		if this_57 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling TrackableEx.onTrack" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called TrackableEx.onTrack on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call TrackableEx_onTrack_2(this_57, action)
endfunction

function alloc_TrackableEx takes nothing returns integer
	local integer this_57
	if TrackableEx_firstFree == 0 then
		set TrackableEx_maxIndex = TrackableEx_maxIndex + 1
		set this_57 = TrackableEx_maxIndex
	else
		set TrackableEx_firstFree = TrackableEx_firstFree - 1
		set this_57 = TrackableEx_nextFree[TrackableEx_firstFree]
	endif
	set TrackableEx_typeId[this_57] = 681
	return this_57
endfunction

function trackableToIndex takes trackable object returns integer
	return handle_getHandleId(object)
endfunction

function trigger_registerTrackableHitEvent takes trigger this_57, trackable whichTrackable returns nothing
	call TriggerRegisterTrackableHitEvent(this_57, whichTrackable)
endfunction

function trigger_registerTrackableTrackEvent takes trigger this_57, trackable whichTrackable returns nothing
	call TriggerRegisterTrackableTrackEvent(this_57, whichTrackable)
endfunction

function construct_TrackableEx takes integer this_57, real pos_x, real pos_y, string path, string wurstStackTrace returns nothing
	local integer i
	local string newPath
	local trackable t
	set TrackableEx_onTrack[this_57] = 0
	set TrackableEx_onClick[this_57] = 0
	set TrackableEx_onDoubleClick[this_57] = 0
	set i = 0
	loop
		exitwhen i > 11
		if GetPlayerSlotState(Player(i)) == PLAYER_SLOT_STATE_PLAYING and GetPlayerController(Player(i)) == MAP_CONTROL_USER then
			set newPath = ""
			if GetLocalPlayer() == Player(i) then
				set newPath = path
			endif
			set t = CreateTrackable(newPath, pos_x, pos_y, 0.)
			call dispatch_HashMap_put(TrackableEx_trackableOwner, trackableToIndex(t), playerToIndex(Player(i)), "\n   Trackable, line 43" + wurstStackTrace)
			call dispatch_HashMap_put(TrackableEx_trackableObjects, trackableToIndex(t), this_57, "\n   Trackable, line 44" + wurstStackTrace)
			call trigger_registerTrackableTrackEvent(TrackableEx_trackTrigger, t)
			call trigger_registerTrackableHitEvent(TrackableEx_clickTrigger, t)
		endif
		set i = i + 1
	endloop
	set t = null
endfunction

function new_TrackableEx takes real pos_x, real pos_y, string path, string wurstStackTrace returns integer
	local integer this_57 = alloc_TrackableEx()
	call construct_TrackableEx(this_57, pos_x, pos_y, path, "\n   Trackable, line 35" + wurstStackTrace)
	return this_57
endfunction

function alloc_Window takes nothing returns integer
	local integer this_57
	if Window_firstFree == 0 then
		set Window_maxIndex = Window_maxIndex + 1
		set this_57 = Window_maxIndex
	else
		set Window_firstFree = Window_firstFree - 1
		set this_57 = Window_nextFree[Window_firstFree]
	endif
	set Window_typeId[this_57] = 805
	return this_57
endfunction

function alloc_HashMap takes nothing returns integer
	local integer this_57
	if HashMap_firstFree == 0 then
		set HashMap_maxIndex = HashMap_maxIndex + 1
		set this_57 = HashMap_maxIndex
	else
		set HashMap_firstFree = HashMap_firstFree - 1
		set this_57 = HashMap_nextFree[HashMap_firstFree]
	endif
	set HashMap_typeId[this_57] = 663
	return this_57
endfunction

function construct_HashMap takes integer this_57 returns nothing
endfunction

function new_HashMap takes nothing returns integer
	local integer this_57 = alloc_HashMap()
	call construct_HashMap(this_57)
	return this_57
endfunction

function construct_Window takes integer this_57 returns nothing
	set Window_content[this_57] = new_LinkedList()
	set Window_trackMap[this_57] = new_HashMap()
	set Window_wantToClose[this_57] = new_HashMap()
	set Window_voidClick[this_57] = 0
endfunction

function new_Window takes nothing returns integer
	local integer this_57 = alloc_Window()
	call construct_Window(this_57)
	return this_57
endfunction

function setTrackableAt takes integer pos_x, integer pos_y, integer tr returns nothing
	set Setup_tracks[(Setup_menuWidth + 1) * pos_x + pos_y] = tr
endfunction

function closure_impl_66 takes integer this_57, integer i, string wurstStackTrace returns real
	local real ret = 0.02
	local integer dum = 1
	local integer e_x
	local integer e_y
	local integer win
	local integer i2
	local integer tr
	local integer clVar
	local integer clVar_2
	local integer clVar_3
	local integer temp_e_x
	local integer temp_e_y
	local integer temp
	local integer temp_2
	local integer temp_3
	loop
		exitwhen dum > 10
		if dispatch_ElementLoop_hasNext(w[this_57], "\n   Menu, line 203" + wurstStackTrace) then
			set temp_e_x = dispatch_ElementLoop_next(w[this_57], "\n   Menu, line 204" + wurstStackTrace)
			set temp_e_y = dispatch_ElementLoop_next_return_y
			set e_x = temp_e_x
			set e_y = temp_e_y
		else
			set win = new_Window()
			set i2 = 0
			loop
				exitwhen i2 > 11
				call WindowManager_openWindow(win, Player(i2), "\n   Menu, line 208" + wurstStackTrace)
				set i2 = i2 + 1
			endloop
			set ret = -1.
			exitwhen true
		endif
		set tr = new_TrackableEx(vec2_op_plus(element_toVec(e_x, e_y), element_toVec_return_y, Setup_menuStart_x, Setup_menuStart_y), vec2_op_plus_return_y, "track2.mdx", "\n   Menu, line 211" + wurstStackTrace)
		call setTrackableAt(e_x, e_y, tr)
		set temp = tr
		set clVar = alloc_Closure_11()
		call dispatch_TrackableEx_onClick(temp, clVar, "\n   Menu, line 213" + wurstStackTrace)
		set temp_2 = tr
		set clVar_2 = alloc_Closure_12()
		call dispatch_TrackableEx_onDoubleClick(temp_2, clVar_2, "\n   Menu, line 214" + wurstStackTrace)
		set temp_3 = tr
		set clVar_3 = alloc_Closure_13()
		call dispatch_TrackableEx_onTrack(temp_3, clVar_3, "\n   Menu, line 215" + wurstStackTrace)
		set dum = dum + 1
	endloop
	return ret
endfunction

function closure_impl_67 takes integer this_57, integer i, string wurstStackTrace returns real
	local real ret = 0.
	local integer id
	if i >= dispatch_HashList_getSize(PreloadSystem_buffsToPreload, "\n   PreloadSystem, line 95" + wurstStackTrace) then
		set ret = -1.
	else
		set id = dispatch_HashList_get(PreloadSystem_buffsToPreload, i, "\n   PreloadSystem, line 98" + wurstStackTrace)
		if GetObjectName(id) == null or GetObjectName(id) == "" then
			set ret = -2.
		else
			set ret = PreloadSystem_buffLoadTime
		endif
	endif
	return ret
endfunction

function dispatch_PreloadAction_run takes integer this_57, integer i, string wurstStackTrace returns real
	local real run_result
	if PreloadAction_typeId[this_57] == 0 then
		if this_57 == 0 then
=======
	call WindowManager_openWindow(GameStart_shopWindow, Player(0), "\n   GameStart, line 678" + wurstStackTrace)
endfunction

function closure_impl_5 takes integer this_58, integer i, string wurstStackTrace returns nothing
	call afterPreload("\n   GameStart, line 185" + wurstStackTrace)
endfunction

function closure_impl_6 takes integer this_58 returns nothing
	set Unit_lifesteal[this_9[this_58]] = Unit_lifesteal[this_9[this_58]] - amount_7[this_58]
endfunction

function unit_addAbility takes unit this_58, integer abil returns boolean
	return UnitAddAbility(this_58, abil)
endfunction

function unit_removeAbility takes unit this_58, integer abil returns nothing
	call UnitRemoveAbility(this_58, abil)
endfunction

function Unit_updateState takes integer this_58, integer amount_51, integer raw returns nothing
	local integer i
	local integer temp
	local integer statHelper
	local integer i_2
	local integer temp_2
	local integer i_3
	local integer temp_3
	call unit_removeAbility(Unit_u[this_58], raw + 45)
	set i = raw + 97
	set temp = raw + 97 + (Setup_maxBonSize - 1)
	loop
		exitwhen i > temp
		call unit_removeAbility(Unit_u[this_58], i)
		set i = i + 1
	endloop
	set statHelper = amount_51
	if statHelper >= 0 then
		set i_2 = raw + 97
		set temp_2 = raw + 97 + (Setup_maxBonSize - 1)
		loop
			exitwhen i_2 > temp_2
			if ModuloInteger(statHelper, 2) == 1 then
				call unit_addAbility(Unit_u[this_58], i_2)
			endif
			set statHelper = statHelper / 2
			if statHelper == 0 then
				return
			endif
			set i_2 = i_2 + 1
		endloop
	else
		set statHelper = statHelper + 1
		set i_3 = raw + 97
		set temp_3 = raw + 97 + (Setup_maxBonSize - 1)
		loop
			exitwhen i_3 > temp_3
			if ModuloInteger(statHelper, 2) == 0 then
				call unit_addAbility(Unit_u[this_58], i_3)
			endif
			set statHelper = statHelper / 2
			set i_3 = i_3 + 1
		endloop
		call unit_addAbility(Unit_u[this_58], raw + 45)
	endif
endfunction

function dispatch_Unit_updateState takes integer this_58, integer amount_51, integer raw, string wurstStackTrace returns nothing
	if Unit_typeId[this_58] == 0 then
		if this_58 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Unit.updateState" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Unit.updateState on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	if Unit_typeId[this_58] <= 709 then
		call Unit_updateState(this_58, amount_51, raw)
	else
		call Unit_updateState(this_58, amount_51, raw)
	endif
endfunction

function roundReal takes real value returns integer
	if value > 0. then
		return R2I(value + 0.5)
	else
		return R2I(value - 0.5)
	endif
endfunction

function Unit_updateAttack takes integer this_58, string wurstStackTrace returns nothing
	call dispatch_Unit_updateState(this_58, roundReal((Unit_attack[this_58] + Unit_bonusAttack[this_58]) * (1. + Unit_bonusAttackPer[this_58] / 100.) - Unit_attack[this_58]), Setup_attackRaw, "\n   UnitClass, line 503" + wurstStackTrace)
endfunction

function dispatch_Unit_updateAttack takes integer this_58, string wurstStackTrace returns nothing
	if Unit_typeId[this_58] == 0 then
		if this_58 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Unit.updateAttack" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Unit.updateAttack on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	if Unit_typeId[this_58] <= 709 then
		call Unit_updateAttack(this_58, "\n   UnitClass, line 502" + wurstStackTrace)
	else
		call Unit_updateAttack(this_58, "\n   UnitClass, line 502" + wurstStackTrace)
	endif
endfunction

function closure_impl_7 takes integer this_58, string wurstStackTrace returns nothing
	set Unit_bonusAttackPer[this_5[this_58]] = Unit_bonusAttackPer[this_5[this_58]] - amount_3[this_58]
	call dispatch_Unit_updateAttack(this_5[this_58], "\n   UnitClass, line 488" + wurstStackTrace)
endfunction

function closure_impl_8 takes integer this_58 returns nothing
	set Unit_spellpower[this_7[this_58]] = Unit_spellpower[this_7[this_58]] - amount_5[this_58]
endfunction

function Unit_updateLife takes integer this_58, string wurstStackTrace returns nothing
	call dispatch_Unit_updateState(this_58, roundReal((Unit_life[this_58] + Unit_bonusLife[this_58]) * (1. + Unit_bonusLifePer[this_58] / 100.) - Unit_life[this_58]), Setup_lifeRaw, "\n   UnitClass, line 798" + wurstStackTrace)
endfunction

function Bar_updateEx takes integer this_58, string wurstStackTrace returns nothing
	local timer receiver = getTimer("\n   HeroBar, line 98" + wurstStackTrace)
	local timer receiver_2
	call timer_setData(receiver, this_58, "\n   HeroBar, line 98" + wurstStackTrace)
	set receiver_2 = receiver
	call timer_start(receiver_2, 0.0, ref_function_bridge_Bar_callUpdateEx)
	set receiver = null
	set receiver_2 = null
endfunction

function dispatch_Bar_updateEx takes integer this_58, string wurstStackTrace returns nothing
	if Bar_typeId[this_58] == 0 then
		if this_58 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Bar.updateEx" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Bar.updateEx on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call Bar_updateEx(this_58, "\n   HeroBar, line 96" + wurstStackTrace)
endfunction

function Hero_updateLife takes integer this_58, string wurstStackTrace returns nothing
	call dispatch_Bar_updateEx(Hero_hb[this_58], "\n   HeroClass, line 155" + wurstStackTrace)
	call Unit_updateLife(this_58, "\n   HeroClass, line 156" + wurstStackTrace)
endfunction

function dispatch_Unit_updateLife takes integer this_58, string wurstStackTrace returns nothing
	if Unit_typeId[this_58] == 0 then
		if this_58 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Unit.updateLife" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Unit.updateLife on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	if Unit_typeId[this_58] <= 709 then
		call Unit_updateLife(this_58, "\n   UnitClass, line 797" + wurstStackTrace)
	else
		call Hero_updateLife(this_58, "\n   UnitClass, line 797" + wurstStackTrace)
	endif
endfunction

function closure_impl_9 takes integer this_58, string wurstStackTrace returns nothing
	set Unit_bonusLife[this_37[this_58]] = Unit_bonusLife[this_37[this_58]] - amount_35[this_58]
	call dispatch_Unit_updateLife(this_37[this_58], "\n   UnitClass, line 764" + wurstStackTrace)
endfunction

function Unit_updateArmor takes integer this_58, string wurstStackTrace returns nothing
	call dispatch_Unit_updateState(this_58, roundReal((Unit_armor[this_58] + Unit_bonusArmor[this_58]) * (1. + Unit_bonusArmorPer[this_58] / 100.) - Unit_armor[this_58]), Setup_armorRaw, "\n   UnitClass, line 664" + wurstStackTrace)
endfunction

function dispatch_Unit_updateArmor takes integer this_58, string wurstStackTrace returns nothing
	if Unit_typeId[this_58] == 0 then
		if this_58 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Unit.updateArmor" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Unit.updateArmor on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	if Unit_typeId[this_58] <= 709 then
		call Unit_updateArmor(this_58, "\n   UnitClass, line 663" + wurstStackTrace)
	else
		call Unit_updateArmor(this_58, "\n   UnitClass, line 663" + wurstStackTrace)
	endif
endfunction

function closure_impl_10 takes integer this_58, string wurstStackTrace returns nothing
	set Unit_bonusArmorPer[this_25[this_58]] = Unit_bonusArmorPer[this_25[this_58]] - amount_23[this_58]
	call dispatch_Unit_updateArmor(this_25[this_58], "\n   UnitClass, line 649" + wurstStackTrace)
endfunction

function closure_impl_11 takes integer this_58, string wurstStackTrace returns nothing
	set Unit_bonusArmor[this_23[this_58]] = Unit_bonusArmor[this_23[this_58]] - amount_21[this_58]
	call dispatch_Unit_updateArmor(this_23[this_58], "\n   UnitClass, line 630" + wurstStackTrace)
endfunction

function Unit_updateAttackspeed takes integer this_58, string wurstStackTrace returns nothing
	call dispatch_Unit_updateState(this_58, roundReal(Unit_bonusAttackspeed[this_58]), Setup_attackSpeedRaw, "\n   UnitClass, line 716" + wurstStackTrace)
endfunction

function dispatch_Unit_updateAttackspeed takes integer this_58, string wurstStackTrace returns nothing
	if Unit_typeId[this_58] == 0 then
		if this_58 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Unit.updateAttackspeed" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Unit.updateAttackspeed on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	if Unit_typeId[this_58] <= 709 then
		call Unit_updateAttackspeed(this_58, "\n   UnitClass, line 715" + wurstStackTrace)
	else
		call Unit_updateAttackspeed(this_58, "\n   UnitClass, line 715" + wurstStackTrace)
	endif
endfunction

function closure_impl_12 takes integer this_58, string wurstStackTrace returns nothing
	set Unit_bonusAttackspeed[this_31[this_58]] = Unit_bonusAttackspeed[this_31[this_58]] - amount_29[this_58]
	call dispatch_Unit_updateAttackspeed(this_31[this_58], "\n   UnitClass, line 701" + wurstStackTrace)
endfunction

function closure_impl_13 takes integer this_58 returns nothing
	set Unit_spellpowerPer[this_21[this_58]] = Unit_spellpowerPer[this_21[this_58]] - amount_19[this_58]
endfunction

function closure_impl_14 takes integer this_58 returns nothing
	set Unit_bonusResistancePer[this_29[this_58]] = Unit_bonusResistancePer[this_29[this_58]] - amount_27[this_58]
endfunction

function Unit_updateLifeReg takes integer this_58, string wurstStackTrace returns nothing
	call dispatch_Unit_updateState(this_58, roundReal((Unit_lifeReg[this_58] + Unit_bonusLifeReg[this_58]) * (1. + Unit_bonusLifeRegPer[this_58] / 100.) - Unit_lifeReg[this_58]), Setup_lifeRegRaw, "\n   UnitClass, line 839" + wurstStackTrace)
endfunction

function dispatch_Unit_updateLifeReg takes integer this_58, string wurstStackTrace returns nothing
	if Unit_typeId[this_58] == 0 then
		if this_58 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Unit.updateLifeReg" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Unit.updateLifeReg on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	if Unit_typeId[this_58] <= 709 then
		call Unit_updateLifeReg(this_58, "\n   UnitClass, line 838" + wurstStackTrace)
	else
		call Unit_updateLifeReg(this_58, "\n   UnitClass, line 838" + wurstStackTrace)
	endif
endfunction

function closure_impl_15 takes integer this_58, string wurstStackTrace returns nothing
	set Unit_bonusLifeReg[this_41[this_58]] = Unit_bonusLifeReg[this_41[this_58]] - amount_39[this_58]
	call dispatch_Unit_updateLifeReg(this_41[this_58], "\n   UnitClass, line 805" + wurstStackTrace)
endfunction

function closure_impl_16 takes integer this_58, string wurstStackTrace returns nothing
	set Unit_bonusLifePer[this_39[this_58]] = Unit_bonusLifePer[this_39[this_58]] - amount_37[this_58]
	call dispatch_Unit_updateLife(this_39[this_58], "\n   UnitClass, line 783" + wurstStackTrace)
endfunction

function Unit_updateManaReg takes integer this_58, string wurstStackTrace returns nothing
	call dispatch_Unit_updateState(this_58, roundReal((Unit_manaReg[this_58] + Unit_bonusManaReg[this_58]) * (1. + Unit_bonusManaRegPer[this_58] / 100.) - Unit_manaReg[this_58]), Setup_manaRegRaw, "\n   UnitClass, line 921" + wurstStackTrace)
endfunction

function dispatch_Unit_updateManaReg takes integer this_58, string wurstStackTrace returns nothing
	if Unit_typeId[this_58] == 0 then
		if this_58 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Unit.updateManaReg" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Unit.updateManaReg on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	if Unit_typeId[this_58] <= 709 then
		call Unit_updateManaReg(this_58, "\n   UnitClass, line 920" + wurstStackTrace)
	else
		call Unit_updateManaReg(this_58, "\n   UnitClass, line 920" + wurstStackTrace)
	endif
endfunction

function closure_impl_17 takes integer this_58, string wurstStackTrace returns nothing
	set Unit_bonusManaReg[this_49[this_58]] = Unit_bonusManaReg[this_49[this_58]] - amount_47[this_58]
	call dispatch_Unit_updateManaReg(this_49[this_58], "\n   UnitClass, line 887" + wurstStackTrace)
endfunction

function closure_impl_18 takes integer this_58 returns nothing
	set Unit_spellVamp[this_11[this_58]] = Unit_spellVamp[this_11[this_58]] - amount_9[this_58]
endfunction

function Unit_updateMana takes integer this_58, string wurstStackTrace returns nothing
	call dispatch_Unit_updateState(this_58, roundReal((Unit_mana[this_58] + Unit_bonusMana[this_58]) * (1. + Unit_bonusManaPer[this_58] / 100.) - Unit_mana[this_58]), Setup_manaRaw, "\n   UnitClass, line 880" + wurstStackTrace)
endfunction

function Hero_updateMana takes integer this_58, string wurstStackTrace returns nothing
	call dispatch_Bar_updateEx(Hero_hb[this_58], "\n   HeroClass, line 159" + wurstStackTrace)
	call Unit_updateMana(this_58, "\n   HeroClass, line 160" + wurstStackTrace)
endfunction

function dispatch_Unit_updateMana takes integer this_58, string wurstStackTrace returns nothing
	if Unit_typeId[this_58] == 0 then
		if this_58 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Unit.updateMana" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Unit.updateMana on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	if Unit_typeId[this_58] <= 709 then
		call Unit_updateMana(this_58, "\n   UnitClass, line 879" + wurstStackTrace)
	else
		call Hero_updateMana(this_58, "\n   UnitClass, line 879" + wurstStackTrace)
	endif
endfunction

function closure_impl_19 takes integer this_58, string wurstStackTrace returns nothing
	set Unit_bonusManaPer[this_47[this_58]] = Unit_bonusManaPer[this_47[this_58]] - amount_45[this_58]
	call dispatch_Unit_updateMana(this_47[this_58], "\n   UnitClass, line 865" + wurstStackTrace)
endfunction

function closure_impl_20 takes integer this_58, string wurstStackTrace returns nothing
	set Unit_bonusAttack[this_3[this_58]] = Unit_bonusAttack[this_3[this_58]] - amount[this_58]
	call dispatch_Unit_updateAttack(this_3[this_58], "\n   UnitClass, line 469" + wurstStackTrace)
endfunction

function Unit_updateMovespeed takes integer this_58 returns nothing
	call SetUnitMoveSpeed(Unit_u[this_58], (Unit_movespeed[this_58] + Unit_bonusMovespeed[this_58]) * (1. + Unit_bonusMovespeedPer[this_58] / 100.))
endfunction

function alloc_LLEntry takes nothing returns integer
	local integer this_58
	if LLEntry_firstFree == 0 then
		set LLEntry_maxIndex = LLEntry_maxIndex + 1
		set this_58 = LLEntry_maxIndex
	else
		set LLEntry_firstFree = LLEntry_firstFree - 1
		set this_58 = LLEntry_nextFree[LLEntry_firstFree]
	endif
	set LLEntry_typeId[this_58] = 3
	return this_58
endfunction

function construct_LLEntry takes integer this_58, integer elem, integer prev, integer next returns nothing
	set LLEntry_elem[this_58] = elem
	set LLEntry_prev[this_58] = prev
	set LLEntry_next[this_58] = next
endfunction

function new_LLEntry takes integer elem, integer prev, integer next returns integer
	local integer this_58 = alloc_LLEntry()
	call construct_LLEntry(this_58, elem, prev, next)
	return this_58
endfunction

function LinkedList_add takes integer this_58, integer elem returns nothing
	local integer entry = new_LLEntry(elem, LLEntry_prev[LinkedList_dummy[this_58]], LinkedList_dummy[this_58])
	set LLEntry_next[LLEntry_prev[LinkedList_dummy[this_58]]] = entry
	set LLEntry_prev[LinkedList_dummy[this_58]] = entry
	set LinkedList_size[this_58] = LinkedList_size[this_58] + 1
endfunction

function dispatch_LinkedList_add takes integer this_58, integer elem, string wurstStackTrace returns nothing
	if LinkedList_typeId[this_58] == 0 then
		if this_58 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling LinkedList.add" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called LinkedList.add on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call LinkedList_add(this_58, elem)
endfunction

function Unit_getMovespeed takes integer this_58, boolean withBonus returns real
	if withBonus then
		return (Unit_movespeed[this_58] + Unit_bonusMovespeed[this_58]) * (1. + Unit_bonusMovespeedPer[this_58] / 100.)
	else
		return Unit_movespeed[this_58]
	endif
endfunction

function dispatch_Unit_getMovespeed takes integer this_58, boolean withBonus, string wurstStackTrace returns real
	local real getMovespeed_result
	if Unit_typeId[this_58] == 0 then
		if this_58 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Unit.getMovespeed" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Unit.getMovespeed on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	if Unit_typeId[this_58] <= 709 then
		set getMovespeed_result = Unit_getMovespeed(this_58, withBonus)
	else
		set getMovespeed_result = Unit_getMovespeed(this_58, withBonus)
	endif
	return getMovespeed_result
endfunction

function Hero_updateMovespeed takes integer this_58, string wurstStackTrace returns nothing
	call Unit_updateMovespeed(this_58)
	if dispatch_Unit_getMovespeed(this_58, true, "\n   HeroClass, line 164" + wurstStackTrace) > 522. then
		call dispatch_LinkedList_add(Hero_toMove, this_58, "\n   HeroClass, line 165" + wurstStackTrace)
	else
		call dispatch_LinkedList_remove(Hero_toMove, this_58, "\n   HeroClass, line 167" + wurstStackTrace)
	endif
endfunction

function dispatch_Unit_updateMovespeed takes integer this_58, string wurstStackTrace returns nothing
	if Unit_typeId[this_58] == 0 then
		if this_58 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Unit.updateMovespeed" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Unit.updateMovespeed on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	if Unit_typeId[this_58] <= 709 then
		call Unit_updateMovespeed(this_58)
	else
		call Hero_updateMovespeed(this_58, "\n   UnitClass, line 756" + wurstStackTrace)
	endif
endfunction

function closure_impl_21 takes integer this_58, string wurstStackTrace returns nothing
	set Unit_bonusMovespeed[this_33[this_58]] = Unit_bonusMovespeed[this_33[this_58]] - amount_31[this_58]
	call dispatch_Unit_updateMovespeed(this_33[this_58], "\n   UnitClass, line 723" + wurstStackTrace)
endfunction

function closure_impl_22 takes integer this_58 returns nothing
	set Unit_bonusResistance[this_27[this_58]] = Unit_bonusResistance[this_27[this_58]] - amount_25[this_58]
endfunction

function closure_impl_23 takes integer this_58, string wurstStackTrace returns nothing
	set Unit_bonusManaRegPer[this_51[this_58]] = Unit_bonusManaRegPer[this_51[this_58]] - amount_49[this_58]
	call dispatch_Unit_updateManaReg(this_51[this_58], "\n   UnitClass, line 906" + wurstStackTrace)
endfunction

function closure_impl_24 takes integer this_58 returns nothing
	set Unit_normalReduction[this_13[this_58]] = Unit_normalReduction[this_13[this_58]] - amount_11[this_58]
endfunction

function closure_impl_25 takes integer this_58, string wurstStackTrace returns nothing
	set Unit_bonusMovespeedPer[this_35[this_58]] = Unit_bonusMovespeedPer[this_35[this_58]] - amount_33[this_58]
	call dispatch_Unit_updateMovespeed(this_35[this_58], "\n   UnitClass, line 742" + wurstStackTrace)
endfunction

function closure_impl_26 takes integer this_58 returns nothing
	set Unit_magicReduction[this_15[this_58]] = Unit_magicReduction[this_15[this_58]] - amount_13[this_58]
endfunction

function closure_impl_27 takes integer this_58, string wurstStackTrace returns nothing
	set Unit_bonusLifeRegPer[this_43[this_58]] = Unit_bonusLifeRegPer[this_43[this_58]] - amount_41[this_58]
	call dispatch_Unit_updateLifeReg(this_43[this_58], "\n   UnitClass, line 824" + wurstStackTrace)
endfunction

function closure_impl_28 takes integer this_58 returns nothing
	set Unit_critchance[this_17[this_58]] = Unit_critchance[this_17[this_58]] - amount_15[this_58]
endfunction

function closure_impl_29 takes integer this_58 returns nothing
	set Unit_critdamage[this_19[this_58]] = Unit_critdamage[this_19[this_58]] - amount_17[this_58]
endfunction

function closure_impl_30 takes integer this_58, string wurstStackTrace returns nothing
	set Unit_bonusMana[this_45[this_58]] = Unit_bonusMana[this_45[this_58]] - amount_43[this_58]
	call dispatch_Unit_updateMana(this_45[this_58], "\n   UnitClass, line 846" + wurstStackTrace)
endfunction

function dispatch_Bonus_remove takes integer this_58, string wurstStackTrace returns nothing
	if Bonus_typeId[this_58] == 0 then
		if this_58 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Bonus.remove" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Bonus.remove on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	if Bonus_typeId[this_58] <= 735 then
		if Bonus_typeId[this_58] <= 723 then
			if Bonus_typeId[this_58] <= 717 then
				if Bonus_typeId[this_58] <= 713 then
					if Bonus_typeId[this_58] <= 710 then
						call closure_impl_20(this_58, "\n   Bonus, line 9" + wurstStackTrace)
					else
						call closure_impl_7(this_58, "\n   Bonus, line 9" + wurstStackTrace)
					endif
				elseif Bonus_typeId[this_58] <= 715 then
					call closure_impl_8(this_58)
				else
					call closure_impl_6(this_58)
				endif
			elseif Bonus_typeId[this_58] <= 721 then
				if Bonus_typeId[this_58] <= 719 then
					call closure_impl_18(this_58)
				else
					call closure_impl_24(this_58)
				endif
			else
				call closure_impl_26(this_58)
			endif
		elseif Bonus_typeId[this_58] <= 729 then
			if Bonus_typeId[this_58] <= 727 then
				if Bonus_typeId[this_58] <= 725 then
					call closure_impl_28(this_58)
				else
					call closure_impl_29(this_58)
				endif
			else
				call closure_impl_13(this_58)
			endif
		elseif Bonus_typeId[this_58] <= 733 then
			if Bonus_typeId[this_58] <= 731 then
				call closure_impl_11(this_58, "\n   Bonus, line 9" + wurstStackTrace)
			else
				call closure_impl_10(this_58, "\n   Bonus, line 9" + wurstStackTrace)
			endif
		else
			call closure_impl_22(this_58)
		endif
	elseif Bonus_typeId[this_58] <= 747 then
		if Bonus_typeId[this_58] <= 741 then
			if Bonus_typeId[this_58] <= 739 then
				if Bonus_typeId[this_58] <= 737 then
					call closure_impl_14(this_58)
				else
					call closure_impl_12(this_58, "\n   Bonus, line 9" + wurstStackTrace)
				endif
			else
				call closure_impl_21(this_58, "\n   Bonus, line 9" + wurstStackTrace)
			endif
		elseif Bonus_typeId[this_58] <= 745 then
			if Bonus_typeId[this_58] <= 743 then
				call closure_impl_25(this_58, "\n   Bonus, line 9" + wurstStackTrace)
			else
				call closure_impl_9(this_58, "\n   Bonus, line 9" + wurstStackTrace)
			endif
		else
			call closure_impl_16(this_58, "\n   Bonus, line 9" + wurstStackTrace)
		endif
	elseif Bonus_typeId[this_58] <= 753 then
		if Bonus_typeId[this_58] <= 751 then
			if Bonus_typeId[this_58] <= 749 then
				call closure_impl_15(this_58, "\n   Bonus, line 9" + wurstStackTrace)
			else
				call closure_impl_27(this_58, "\n   Bonus, line 9" + wurstStackTrace)
			endif
		else
			call closure_impl_30(this_58, "\n   Bonus, line 9" + wurstStackTrace)
		endif
	elseif Bonus_typeId[this_58] <= 757 then
		if Bonus_typeId[this_58] <= 755 then
			call closure_impl_19(this_58, "\n   Bonus, line 9" + wurstStackTrace)
		else
			call closure_impl_17(this_58, "\n   Bonus, line 9" + wurstStackTrace)
		endif
	else
		call closure_impl_23(this_58, "\n   Bonus, line 9" + wurstStackTrace)
	endif
endfunction

function Bonus_onDestroy takes integer this_58, string wurstStackTrace returns nothing
	call dispatch_Bonus_remove(this_58, "\n   Bonus, line 12" + wurstStackTrace)
endfunction

function dealloc_Bonus takes integer obj, string wurstStackTrace returns nothing
	if Bonus_typeId[obj] == 0 then
		call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Double free: object of type Bonus" + wurstStackTrace)
		call I2S(1 / 0)
	else
		set Bonus_nextFree[Bonus_firstFree] = obj
		set Bonus_firstFree = Bonus_firstFree + 1
		set Bonus_typeId[obj] = 0
	endif
endfunction

function destroyBonus takes integer this_58, string wurstStackTrace returns nothing
	call Bonus_onDestroy(this_58, "\n   Bonus, line 11" + wurstStackTrace)
	call dealloc_Bonus(this_58, "\n   Bonus, line 11" + wurstStackTrace)
endfunction

function dispatch_Bonus_destroyBonus takes integer this_58, string wurstStackTrace returns nothing
	if Bonus_typeId[this_58] == 0 then
		if this_58 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Bonus.destroyBonus" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Bonus.destroyBonus on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	if Bonus_typeId[this_58] <= 735 then
		if Bonus_typeId[this_58] <= 723 then
			if Bonus_typeId[this_58] <= 717 then
				if Bonus_typeId[this_58] <= 713 then
					if Bonus_typeId[this_58] <= 711 then
						call destroyBonus(this_58, "\n   Bonus, line 7" + wurstStackTrace)
					else
						call destroyBonus(this_58, "\n   Bonus, line 7" + wurstStackTrace)
					endif
				elseif Bonus_typeId[this_58] <= 715 then
					call destroyBonus(this_58, "\n   Bonus, line 7" + wurstStackTrace)
				else
					call destroyBonus(this_58, "\n   Bonus, line 7" + wurstStackTrace)
				endif
			elseif Bonus_typeId[this_58] <= 721 then
				if Bonus_typeId[this_58] <= 719 then
					call destroyBonus(this_58, "\n   Bonus, line 7" + wurstStackTrace)
				else
					call destroyBonus(this_58, "\n   Bonus, line 7" + wurstStackTrace)
				endif
			else
				call destroyBonus(this_58, "\n   Bonus, line 7" + wurstStackTrace)
			endif
		elseif Bonus_typeId[this_58] <= 729 then
			if Bonus_typeId[this_58] <= 727 then
				if Bonus_typeId[this_58] <= 725 then
					call destroyBonus(this_58, "\n   Bonus, line 7" + wurstStackTrace)
				else
					call destroyBonus(this_58, "\n   Bonus, line 7" + wurstStackTrace)
				endif
			else
				call destroyBonus(this_58, "\n   Bonus, line 7" + wurstStackTrace)
			endif
		elseif Bonus_typeId[this_58] <= 733 then
			if Bonus_typeId[this_58] <= 731 then
				call destroyBonus(this_58, "\n   Bonus, line 7" + wurstStackTrace)
			else
				call destroyBonus(this_58, "\n   Bonus, line 7" + wurstStackTrace)
			endif
		else
			call destroyBonus(this_58, "\n   Bonus, line 7" + wurstStackTrace)
		endif
	elseif Bonus_typeId[this_58] <= 747 then
		if Bonus_typeId[this_58] <= 741 then
			if Bonus_typeId[this_58] <= 739 then
				if Bonus_typeId[this_58] <= 737 then
					call destroyBonus(this_58, "\n   Bonus, line 7" + wurstStackTrace)
				else
					call destroyBonus(this_58, "\n   Bonus, line 7" + wurstStackTrace)
				endif
			else
				call destroyBonus(this_58, "\n   Bonus, line 7" + wurstStackTrace)
			endif
		elseif Bonus_typeId[this_58] <= 745 then
			if Bonus_typeId[this_58] <= 743 then
				call destroyBonus(this_58, "\n   Bonus, line 7" + wurstStackTrace)
			else
				call destroyBonus(this_58, "\n   Bonus, line 7" + wurstStackTrace)
			endif
		else
			call destroyBonus(this_58, "\n   Bonus, line 7" + wurstStackTrace)
		endif
	elseif Bonus_typeId[this_58] <= 753 then
		if Bonus_typeId[this_58] <= 751 then
			if Bonus_typeId[this_58] <= 749 then
				call destroyBonus(this_58, "\n   Bonus, line 7" + wurstStackTrace)
			else
				call destroyBonus(this_58, "\n   Bonus, line 7" + wurstStackTrace)
			endif
		else
			call destroyBonus(this_58, "\n   Bonus, line 7" + wurstStackTrace)
		endif
	elseif Bonus_typeId[this_58] <= 757 then
		if Bonus_typeId[this_58] <= 755 then
			call destroyBonus(this_58, "\n   Bonus, line 7" + wurstStackTrace)
		else
			call destroyBonus(this_58, "\n   Bonus, line 7" + wurstStackTrace)
		endif
	else
		call destroyBonus(this_58, "\n   Bonus, line 7" + wurstStackTrace)
	endif
endfunction

function Buff_onDestroy takes integer this_58, string wurstStackTrace returns nothing
	local integer tempIndex
	local integer tempTupleSelectionResult_1
	local integer temp_tempTupleSelectionResult_1
	local integer temp_tempTupleSelectionResult_2
	local integer tempIndex_2
	local integer tempTupleSelectionResult_2
	local integer temp_tempTupleSelectionResult_1_2
	local integer temp_tempTupleSelectionResult_2_2
	local unit temp
	local unit temp_2
	call dispatch_Action_destroyAction(Buff_action[this_58], "\n   Buff, line 63" + wurstStackTrace)
	call timer_release(Buff_t[this_58], "\n   Buff, line 64" + wurstStackTrace)
	call dispatch_LinkedList_remove(Unit_allBuffs[Buff_u[this_58]], this_58, "\n   Buff, line 65" + wurstStackTrace)
	if Buff_fxTimer[this_58] != null then
		call timer_release(Buff_fxTimer[this_58], "\n   Buff, line 67" + wurstStackTrace)
	endif
	set temp = Unit_u[Buff_u[this_58]]
	set tempIndex = this_58
	set temp_tempTupleSelectionResult_1 = Buff_btyp[tempIndex]
	set temp_tempTupleSelectionResult_2 = Buff_btyp_2[tempIndex]
	set tempTupleSelectionResult_1 = temp_tempTupleSelectionResult_1
	call UnitRemoveAbility(temp, tempTupleSelectionResult_1)
	set temp_2 = Unit_u[Buff_u[this_58]]
	set tempIndex_2 = this_58
	set temp_tempTupleSelectionResult_1_2 = Buff_btyp[tempIndex_2]
	set temp_tempTupleSelectionResult_2_2 = Buff_btyp_2[tempIndex_2]
	set tempTupleSelectionResult_2 = temp_tempTupleSelectionResult_2_2
	call UnitRemoveAbility(temp_2, tempTupleSelectionResult_2)
	if Buff_bon[this_58] != 0 then
		call dispatch_Bonus_destroyBonus(Buff_bon[this_58], "\n   Buff, line 71" + wurstStackTrace)
	endif
	if Buff_fx[this_58] != null then
		call DestroyEffect(Buff_fx[this_58])
	endif
	set temp = null
	set temp_2 = null
endfunction

function dealloc_Buff takes integer obj, string wurstStackTrace returns nothing
	if Buff_typeId[obj] == 0 then
		call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Double free: object of type Buff" + wurstStackTrace)
		call I2S(1 / 0)
	else
		set Buff_firstFree = Buff_firstFree + 1
		set Buff_typeId[obj] = 0
	endif
endfunction

function destroyBuff takes integer this_58, string wurstStackTrace returns nothing
	call Buff_onDestroy(this_58, "\n   Buff, line 62" + wurstStackTrace)
	call dealloc_Buff(this_58, "\n   Buff, line 62" + wurstStackTrace)
endfunction

function dispatch_Buff_destroyBuff takes integer this_58, string wurstStackTrace returns nothing
	if Buff_typeId[this_58] == 0 then
		if this_58 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Buff.destroyBuff" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Buff.destroyBuff on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call destroyBuff(this_58, "\n   Buff, line 7" + wurstStackTrace)
endfunction

function closure_impl_31 takes integer this_58, integer data, string wurstStackTrace returns nothing
	call dispatch_Buff_destroyBuff(this_2[this_58], "\n   Buff, line 28" + wurstStackTrace)
endfunction

function dispatch_Action_fire takes integer this_58, integer d_2, string wurstStackTrace returns nothing
	if Action_typeId[this_58] == 0 then
		if this_58 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Action.fire" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Action.fire on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	if Action_typeId[this_58] <= 838 then
		if Action_typeId[this_58] <= 689 then
			if Action_typeId[this_58] <= 686 then
				call closure_impl_2(this_58, d_2, "\n   CustomClosureEvents, line 67" + wurstStackTrace)
			else
				call closure_impl_31(this_58, d_2, "\n   CustomClosureEvents, line 67" + wurstStackTrace)
			endif
		else
			call closure_impl_3(this_58, d_2, "\n   CustomClosureEvents, line 67" + wurstStackTrace)
		endif
	elseif Action_typeId[this_58] <= 840 then
		if Action_typeId[this_58] <= 839 then
			call closure_impl_4(this_58, d_2, "\n   CustomClosureEvents, line 67" + wurstStackTrace)
		else
			call closure_impl(this_58, d_2, "\n   CustomClosureEvents, line 67" + wurstStackTrace)
		endif
	else
		call closure_impl_5(this_58, d_2, "\n   CustomClosureEvents, line 67" + wurstStackTrace)
	endif
endfunction

function Event_stop takes integer this_58, integer d_2 returns boolean
	return false
endfunction

function OnDamageEvent_stop takes integer this_58, integer data returns boolean
	return OnDamageData_stop[data]
endfunction

function SpellEvent_stop takes integer this_58, integer data returns boolean
	return  not SpellData_spellSuccess[data]
endfunction

function dispatch_Event_stop takes integer this_58, integer d_2, string wurstStackTrace returns boolean
	local boolean stop_result
	if Event_typeId[this_58] == 0 then
		if this_58 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Event.stop" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Event.stop on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	if Event_typeId[this_58] <= 788 then
		if Event_typeId[this_58] <= 786 then
			if Event_typeId[this_58] <= 681 then
				set stop_result = Event_stop(this_58, d_2)
			else
				set stop_result = Event_stop(this_58, d_2)
			endif
		else
			set stop_result = OnDamageEvent_stop(this_58, d_2)
		endif
	elseif Event_typeId[this_58] <= 791 then
		if Event_typeId[this_58] <= 790 then
			set stop_result = SpellEvent_stop(this_58, d_2)
		else
			set stop_result = Event_stop(this_58, d_2)
		endif
	else
		set stop_result = Event_stop(this_58, d_2)
	endif
	return stop_result
endfunction

function Event_callActions takes integer this_58, integer d_2, string wurstStackTrace returns nothing
	local integer buffer = Event_first[this_58]
	local integer temp
	if Event_checkData[this_58] then
		loop
			exitwhen  not (buffer != 0)
			if dispatch_Event_stop(this_58, d_2, "\n   CustomClosureEvents, line 43" + wurstStackTrace) then
				return
			endif
			call dispatch_Action_fire(buffer, d_2, "\n   CustomClosureEvents, line 45" + wurstStackTrace)
			set buffer = Action_next[buffer]
		endloop
	else
		loop
			exitwhen  not (buffer != 0)
			set temp = buffer
			set buffer = Action_next[buffer]
			call dispatch_Action_fire(temp, d_2, "\n   CustomClosureEvents, line 51" + wurstStackTrace)
		endloop
	endif
endfunction

function UnitEvent_fire takes integer this_58, integer whichUnit, string wurstStackTrace returns nothing
	call Event_callActions(this_58, whichUnit, "\n   UnitEvents, line 93" + wurstStackTrace)
endfunction

function dispatch_UnitEvent_fire takes integer this_58, integer whichUnit, string wurstStackTrace returns nothing
	if Event_typeId[this_58] == 0 then
		if this_58 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling UnitEvent.fire" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called UnitEvent.fire on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call UnitEvent_fire(this_58, whichUnit, "\n   UnitEvents, line 92" + wurstStackTrace)
endfunction

function group_close takes group this_58 returns nothing
	call DestroyGroup(this_58)
endfunction

function group_hasNext takes group this_58 returns boolean
	return FirstOfGroup(this_58) != null
endfunction

function group_iterator takes group this_58 returns group
	set bj_groupAddGroupDest = CreateGroup()
	call ForGroup(this_58, ref_function_GroupAddGroupEnum_2)
	return bj_groupAddGroupDest
endfunction

function group_next takes group this_58 returns unit
	local unit u_2 = FirstOfGroup(this_58)
	call GroupRemoveUnit(this_58, u_2)
	set group_nexttempReturn = u_2
	set u_2 = null
	return group_nexttempReturn
endfunction

function unit_getX takes unit this_58 returns real
	return GetUnitX(this_58)
endfunction

function unit_getY takes unit this_58 returns real
	return GetUnitY(this_58)
endfunction

function unit_getPos takes unit this_58 returns real
	set unit_getPos_return_x = unit_getX(this_58)
	set unit_getPos_return_y = unit_getY(this_58)
	return unit_getPos_return_x
endfunction

function unit_getUserData takes unit this_58 returns integer
	return GetUnitUserData(this_58)
endfunction

function real_squared takes real this_58 returns real
	return this_58 * this_58
endfunction

function vec2_distToVec takes real this_x, real this_y, real v_x, real v_y returns real
	return SquareRoot(real_squared(v_x - this_x) + real_squared(v_y - this_y))
endfunction

function Aura_check takes integer this_58, string wurstStackTrace returns nothing
	local group wurst__iterator0 = group_iterator(Aura_g[this_58])
	local unit gu
	local integer obj
	local group tempGroup
	local unit gu_2
	local integer obj_2
	loop
		exitwhen  not group_hasNext(wurst__iterator0)
		set gu = group_next(wurst__iterator0)
		set obj = unit_getUserData(gu)
		if obj != 0 and vec2_distToVec(unit_getPos(gu), unit_getPos_return_y, unit_getPos(Unit_u[Aura_u[this_58]]), unit_getPos_return_y) > Aura_radius[this_58] then
			call dispatch_UnitEvent_fire(Aura_leave[this_58], obj, "\n   AuraHelper, line 45" + wurstStackTrace)
			call GroupRemoveUnit(Aura_g[this_58], gu)
		endif
	endloop
	call group_close(wurst__iterator0)
	set tempGroup = CreateGroup()
	call MoveRectTo(Aura_r[this_58], unit_getX(Unit_u[Aura_u[this_58]]), unit_getY(Unit_u[Aura_u[this_58]]))
	call GroupEnumUnitsInRect(tempGroup, Aura_r[this_58], Aura_filter[this_58])
	loop
		exitwhen  not group_hasNext(tempGroup)
		set gu_2 = group_next(tempGroup)
		set obj_2 = unit_getUserData(gu_2)
		if obj_2 != 0 and vec2_distToVec(unit_getPos(gu_2), unit_getPos_return_y, unit_getPos(Unit_u[Aura_u[this_58]]), unit_getPos_return_y) <= Aura_radius[this_58] and ( not IsUnitInGroup(gu_2, Aura_g[this_58])) then
			call dispatch_UnitEvent_fire(Aura_enter[this_58], obj_2, "\n   AuraHelper, line 53" + wurstStackTrace)
			call GroupAddUnit(Aura_g[this_58], gu_2)
		endif
	endloop
	call DestroyGroup(tempGroup)
	set wurst__iterator0 = null
	set gu = null
	set tempGroup = null
	set gu_2 = null
endfunction

function dispatch_Aura_check takes integer this_58, string wurstStackTrace returns nothing
	if Aura_typeId[this_58] == 0 then
		if this_58 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Aura.check" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Aura.check on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call Aura_check(this_58, "\n   AuraHelper, line 40" + wurstStackTrace)
endfunction

function Aura_callCheck takes string wurstStackTrace returns nothing
	call dispatch_Aura_check(timer_getData(GetExpiredTimer(), "\n   AuraHelper, line 32" + wurstStackTrace), "\n   AuraHelper, line 32" + wurstStackTrace)
endfunction

function bridge_Aura_callCheck takes nothing returns nothing
	call Aura_callCheck("\n   AuraHelper, line 29")
endfunction

function unit_getState takes unit this_58, unitstate state returns real
	return GetUnitState(this_58, state)
endfunction

function unit_getHP takes unit this_58 returns real
	return unit_getState(this_58, UNIT_STATE_LIFE)
endfunction

function Bar_update takes integer this_58 returns nothing
	local real hp = unit_getHP(Unit_u[Bar_owner[this_58]])
	local real maxHp = GetUnitState(Unit_u[Bar_owner[this_58]], UNIT_STATE_MAX_LIFE)
	local real per = hp / maxHp
	local integer barsGot = roundReal(per * HeroBar_realBarCount) * 2
	local integer shieldBars = roundReal(ShieldList_shieldSum[Unit_shieldList[Bar_owner[this_58]]] / maxHp * HeroBar_realBarCount) * 2
	local integer barsLeft = HeroBar_fakeBarCount - barsGot - shieldBars
	local string hpGot
	local string shield
	local integer manaBarsGot
	local integer manaBarsLeft
	local string manaGot
	local string manaDead
	local string final
	set barsGot = barsGot + barsGot / (Bar_markerDistance[this_58] + 2) * 12
	set hpGot = SubString(Bar_hpFull[this_58], 0, barsGot)
	set shield = SubString(HeroBar_bar, 0, shieldBars)
	set manaBarsGot = roundReal(GetUnitState(Unit_u[Bar_owner[this_58]], UNIT_STATE_MANA) / GetUnitState(Unit_u[Bar_owner[this_58]], UNIT_STATE_MAX_MANA) * HeroBar_realBarCount) * 2
	set manaBarsLeft = HeroBar_fakeBarCount - manaBarsGot
	set manaGot = SubString(HeroBar_bar, 0, manaBarsGot)
	set manaDead = SubString(HeroBar_bar, 0, manaBarsLeft)
	if barsLeft <= 0 then
		set final = hpGot + HeroBar_shieldColor + shield + HeroBar_endColor + "|n" + HeroBar_mpColor + manaGot + HeroBar_endColor + HeroBar_mpColorDead + manaDead + HeroBar_endColor
	else
		set final = hpGot + HeroBar_shieldColor + shield + HeroBar_endColor + HeroBar_hpColorDead + SubString(HeroBar_bar, 0, barsLeft) + HeroBar_endColor + "|n" + HeroBar_mpColor + manaGot + HeroBar_endColor + HeroBar_mpColorDead + manaDead + HeroBar_endColor
	endif
	call SetTextTagText(Bar_tt[this_58], final, 0.01)
endfunction

function dispatch_Bar_update takes integer this_58, string wurstStackTrace returns nothing
	if Bar_typeId[this_58] == 0 then
		if this_58 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Bar.update" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Bar.update on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call Bar_update(this_58)
endfunction

function Bar_updateExDirect takes integer this_58, string wurstStackTrace returns nothing
	local integer i
	local integer temp
	local integer charCount
	set Bar_markerDistance[this_58] = (HeroBar_seperateAt * HeroBar_realBarCount / R2I(GetUnitState(Unit_u[Bar_owner[this_58]], UNIT_STATE_MAX_LIFE)) - 1) * 2
	set Bar_hpFull[this_58] = ""
	set i = 1
	set temp = HeroBar_fakeBarCount / (Bar_markerDistance[this_58] + 2)
	loop
		exitwhen i > temp
		set Bar_hpFull[this_58] = Bar_hpFull[this_58] + SubString(HeroBar_bar, 0, Bar_markerDistance[this_58])
		set Bar_hpFull[this_58] = Bar_hpFull[this_58] + HeroBar_marker
		set i = i + 1
	endloop
	set charCount = HeroBar_fakeBarCount / (Bar_markerDistance[this_58] + 2) * (Bar_markerDistance[this_58] + 2)
	set Bar_hpFull[this_58] = Bar_hpFull[this_58] + SubString(HeroBar_bar, 0, HeroBar_fakeBarCount - charCount)
	call dispatch_Bar_update(this_58, "\n   HeroBar, line 114" + wurstStackTrace)
endfunction

function dispatch_Bar_updateExDirect takes integer this_58, string wurstStackTrace returns nothing
	if Bar_typeId[this_58] == 0 then
		if this_58 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Bar.updateExDirect" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Bar.updateExDirect on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call Bar_updateExDirect(this_58, "\n   HeroBar, line 106" + wurstStackTrace)
endfunction

function Bar_callUpdateEx takes string wurstStackTrace returns nothing
	local timer t = GetExpiredTimer()
	call dispatch_Bar_updateExDirect(timer_getData(t, "\n   HeroBar, line 102" + wurstStackTrace), "\n   HeroBar, line 102" + wurstStackTrace)
	call timer_release(t, "\n   HeroBar, line 103" + wurstStackTrace)
	set t = null
	set t = null
endfunction

function bridge_Bar_callUpdateEx takes nothing returns nothing
	call Bar_callUpdateEx("\n   HeroBar, line 98")
endfunction

function Hero_getBarPos takes integer this_58 returns real
	set Hero_getBarPos_return_x = unit_getX(Unit_u[this_58]) - 55.
	set Hero_getBarPos_return_y = unit_getY(Unit_u[this_58])
	set Hero_getBarPos_return_z = GetUnitFlyHeight(Unit_u[this_58]) + Unit_height[this_58]
	return Hero_getBarPos_return_x
endfunction

function dispatch_Hero_getBarPos takes integer this_58, string wurstStackTrace returns real
	local real getBarPos_result_x
	local real getBarPos_result_y
	local real getBarPos_result_z
	local real temp_getBarPos_result_x
	local real temp_getBarPos_result_y
	local real temp_getBarPos_result_z
	if Unit_typeId[this_58] == 0 then
		if this_58 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Hero.getBarPos" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Hero.getBarPos on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	set temp_getBarPos_result_x = Hero_getBarPos(this_58)
	set temp_getBarPos_result_y = Hero_getBarPos_return_y
	set temp_getBarPos_result_z = Hero_getBarPos_return_z
	set getBarPos_result_x = temp_getBarPos_result_x
	set getBarPos_result_y = temp_getBarPos_result_y
	set getBarPos_result_z = temp_getBarPos_result_z
	set dispatch_Hero_getBarPos_return_x = getBarPos_result_x
	set dispatch_Hero_getBarPos_return_y = getBarPos_result_y
	set dispatch_Hero_getBarPos_return_z = getBarPos_result_z
	return dispatch_Hero_getBarPos_return_x
endfunction

function texttag_setPos takes texttag this_58, real pos_x, real pos_y, real pos_z returns nothing
	call SetTextTagPos(this_58, pos_x, pos_y, pos_z)
endfunction

function Bar_updatePos_2 takes string wurstStackTrace returns nothing
	local integer b = LinkedListModule_first_2
	loop
		exitwhen  not (b != 0)
		if Bar_isVisible[b] then
			call texttag_setPos(Bar_tt[b], dispatch_Hero_getBarPos(Bar_owner[b], "\n   HeroBar, line 71" + wurstStackTrace), dispatch_Hero_getBarPos_return_y, dispatch_Hero_getBarPos_return_z)
		endif
		set b = LinkedListModule_next_2[b]
	endloop
endfunction

function bridge_Bar_updatePos takes nothing returns nothing
	call Bar_updatePos_2("\n   HeroBar, line 29")
endfunction

function texttag_setVisibility takes texttag this_58, boolean flag returns nothing
	call SetTextTagVisibility(this_58, flag)
endfunction

function Bar_updateVision_2 takes string wurstStackTrace returns nothing
	local integer b = LinkedListModule_first_2
	loop
		exitwhen  not (b != 0)
		if Bar_check[b] then
			if IsVisibleToPlayer(unit_getX(Unit_u[Bar_owner[b]]), unit_getY(Unit_u[Bar_owner[b]]), GetLocalPlayer()) then
				set Bar_isVisible[b] = true
				call texttag_setVisibility(Bar_tt[b], true)
			else
				set Bar_isVisible[b] = false
				call texttag_setVisibility(Bar_tt[b], false)
			endif
			call dispatch_Bar_update(b, "\n   HeroBar, line 64" + wurstStackTrace)
			set b = LinkedListModule_next_2[b]
		endif
	endloop
endfunction

function bridge_Bar_updateVision takes nothing returns nothing
	call Bar_updateVision_2("\n   HeroBar, line 30")
endfunction

function unit_addEffect takes unit this_58, string fx, string attachment returns effect
	return AddSpecialEffectTarget(fx, this_58, attachment)
endfunction

function Buff_createEffect takes string wurstStackTrace returns nothing
	local timer t = GetExpiredTimer()
	local integer b = timer_getData(t, "\n   Buff, line 55" + wurstStackTrace)
	if Buff_fxCounter[b] > 0 then
		call DestroyEffect(unit_addEffect(Unit_u[Buff_u[b]], Buff_fxType[b], Buff_attachment[b]))
		set Buff_fxCounter[b] = Buff_fxCounter[b] - 1
	else
		call timer_release(t, "\n   Buff, line 60" + wurstStackTrace)
	endif
	set t = null
endfunction

function bridge_Buff_createEffect takes nothing returns nothing
	call Buff_createEffect("\n   Buff, line 51")
endfunction

function Buff_timerDestroyBuff takes string wurstStackTrace returns nothing
	call dispatch_Buff_destroyBuff(timer_getData(GetExpiredTimer(), "\n   Buff, line 34" + wurstStackTrace), "\n   Buff, line 34" + wurstStackTrace)
endfunction

function bridge_Buff_timerDestroyBuff takes nothing returns nothing
	call Buff_timerDestroyBuff("\n   Buff, line 31")
endfunction

function dispatch_CallbackCounted_call takes integer this_58, integer cb returns nothing
endfunction

function CallbackCounted_onDestroy takes integer this_58, string wurstStackTrace returns nothing
	call timer_release(CallbackCounted_t[this_58], "\n   ClosureTimers, line 127" + wurstStackTrace)
endfunction

function dealloc_CallbackCounted takes integer obj, string wurstStackTrace returns nothing
	if CallbackCounted_typeId[obj] == 0 then
		call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Double free: object of type CallbackCounted" + wurstStackTrace)
		call I2S(1 / 0)
	else
		set CallbackCounted_firstFree = CallbackCounted_firstFree + 1
		set CallbackCounted_typeId[obj] = 0
	endif
endfunction

function destroyCallbackCounted takes integer this_58, string wurstStackTrace returns nothing
	call CallbackCounted_onDestroy(this_58, "\n   ClosureTimers, line 126" + wurstStackTrace)
	call dealloc_CallbackCounted(this_58, "\n   ClosureTimers, line 126" + wurstStackTrace)
endfunction

function dispatch_CallbackCounted_destroyCallbackCounted takes integer this_58, string wurstStackTrace returns nothing
	if CallbackCounted_typeId[this_58] == 0 then
		if this_58 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling CallbackCounted.destroyCallbackCounted" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called CallbackCounted.destroyCallbackCounted on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call destroyCallbackCounted(this_58, "\n   ClosureTimers, line 96" + wurstStackTrace)
endfunction

function CallbackCounted_callAndCount takes integer this_58, string wurstStackTrace returns nothing
	call dispatch_CallbackCounted_call(this_58, this_58)
	set CallbackCounted_count[this_58] = CallbackCounted_count[this_58] - 1
	if CallbackCounted_count[this_58] <= 0 then
		call dispatch_CallbackCounted_destroyCallbackCounted(this_58, "\n   ClosureTimers, line 124" + wurstStackTrace)
	endif
endfunction

function dispatch_CallbackCounted_callAndCount takes integer this_58, string wurstStackTrace returns nothing
	if CallbackCounted_typeId[this_58] == 0 then
		if this_58 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling CallbackCounted.callAndCount" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called CallbackCounted.callAndCount on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call CallbackCounted_callAndCount(this_58, "\n   ClosureTimers, line 120" + wurstStackTrace)
endfunction

function CallbackCounted_staticCallback takes string wurstStackTrace returns nothing
	call dispatch_CallbackCounted_callAndCount(timer_getData(GetExpiredTimer(), "\n   ClosureTimers, line 118" + wurstStackTrace), "\n   ClosureTimers, line 118" + wurstStackTrace)
endfunction

function bridge_CallbackCounted_staticCallback takes nothing returns nothing
	call CallbackCounted_staticCallback("\n   ClosureTimers, line 106")
endfunction

function dispatch_CallbackPeriodic_call takes integer this_58, integer cb returns nothing
endfunction

function CallbackPeriodic_staticCallback takes string wurstStackTrace returns nothing
	local integer cb = timer_getData(GetExpiredTimer(), "\n   ClosureTimers, line 90" + wurstStackTrace)
	call dispatch_CallbackPeriodic_call(cb, cb)
endfunction

function bridge_CallbackPeriodic_staticCallback takes nothing returns nothing
	call CallbackPeriodic_staticCallback("\n   ClosureTimers, line 87")
endfunction

function closure_impl_32 takes integer this_58 returns nothing
	set Unit_spellpowerPer[this_22[this_58]] = Unit_spellpowerPer[this_22[this_58]] - amount_20[this_58]
endfunction

function closure_impl_33 takes integer this_58, string wurstStackTrace returns nothing
	set Unit_bonusLifeRegPer[this_44[this_58]] = Unit_bonusLifeRegPer[this_44[this_58]] - amount_42[this_58]
	call dispatch_Unit_updateLifeReg(this_44[this_58], "\n   UnitClass, line 835" + wurstStackTrace)
endfunction

function closure_impl_34 takes integer this_58 returns nothing
	set Unit_critchance[this_18[this_58]] = Unit_critchance[this_18[this_58]] - amount_16[this_58]
endfunction

function closure_impl_35 takes integer this_58 returns nothing
	set Unit_bonusResistance[this_28[this_58]] = Unit_bonusResistance[this_28[this_58]] - amount_26[this_58]
endfunction

function dispatch_Tooltip_showDirect takes integer this_58, player p_2, string wurstStackTrace returns nothing
	if Widget_typeId[this_58] == 0 then
		if this_58 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Tooltip.showDirect" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Tooltip.showDirect on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call Tooltip_showDirect(this_58, p_2, "\n   ToolTip, line 19" + wurstStackTrace)
endfunction

function alloc_Tooltip takes nothing returns integer
	local integer this_58
	if Widget_firstFree == 0 then
		set Widget_maxIndex = Widget_maxIndex + 1
		set this_58 = Widget_maxIndex
	else
		set Widget_firstFree = Widget_firstFree - 1
		set this_58 = Widget_nextFree[Widget_firstFree]
	endif
	set Widget_typeId[this_58] = 809
	return this_58
endfunction

function construct_Widget takes integer this_58, integer pos_x, integer pos_y, integer size_x, integer size_y returns nothing
	local integer tempIndex = this_58
	local integer tempIndex_2
	set Widget_pos[tempIndex] = pos_x
	set Widget_pos_2[tempIndex] = pos_y
	set tempIndex_2 = this_58
	set Widget_size[tempIndex_2] = size_x
	set Widget_size_2[tempIndex_2] = size_y
endfunction

function element_toVec takes integer this_x, integer this_y returns real
	set element_toVec_return_x = this_x * Setup_tileSize * 1.
	set element_toVec_return_y = this_y * Setup_tileSize * 1.
	return element_toVec_return_x
endfunction

function getTipType takes string s, string wurstStackTrace returns integer
	return dispatch_HashMap_get(ToolTipTypes_tipMap, StringHash(s), "\n   ToolTipTypes, line 39" + wurstStackTrace)
endfunction

function vec2_op_plus takes real this_x, real this_y, real v_x, real v_y returns real
	set vec2_op_plus_return_x = this_x + v_x
	set vec2_op_plus_return_y = this_y + v_y
	return vec2_op_plus_return_x
endfunction

function construct_Tooltip takes integer this_58, integer pos_x, integer pos_y, string tiptype, string wurstStackTrace returns nothing
	local integer tempIndex
	call construct_Widget(this_58, pos_x, pos_y, 10, 10)
	set Tooltip_id[this_58] = getTipType(tiptype, "\n   ToolTip, line 16" + wurstStackTrace)
	set tempIndex = this_58
	set Tooltip_realPos[tempIndex] = vec2_op_plus(element_toVec(pos_x, pos_y), element_toVec_return_y, Setup_menuStart_x, Setup_menuStart_y)
	set Tooltip_realPos_2[tempIndex] = vec2_op_plus_return_y
endfunction

function new_Tooltip takes integer pos_x, integer pos_y, string tiptype, string wurstStackTrace returns integer
	local integer this_58 = alloc_Tooltip()
	call construct_Tooltip(this_58, pos_x, pos_y, tiptype, "\n   ToolTip, line 14" + wurstStackTrace)
	return this_58
endfunction

function closure_impl_36 takes integer this_58, string wurstStackTrace returns nothing
	call dispatch_Tooltip_showDirect(new_Tooltip(30, 5, "test", "\n   GameStart, line 326" + wurstStackTrace), Player(0), "\n   GameStart, line 326" + wurstStackTrace)
endfunction

function dispatch_Hero_updateLife takes integer this_58, string wurstStackTrace returns nothing
	if Unit_typeId[this_58] == 0 then
		if this_58 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Hero.updateLife" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Hero.updateLife on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call Hero_updateLife(this_58, "\n   HeroClass, line 154" + wurstStackTrace)
endfunction

function dispatch_Hero_updateMana takes integer this_58, string wurstStackTrace returns nothing
	if Unit_typeId[this_58] == 0 then
		if this_58 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Hero.updateMana" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Hero.updateMana on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call Hero_updateMana(this_58, "\n   HeroClass, line 158" + wurstStackTrace)
endfunction

function closure_impl_37 takes integer this_58, string wurstStackTrace returns nothing
	call dispatch_Unit_updateArmor(this_53[this_58], "\n   HeroClass, line 120" + wurstStackTrace)
	call dispatch_Hero_updateLife(this_53[this_58], "\n   HeroClass, line 121" + wurstStackTrace)
	call dispatch_Hero_updateMana(this_53[this_58], "\n   HeroClass, line 122" + wurstStackTrace)
endfunction

function closure_impl_38 takes integer this_58 returns nothing
	set Unit_spellVamp[this_12[this_58]] = Unit_spellVamp[this_12[this_58]] - amount_10[this_58]
endfunction

function closure_impl_39 takes integer this_58, string wurstStackTrace returns nothing
	set Unit_bonusArmor[this_24[this_58]] = Unit_bonusArmor[this_24[this_58]] - amount_22[this_58]
	call dispatch_Unit_updateArmor(this_24[this_58], "\n   UnitClass, line 641" + wurstStackTrace)
endfunction

function closure_impl_40 takes integer this_58 returns nothing
	set Unit_bonusResistancePer[this_30[this_58]] = Unit_bonusResistancePer[this_30[this_58]] - amount_28[this_58]
endfunction

function alloc_Hero takes nothing returns integer
	local integer this_58
	if Unit_firstFree == 0 then
		set Unit_maxIndex = Unit_maxIndex + 1
		set this_58 = Unit_maxIndex
	else
		set Unit_firstFree = Unit_firstFree - 1
		set this_58 = Unit_nextFree[Unit_firstFree]
	endif
	set Unit_typeId[this_58] = 761
	return this_58
endfunction

function dispatch_Event_callActions takes integer this_58, integer d_2, string wurstStackTrace returns nothing
	if Event_typeId[this_58] == 0 then
		if this_58 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Event.callActions" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Event.callActions on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	if Event_typeId[this_58] <= 788 then
		if Event_typeId[this_58] <= 786 then
			if Event_typeId[this_58] <= 681 then
				call Event_callActions(this_58, d_2, "\n   CustomClosureEvents, line 38" + wurstStackTrace)
			else
				call Event_callActions(this_58, d_2, "\n   CustomClosureEvents, line 38" + wurstStackTrace)
			endif
		else
			call Event_callActions(this_58, d_2, "\n   CustomClosureEvents, line 38" + wurstStackTrace)
		endif
	elseif Event_typeId[this_58] <= 791 then
		call Event_callActions(this_58, d_2, "\n   CustomClosureEvents, line 38" + wurstStackTrace)
	else
		call Event_callActions(this_58, d_2, "\n   CustomClosureEvents, line 38" + wurstStackTrace)
	endif
endfunction

function hashtable_saveReal takes hashtable this_58, integer parentKey, integer childKey, real value returns nothing
	call SaveReal(this_58, parentKey, childKey, value)
endfunction

function Table_saveReal takes integer this_58, integer parentKey, real value returns nothing
	call hashtable_saveReal(Table_ht, this_58, parentKey, value)
endfunction

function dispatch_Table_saveReal takes integer this_58, integer parentKey, real value, string wurstStackTrace returns nothing
	if Table_typeId[this_58] == 0 then
		if this_58 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Table.saveReal" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Table.saveReal on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call Table_saveReal(this_58, parentKey, value)
endfunction

function UnitType_getArmor takes integer this_58 returns integer
	local integer tempIndex = this_58
	local integer temp_tempTupleSelectionResult_1 = UnitType_armor[tempIndex]
	local integer temp_tempTupleSelectionResult_2 = UnitType_armor_2[tempIndex]
	local integer tempTupleSelectionResult_1 = temp_tempTupleSelectionResult_1
	return tempTupleSelectionResult_1
endfunction

function dispatch_UnitType_getArmor takes integer this_58, string wurstStackTrace returns integer
	local integer getArmor_result
	if UnitType_typeId[this_58] == 0 then
		if this_58 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling UnitType.getArmor" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called UnitType.getArmor on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	if UnitType_typeId[this_58] <= 784 then
		set getArmor_result = UnitType_getArmor(this_58)
	else
		set getArmor_result = UnitType_getArmor(this_58)
	endif
	return getArmor_result
endfunction

function UnitType_getAttack takes integer this_58 returns integer
	local integer tempIndex = this_58
	local integer temp_tempTupleSelectionResult_1 = UnitType_attack[tempIndex]
	local integer temp_tempTupleSelectionResult_2 = UnitType_attack_2[tempIndex]
	local integer tempTupleSelectionResult_1 = temp_tempTupleSelectionResult_1
	return tempTupleSelectionResult_1
endfunction

function dispatch_UnitType_getAttack takes integer this_58, string wurstStackTrace returns integer
	local integer getAttack_result
	if UnitType_typeId[this_58] == 0 then
		if this_58 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling UnitType.getAttack" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called UnitType.getAttack on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	if UnitType_typeId[this_58] <= 784 then
		set getAttack_result = UnitType_getAttack(this_58)
	else
		set getAttack_result = UnitType_getAttack(this_58)
	endif
	return getAttack_result
endfunction

function UnitType_getBounty takes integer this_58 returns integer
	local integer tempIndex = this_58
	local integer temp_tempTupleSelectionResult_1 = UnitType_bounty[tempIndex]
	local integer temp_tempTupleSelectionResult_2 = UnitType_bounty_2[tempIndex]
	local integer tempTupleSelectionResult_1 = temp_tempTupleSelectionResult_1
	return tempTupleSelectionResult_1
endfunction

function dispatch_UnitType_getBounty takes integer this_58, string wurstStackTrace returns integer
	local integer getBounty_result
	if UnitType_typeId[this_58] == 0 then
		if this_58 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling UnitType.getBounty" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called UnitType.getBounty on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	if UnitType_typeId[this_58] <= 784 then
		set getBounty_result = UnitType_getBounty(this_58)
	else
		set getBounty_result = UnitType_getBounty(this_58)
	endif
	return getBounty_result
endfunction

function UnitType_getHeight takes integer this_58 returns real
	local integer tempIndex = this_58
	local real temp_tempTupleSelectionResult_1 = UnitType_height[tempIndex]
	local integer temp_tempTupleSelectionResult_2 = UnitType_height_2[tempIndex]
	local real tempTupleSelectionResult_1 = temp_tempTupleSelectionResult_1
	return tempTupleSelectionResult_1
endfunction

function dispatch_UnitType_getHeight takes integer this_58, string wurstStackTrace returns real
	local real getHeight_result
	if UnitType_typeId[this_58] == 0 then
		if this_58 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling UnitType.getHeight" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called UnitType.getHeight on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	if UnitType_typeId[this_58] <= 784 then
		set getHeight_result = UnitType_getHeight(this_58)
	else
		set getHeight_result = UnitType_getHeight(this_58)
	endif
	return getHeight_result
endfunction

function UnitType_getMass takes integer this_58 returns real
	local integer tempIndex = this_58
	local real temp_tempTupleSelectionResult_1 = UnitType_mass[tempIndex]
	local integer temp_tempTupleSelectionResult_2 = UnitType_mass_2[tempIndex]
	local real tempTupleSelectionResult_1 = temp_tempTupleSelectionResult_1
	return tempTupleSelectionResult_1
endfunction

function dispatch_UnitType_getMass takes integer this_58, string wurstStackTrace returns real
	local real getMass_result
	if UnitType_typeId[this_58] == 0 then
		if this_58 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling UnitType.getMass" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called UnitType.getMass on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	if UnitType_typeId[this_58] <= 784 then
		set getMass_result = UnitType_getMass(this_58)
	else
		set getMass_result = UnitType_getMass(this_58)
	endif
	return getMass_result
endfunction

function UnitType_getRadius takes integer this_58 returns real
	local integer tempIndex = this_58
	local real temp_tempTupleSelectionResult_1 = UnitType_radius[tempIndex]
	local integer temp_tempTupleSelectionResult_2 = UnitType_radius_2[tempIndex]
	local real tempTupleSelectionResult_1 = temp_tempTupleSelectionResult_1
	return tempTupleSelectionResult_1
endfunction

function dispatch_UnitType_getRadius takes integer this_58, string wurstStackTrace returns real
	local real getRadius_result
	if UnitType_typeId[this_58] == 0 then
		if this_58 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling UnitType.getRadius" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called UnitType.getRadius on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	if UnitType_typeId[this_58] <= 784 then
		set getRadius_result = UnitType_getRadius(this_58)
	else
		set getRadius_result = UnitType_getRadius(this_58)
	endif
	return getRadius_result
endfunction

function item_setPos takes item this_58, real pos_x, real pos_y returns nothing
	call SetItemPosition(this_58, pos_x, pos_y)
endfunction

function Unit_addAttack takes integer this_58, real amount_51 returns nothing
	local integer bonus
	local integer statHelper
	local integer i
	local integer i_2
	set Unit_attack[this_58] = Unit_attack[this_58] + amount_51
	set bonus = 256
	set statHelper = roundReal(amount_51)
	call unit_addAbility(Unit_u[this_58], 1097427054)
	if statHelper >= 0 then
		set i = 8
		loop
			exitwhen i < 0
			if statHelper >= bonus then
				call UnitAddItem(Unit_u[this_58], Setup_permAttackTome[i])
				call item_setPos(Setup_permAttackTome[i], Setup_recycleGraveyard_x, Setup_recycleGraveyard_y)
				set statHelper = statHelper - bonus
			endif
			set bonus = bonus / 2
			set i = i - 1
		endloop
	else
		set bonus = -256
		set i_2 = 8
		loop
			exitwhen i_2 < 0
			if statHelper >= bonus then
				call UnitAddItem(Unit_u[this_58], Setup_permAttackTome[i_2])
				call item_setPos(Setup_permAttackTome[i_2], Setup_recycleGraveyard_x, Setup_recycleGraveyard_y)
			else
				set statHelper = statHelper - bonus
			endif
			set bonus = bonus / 2
			set i_2 = i_2 - 1
		endloop
		call UnitAddItem(Unit_u[this_58], Setup_permAttackNegTome)
	endif
	call unit_removeAbility(Unit_u[this_58], 1097427054)
endfunction

function Hero_addAttack takes integer this_58, real amount_51 returns nothing
	set Hero_attackBuffer[this_58] = Hero_attackBuffer[this_58] + roundReal(5.)
	call Unit_addAttack(this_58, amount_51)
endfunction

function dispatch_Unit_addAttack takes integer this_58, real amount_51, string wurstStackTrace returns nothing
	if Unit_typeId[this_58] == 0 then
		if this_58 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Unit.addAttack" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Unit.addAttack on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	if Unit_typeId[this_58] <= 709 then
		call Unit_addAttack(this_58, amount_51)
	else
		call Hero_addAttack(this_58, amount_51)
	endif
endfunction

function getUnitType takes string name, string wurstStackTrace returns integer
	return dispatch_HashMap_get(UnitTypes_unitTypes, StringHash(name), "\n   UnitTypes, line 35" + wurstStackTrace)
endfunction

function int_toString takes integer this_58 returns string
	return I2S(this_58)
endfunction

function multiboard_getItem takes multiboard this_58, integer row, integer column returns multiboarditem
	return MultiboardGetItem(this_58, row, column)
endfunction

function multiboarditem_release takes multiboarditem this_58 returns nothing
	call MultiboardReleaseItem(this_58)
endfunction

function multiboarditem_setValue takes multiboarditem this_58, string value returns nothing
	call MultiboardSetItemValue(this_58, value)
endfunction

function alloc_LinkedList takes nothing returns integer
	local integer this_58
	if LinkedList_firstFree == 0 then
		set LinkedList_maxIndex = LinkedList_maxIndex + 1
		set this_58 = LinkedList_maxIndex
	else
		set LinkedList_firstFree = LinkedList_firstFree - 1
		set this_58 = LinkedList_nextFree[LinkedList_firstFree]
	endif
	set LinkedList_typeId[this_58] = 2
	return this_58
endfunction

function construct_LinkedList takes integer this_58 returns nothing
	set LinkedList_size[this_58] = 0
	set LinkedList_dummy[this_58] = new_LLEntry(0, 0, 0)
	set LLEntry_next[LinkedList_dummy[this_58]] = LinkedList_dummy[this_58]
	set LLEntry_prev[LinkedList_dummy[this_58]] = LinkedList_dummy[this_58]
endfunction

function new_LinkedList takes nothing returns integer
	local integer this_58 = alloc_LinkedList()
	call construct_LinkedList(this_58)
	return this_58
endfunction

function alloc_ShieldList takes nothing returns integer
	local integer this_58
	if ShieldList_firstFree == 0 then
		set ShieldList_maxIndex = ShieldList_maxIndex + 1
		set this_58 = ShieldList_maxIndex
	else
		set ShieldList_firstFree = ShieldList_firstFree - 1
		set this_58 = ShieldList_nextFree[ShieldList_firstFree]
	endif
	set ShieldList_typeId[this_58] = 691
	return this_58
endfunction

function construct_ShieldList takes integer this_58 returns nothing
	set ShieldList_first[this_58] = 0
	set ShieldList_last[this_58] = 0
	set ShieldList_shieldSum[this_58] = 0.
endfunction

function new_ShieldList takes nothing returns integer
	local integer this_58 = alloc_ShieldList()
	call construct_ShieldList(this_58)
	return this_58
endfunction

function alloc_Table takes nothing returns integer
	local integer this_58
	if Table_firstFree == 0 then
		set Table_maxIndex = Table_maxIndex + 1
		set this_58 = Table_maxIndex
	else
		set Table_firstFree = Table_firstFree - 1
		set this_58 = Table_nextFree[Table_firstFree]
	endif
	set Table_typeId[this_58] = 1
	return this_58
endfunction

function construct_Table takes integer this_58 returns nothing
endfunction

function new_Table takes nothing returns integer
	local integer this_58 = alloc_Table()
	call construct_Table(this_58)
	return this_58
endfunction

function trigger_registerUnitEvent takes trigger this_58, unit whichUnit, unitevent whichEvent returns nothing
	call TriggerRegisterUnitEvent(this_58, whichUnit, whichEvent)
endfunction

function unit_getMoveSpeed takes unit this_58 returns real
	return GetUnitMoveSpeed(this_58)
endfunction

function construct_Unit takes integer this_58, string typName, real pos_x, real pos_y, player owner, string wurstStackTrace returns nothing
	local multiboarditem mbi
	local multiboarditem receiver
	local integer i
	set Unit_attack[this_58] = 0.
	set Unit_bonusAttack[this_58] = 0.
	set Unit_bonusAttackPer[this_58] = 0.
	set Unit_armor[this_58] = 0.
	set Unit_bonusArmor[this_58] = 0.
	set Unit_bonusArmorPer[this_58] = 0.
	set Unit_life[this_58] = 0.
	set Unit_bonusLife[this_58] = 0.
	set Unit_bonusLifePer[this_58] = 0.
	set Unit_mana[this_58] = 0.
	set Unit_bonusMana[this_58] = 0.
	set Unit_bonusManaPer[this_58] = 0.
	set Unit_lifeReg[this_58] = 0.
	set Unit_bonusLifeReg[this_58] = 0.
	set Unit_bonusLifeRegPer[this_58] = 0.
	set Unit_manaReg[this_58] = 0.
	set Unit_bonusManaReg[this_58] = 0.
	set Unit_bonusManaRegPer[this_58] = 0.
	set Unit_bonusAttackspeed[this_58] = 0.
	set Unit_spellpower[this_58] = 0.
	set Unit_spellpowerPer[this_58] = 0.
	set Unit_movespeed[this_58] = 0.
	set Unit_bonusMovespeed[this_58] = 0.
	set Unit_bonusMovespeedPer[this_58] = 0.
	set Unit_magicReduction[this_58] = 0.
	set Unit_normalReduction[this_58] = 0.
	set Unit_bonusResistance[this_58] = 0.
	set Unit_bonusResistancePer[this_58] = 0.
	set Unit_hitchance[this_58] = 97.
	set Unit_evade[this_58] = 3.
	set Unit_critchance[this_58] = 5.
	set Unit_critdamage[this_58] = 0.
	set Unit_bonusDamage[this_58] = 0.
	set Unit_normalDeflection[this_58] = 0.
	set Unit_lifesteal[this_58] = 0.
	set Unit_spellVamp[this_58] = 0.
	set Unit_vunerableCount[this_58] = 0
	set Unit_vunerable[this_58] = true
	set Unit_lastHeroDamager[this_58] = 0
	set Unit_mass[this_58] = 0.
	set Unit_radius[this_58] = 0.
	set Unit_height[this_58] = 0.
	set Unit_lastKnocker[this_58] = 0
	set Unit_lastCollision[this_58] = 0
	set Unit_hasKnockback[this_58] = false
	set Unit_isHero[this_58] = false
	set Unit_isDead[this_58] = false
	set Unit_bounty[this_58] = 0
	set Unit_ownerId[this_58] = 0
	set Unit_owner[this_58] = null
	set Unit_systemDamage[this_58] = 0.
	set Unit_totalDamage[this_58] = 0.
	set Unit_playerDamage[this_58] = new_Table()
	set Unit_allDots[this_58] = new_LinkedList()
	set Unit_allBuffs[this_58] = new_LinkedList()
	set Unit_takeHitPre[this_58] = 0
	set Unit_takeHitOn[this_58] = 0
	set Unit_causeHitPre[this_58] = 0
	set Unit_causeHitOn[this_58] = 0
	set Unit_takeCritHitOn[this_58] = 0
	set Unit_causeCritHitOn[this_58] = 0
	set Unit_onDodge[this_58] = 0
	set Unit_onMiss[this_58] = 0
	set Unit_onDeath[this_58] = 0
	set Unit_causeDeath[this_58] = 0
	set InstanceBoard_count[ShowInstances_classId_3] = InstanceBoard_count[ShowInstances_classId_3] + 1
	set mbi = multiboard_getItem(InstanceBoard_mb, ShowInstances_classId_3, 1)
	set receiver = mbi
	call multiboarditem_setValue(receiver, int_toString(InstanceBoard_count[ShowInstances_classId_3]))
	call multiboarditem_release(receiver)
	call dispatch_Event_callActions(CreationEvent_create, this_58, "\n   CreationEvent, line 18" + wurstStackTrace)
	set Unit_typ[this_58] = getUnitType(typName, "\n   UnitClass, line 142" + wurstStackTrace)
	if player_getId(owner) > 5 then
		set Unit_team[this_58] = 0
	else
		set Unit_team[this_58] = 1
	endif
	set Unit_u[this_58] = CreateUnit(owner, UnitType_id[Unit_typ[this_58]], pos_x, pos_y, 0.)
	set Unit_mass[this_58] = dispatch_UnitType_getMass(Unit_typ[this_58], "\n   UnitClass, line 148" + wurstStackTrace)
	set Unit_attack[this_58] = dispatch_UnitType_getAttack(Unit_typ[this_58], "\n   UnitClass, line 149" + wurstStackTrace) * 1.
	set Unit_radius[this_58] = dispatch_UnitType_getRadius(Unit_typ[this_58], "\n   UnitClass, line 150" + wurstStackTrace)
	set Unit_height[this_58] = dispatch_UnitType_getHeight(Unit_typ[this_58], "\n   UnitClass, line 151" + wurstStackTrace)
	set Unit_bounty[this_58] = dispatch_UnitType_getBounty(Unit_typ[this_58], "\n   UnitClass, line 152" + wurstStackTrace)
	set Unit_ownerId[this_58] = player_getId(owner)
	set Unit_owner[this_58] = owner
	set Unit_life[this_58] = unit_getState(Unit_u[this_58], UNIT_STATE_MAX_LIFE)
	set Unit_mana[this_58] = unit_getState(Unit_u[this_58], UNIT_STATE_MAX_MANA)
	set Unit_movespeed[this_58] = unit_getMoveSpeed(Unit_u[this_58])
	set Unit_armor[this_58] = dispatch_UnitType_getArmor(Unit_typ[this_58], "\n   UnitClass, line 158" + wurstStackTrace) * 1.
	call trigger_registerUnitEvent(Unit_damageDetect, Unit_u[this_58], EVENT_UNIT_DAMAGED)
	call SetUnitUserData(Unit_u[this_58], this_58)
	set UnitClass_last = this_58
	set Unit_shieldList[this_58] = new_ShieldList()
	call dispatch_Unit_addAttack(this_58, dispatch_UnitType_getAttack(Unit_typ[this_58], "\n   UnitClass, line 163" + wurstStackTrace) * 1., "\n   UnitClass, line 163" + wurstStackTrace)
	set i = 0
	loop
		exitwhen i > 11
		call dispatch_Table_saveReal(Unit_playerDamage[this_58], i, 0., "\n   UnitClass, line 165" + wurstStackTrace)
		set i = i + 1
	endloop
	set mbi = null
	set receiver = null
endfunction

function alloc_Bar takes nothing returns integer
	local integer this_58
	if Bar_firstFree == 0 then
		set Bar_maxIndex = Bar_maxIndex + 1
		set this_58 = Bar_maxIndex
	else
		set Bar_firstFree = Bar_firstFree - 1
		set this_58 = Bar_nextFree[Bar_firstFree]
	endif
	set Bar_typeId[this_58] = 693
	return this_58
endfunction

function texttag_setColor takes texttag this_58, integer col_red, integer col_green, integer col_blue, integer col_alpha returns nothing
	call SetTextTagColor(this_58, col_red, col_green, col_blue, col_alpha)
endfunction

function construct_Bar takes integer this_58, integer h, string wurstStackTrace returns nothing
	set Bar_isVisible[this_58] = true
	set Bar_check[this_58] = true
	set LinkedListModule_size_2 = LinkedListModule_size_2 + 1
	if LinkedListModule_size_2 == 1 then
		set LinkedListModule_first_2 = this_58
	else
		set LinkedListModule_next_2[LinkedListModule_last_2] = this_58
	endif
	set LinkedListModule_next_2[this_58] = 0
	set LinkedListModule_last_2 = this_58
	set Bar_owner[this_58] = h
	set Bar_tt[this_58] = CreateTextTag()
	call texttag_setPos(Bar_tt[this_58], dispatch_Hero_getBarPos(h, "\n   HeroBar, line 41" + wurstStackTrace), dispatch_Hero_getBarPos_return_y, dispatch_Hero_getBarPos_return_z)
	call texttag_setColor(Bar_tt[this_58], 0, 200, 0, 255)
	call dispatch_Bar_updateEx(this_58, "\n   HeroBar, line 43" + wurstStackTrace)
endfunction

function new_Bar takes integer h, string wurstStackTrace returns integer
	local integer this_58 = alloc_Bar()
	call construct_Bar(this_58, h, "\n   HeroBar, line 38" + wurstStackTrace)
	return this_58
endfunction

function alloc_HashMap takes nothing returns integer
	local integer this_58
	if HashMap_firstFree == 0 then
		set HashMap_maxIndex = HashMap_maxIndex + 1
		set this_58 = HashMap_maxIndex
	else
		set HashMap_firstFree = HashMap_firstFree - 1
		set this_58 = HashMap_nextFree[HashMap_firstFree]
	endif
	set HashMap_typeId[this_58] = 662
	return this_58
endfunction

function construct_HashMap takes integer this_58 returns nothing
endfunction

function new_HashMap takes nothing returns integer
	local integer this_58 = alloc_HashMap()
	call construct_HashMap(this_58)
	return this_58
endfunction

function alloc_Queue takes nothing returns integer
	local integer this_58
	if Queue_firstFree == 0 then
		set Queue_maxIndex = Queue_maxIndex + 1
		set this_58 = Queue_maxIndex
	else
		set Queue_firstFree = Queue_firstFree - 1
		set this_58 = Queue_nextFree[Queue_firstFree]
	endif
	set Queue_typeId[this_58] = 695
	return this_58
endfunction

function alloc_SEntry_2 takes nothing returns integer
	local integer this_58
	if SEntry_firstFree == 0 then
		set SEntry_maxIndex = SEntry_maxIndex + 1
		set this_58 = SEntry_maxIndex
	else
		set SEntry_firstFree = SEntry_firstFree - 1
		set this_58 = SEntry_nextFree[SEntry_firstFree]
	endif
	return this_58
endfunction

function construct_SEntry_2 takes integer this_58, integer elem, integer next returns nothing
	set SEntry_elem[this_58] = elem
	set SEntry_next[this_58] = next
endfunction

function new_SEntry_2 takes integer elem, integer next returns integer
	local integer this_58 = alloc_SEntry_2()
	call construct_SEntry_2(this_58, elem, next)
	return this_58
endfunction

function construct_Queue takes integer this_58 returns nothing
	set Queue_size[this_58] = 0
	set Queue_dummy[this_58] = new_SEntry_2(0, 0)
	set Queue_front[this_58] = Queue_dummy[this_58]
	set Queue_back[this_58] = Queue_dummy[this_58]
endfunction

function new_Queue takes nothing returns integer
	local integer this_58 = alloc_Queue()
	call construct_Queue(this_58)
	return this_58
endfunction

function real_asAngleDegrees takes real this_58 returns real
	return this_58 * Maths_DEGTORAD
endfunction

function construct_Hero takes integer this_58, string name, real pos_x, real pos_y, player p_2, string wurstStackTrace returns nothing
	call construct_Unit(this_58, name, pos_x, pos_y, p_2, "\n   HeroClass, line 69" + wurstStackTrace)
	set Hero_attackBuffer[this_58] = 0
	set Hero_channelCancel[this_58] = 0
	set Hero_animationIndex[this_58] = 0
	call real_asAngleDegrees(0.)
	set Hero_enableAbility[this_58] = new_HashMap()
	set Hero_acceptOrders[this_58] = true
	set Hero_mainOrder[this_58] = 0
	set Hero_lastOrdered[this_58] = 0
	set Hero_castQueue[this_58] = new_Queue()
	set Hero_spellQ[this_58] = 0
	set Hero_spellW[this_58] = 0
	set Hero_spellE[this_58] = 0
	set Hero_spellR[this_58] = 0
	set Hero_spellD[this_58] = 0
	set Hero_spellF[this_58] = 0
	set LinkedListModule_size_3 = LinkedListModule_size_3 + 1
	if LinkedListModule_size_3 == 1 then
		set LinkedListModule_first_3 = this_58
	endif
	set LinkedListModule_last_3 = this_58
	set Hero_morphAbi[this_58] = Hero_morphAbi[this_58]
	set Hero_hb[this_58] = new_Bar(this_58, "\n   HeroClass, line 72" + wurstStackTrace)
	set Unit_isHero[this_58] = true
	call trigger_registerUnitEvent(Hero_castDetect, Unit_u[this_58], EVENT_UNIT_SPELL_CAST)
endfunction

function new_Hero takes string name, real pos_x, real pos_y, player p_2, string wurstStackTrace returns integer
	local integer this_58 = alloc_Hero()
	call construct_Hero(this_58, name, pos_x, pos_y, p_2, "\n   HeroClass, line 69" + wurstStackTrace)
	return this_58
endfunction

function closure_impl_41 takes integer this_58, string wurstStackTrace returns nothing
	local integer i = 1
	loop
		exitwhen i > 20
		call new_Hero("testhero", 0., 0., Player(0), "\n   GameStart, line 98" + wurstStackTrace)
		set i = i + 1
	endloop
endfunction

function HeroType_setHeroProperName takes integer this_58, string name returns nothing
	local integer tempIndex = this_58
	set HeroType_properName[tempIndex] = name
	set HeroType_properName_2[tempIndex] = 5
endfunction

function dispatch_HeroType_setHeroProperName takes integer this_58, string name, string wurstStackTrace returns nothing
	if UnitType_typeId[this_58] == 0 then
		if this_58 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling HeroType.setHeroProperName" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called HeroType.setHeroProperName on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call HeroType_setHeroProperName(this_58, name)
endfunction

function UnitType_setArmor takes integer this_58, integer data returns nothing
	local integer tempIndex = this_58
	set UnitType_armor[tempIndex] = data
	set UnitType_armor_2[tempIndex] = 5
endfunction

function dispatch_UnitType_setArmor takes integer this_58, integer data, string wurstStackTrace returns nothing
	if UnitType_typeId[this_58] == 0 then
		if this_58 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling UnitType.setArmor" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called UnitType.setArmor on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	if UnitType_typeId[this_58] <= 784 then
		call UnitType_setArmor(this_58, data)
	else
		call UnitType_setArmor(this_58, data)
	endif
endfunction

function UnitType_setArmorSoundType takes integer this_58, integer data returns nothing
	local integer tempIndex = this_58
	set UnitType_armorType[tempIndex] = data
	set UnitType_armorType_2[tempIndex] = 5
endfunction

function dispatch_UnitType_setArmorSoundType takes integer this_58, integer data, string wurstStackTrace returns nothing
	if UnitType_typeId[this_58] == 0 then
		if this_58 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling UnitType.setArmorSoundType" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called UnitType.setArmorSoundType on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	if UnitType_typeId[this_58] <= 784 then
		call UnitType_setArmorSoundType(this_58, data)
	else
		call UnitType_setArmorSoundType(this_58, data)
	endif
endfunction

function UnitType_setAttack takes integer this_58, integer data returns nothing
	local integer tempIndex = this_58
	set UnitType_attack[tempIndex] = data
	set UnitType_attack_2[tempIndex] = 5
endfunction

function dispatch_UnitType_setAttack takes integer this_58, integer data, string wurstStackTrace returns nothing
	if UnitType_typeId[this_58] == 0 then
		if this_58 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling UnitType.setAttack" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called UnitType.setAttack on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	if UnitType_typeId[this_58] <= 784 then
		call UnitType_setAttack(this_58, data)
	else
		call UnitType_setAttack(this_58, data)
	endif
endfunction

function UnitType_setAttackBackSwingPoint takes integer this_58, real data returns nothing
	local integer tempIndex = this_58
	set UnitType_attackBackswingPoint[tempIndex] = data
	set UnitType_attackBackswingPoint_2[tempIndex] = 5
endfunction

function dispatch_UnitType_setAttackBackSwingPoint takes integer this_58, real data, string wurstStackTrace returns nothing
	if UnitType_typeId[this_58] == 0 then
		if this_58 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling UnitType.setAttackBackSwingPoint" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called UnitType.setAttackBackSwingPoint on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	if UnitType_typeId[this_58] <= 784 then
		call UnitType_setAttackBackSwingPoint(this_58, data)
	else
		call UnitType_setAttackBackSwingPoint(this_58, data)
	endif
endfunction

function UnitType_setAttackDamagePoint takes integer this_58, real data returns nothing
	local integer tempIndex = this_58
	set UnitType_attackDamagePoint[tempIndex] = data
	set UnitType_attackDamagePoint_2[tempIndex] = 5
endfunction

function dispatch_UnitType_setAttackDamagePoint takes integer this_58, real data, string wurstStackTrace returns nothing
	if UnitType_typeId[this_58] == 0 then
		if this_58 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling UnitType.setAttackDamagePoint" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called UnitType.setAttackDamagePoint on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	if UnitType_typeId[this_58] <= 784 then
		call UnitType_setAttackDamagePoint(this_58, data)
	else
		call UnitType_setAttackDamagePoint(this_58, data)
	endif
endfunction

function UnitType_setAttackRange takes integer this_58, integer data returns nothing
	local integer tempIndex = this_58
	set UnitType_attackRange[tempIndex] = data
	set UnitType_attackRange_2[tempIndex] = 5
endfunction

function dispatch_UnitType_setAttackRange takes integer this_58, integer data, string wurstStackTrace returns nothing
	if UnitType_typeId[this_58] == 0 then
		if this_58 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling UnitType.setAttackRange" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called UnitType.setAttackRange on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	if UnitType_typeId[this_58] <= 784 then
		call UnitType_setAttackRange(this_58, data)
	else
		call UnitType_setAttackRange(this_58, data)
	endif
endfunction

function UnitType_setAttackRangeBuffer takes integer this_58, real data returns nothing
	local integer tempIndex = this_58
endfunction

function dispatch_UnitType_setAttackRangeBuffer takes integer this_58, real data, string wurstStackTrace returns nothing
	if UnitType_typeId[this_58] == 0 then
		if this_58 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling UnitType.setAttackRangeBuffer" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called UnitType.setAttackRangeBuffer on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	if UnitType_typeId[this_58] <= 784 then
		call UnitType_setAttackRangeBuffer(this_58, data)
	else
		call UnitType_setAttackRangeBuffer(this_58, data)
	endif
endfunction

function UnitType_setBounty takes integer this_58, integer data returns nothing
	local integer tempIndex = this_58
	set UnitType_bounty[tempIndex] = data
	set UnitType_bounty_2[tempIndex] = 5
endfunction

function dispatch_UnitType_setBounty takes integer this_58, integer data, string wurstStackTrace returns nothing
	if UnitType_typeId[this_58] == 0 then
		if this_58 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling UnitType.setBounty" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called UnitType.setBounty on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	if UnitType_typeId[this_58] <= 784 then
		call UnitType_setBounty(this_58, data)
	else
		call UnitType_setBounty(this_58, data)
	endif
endfunction

function UnitType_setCollisionSize takes integer this_58, real data returns nothing
	local integer tempIndex = this_58
	set UnitType_collisionSize[tempIndex] = data
	set UnitType_collisionSize_2[tempIndex] = 5
endfunction

function dispatch_UnitType_setCollisionSize takes integer this_58, real data, string wurstStackTrace returns nothing
	if UnitType_typeId[this_58] == 0 then
		if this_58 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling UnitType.setCollisionSize" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called UnitType.setCollisionSize on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	if UnitType_typeId[this_58] <= 784 then
		call UnitType_setCollisionSize(this_58, data)
	else
		call UnitType_setCollisionSize(this_58, data)
	endif
endfunction

function UnitType_setHeight takes integer this_58, real data returns nothing
	local integer tempIndex = this_58
	set UnitType_height[tempIndex] = data
	set UnitType_height_2[tempIndex] = 5
endfunction

function dispatch_UnitType_setHeight takes integer this_58, real data, string wurstStackTrace returns nothing
	if UnitType_typeId[this_58] == 0 then
		if this_58 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling UnitType.setHeight" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called UnitType.setHeight on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	if UnitType_typeId[this_58] <= 784 then
		call UnitType_setHeight(this_58, data)
	else
		call UnitType_setHeight(this_58, data)
	endif
endfunction

function UnitType_setIcon takes integer this_58, string data returns nothing
	local integer tempIndex = this_58
	set UnitType_icon[tempIndex] = data
	set UnitType_icon_2[tempIndex] = 5
endfunction

function dispatch_UnitType_setIcon takes integer this_58, string data, string wurstStackTrace returns nothing
	if UnitType_typeId[this_58] == 0 then
		if this_58 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling UnitType.setIcon" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called UnitType.setIcon on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	if UnitType_typeId[this_58] <= 784 then
		call UnitType_setIcon(this_58, data)
	else
		call UnitType_setIcon(this_58, data)
	endif
endfunction

function UnitType_setIsRanged takes integer this_58, boolean data returns nothing
	local integer tempIndex = this_58
	set UnitType_ranged[tempIndex] = data
	set UnitType_ranged_2[tempIndex] = 5
endfunction

function dispatch_UnitType_setIsRanged takes integer this_58, boolean data, string wurstStackTrace returns nothing
	if UnitType_typeId[this_58] == 0 then
		if this_58 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling UnitType.setIsRanged" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called UnitType.setIsRanged on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	if UnitType_typeId[this_58] <= 784 then
		call UnitType_setIsRanged(this_58, data)
	else
		call UnitType_setIsRanged(this_58, data)
	endif
endfunction

function UnitType_setLife takes integer this_58, integer data returns nothing
	local integer tempIndex = this_58
	set UnitType_life[tempIndex] = data
	set UnitType_life_2[tempIndex] = 5
endfunction

function dispatch_UnitType_setLife takes integer this_58, integer data, string wurstStackTrace returns nothing
	if UnitType_typeId[this_58] == 0 then
		if this_58 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling UnitType.setLife" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called UnitType.setLife on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	if UnitType_typeId[this_58] <= 784 then
		call UnitType_setLife(this_58, data)
	else
		call UnitType_setLife(this_58, data)
	endif
endfunction

function UnitType_setMana takes integer this_58, integer data returns nothing
	local integer tempIndex = this_58
	set UnitType_mana[tempIndex] = data
	set UnitType_mana_2[tempIndex] = 5
endfunction

function dispatch_UnitType_setMana takes integer this_58, integer data, string wurstStackTrace returns nothing
	if UnitType_typeId[this_58] == 0 then
		if this_58 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling UnitType.setMana" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called UnitType.setMana on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	if UnitType_typeId[this_58] <= 784 then
		call UnitType_setMana(this_58, data)
	else
		call UnitType_setMana(this_58, data)
	endif
endfunction

function UnitType_setMass takes integer this_58, real data returns nothing
	local integer tempIndex = this_58
	set UnitType_mass[tempIndex] = data
	set UnitType_mass_2[tempIndex] = 5
endfunction

function dispatch_UnitType_setMass takes integer this_58, real data, string wurstStackTrace returns nothing
	if UnitType_typeId[this_58] == 0 then
		if this_58 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling UnitType.setMass" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called UnitType.setMass on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	if UnitType_typeId[this_58] <= 784 then
		call UnitType_setMass(this_58, data)
	else
		call UnitType_setMass(this_58, data)
	endif
endfunction

function UnitType_setModel takes integer this_58, string data returns nothing
	local integer tempIndex = this_58
	set UnitType_model[tempIndex] = data
	set UnitType_model_2[tempIndex] = 5
endfunction

function dispatch_UnitType_setModel takes integer this_58, string data, string wurstStackTrace returns nothing
	if UnitType_typeId[this_58] == 0 then
		if this_58 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling UnitType.setModel" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called UnitType.setModel on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	if UnitType_typeId[this_58] <= 784 then
		call UnitType_setModel(this_58, data)
	else
		call UnitType_setModel(this_58, data)
	endif
endfunction

function UnitType_setName takes integer this_58, string data returns nothing
	local integer tempIndex = this_58
	set UnitType_name[tempIndex] = data
	set UnitType_name_2[tempIndex] = 5
endfunction

function dispatch_UnitType_setName takes integer this_58, string data, string wurstStackTrace returns nothing
	if UnitType_typeId[this_58] == 0 then
		if this_58 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling UnitType.setName" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called UnitType.setName on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	if UnitType_typeId[this_58] <= 784 then
		call UnitType_setName(this_58, data)
	else
		call UnitType_setName(this_58, data)
	endif
endfunction

function UnitType_setRadius takes integer this_58, real data returns nothing
	local integer tempIndex = this_58
	set UnitType_radius[tempIndex] = data
	set UnitType_radius_2[tempIndex] = 5
endfunction

function dispatch_UnitType_setRadius takes integer this_58, real data, string wurstStackTrace returns nothing
	if UnitType_typeId[this_58] == 0 then
		if this_58 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling UnitType.setRadius" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called UnitType.setRadius on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	if UnitType_typeId[this_58] <= 784 then
		call UnitType_setRadius(this_58, data)
	else
		call UnitType_setRadius(this_58, data)
	endif
endfunction

function UnitType_setRunspeed takes integer this_58, real data returns nothing
	local integer tempIndex = this_58
	set UnitType_runSpeed[tempIndex] = data
	set UnitType_runSpeed_2[tempIndex] = 5
endfunction

function dispatch_UnitType_setRunspeed takes integer this_58, real data, string wurstStackTrace returns nothing
	if UnitType_typeId[this_58] == 0 then
		if this_58 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling UnitType.setRunspeed" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called UnitType.setRunspeed on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	if UnitType_typeId[this_58] <= 784 then
		call UnitType_setRunspeed(this_58, data)
	else
		call UnitType_setRunspeed(this_58, data)
	endif
endfunction

function UnitType_setScale takes integer this_58, real data returns nothing
	local integer tempIndex = this_58
	set UnitType_scale[tempIndex] = data
	set UnitType_scale_2[tempIndex] = 5
endfunction

function dispatch_UnitType_setScale takes integer this_58, real data, string wurstStackTrace returns nothing
	if UnitType_typeId[this_58] == 0 then
		if this_58 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling UnitType.setScale" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called UnitType.setScale on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	if UnitType_typeId[this_58] <= 784 then
		call UnitType_setScale(this_58, data)
	else
		call UnitType_setScale(this_58, data)
	endif
endfunction

function UnitType_setSelectionRadius takes integer this_58, real data returns nothing
	local integer tempIndex = this_58
	set UnitType_selectionRadius[tempIndex] = data
	set UnitType_selectionRadius_2[tempIndex] = 5
endfunction

function dispatch_UnitType_setSelectionRadius takes integer this_58, real data, string wurstStackTrace returns nothing
	if UnitType_typeId[this_58] == 0 then
		if this_58 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling UnitType.setSelectionRadius" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called UnitType.setSelectionRadius on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	if UnitType_typeId[this_58] <= 784 then
		call UnitType_setSelectionRadius(this_58, data)
	else
		call UnitType_setSelectionRadius(this_58, data)
	endif
endfunction

function UnitType_setShaddowPos takes integer this_58, real data_x, real data_y returns nothing
	local integer tempIndex = this_58
	set UnitType_shaddowPosFix_x[tempIndex] = data_x
	set UnitType_shaddowPosFix_y[tempIndex] = data_y
	set UnitType_shaddowPosFix[tempIndex] = 5
endfunction

function dispatch_UnitType_setShaddowPos takes integer this_58, real data_x, real data_y, string wurstStackTrace returns nothing
	if UnitType_typeId[this_58] == 0 then
		if this_58 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling UnitType.setShaddowPos" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called UnitType.setShaddowPos on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	if UnitType_typeId[this_58] <= 784 then
		call UnitType_setShaddowPos(this_58, data_x, data_y)
	else
		call UnitType_setShaddowPos(this_58, data_x, data_y)
	endif
endfunction

function UnitType_setShaddowSize takes integer this_58, real data_x, real data_y returns nothing
	local integer tempIndex = this_58
	set UnitType_shaddowSize_x[tempIndex] = data_x
	set UnitType_shaddowSize_y[tempIndex] = data_y
	set UnitType_shaddowSize[tempIndex] = 5
endfunction

function dispatch_UnitType_setShaddowSize takes integer this_58, real data_x, real data_y, string wurstStackTrace returns nothing
	if UnitType_typeId[this_58] == 0 then
		if this_58 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling UnitType.setShaddowSize" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called UnitType.setShaddowSize on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	if UnitType_typeId[this_58] <= 784 then
		call UnitType_setShaddowSize(this_58, data_x, data_y)
	else
		call UnitType_setShaddowSize(this_58, data_x, data_y)
	endif
endfunction

function UnitType_setSoundSet takes integer this_58, string data returns nothing
	local integer tempIndex = this_58
	set UnitType_soundSet[tempIndex] = data
	set UnitType_soundSet_2[tempIndex] = 5
endfunction

function dispatch_UnitType_setSoundSet takes integer this_58, string data, string wurstStackTrace returns nothing
	if UnitType_typeId[this_58] == 0 then
		if this_58 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling UnitType.setSoundSet" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called UnitType.setSoundSet on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	if UnitType_typeId[this_58] <= 784 then
		call UnitType_setSoundSet(this_58, data)
	else
		call UnitType_setSoundSet(this_58, data)
	endif
endfunction

function UnitType_setTier takes integer this_58, integer data returns nothing
	local integer tempIndex = this_58
	set UnitType_mana[tempIndex] = data
	set UnitType_mana_2[tempIndex] = 5
endfunction

function dispatch_UnitType_setTier takes integer this_58, integer data, string wurstStackTrace returns nothing
	if UnitType_typeId[this_58] == 0 then
		if this_58 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling UnitType.setTier" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called UnitType.setTier on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	if UnitType_typeId[this_58] <= 784 then
		call UnitType_setTier(this_58, data)
	else
		call UnitType_setTier(this_58, data)
	endif
endfunction

function UnitType_setWeaptonSound takes integer this_58, integer data returns nothing
	local integer tempIndex = this_58
	set UnitType_weaponSound[tempIndex] = data
	set UnitType_weaponSound_2[tempIndex] = 5
endfunction

function dispatch_UnitType_setWeaptonSound takes integer this_58, integer data, string wurstStackTrace returns nothing
	if UnitType_typeId[this_58] == 0 then
		if this_58 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling UnitType.setWeaptonSound" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called UnitType.setWeaptonSound on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	if UnitType_typeId[this_58] <= 784 then
		call UnitType_setWeaptonSound(this_58, data)
	else
		call UnitType_setWeaptonSound(this_58, data)
	endif
endfunction

function TestHero_settings takes integer t, string wurstStackTrace returns nothing
	call dispatch_UnitType_setAttack(t, 10, "\n   TestHero, line 10" + wurstStackTrace)
	call dispatch_UnitType_setArmor(t, 5, "\n   TestHero, line 11" + wurstStackTrace)
	call dispatch_UnitType_setAttackBackSwingPoint(t, 0.2, "\n   TestHero, line 12" + wurstStackTrace)
	call dispatch_UnitType_setAttackDamagePoint(t, 0.2, "\n   TestHero, line 13" + wurstStackTrace)
	call dispatch_UnitType_setAttackRange(t, 200, "\n   TestHero, line 14" + wurstStackTrace)
	call dispatch_UnitType_setAttackRangeBuffer(t, 100., "\n   TestHero, line 15" + wurstStackTrace)
	call dispatch_UnitType_setBounty(t, 100, "\n   TestHero, line 16" + wurstStackTrace)
	call dispatch_UnitType_setCollisionSize(t, 0., "\n   TestHero, line 17" + wurstStackTrace)
	call dispatch_UnitType_setHeight(t, 100., "\n   TestHero, line 18" + wurstStackTrace)
	call dispatch_UnitType_setIsRanged(t, false, "\n   TestHero, line 19" + wurstStackTrace)
	call dispatch_UnitType_setIcon(t, "", "\n   TestHero, line 20" + wurstStackTrace)
	call dispatch_UnitType_setModel(t, "units\\human\\HeroPaladin\\HeroPaladin", "\n   TestHero, line 21" + wurstStackTrace)
	call dispatch_UnitType_setScale(t, 1.3, "\n   TestHero, line 22" + wurstStackTrace)
	call dispatch_UnitType_setMass(t, 1000., "\n   TestHero, line 23" + wurstStackTrace)
	call dispatch_UnitType_setLife(t, 1000, "\n   TestHero, line 24" + wurstStackTrace)
	call dispatch_UnitType_setMana(t, 100, "\n   TestHero, line 25" + wurstStackTrace)
	call dispatch_UnitType_setName(t, "testhero", "\n   TestHero, line 26" + wurstStackTrace)
	call dispatch_UnitType_setRadius(t, 100., "\n   TestHero, line 27" + wurstStackTrace)
	call dispatch_UnitType_setRunspeed(t, 200., "\n   TestHero, line 28" + wurstStackTrace)
	call dispatch_UnitType_setSelectionRadius(t, 1.2, "\n   TestHero, line 29" + wurstStackTrace)
	call dispatch_UnitType_setShaddowPos(t, 0., 0., "\n   TestHero, line 30" + wurstStackTrace)
	call dispatch_UnitType_setShaddowSize(t, 200., 200., "\n   TestHero, line 31" + wurstStackTrace)
	call dispatch_UnitType_setSoundSet(t, "none", "\n   TestHero, line 32" + wurstStackTrace)
	call dispatch_UnitType_setTier(t, 1, "\n   TestHero, line 33" + wurstStackTrace)
	call dispatch_UnitType_setWeaptonSound(t, 2, "\n   TestHero, line 34" + wurstStackTrace)
	call dispatch_UnitType_setArmorSoundType(t, 2, "\n   TestHero, line 35" + wurstStackTrace)
	call dispatch_HeroType_setHeroProperName(t, "CriggesMasterOfDesaster", "\n   TestHero, line 35" + wurstStackTrace)
endfunction

function HashList_add takes integer this_58, integer elem returns nothing
	call hashtable_saveInt(HashList_ht, this_58, HashList_size[this_58], elem)
	set HashList_size[this_58] = HashList_size[this_58] + 1
endfunction

function dispatch_HashList_add takes integer this_58, integer elem, string wurstStackTrace returns nothing
	if HashList_typeId[this_58] == 0 then
		if this_58 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling HashList.add" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called HashList.add on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call HashList_add(this_58, elem)
endfunction

function addUnitToPreload takes integer id, string wurstStackTrace returns nothing
	call dispatch_HashList_add(PreloadSystem_unitsToPreload, id, "\n   PreloadSystem, line 43" + wurstStackTrace)
endfunction

function compileError takes string msg returns nothing
endfunction

function StringIterator_close takes integer this_58 returns nothing
endfunction

function dispatch_StringIterator_close takes integer this_58, string wurstStackTrace returns nothing
	if StringIterator_typeId[this_58] == 0 then
		if this_58 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling StringIterator.close" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called StringIterator.close on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call StringIterator_close(this_58)
endfunction

function StringIterator_hasNext takes integer this_58 returns boolean
	return StringIterator_pos[this_58] != 0
endfunction

function dispatch_StringIterator_hasNext takes integer this_58, string wurstStackTrace returns boolean
	local boolean hasNext_result
	if StringIterator_typeId[this_58] == 0 then
		if this_58 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling StringIterator.hasNext" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called StringIterator.hasNext on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	set hasNext_result = StringIterator_hasNext(this_58)
	return hasNext_result
endfunction

function StringIterator_next takes integer this_58 returns string
	local integer buf = StringIterator_pos[this_58]
	set StringIterator_pos[this_58] = String_next[StringIterator_pos[this_58]]
	return String_content[buf]
endfunction

function dispatch_StringIterator_next takes integer this_58, string wurstStackTrace returns string
	local string next_result
	if StringIterator_typeId[this_58] == 0 then
		if this_58 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling StringIterator.next" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called StringIterator.next on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	set next_result = StringIterator_next(this_58)
	return next_result
endfunction

function alloc_StringIterator takes nothing returns integer
	local integer this_58
	if StringIterator_firstFree_2 == 0 then
		set StringIterator_maxIndex_2 = StringIterator_maxIndex_2 + 1
		set this_58 = StringIterator_maxIndex_2
	else
		set StringIterator_firstFree_2 = StringIterator_firstFree_2 - 1
		set this_58 = StringIterator_nextFree[StringIterator_firstFree_2]
	endif
	set StringIterator_typeId[this_58] = 783
	return this_58
endfunction

function construct_StringIterator takes integer this_58, integer first returns nothing
	set StringIterator_pos[this_58] = first
endfunction

function new_StringIterator takes integer first returns integer
	local integer this_58 = alloc_StringIterator()
	call construct_StringIterator(this_58, first)
	return this_58
endfunction

function StringList_iterator takes integer this_58 returns integer
	return new_StringIterator(StringList_first[this_58])
endfunction

function dispatch_StringList_iterator takes integer this_58, string wurstStackTrace returns integer
	local integer iterator_result
	if StringList_typeId[this_58] == 0 then
		if this_58 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling StringList.iterator" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called StringList.iterator on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	set iterator_result = StringList_iterator(this_58)
	return iterator_result
endfunction

function ObjectDefinition_setUnreal takes integer this_key, string modification, real value returns nothing
endfunction

function UnitOrBuildingOrHeroDefinition_setAcquisitionRange takes integer this_58, real data returns nothing
	local integer tempIndex = this_58
	call ObjectDefinition_setUnreal(W3UDefinition_def[tempIndex], "uacq", data)
endfunction

function dispatch_UnitOrBuildingOrHeroDefinition_setAcquisitionRange takes integer this_58, real data, string wurstStackTrace returns nothing
	if W3UDefinition_typeId[this_58] == 0 then
		if this_58 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling UnitOrBuildingOrHeroDefinition.setAcquisitionRange" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called UnitOrBuildingOrHeroDefinition.setAcquisitionRange on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call UnitOrBuildingOrHeroDefinition_setAcquisitionRange(this_58, data)
endfunction

function ObjectDefinition_setReal takes integer this_key, string modification, real value returns nothing
endfunction

function UnitOrBuildingOrHeroDefinition_setAnimationBlendTimeseconds takes integer this_58, real data returns nothing
	local integer tempIndex = this_58
	call ObjectDefinition_setReal(W3UDefinition_def[tempIndex], "uble", data)
endfunction

function dispatch_UnitOrBuildingOrHeroDefinition_setAnimationBlendTimeseconds takes integer this_58, real data, string wurstStackTrace returns nothing
	if W3UDefinition_typeId[this_58] == 0 then
		if this_58 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling UnitOrBuildingOrHeroDefinition.setAnimationBlendTimeseconds" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called UnitOrBuildingOrHeroDefinition.setAnimationBlendTimeseconds on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call UnitOrBuildingOrHeroDefinition_setAnimationBlendTimeseconds(this_58, data)
endfunction

function UnitOrBuildingOrHeroDefinition_setAnimationCastBackswing takes integer this_58, real data returns nothing
	local integer tempIndex = this_58
	call ObjectDefinition_setUnreal(W3UDefinition_def[tempIndex], "ucbs", data)
endfunction

function dispatch_UnitOrBuildingOrHeroDefinition_setAnimationCastBackswing takes integer this_58, real data, string wurstStackTrace returns nothing
	if W3UDefinition_typeId[this_58] == 0 then
		if this_58 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling UnitOrBuildingOrHeroDefinition.setAnimationCastBackswing" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called UnitOrBuildingOrHeroDefinition.setAnimationCastBackswing on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call UnitOrBuildingOrHeroDefinition_setAnimationCastBackswing(this_58, data)
endfunction

function UnitOrBuildingOrHeroDefinition_setAnimationCastPoint takes integer this_58, real data returns nothing
	local integer tempIndex = this_58
	call ObjectDefinition_setUnreal(W3UDefinition_def[tempIndex], "ucpt", data)
endfunction

function dispatch_UnitOrBuildingOrHeroDefinition_setAnimationCastPoint takes integer this_58, real data, string wurstStackTrace returns nothing
	if W3UDefinition_typeId[this_58] == 0 then
		if this_58 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling UnitOrBuildingOrHeroDefinition.setAnimationCastPoint" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called UnitOrBuildingOrHeroDefinition.setAnimationCastPoint on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call UnitOrBuildingOrHeroDefinition_setAnimationCastPoint(this_58, data)
endfunction

function UnitOrBuildingOrHeroDefinition_setAnimationRunSpeed takes integer this_58, real data returns nothing
	local integer tempIndex = this_58
	call ObjectDefinition_setReal(W3UDefinition_def[tempIndex], "urun", data)
endfunction

function dispatch_UnitOrBuildingOrHeroDefinition_setAnimationRunSpeed takes integer this_58, real data, string wurstStackTrace returns nothing
	if W3UDefinition_typeId[this_58] == 0 then
		if this_58 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling UnitOrBuildingOrHeroDefinition.setAnimationRunSpeed" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called UnitOrBuildingOrHeroDefinition.setAnimationRunSpeed on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call UnitOrBuildingOrHeroDefinition_setAnimationRunSpeed(this_58, data)
endfunction

function UnitOrBuildingOrHeroDefinition_setAnimationWalkSpeed takes integer this_58, real data returns nothing
	local integer tempIndex = this_58
	call ObjectDefinition_setReal(W3UDefinition_def[tempIndex], "uwal", data)
endfunction

function dispatch_UnitOrBuildingOrHeroDefinition_setAnimationWalkSpeed takes integer this_58, real data, string wurstStackTrace returns nothing
	if W3UDefinition_typeId[this_58] == 0 then
		if this_58 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling UnitOrBuildingOrHeroDefinition.setAnimationWalkSpeed" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called UnitOrBuildingOrHeroDefinition.setAnimationWalkSpeed on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call UnitOrBuildingOrHeroDefinition_setAnimationWalkSpeed(this_58, data)
endfunction

function ArmorSoundType_toString takes integer this_58 returns string
	local integer temp = this_58
	if temp == 0 then
		return "Ethereal"
	elseif temp == 2 then
		return "Flesh"
	elseif temp == 4 then
		return "Wood"
	elseif temp == 3 then
		return "Stone"
	elseif temp == 1 then
		return "Metal"
	else
		return null
	endif
endfunction

function ObjectDefinition_setString takes integer this_key, string modification, string value returns nothing
endfunction

function UnitOrBuildingOrHeroDefinition_setArmorSoundType takes integer this_58, integer data returns nothing
	local integer tempIndex = this_58
	call ObjectDefinition_setString(W3UDefinition_def[tempIndex], "uarm", ArmorSoundType_toString(data))
endfunction

function dispatch_UnitOrBuildingOrHeroDefinition_setArmorSoundType takes integer this_58, integer data, string wurstStackTrace returns nothing
	if W3UDefinition_typeId[this_58] == 0 then
		if this_58 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling UnitOrBuildingOrHeroDefinition.setArmorSoundType" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called UnitOrBuildingOrHeroDefinition.setArmorSoundType on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call UnitOrBuildingOrHeroDefinition_setArmorSoundType(this_58, data)
endfunction

function UnitOrBuildingOrHeroDefinition_setAttack1AnimationBackswingPoint takes integer this_58, real data returns nothing
	local integer tempIndex = this_58
	call ObjectDefinition_setUnreal(W3UDefinition_def[tempIndex], "ubs1", data)
endfunction

function dispatch_UnitOrBuildingOrHeroDefinition_setAttack1AnimationBackswingPoint takes integer this_58, real data, string wurstStackTrace returns nothing
	if W3UDefinition_typeId[this_58] == 0 then
		if this_58 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling UnitOrBuildingOrHeroDefinition.setAttack1AnimationBackswingPoint" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called UnitOrBuildingOrHeroDefinition.setAttack1AnimationBackswingPoint on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call UnitOrBuildingOrHeroDefinition_setAttack1AnimationBackswingPoint(this_58, data)
endfunction

function UnitOrBuildingOrHeroDefinition_setAttack1AnimationDamagePoint takes integer this_58, real data returns nothing
	local integer tempIndex = this_58
	call ObjectDefinition_setUnreal(W3UDefinition_def[tempIndex], "udp1", data)
endfunction

function dispatch_UnitOrBuildingOrHeroDefinition_setAttack1AnimationDamagePoint takes integer this_58, real data, string wurstStackTrace returns nothing
	if W3UDefinition_typeId[this_58] == 0 then
		if this_58 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling UnitOrBuildingOrHeroDefinition.setAttack1AnimationDamagePoint" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called UnitOrBuildingOrHeroDefinition.setAttack1AnimationDamagePoint on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call UnitOrBuildingOrHeroDefinition_setAttack1AnimationDamagePoint(this_58, data)
endfunction

function UnitOrBuildingOrHeroDefinition_setAttack1CooldownTime takes integer this_58, real data returns nothing
	local integer tempIndex = this_58
	call ObjectDefinition_setUnreal(W3UDefinition_def[tempIndex], "ua1c", data)
endfunction

function dispatch_UnitOrBuildingOrHeroDefinition_setAttack1CooldownTime takes integer this_58, real data, string wurstStackTrace returns nothing
	if W3UDefinition_typeId[this_58] == 0 then
		if this_58 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling UnitOrBuildingOrHeroDefinition.setAttack1CooldownTime" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called UnitOrBuildingOrHeroDefinition.setAttack1CooldownTime on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call UnitOrBuildingOrHeroDefinition_setAttack1CooldownTime(this_58, data)
endfunction

function ObjectDefinition_setInt takes integer this_key, string modification, integer value returns nothing
endfunction

function UnitOrBuildingOrHeroDefinition_setAttack1DamageBase takes integer this_58, integer data returns nothing
	local integer tempIndex = this_58
	call ObjectDefinition_setInt(W3UDefinition_def[tempIndex], "ua1b", data)
endfunction

function dispatch_UnitOrBuildingOrHeroDefinition_setAttack1DamageBase takes integer this_58, integer data, string wurstStackTrace returns nothing
	if W3UDefinition_typeId[this_58] == 0 then
		if this_58 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling UnitOrBuildingOrHeroDefinition.setAttack1DamageBase" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called UnitOrBuildingOrHeroDefinition.setAttack1DamageBase on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call UnitOrBuildingOrHeroDefinition_setAttack1DamageBase(this_58, data)
endfunction

function UnitOrBuildingOrHeroDefinition_setAttack1DamageNumberofDice takes integer this_58, integer data returns nothing
	local integer tempIndex = this_58
	call ObjectDefinition_setInt(W3UDefinition_def[tempIndex], "ua1d", data)
endfunction

function dispatch_UnitOrBuildingOrHeroDefinition_setAttack1DamageNumberofDice takes integer this_58, integer data, string wurstStackTrace returns nothing
	if W3UDefinition_typeId[this_58] == 0 then
		if this_58 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling UnitOrBuildingOrHeroDefinition.setAttack1DamageNumberofDice" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called UnitOrBuildingOrHeroDefinition.setAttack1DamageNumberofDice on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call UnitOrBuildingOrHeroDefinition_setAttack1DamageNumberofDice(this_58, data)
endfunction

function UnitOrBuildingOrHeroDefinition_setAttack1DamageSidesperDie takes integer this_58, integer data returns nothing
	local integer tempIndex = this_58
	call ObjectDefinition_setInt(W3UDefinition_def[tempIndex], "ua1s", data)
endfunction

function dispatch_UnitOrBuildingOrHeroDefinition_setAttack1DamageSidesperDie takes integer this_58, integer data, string wurstStackTrace returns nothing
	if W3UDefinition_typeId[this_58] == 0 then
		if this_58 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling UnitOrBuildingOrHeroDefinition.setAttack1DamageSidesperDie" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called UnitOrBuildingOrHeroDefinition.setAttack1DamageSidesperDie on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call UnitOrBuildingOrHeroDefinition_setAttack1DamageSidesperDie(this_58, data)
endfunction

function UnitOrBuildingOrHeroDefinition_setAttack1ProjectileArc takes integer this_58, real data returns nothing
	local integer tempIndex = this_58
	call ObjectDefinition_setUnreal(W3UDefinition_def[tempIndex], "uma1", data)
endfunction

function dispatch_UnitOrBuildingOrHeroDefinition_setAttack1ProjectileArc takes integer this_58, real data, string wurstStackTrace returns nothing
	if W3UDefinition_typeId[this_58] == 0 then
		if this_58 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling UnitOrBuildingOrHeroDefinition.setAttack1ProjectileArc" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called UnitOrBuildingOrHeroDefinition.setAttack1ProjectileArc on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call UnitOrBuildingOrHeroDefinition_setAttack1ProjectileArc(this_58, data)
endfunction

function UnitOrBuildingOrHeroDefinition_setAttack1ProjectileArt takes integer this_58, string data returns nothing
	local integer tempIndex = this_58
	call ObjectDefinition_setString(W3UDefinition_def[tempIndex], "ua1m", data)
endfunction

function dispatch_UnitOrBuildingOrHeroDefinition_setAttack1ProjectileArt takes integer this_58, string data, string wurstStackTrace returns nothing
	if W3UDefinition_typeId[this_58] == 0 then
		if this_58 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling UnitOrBuildingOrHeroDefinition.setAttack1ProjectileArt" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called UnitOrBuildingOrHeroDefinition.setAttack1ProjectileArt on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call UnitOrBuildingOrHeroDefinition_setAttack1ProjectileArt(this_58, data)
endfunction

function boolean_toInt takes boolean this_58 returns integer
	if this_58 then
		return 1
	else
		return 0
	endif
endfunction

function ObjectDefinition_setBoolean takes integer this_key, string modification, boolean value returns nothing
	call ObjectDefinition_setInt(this_key, modification, boolean_toInt(value))
endfunction

function UnitOrBuildingOrHeroDefinition_setAttack1ProjectileHomingEnabled takes integer this_58, boolean data returns nothing
	local integer tempIndex = this_58
	call ObjectDefinition_setBoolean(W3UDefinition_def[tempIndex], "umh1", data)
endfunction

function dispatch_UnitOrBuildingOrHeroDefinition_setAttack1ProjectileHomingEnabled takes integer this_58, boolean data, string wurstStackTrace returns nothing
	if W3UDefinition_typeId[this_58] == 0 then
		if this_58 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling UnitOrBuildingOrHeroDefinition.setAttack1ProjectileHomingEnabled" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called UnitOrBuildingOrHeroDefinition.setAttack1ProjectileHomingEnabled on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call UnitOrBuildingOrHeroDefinition_setAttack1ProjectileHomingEnabled(this_58, data)
endfunction

function UnitOrBuildingOrHeroDefinition_setAttack1ProjectileSpeed takes integer this_58, integer data returns nothing
	local integer tempIndex = this_58
	call ObjectDefinition_setInt(W3UDefinition_def[tempIndex], "ua1z", data)
endfunction

function dispatch_UnitOrBuildingOrHeroDefinition_setAttack1ProjectileSpeed takes integer this_58, integer data, string wurstStackTrace returns nothing
	if W3UDefinition_typeId[this_58] == 0 then
		if this_58 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling UnitOrBuildingOrHeroDefinition.setAttack1ProjectileSpeed" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called UnitOrBuildingOrHeroDefinition.setAttack1ProjectileSpeed on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call UnitOrBuildingOrHeroDefinition_setAttack1ProjectileSpeed(this_58, data)
endfunction

function WeaponSound_toString takes integer this_58 returns string
	local integer temp = this_58
	if temp == 0 then
		return "Nothing"
	elseif temp == 1 then
		return "AxeMediumChop"
	elseif temp == 2 then
		return "MetalHeavyBash"
	elseif temp == 3 then
		return "MetalHeavyChop"
	elseif temp == 4 then
		return "MetalHeavySlice"
	elseif temp == 5 then
		return "MetalLightChop"
	elseif temp == 6 then
		return "MetalLightSlice"
	elseif temp == 7 then
		return "MetalMediumBash"
	elseif temp == 8 then
		return "MetalMediumChop"
	elseif temp == 9 then
		return "MetalMediumSlice"
	elseif temp == 10 then
		return "RockHeavyBash"
	elseif temp == 11 then
		return "WoodHeavyBash"
	elseif temp == 12 then
		return "WoodLightBash"
	elseif temp == 13 then
		return "WoodMediumBash"
	else
		return null
	endif
endfunction

function UnitOrBuildingOrHeroDefinition_setAttack1WeaponSound takes integer this_58, integer data returns nothing
	local integer tempIndex = this_58
	call ObjectDefinition_setString(W3UDefinition_def[tempIndex], "ucs1", WeaponSound_toString(data))
endfunction

function dispatch_UnitOrBuildingOrHeroDefinition_setAttack1WeaponSound takes integer this_58, integer data, string wurstStackTrace returns nothing
	if W3UDefinition_typeId[this_58] == 0 then
		if this_58 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling UnitOrBuildingOrHeroDefinition.setAttack1WeaponSound" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called UnitOrBuildingOrHeroDefinition.setAttack1WeaponSound on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call UnitOrBuildingOrHeroDefinition_setAttack1WeaponSound(this_58, data)
endfunction

function UnitOrBuildingOrHeroDefinition_setAttack1WeaponType takes integer this_58, string data returns nothing
	local integer tempIndex = this_58
	call ObjectDefinition_setString(W3UDefinition_def[tempIndex], "ua1w", data)
endfunction

function dispatch_UnitOrBuildingOrHeroDefinition_setAttack1WeaponType takes integer this_58, string data, string wurstStackTrace returns nothing
	if W3UDefinition_typeId[this_58] == 0 then
		if this_58 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling UnitOrBuildingOrHeroDefinition.setAttack1WeaponType" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called UnitOrBuildingOrHeroDefinition.setAttack1WeaponType on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call UnitOrBuildingOrHeroDefinition_setAttack1WeaponType(this_58, data)
endfunction

function UnitOrBuildingOrHeroDefinition_setCollisionSize takes integer this_58, real data returns nothing
	local integer tempIndex = this_58
	call ObjectDefinition_setUnreal(W3UDefinition_def[tempIndex], "ucol", data)
endfunction

function dispatch_UnitOrBuildingOrHeroDefinition_setCollisionSize takes integer this_58, real data, string wurstStackTrace returns nothing
	if W3UDefinition_typeId[this_58] == 0 then
		if this_58 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling UnitOrBuildingOrHeroDefinition.setCollisionSize" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called UnitOrBuildingOrHeroDefinition.setCollisionSize on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call UnitOrBuildingOrHeroDefinition_setCollisionSize(this_58, data)
endfunction

function UnitOrBuildingOrHeroDefinition_setFoodCost takes integer this_58, integer data returns nothing
	local integer tempIndex = this_58
	call ObjectDefinition_setInt(W3UDefinition_def[tempIndex], "ufoo", data)
endfunction

function dispatch_UnitOrBuildingOrHeroDefinition_setFoodCost takes integer this_58, integer data, string wurstStackTrace returns nothing
	if W3UDefinition_typeId[this_58] == 0 then
		if this_58 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling UnitOrBuildingOrHeroDefinition.setFoodCost" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called UnitOrBuildingOrHeroDefinition.setFoodCost on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call UnitOrBuildingOrHeroDefinition_setFoodCost(this_58, data)
endfunction

function UnitOrBuildingOrHeroDefinition_setHitPointsMaximumBase takes integer this_58, integer data returns nothing
	local integer tempIndex = this_58
	call ObjectDefinition_setInt(W3UDefinition_def[tempIndex], "uhpm", data)
endfunction

function dispatch_UnitOrBuildingOrHeroDefinition_setHitPointsMaximumBase takes integer this_58, integer data, string wurstStackTrace returns nothing
	if W3UDefinition_typeId[this_58] == 0 then
		if this_58 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling UnitOrBuildingOrHeroDefinition.setHitPointsMaximumBase" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called UnitOrBuildingOrHeroDefinition.setHitPointsMaximumBase on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call UnitOrBuildingOrHeroDefinition_setHitPointsMaximumBase(this_58, data)
endfunction

function UnitOrBuildingOrHeroDefinition_setIconGameInterface takes integer this_58, string data returns nothing
	local integer tempIndex = this_58
	call ObjectDefinition_setString(W3UDefinition_def[tempIndex], "uico", data)
endfunction

function dispatch_UnitOrBuildingOrHeroDefinition_setIconGameInterface takes integer this_58, string data, string wurstStackTrace returns nothing
	if W3UDefinition_typeId[this_58] == 0 then
		if this_58 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling UnitOrBuildingOrHeroDefinition.setIconGameInterface" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called UnitOrBuildingOrHeroDefinition.setIconGameInterface on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call UnitOrBuildingOrHeroDefinition_setIconGameInterface(this_58, data)
endfunction

function UnitOrBuildingOrHeroDefinition_setManaInitialAmount takes integer this_58, integer data returns nothing
	local integer tempIndex = this_58
	call ObjectDefinition_setInt(W3UDefinition_def[tempIndex], "umpi", data)
endfunction

function dispatch_UnitOrBuildingOrHeroDefinition_setManaInitialAmount takes integer this_58, integer data, string wurstStackTrace returns nothing
	if W3UDefinition_typeId[this_58] == 0 then
		if this_58 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling UnitOrBuildingOrHeroDefinition.setManaInitialAmount" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called UnitOrBuildingOrHeroDefinition.setManaInitialAmount on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call UnitOrBuildingOrHeroDefinition_setManaInitialAmount(this_58, data)
endfunction

function UnitOrBuildingOrHeroDefinition_setManaMaximum takes integer this_58, integer data returns nothing
	local integer tempIndex = this_58
	call ObjectDefinition_setInt(W3UDefinition_def[tempIndex], "umpm", data)
endfunction

function dispatch_UnitOrBuildingOrHeroDefinition_setManaMaximum takes integer this_58, integer data, string wurstStackTrace returns nothing
	if W3UDefinition_typeId[this_58] == 0 then
		if this_58 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling UnitOrBuildingOrHeroDefinition.setManaMaximum" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called UnitOrBuildingOrHeroDefinition.setManaMaximum on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call UnitOrBuildingOrHeroDefinition_setManaMaximum(this_58, data)
endfunction

function UnitOrBuildingOrHeroDefinition_setModelFile takes integer this_58, string data returns nothing
	local integer tempIndex = this_58
	call ObjectDefinition_setString(W3UDefinition_def[tempIndex], "umdl", data)
endfunction

function dispatch_UnitOrBuildingOrHeroDefinition_setModelFile takes integer this_58, string data, string wurstStackTrace returns nothing
	if W3UDefinition_typeId[this_58] == 0 then
		if this_58 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling UnitOrBuildingOrHeroDefinition.setModelFile" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called UnitOrBuildingOrHeroDefinition.setModelFile on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call UnitOrBuildingOrHeroDefinition_setModelFile(this_58, data)
endfunction

function UnitOrBuildingOrHeroDefinition_setNormalAbilities takes integer this_58, string data returns nothing
	local integer tempIndex = this_58
	call ObjectDefinition_setString(W3UDefinition_def[tempIndex], "uabi", data)
endfunction

function dispatch_UnitOrBuildingOrHeroDefinition_setNormalAbilities takes integer this_58, string data, string wurstStackTrace returns nothing
	if W3UDefinition_typeId[this_58] == 0 then
		if this_58 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling UnitOrBuildingOrHeroDefinition.setNormalAbilities" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called UnitOrBuildingOrHeroDefinition.setNormalAbilities on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call UnitOrBuildingOrHeroDefinition_setNormalAbilities(this_58, data)
endfunction

function UnitOrBuildingOrHeroDefinition_setOrientationInterpolation takes integer this_58, integer data returns nothing
	local integer tempIndex = this_58
	call ObjectDefinition_setInt(W3UDefinition_def[tempIndex], "uori", data)
endfunction

function dispatch_UnitOrBuildingOrHeroDefinition_setOrientationInterpolation takes integer this_58, integer data, string wurstStackTrace returns nothing
	if W3UDefinition_typeId[this_58] == 0 then
		if this_58 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling UnitOrBuildingOrHeroDefinition.setOrientationInterpolation" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called UnitOrBuildingOrHeroDefinition.setOrientationInterpolation on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call UnitOrBuildingOrHeroDefinition_setOrientationInterpolation(this_58, data)
endfunction

function UnitOrBuildingOrHeroDefinition_setProjectileImpactZ takes integer this_58, real data returns nothing
	local integer tempIndex = this_58
	call ObjectDefinition_setUnreal(W3UDefinition_def[tempIndex], "uimz", data)
endfunction

function dispatch_UnitOrBuildingOrHeroDefinition_setProjectileImpactZ takes integer this_58, real data, string wurstStackTrace returns nothing
	if W3UDefinition_typeId[this_58] == 0 then
		if this_58 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling UnitOrBuildingOrHeroDefinition.setProjectileImpactZ" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called UnitOrBuildingOrHeroDefinition.setProjectileImpactZ on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call UnitOrBuildingOrHeroDefinition_setProjectileImpactZ(this_58, data)
endfunction

function UnitOrBuildingOrHeroDefinition_setProjectileLaunchX takes integer this_58, real data returns nothing
	local integer tempIndex = this_58
	call ObjectDefinition_setUnreal(W3UDefinition_def[tempIndex], "ulpx", data)
endfunction

function dispatch_UnitOrBuildingOrHeroDefinition_setProjectileLaunchX takes integer this_58, real data, string wurstStackTrace returns nothing
	if W3UDefinition_typeId[this_58] == 0 then
		if this_58 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling UnitOrBuildingOrHeroDefinition.setProjectileLaunchX" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called UnitOrBuildingOrHeroDefinition.setProjectileLaunchX on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call UnitOrBuildingOrHeroDefinition_setProjectileLaunchX(this_58, data)
endfunction

function UnitOrBuildingOrHeroDefinition_setProjectileLaunchY takes integer this_58, real data returns nothing
	local integer tempIndex = this_58
	call ObjectDefinition_setUnreal(W3UDefinition_def[tempIndex], "ulpy", data)
endfunction

function dispatch_UnitOrBuildingOrHeroDefinition_setProjectileLaunchY takes integer this_58, real data, string wurstStackTrace returns nothing
	if W3UDefinition_typeId[this_58] == 0 then
		if this_58 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling UnitOrBuildingOrHeroDefinition.setProjectileLaunchY" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called UnitOrBuildingOrHeroDefinition.setProjectileLaunchY on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call UnitOrBuildingOrHeroDefinition_setProjectileLaunchY(this_58, data)
endfunction

function UnitOrBuildingOrHeroDefinition_setProjectileLaunchZ takes integer this_58, real data returns nothing
	local integer tempIndex = this_58
	call ObjectDefinition_setUnreal(W3UDefinition_def[tempIndex], "ulpz", data)
endfunction

function dispatch_UnitOrBuildingOrHeroDefinition_setProjectileLaunchZ takes integer this_58, real data, string wurstStackTrace returns nothing
	if W3UDefinition_typeId[this_58] == 0 then
		if this_58 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling UnitOrBuildingOrHeroDefinition.setProjectileLaunchZ" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called UnitOrBuildingOrHeroDefinition.setProjectileLaunchZ on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call UnitOrBuildingOrHeroDefinition_setProjectileLaunchZ(this_58, data)
endfunction

function UnitOrBuildingOrHeroDefinition_setScalingValue takes integer this_58, real data returns nothing
	local integer tempIndex = this_58
	call ObjectDefinition_setReal(W3UDefinition_def[tempIndex], "usca", data)
endfunction

function dispatch_UnitOrBuildingOrHeroDefinition_setScalingValue takes integer this_58, real data, string wurstStackTrace returns nothing
	if W3UDefinition_typeId[this_58] == 0 then
		if this_58 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling UnitOrBuildingOrHeroDefinition.setScalingValue" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called UnitOrBuildingOrHeroDefinition.setScalingValue on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call UnitOrBuildingOrHeroDefinition_setScalingValue(this_58, data)
endfunction

function UnitOrBuildingOrHeroDefinition_setSelectionScale takes integer this_58, real data returns nothing
	local integer tempIndex = this_58
	call ObjectDefinition_setReal(W3UDefinition_def[tempIndex], "ussc", data)
endfunction

function dispatch_UnitOrBuildingOrHeroDefinition_setSelectionScale takes integer this_58, real data, string wurstStackTrace returns nothing
	if W3UDefinition_typeId[this_58] == 0 then
		if this_58 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling UnitOrBuildingOrHeroDefinition.setSelectionScale" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called UnitOrBuildingOrHeroDefinition.setSelectionScale on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call UnitOrBuildingOrHeroDefinition_setSelectionScale(this_58, data)
endfunction

function UnitOrBuildingOrHeroDefinition_setShadowImageCenterX takes integer this_58, real data returns nothing
	local integer tempIndex = this_58
	call ObjectDefinition_setReal(W3UDefinition_def[tempIndex], "ushx", data)
endfunction

function dispatch_UnitOrBuildingOrHeroDefinition_setShadowImageCenterX takes integer this_58, real data, string wurstStackTrace returns nothing
	if W3UDefinition_typeId[this_58] == 0 then
		if this_58 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling UnitOrBuildingOrHeroDefinition.setShadowImageCenterX" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called UnitOrBuildingOrHeroDefinition.setShadowImageCenterX on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call UnitOrBuildingOrHeroDefinition_setShadowImageCenterX(this_58, data)
endfunction

function UnitOrBuildingOrHeroDefinition_setShadowImageCenterY takes integer this_58, real data returns nothing
	local integer tempIndex = this_58
	call ObjectDefinition_setReal(W3UDefinition_def[tempIndex], "ushy", data)
endfunction

function dispatch_UnitOrBuildingOrHeroDefinition_setShadowImageCenterY takes integer this_58, real data, string wurstStackTrace returns nothing
	if W3UDefinition_typeId[this_58] == 0 then
		if this_58 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling UnitOrBuildingOrHeroDefinition.setShadowImageCenterY" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called UnitOrBuildingOrHeroDefinition.setShadowImageCenterY on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call UnitOrBuildingOrHeroDefinition_setShadowImageCenterY(this_58, data)
endfunction

function UnitOrBuildingOrHeroDefinition_setShadowImageHeight takes integer this_58, real data returns nothing
	local integer tempIndex = this_58
	call ObjectDefinition_setReal(W3UDefinition_def[tempIndex], "ushh", data)
endfunction

function dispatch_UnitOrBuildingOrHeroDefinition_setShadowImageHeight takes integer this_58, real data, string wurstStackTrace returns nothing
	if W3UDefinition_typeId[this_58] == 0 then
		if this_58 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling UnitOrBuildingOrHeroDefinition.setShadowImageHeight" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called UnitOrBuildingOrHeroDefinition.setShadowImageHeight on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call UnitOrBuildingOrHeroDefinition_setShadowImageHeight(this_58, data)
endfunction

function UnitOrBuildingOrHeroDefinition_setShadowImageWidth takes integer this_58, real data returns nothing
	local integer tempIndex = this_58
	call ObjectDefinition_setReal(W3UDefinition_def[tempIndex], "ushw", data)
endfunction

function dispatch_UnitOrBuildingOrHeroDefinition_setShadowImageWidth takes integer this_58, real data, string wurstStackTrace returns nothing
	if W3UDefinition_typeId[this_58] == 0 then
		if this_58 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling UnitOrBuildingOrHeroDefinition.setShadowImageWidth" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called UnitOrBuildingOrHeroDefinition.setShadowImageWidth on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call UnitOrBuildingOrHeroDefinition_setShadowImageWidth(this_58, data)
endfunction

function UnitOrBuildingOrHeroDefinition_setSightRadiusDay takes integer this_58, integer data returns nothing
	local integer tempIndex = this_58
	call ObjectDefinition_setInt(W3UDefinition_def[tempIndex], "usid", data)
endfunction

function dispatch_UnitOrBuildingOrHeroDefinition_setSightRadiusDay takes integer this_58, integer data, string wurstStackTrace returns nothing
	if W3UDefinition_typeId[this_58] == 0 then
		if this_58 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling UnitOrBuildingOrHeroDefinition.setSightRadiusDay" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called UnitOrBuildingOrHeroDefinition.setSightRadiusDay on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call UnitOrBuildingOrHeroDefinition_setSightRadiusDay(this_58, data)
endfunction

function UnitOrBuildingOrHeroDefinition_setSightRadiusNight takes integer this_58, integer data returns nothing
	local integer tempIndex = this_58
	call ObjectDefinition_setInt(W3UDefinition_def[tempIndex], "usin", data)
endfunction

function dispatch_UnitOrBuildingOrHeroDefinition_setSightRadiusNight takes integer this_58, integer data, string wurstStackTrace returns nothing
	if W3UDefinition_typeId[this_58] == 0 then
		if this_58 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling UnitOrBuildingOrHeroDefinition.setSightRadiusNight" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called UnitOrBuildingOrHeroDefinition.setSightRadiusNight on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call UnitOrBuildingOrHeroDefinition_setSightRadiusNight(this_58, data)
endfunction

function UnitOrBuildingOrHeroDefinition_setSpeedBase takes integer this_58, integer data returns nothing
	local integer tempIndex = this_58
	call ObjectDefinition_setInt(W3UDefinition_def[tempIndex], "umvs", data)
endfunction

function dispatch_UnitOrBuildingOrHeroDefinition_setSpeedBase takes integer this_58, integer data, string wurstStackTrace returns nothing
	if W3UDefinition_typeId[this_58] == 0 then
		if this_58 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling UnitOrBuildingOrHeroDefinition.setSpeedBase" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called UnitOrBuildingOrHeroDefinition.setSpeedBase on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call UnitOrBuildingOrHeroDefinition_setSpeedBase(this_58, data)
endfunction

function UnitOrBuildingOrHeroDefinition_setUnitSoundSet takes integer this_58, string data returns nothing
	local integer tempIndex = this_58
	call ObjectDefinition_setString(W3UDefinition_def[tempIndex], "usnd", data)
endfunction

function dispatch_UnitOrBuildingOrHeroDefinition_setUnitSoundSet takes integer this_58, string data, string wurstStackTrace returns nothing
	if W3UDefinition_typeId[this_58] == 0 then
		if this_58 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling UnitOrBuildingOrHeroDefinition.setUnitSoundSet" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called UnitOrBuildingOrHeroDefinition.setUnitSoundSet on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call UnitOrBuildingOrHeroDefinition_setUnitSoundSet(this_58, data)
endfunction

function W3UDefinition_setName takes integer this_58, string data returns nothing
	local integer tempIndex = this_58
	call ObjectDefinition_setString(W3UDefinition_def[tempIndex], "unam", data)
endfunction

function dispatch_W3UDefinition_setName takes integer this_58, string data, string wurstStackTrace returns nothing
	if W3UDefinition_typeId[this_58] == 0 then
		if this_58 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling W3UDefinition.setName" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called W3UDefinition.setName on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call W3UDefinition_setName(this_58, data)
endfunction

function UnitType_finalize takes integer this_58, string wurstStackTrace returns nothing
	local string builder
	local integer wurst__iterator0
	local string s
	local integer tempIndex
	local integer tempTupleSelectionResult_1
	local integer temp_tempTupleSelectionResult_1
	local integer temp_tempTupleSelectionResult_2
	local integer tempIndex_2
	local integer tempTupleSelectionResult_2
	local real temp_tempTupleSelectionResult_1_2
	local integer temp_tempTupleSelectionResult_2_2
	local integer tempIndex_3
	local real tempTupleSelectionResult_1_2
	local real temp_tempTupleSelectionResult_1_3
	local integer temp_tempTupleSelectionResult_2_3
	local integer tempIndex_4
	local integer tempTupleSelectionResult_2_2
	local real temp_tempTupleSelectionResult_1_4
	local integer temp_tempTupleSelectionResult_2_4
	local integer tempIndex_5
	local real tempTupleSelectionResult_1_3
	local real temp_tempTupleSelectionResult_1_5
	local integer temp_tempTupleSelectionResult_2_5
	local integer tempIndex_6
	local integer tempTupleSelectionResult_2_3
	local real temp_tempTupleSelectionResult_1_6
	local integer temp_tempTupleSelectionResult_2_6
	local integer tempIndex_7
	local real tempTupleSelectionResult_1_4
	local real temp_tempTupleSelectionResult_1_7
	local integer temp_tempTupleSelectionResult_2_7
	local integer tempIndex_8
	local integer tempTupleSelectionResult_2_4
	local boolean temp_tempTupleSelectionResult_1_8
	local integer temp_tempTupleSelectionResult_2_8
	local integer tempIndex_9
	local boolean tempTupleSelectionResult_1_5
	local boolean temp_tempTupleSelectionResult_1_9
	local integer temp_tempTupleSelectionResult_2_9
	local integer tempIndex_10
	local integer tempTupleSelectionResult_2_5
	local real temp_tempTupleSelectionResult_1_10
	local integer temp_tempTupleSelectionResult_2_10
	local integer tempIndex_11
	local integer tempTupleSelectionResult_2_6
	local real temp_tempTupleSelectionResult_1_1
	local real temp_tempTupleSelectionResult_1_2_2
	local real temp_tempTupleSelectionResult_1_3_2
	local integer temp_tempTupleSelectionResult_2_11
	local integer tempIndex_12
	local real tempTupleSelectionResult_1_6
	local real temp_tempTupleSelectionResult_1_11
	local integer temp_tempTupleSelectionResult_2_12
	local integer tempIndex_13
	local real tempTupleSelectionResult_1_1
	local real tempTupleSelectionResult_1_2_2
	local real tempTupleSelectionResult_1_3_2
	local real temp_tempTupleSelectionResult_1_1_2
	local real temp_tempTupleSelectionResult_1_2_3
	local real temp_tempTupleSelectionResult_1_3_3
	local integer temp_tempTupleSelectionResult_2_13
	local real tempTupleSelectionResult_1_7
	local real temp_tempTupleSelectionResult_1_12
	local real temp_tempTupleSelectionResult_2_14
	local real temp_tempTupleSelectionResult_3
	local integer tempIndex_14
	local real tempTupleSelectionResult_1_1_2
	local real tempTupleSelectionResult_1_2_3
	local real tempTupleSelectionResult_1_3_3
	local real temp_tempTupleSelectionResult_1_1_3
	local real temp_tempTupleSelectionResult_1_2_4
	local real temp_tempTupleSelectionResult_1_3_4
	local integer temp_tempTupleSelectionResult_2_15
	local real tempTupleSelectionResult_2_7
	local real temp_tempTupleSelectionResult_1_13
	local real temp_tempTupleSelectionResult_2_16
	local real temp_tempTupleSelectionResult_3_2
	local integer tempIndex_15
	local real tempTupleSelectionResult_1_1_3
	local real tempTupleSelectionResult_1_2_4
	local real tempTupleSelectionResult_1_3_4
	local real temp_tempTupleSelectionResult_1_1_4
	local real temp_tempTupleSelectionResult_1_2_5
	local real temp_tempTupleSelectionResult_1_3_5
	local integer temp_tempTupleSelectionResult_2_17
	local real tempTupleSelectionResult_3
	local real temp_tempTupleSelectionResult_1_14
	local real temp_tempTupleSelectionResult_2_18
	local real temp_tempTupleSelectionResult_3_3
	local integer tempIndex_16
	local integer tempTupleSelectionResult_2_8
	local string temp_tempTupleSelectionResult_1_15
	local integer temp_tempTupleSelectionResult_2_19
	local integer tempIndex_17
	local string tempTupleSelectionResult_1_8
	local string temp_tempTupleSelectionResult_1_16
	local integer temp_tempTupleSelectionResult_2_20
	local integer tempIndex_18
	local integer tempTupleSelectionResult_2_9
	local real temp_tempTupleSelectionResult_1_1_5
	local real temp_tempTupleSelectionResult_1_2_6
	local integer temp_tempTupleSelectionResult_2_21
	local integer tempIndex_19
	local real tempTupleSelectionResult_1_1_4
	local real tempTupleSelectionResult_1_2_5
	local real temp_tempTupleSelectionResult_1_1_6
	local real temp_tempTupleSelectionResult_1_2_7
	local integer temp_tempTupleSelectionResult_2_22
	local real tempTupleSelectionResult_1_9
	local real temp_tempTupleSelectionResult_1_17
	local real temp_tempTupleSelectionResult_2_23
	local integer tempIndex_20
	local real tempTupleSelectionResult_1_1_5
	local real tempTupleSelectionResult_1_2_6
	local real temp_tempTupleSelectionResult_1_1_7
	local real temp_tempTupleSelectionResult_1_2_8
	local integer temp_tempTupleSelectionResult_2_24
	local real tempTupleSelectionResult_2_10
	local real temp_tempTupleSelectionResult_1_18
	local real temp_tempTupleSelectionResult_2_25
	local integer tempIndex_21
	local integer tempTupleSelectionResult_2_11
	local real temp_tempTupleSelectionResult_1_1_8
	local real temp_tempTupleSelectionResult_1_2_9
	local integer temp_tempTupleSelectionResult_2_26
	local integer tempIndex_22
	local real tempTupleSelectionResult_1_1_6
	local real tempTupleSelectionResult_1_2_7
	local real temp_tempTupleSelectionResult_1_1_9
	local real temp_tempTupleSelectionResult_1_2_10
	local integer temp_tempTupleSelectionResult_2_27
	local real tempTupleSelectionResult_1_10
	local real temp_tempTupleSelectionResult_1_19
	local real temp_tempTupleSelectionResult_2_28
	local integer tempIndex_23
	local real tempTupleSelectionResult_1_1_7
	local real tempTupleSelectionResult_1_2_8
	local real temp_tempTupleSelectionResult_1_1_10
	local real temp_tempTupleSelectionResult_1_2_11
	local integer temp_tempTupleSelectionResult_2_29
	local real tempTupleSelectionResult_2_12
	local real temp_tempTupleSelectionResult_1_20
	local real temp_tempTupleSelectionResult_2_30
	local integer tempIndex_24
	local integer tempTupleSelectionResult_2_13
	local real temp_tempTupleSelectionResult_1_21
	local integer temp_tempTupleSelectionResult_2_31
	local integer tempIndex_25
	local real tempTupleSelectionResult_1_11
	local real temp_tempTupleSelectionResult_1_22
	local integer temp_tempTupleSelectionResult_2_32
	local integer tempIndex_26
	local integer tempTupleSelectionResult_2_14
	local string temp_tempTupleSelectionResult_1_23
	local integer temp_tempTupleSelectionResult_2_33
	local integer tempIndex_27
	local string tempTupleSelectionResult_1_12
	local string temp_tempTupleSelectionResult_1_24
	local integer temp_tempTupleSelectionResult_2_34
	local integer tempIndex_28
	local integer tempTupleSelectionResult_2_15
	local real temp_tempTupleSelectionResult_1_25
	local integer temp_tempTupleSelectionResult_2_35
	local integer tempIndex_29
	local real tempTupleSelectionResult_1_13
	local real temp_tempTupleSelectionResult_1_26
	local integer temp_tempTupleSelectionResult_2_36
	local integer tempIndex_30
	local integer tempTupleSelectionResult_2_16
	local real temp_tempTupleSelectionResult_1_27
	local integer temp_tempTupleSelectionResult_2_37
	local integer tempIndex_31
	local real tempTupleSelectionResult_1_14
	local real temp_tempTupleSelectionResult_1_28
	local integer temp_tempTupleSelectionResult_2_38
	local integer tempIndex_32
	local real tempTupleSelectionResult_1_15
	local real temp_tempTupleSelectionResult_1_29
	local integer temp_tempTupleSelectionResult_2_39
	local integer tempIndex_33
	local boolean tempTupleSelectionResult_1_16
	local boolean temp_tempTupleSelectionResult_1_30
	local integer temp_tempTupleSelectionResult_2_40
	local integer tempIndex_34
	local integer tempTupleSelectionResult_2_17
	local real temp_tempTupleSelectionResult_1_31
	local integer temp_tempTupleSelectionResult_2_41
	local integer tempIndex_35
	local integer tempTupleSelectionResult_2_18
	local string temp_tempTupleSelectionResult_1_32
	local integer temp_tempTupleSelectionResult_2_42
	local integer tempIndex_36
	local integer tempTupleSelectionResult_2_19
	local integer temp_tempTupleSelectionResult_1_33
	local integer temp_tempTupleSelectionResult_2_43
	local integer tempIndex_37
	local real tempTupleSelectionResult_1_17
	local real temp_tempTupleSelectionResult_1_34
	local integer temp_tempTupleSelectionResult_2_44
	local integer tempIndex_38
	local string tempTupleSelectionResult_1_18
	local string temp_tempTupleSelectionResult_1_35
	local integer temp_tempTupleSelectionResult_2_45
	local integer tempIndex_39
	local integer tempTupleSelectionResult_1_19
	local integer temp_tempTupleSelectionResult_1_36
	local integer temp_tempTupleSelectionResult_2_46
	local integer tempIndex_40
	local integer tempTupleSelectionResult_2_20
	local integer temp_tempTupleSelectionResult_1_37
	local integer temp_tempTupleSelectionResult_2_47
	local integer tempIndex_41
	local integer tempTupleSelectionResult_2_21
	local integer temp_tempTupleSelectionResult_1_38
	local integer temp_tempTupleSelectionResult_2_48
	local integer tempIndex_42
	local integer tempTupleSelectionResult_1_20
	local integer temp_tempTupleSelectionResult_1_39
	local integer temp_tempTupleSelectionResult_2_49
	local integer tempIndex_43
	local boolean tempTupleSelectionResult_1_21
	local boolean temp_tempTupleSelectionResult_1_40
	local integer temp_tempTupleSelectionResult_2_50
	local integer tempIndex_44
	local integer tempTupleSelectionResult_2_22
	local integer temp_tempTupleSelectionResult_1_41
	local integer temp_tempTupleSelectionResult_2_51
	local integer tempIndex_45
	local integer tempTupleSelectionResult_2_23
	local integer temp_tempTupleSelectionResult_1_42
	local integer temp_tempTupleSelectionResult_2_52
	local integer tempIndex_46
	local integer tempTupleSelectionResult_1_22
	local integer temp_tempTupleSelectionResult_1_43
	local integer temp_tempTupleSelectionResult_2_53
	local integer tempIndex_47
	local integer tempTupleSelectionResult_1_23
	local integer temp_tempTupleSelectionResult_1_44
	local integer temp_tempTupleSelectionResult_2_54
	local integer tempIndex_48
	local integer tempTupleSelectionResult_2_24
	local string temp_tempTupleSelectionResult_1_45
	local integer temp_tempTupleSelectionResult_2_55
	local integer tempIndex_49
	local string tempTupleSelectionResult_1_24
	local string temp_tempTupleSelectionResult_1_46
	local integer temp_tempTupleSelectionResult_2_56
	local integer tempIndex_50
	local integer tempTupleSelectionResult_2_25
	local string temp_tempTupleSelectionResult_1_47
	local integer temp_tempTupleSelectionResult_2_57
	local integer tempIndex_51
	local string tempTupleSelectionResult_1_25
	local string temp_tempTupleSelectionResult_1_48
	local integer temp_tempTupleSelectionResult_2_58
	local integer tempIndex_52
	local integer tempTupleSelectionResult_2_26
	local real temp_tempTupleSelectionResult_1_49
	local integer temp_tempTupleSelectionResult_2_59
	local integer tempIndex_53
	local real tempTupleSelectionResult_1_26
	local real temp_tempTupleSelectionResult_1_50
	local integer temp_tempTupleSelectionResult_2_60
	local integer tempIndex_54
	local integer tempTupleSelectionResult_2_27
	local integer temp_tempTupleSelectionResult_1_51
	local integer temp_tempTupleSelectionResult_2_61
	local integer tempIndex_55
	local integer tempTupleSelectionResult_1_27
	local integer temp_tempTupleSelectionResult_1_52
	local integer temp_tempTupleSelectionResult_2_62
	local integer tempIndex_56
	local integer tempTupleSelectionResult_2_28
	local integer temp_tempTupleSelectionResult_1_53
	local integer temp_tempTupleSelectionResult_2_63
	local integer tempIndex_57
	local integer tempTupleSelectionResult_1_28
	local integer temp_tempTupleSelectionResult_1_54
	local integer temp_tempTupleSelectionResult_2_64
	local integer tempIndex_58
	local string tempTupleSelectionResult_1_29
	local string temp_tempTupleSelectionResult_1_55
	local integer temp_tempTupleSelectionResult_2_65
	local integer temp
	local integer temp_2
	local integer temp_3
	local integer temp_4
	local boolean andLeft
	local integer temp_5
	local integer temp_6
	local integer temp_7
	local integer temp_8
	local integer temp_9
	local integer temp_10
	local integer temp_11
	local integer temp_12
	local integer temp_13
	local integer temp_14
	local integer temp_15
	local integer temp_16
	local integer temp_17
	local integer temp_18
	local integer temp_19
	local integer temp_20
	local integer temp_21
	local integer temp_22
	local integer temp_23
	local integer temp_24
	local integer temp_25
	local integer temp_26
	local integer temp_27
	local integer temp_28
	local integer temp_29
	if CompiletimeInit_compiletime then
		set temp = UnitType_def[this_58]
		set tempIndex = this_58
		set temp_tempTupleSelectionResult_1 = UnitType_moveSpeed[tempIndex]
		set temp_tempTupleSelectionResult_2 = UnitType_moveSpeed_2[tempIndex]
		set tempTupleSelectionResult_1 = temp_tempTupleSelectionResult_1
		call dispatch_UnitOrBuildingOrHeroDefinition_setSpeedBase(temp, tempTupleSelectionResult_1, "\n   UnitTypes, line 273" + wurstStackTrace)
		set builder = ""
		set wurst__iterator0 = dispatch_StringList_iterator(UnitType_abis[this_58], "\n   UnitTypes, line 275" + wurstStackTrace)
		loop
			exitwhen  not dispatch_StringIterator_hasNext(wurst__iterator0, "\n   UnitTypes, line 275" + wurstStackTrace)
			set s = dispatch_StringIterator_next(wurst__iterator0, "\n   UnitTypes, line 275" + wurstStackTrace)
			set builder = builder + s
		endloop
		call dispatch_StringIterator_close(wurst__iterator0, "\n   UnitTypes, line 275" + wurstStackTrace)
		call dispatch_UnitOrBuildingOrHeroDefinition_setNormalAbilities(UnitType_def[this_58], builder, "\n   UnitTypes, line 277" + wurstStackTrace)
		set tempIndex_2 = this_58
		set temp_tempTupleSelectionResult_1_2 = UnitType_walkSpeed[tempIndex_2]
		set temp_tempTupleSelectionResult_2_2 = UnitType_walkSpeed_2[tempIndex_2]
		set tempTupleSelectionResult_2 = temp_tempTupleSelectionResult_2_2
		if tempTupleSelectionResult_2 == 5 then
			set temp_2 = UnitType_def[this_58]
			set tempIndex_3 = this_58
			set temp_tempTupleSelectionResult_1_3 = UnitType_walkSpeed[tempIndex_3]
			set temp_tempTupleSelectionResult_2_3 = UnitType_walkSpeed_2[tempIndex_3]
			set tempTupleSelectionResult_1_2 = temp_tempTupleSelectionResult_1_3
			call dispatch_UnitOrBuildingOrHeroDefinition_setAnimationWalkSpeed(temp_2, tempTupleSelectionResult_1_2, "\n   UnitTypes, line 279" + wurstStackTrace)
		endif
		set tempIndex_4 = this_58
		set temp_tempTupleSelectionResult_1_4 = UnitType_runSpeed[tempIndex_4]
		set temp_tempTupleSelectionResult_2_4 = UnitType_runSpeed_2[tempIndex_4]
		set tempTupleSelectionResult_2_2 = temp_tempTupleSelectionResult_2_4
		if tempTupleSelectionResult_2_2 == 5 then
			set temp_3 = UnitType_def[this_58]
			set tempIndex_5 = this_58
			set temp_tempTupleSelectionResult_1_5 = UnitType_runSpeed[tempIndex_5]
			set temp_tempTupleSelectionResult_2_5 = UnitType_runSpeed_2[tempIndex_5]
			set tempTupleSelectionResult_1_3 = temp_tempTupleSelectionResult_1_5
			call dispatch_UnitOrBuildingOrHeroDefinition_setAnimationRunSpeed(temp_3, tempTupleSelectionResult_1_3, "\n   UnitTypes, line 281" + wurstStackTrace)
		endif
		call dispatch_UnitOrBuildingOrHeroDefinition_setAnimationCastPoint(UnitType_def[this_58], UnitType_castPoint, "\n   UnitTypes, line 282" + wurstStackTrace)
		call dispatch_UnitOrBuildingOrHeroDefinition_setAnimationCastBackswing(UnitType_def[this_58], UnitType_castBackPoint, "\n   UnitTypes, line 283" + wurstStackTrace)
		call dispatch_UnitOrBuildingOrHeroDefinition_setAnimationBlendTimeseconds(UnitType_def[this_58], UnitType_animationSmoothingFactor, "\n   UnitTypes, line 284" + wurstStackTrace)
		call dispatch_UnitOrBuildingOrHeroDefinition_setOrientationInterpolation(UnitType_def[this_58], UnitType_moveInterpolation, "\n   UnitTypes, line 285" + wurstStackTrace)
		set tempIndex_6 = this_58
		set temp_tempTupleSelectionResult_1_6 = UnitType_selectionRadius[tempIndex_6]
		set temp_tempTupleSelectionResult_2_6 = UnitType_selectionRadius_2[tempIndex_6]
		set tempTupleSelectionResult_2_3 = temp_tempTupleSelectionResult_2_6
		if tempTupleSelectionResult_2_3 == 5 then
			set temp_4 = UnitType_def[this_58]
			set tempIndex_7 = this_58
			set temp_tempTupleSelectionResult_1_7 = UnitType_selectionRadius[tempIndex_7]
			set temp_tempTupleSelectionResult_2_7 = UnitType_selectionRadius_2[tempIndex_7]
			set tempTupleSelectionResult_1_4 = temp_tempTupleSelectionResult_1_7
			call dispatch_UnitOrBuildingOrHeroDefinition_setSelectionScale(temp_4, tempTupleSelectionResult_1_4, "\n   UnitTypes, line 287" + wurstStackTrace)
		endif
		set tempIndex_8 = this_58
		set temp_tempTupleSelectionResult_1_8 = UnitType_ranged[tempIndex_8]
		set temp_tempTupleSelectionResult_2_8 = UnitType_ranged_2[tempIndex_8]
		set tempTupleSelectionResult_2_4 = temp_tempTupleSelectionResult_2_8
		if tempTupleSelectionResult_2_4 == 0 then
			call compileError("Missing information: Is unit ranged?")
			set tempIndex_9 = this_58
			set temp_tempTupleSelectionResult_1_9 = UnitType_ranged[tempIndex_9]
			set temp_tempTupleSelectionResult_2_9 = UnitType_ranged_2[tempIndex_9]
			set tempTupleSelectionResult_1_5 = temp_tempTupleSelectionResult_1_9
			if tempTupleSelectionResult_1_5 then
				set tempIndex_10 = this_58
				set temp_tempTupleSelectionResult_1_10 = UnitType_missleTargetZ[tempIndex_10]
				set temp_tempTupleSelectionResult_2_10 = UnitType_missleTargetZ_2[tempIndex_10]
				set tempTupleSelectionResult_2_5 = temp_tempTupleSelectionResult_2_10
				if tempTupleSelectionResult_2_5 == 3 then
					set andLeft = true
				else
					set tempIndex_11 = this_58
					set temp_tempTupleSelectionResult_1_1 = UnitType_missleStart_x[tempIndex_11]
					set temp_tempTupleSelectionResult_1_2_2 = UnitType_missleStart_y[tempIndex_11]
					set temp_tempTupleSelectionResult_1_3_2 = UnitType_missleStart_z[tempIndex_11]
					set temp_tempTupleSelectionResult_2_11 = UnitType_missleStart[tempIndex_11]
					set tempTupleSelectionResult_2_6 = temp_tempTupleSelectionResult_2_11
					set andLeft = tempTupleSelectionResult_2_6 == 3
				endif
				if andLeft then
					call compileError("Missing information: Missle taget or start?")
				endif
				set temp_5 = UnitType_def[this_58]
				set tempIndex_12 = this_58
				set temp_tempTupleSelectionResult_1_11 = UnitType_missleTargetZ[tempIndex_12]
				set temp_tempTupleSelectionResult_2_12 = UnitType_missleTargetZ_2[tempIndex_12]
				set tempTupleSelectionResult_1_6 = temp_tempTupleSelectionResult_1_11
				call dispatch_UnitOrBuildingOrHeroDefinition_setProjectileImpactZ(temp_5, tempTupleSelectionResult_1_6, "\n   UnitTypes, line 293" + wurstStackTrace)
				set temp_6 = UnitType_def[this_58]
				set tempIndex_13 = this_58
				set temp_tempTupleSelectionResult_1_1_2 = UnitType_missleStart_x[tempIndex_13]
				set temp_tempTupleSelectionResult_1_2_3 = UnitType_missleStart_y[tempIndex_13]
				set temp_tempTupleSelectionResult_1_3_3 = UnitType_missleStart_z[tempIndex_13]
				set temp_tempTupleSelectionResult_2_13 = UnitType_missleStart[tempIndex_13]
				set tempTupleSelectionResult_1_1 = temp_tempTupleSelectionResult_1_1_2
				set tempTupleSelectionResult_1_2_2 = temp_tempTupleSelectionResult_1_2_3
				set tempTupleSelectionResult_1_3_2 = temp_tempTupleSelectionResult_1_3_3
				set temp_tempTupleSelectionResult_1_12 = tempTupleSelectionResult_1_1
				set temp_tempTupleSelectionResult_2_14 = tempTupleSelectionResult_1_2_2
				set temp_tempTupleSelectionResult_3 = tempTupleSelectionResult_1_3_2
				set tempTupleSelectionResult_1_7 = temp_tempTupleSelectionResult_1_12
				call dispatch_UnitOrBuildingOrHeroDefinition_setProjectileLaunchX(temp_6, tempTupleSelectionResult_1_7, "\n   UnitTypes, line 294" + wurstStackTrace)
				set temp_7 = UnitType_def[this_58]
				set tempIndex_14 = this_58
				set temp_tempTupleSelectionResult_1_1_3 = UnitType_missleStart_x[tempIndex_14]
				set temp_tempTupleSelectionResult_1_2_4 = UnitType_missleStart_y[tempIndex_14]
				set temp_tempTupleSelectionResult_1_3_4 = UnitType_missleStart_z[tempIndex_14]
				set temp_tempTupleSelectionResult_2_15 = UnitType_missleStart[tempIndex_14]
				set tempTupleSelectionResult_1_1_2 = temp_tempTupleSelectionResult_1_1_3
				set tempTupleSelectionResult_1_2_3 = temp_tempTupleSelectionResult_1_2_4
				set tempTupleSelectionResult_1_3_3 = temp_tempTupleSelectionResult_1_3_4
				set temp_tempTupleSelectionResult_1_13 = tempTupleSelectionResult_1_1_2
				set temp_tempTupleSelectionResult_2_16 = tempTupleSelectionResult_1_2_3
				set temp_tempTupleSelectionResult_3_2 = tempTupleSelectionResult_1_3_3
				set tempTupleSelectionResult_2_7 = temp_tempTupleSelectionResult_2_16
				call dispatch_UnitOrBuildingOrHeroDefinition_setProjectileLaunchY(temp_7, tempTupleSelectionResult_2_7, "\n   UnitTypes, line 295" + wurstStackTrace)
				set temp_8 = UnitType_def[this_58]
				set tempIndex_15 = this_58
				set temp_tempTupleSelectionResult_1_1_4 = UnitType_missleStart_x[tempIndex_15]
				set temp_tempTupleSelectionResult_1_2_5 = UnitType_missleStart_y[tempIndex_15]
				set temp_tempTupleSelectionResult_1_3_5 = UnitType_missleStart_z[tempIndex_15]
				set temp_tempTupleSelectionResult_2_17 = UnitType_missleStart[tempIndex_15]
				set tempTupleSelectionResult_1_1_3 = temp_tempTupleSelectionResult_1_1_4
				set tempTupleSelectionResult_1_2_4 = temp_tempTupleSelectionResult_1_2_5
				set tempTupleSelectionResult_1_3_4 = temp_tempTupleSelectionResult_1_3_5
				set temp_tempTupleSelectionResult_1_14 = tempTupleSelectionResult_1_1_3
				set temp_tempTupleSelectionResult_2_18 = tempTupleSelectionResult_1_2_4
				set temp_tempTupleSelectionResult_3_3 = tempTupleSelectionResult_1_3_4
				set tempTupleSelectionResult_3 = temp_tempTupleSelectionResult_3_3
				call dispatch_UnitOrBuildingOrHeroDefinition_setProjectileLaunchZ(temp_8, tempTupleSelectionResult_3, "\n   UnitTypes, line 296" + wurstStackTrace)
			endif
		endif
		set tempIndex_16 = this_58
		set temp_tempTupleSelectionResult_1_15 = UnitType_model[tempIndex_16]
		set temp_tempTupleSelectionResult_2_19 = UnitType_model_2[tempIndex_16]
		set tempTupleSelectionResult_2_8 = temp_tempTupleSelectionResult_2_19
		if tempTupleSelectionResult_2_8 == 0 then
			call compileError("Missing information: Unit model?")
		endif
		set temp_9 = UnitType_def[this_58]
		set tempIndex_17 = this_58
		set temp_tempTupleSelectionResult_1_16 = UnitType_model[tempIndex_17]
		set temp_tempTupleSelectionResult_2_20 = UnitType_model_2[tempIndex_17]
		set tempTupleSelectionResult_1_8 = temp_tempTupleSelectionResult_1_16
		call dispatch_UnitOrBuildingOrHeroDefinition_setModelFile(temp_9, tempTupleSelectionResult_1_8, "\n   UnitTypes, line 299" + wurstStackTrace)
		set tempIndex_18 = this_58
		set temp_tempTupleSelectionResult_1_1_5 = UnitType_shaddowSize_x[tempIndex_18]
		set temp_tempTupleSelectionResult_1_2_6 = UnitType_shaddowSize_y[tempIndex_18]
		set temp_tempTupleSelectionResult_2_21 = UnitType_shaddowSize[tempIndex_18]
		set tempTupleSelectionResult_2_9 = temp_tempTupleSelectionResult_2_21
		if tempTupleSelectionResult_2_9 == 5 then
			set temp_10 = UnitType_def[this_58]
			set tempIndex_19 = this_58
			set temp_tempTupleSelectionResult_1_1_6 = UnitType_shaddowSize_x[tempIndex_19]
			set temp_tempTupleSelectionResult_1_2_7 = UnitType_shaddowSize_y[tempIndex_19]
			set temp_tempTupleSelectionResult_2_22 = UnitType_shaddowSize[tempIndex_19]
			set tempTupleSelectionResult_1_1_4 = temp_tempTupleSelectionResult_1_1_6
			set tempTupleSelectionResult_1_2_5 = temp_tempTupleSelectionResult_1_2_7
			set temp_tempTupleSelectionResult_1_17 = tempTupleSelectionResult_1_1_4
			set temp_tempTupleSelectionResult_2_23 = tempTupleSelectionResult_1_2_5
			set tempTupleSelectionResult_1_9 = temp_tempTupleSelectionResult_1_17
			call dispatch_UnitOrBuildingOrHeroDefinition_setShadowImageHeight(temp_10, tempTupleSelectionResult_1_9, "\n   UnitTypes, line 301" + wurstStackTrace)
			set temp_11 = UnitType_def[this_58]
			set tempIndex_20 = this_58
			set temp_tempTupleSelectionResult_1_1_7 = UnitType_shaddowSize_x[tempIndex_20]
			set temp_tempTupleSelectionResult_1_2_8 = UnitType_shaddowSize_y[tempIndex_20]
			set temp_tempTupleSelectionResult_2_24 = UnitType_shaddowSize[tempIndex_20]
			set tempTupleSelectionResult_1_1_5 = temp_tempTupleSelectionResult_1_1_7
			set tempTupleSelectionResult_1_2_6 = temp_tempTupleSelectionResult_1_2_8
			set temp_tempTupleSelectionResult_1_18 = tempTupleSelectionResult_1_1_5
			set temp_tempTupleSelectionResult_2_25 = tempTupleSelectionResult_1_2_6
			set tempTupleSelectionResult_2_10 = temp_tempTupleSelectionResult_2_25
			call dispatch_UnitOrBuildingOrHeroDefinition_setShadowImageWidth(temp_11, tempTupleSelectionResult_2_10, "\n   UnitTypes, line 302" + wurstStackTrace)
		endif
		set tempIndex_21 = this_58
		set temp_tempTupleSelectionResult_1_1_8 = UnitType_shaddowPosFix_x[tempIndex_21]
		set temp_tempTupleSelectionResult_1_2_9 = UnitType_shaddowPosFix_y[tempIndex_21]
		set temp_tempTupleSelectionResult_2_26 = UnitType_shaddowPosFix[tempIndex_21]
		set tempTupleSelectionResult_2_11 = temp_tempTupleSelectionResult_2_26
		if tempTupleSelectionResult_2_11 == 5 then
			set temp_12 = UnitType_def[this_58]
			set tempIndex_22 = this_58
			set temp_tempTupleSelectionResult_1_1_9 = UnitType_shaddowPosFix_x[tempIndex_22]
			set temp_tempTupleSelectionResult_1_2_10 = UnitType_shaddowPosFix_y[tempIndex_22]
			set temp_tempTupleSelectionResult_2_27 = UnitType_shaddowPosFix[tempIndex_22]
			set tempTupleSelectionResult_1_1_6 = temp_tempTupleSelectionResult_1_1_9
			set tempTupleSelectionResult_1_2_7 = temp_tempTupleSelectionResult_1_2_10
			set temp_tempTupleSelectionResult_1_19 = tempTupleSelectionResult_1_1_6
			set temp_tempTupleSelectionResult_2_28 = tempTupleSelectionResult_1_2_7
			set tempTupleSelectionResult_1_10 = temp_tempTupleSelectionResult_1_19
			call dispatch_UnitOrBuildingOrHeroDefinition_setShadowImageCenterX(temp_12, tempTupleSelectionResult_1_10, "\n   UnitTypes, line 304" + wurstStackTrace)
			set temp_13 = UnitType_def[this_58]
			set tempIndex_23 = this_58
			set temp_tempTupleSelectionResult_1_1_10 = UnitType_shaddowPosFix_x[tempIndex_23]
			set temp_tempTupleSelectionResult_1_2_11 = UnitType_shaddowPosFix_y[tempIndex_23]
			set temp_tempTupleSelectionResult_2_29 = UnitType_shaddowPosFix[tempIndex_23]
			set tempTupleSelectionResult_1_1_7 = temp_tempTupleSelectionResult_1_1_10
			set tempTupleSelectionResult_1_2_8 = temp_tempTupleSelectionResult_1_2_11
			set temp_tempTupleSelectionResult_1_20 = tempTupleSelectionResult_1_1_7
			set temp_tempTupleSelectionResult_2_30 = tempTupleSelectionResult_1_2_8
			set tempTupleSelectionResult_2_12 = temp_tempTupleSelectionResult_2_30
			call dispatch_UnitOrBuildingOrHeroDefinition_setShadowImageCenterY(temp_13, tempTupleSelectionResult_2_12, "\n   UnitTypes, line 305" + wurstStackTrace)
		endif
		set tempIndex_24 = this_58
		set temp_tempTupleSelectionResult_1_21 = UnitType_scale[tempIndex_24]
		set temp_tempTupleSelectionResult_2_31 = UnitType_scale_2[tempIndex_24]
		set tempTupleSelectionResult_2_13 = temp_tempTupleSelectionResult_2_31
		if tempTupleSelectionResult_2_13 == 5 then
			set temp_14 = UnitType_def[this_58]
			set tempIndex_25 = this_58
			set temp_tempTupleSelectionResult_1_22 = UnitType_scale[tempIndex_25]
			set temp_tempTupleSelectionResult_2_32 = UnitType_scale_2[tempIndex_25]
			set tempTupleSelectionResult_1_11 = temp_tempTupleSelectionResult_1_22
			call dispatch_UnitOrBuildingOrHeroDefinition_setScalingValue(temp_14, tempTupleSelectionResult_1_11, "\n   UnitTypes, line 307" + wurstStackTrace)
		endif
		set tempIndex_26 = this_58
		set temp_tempTupleSelectionResult_1_23 = UnitType_icon[tempIndex_26]
		set temp_tempTupleSelectionResult_2_33 = UnitType_icon_2[tempIndex_26]
		set tempTupleSelectionResult_2_14 = temp_tempTupleSelectionResult_2_33
		if tempTupleSelectionResult_2_14 == 0 then
			call compileError("Missing information: Unit icon?")
		endif
		set temp_15 = UnitType_def[this_58]
		set tempIndex_27 = this_58
		set temp_tempTupleSelectionResult_1_24 = UnitType_icon[tempIndex_27]
		set temp_tempTupleSelectionResult_2_34 = UnitType_icon_2[tempIndex_27]
		set tempTupleSelectionResult_1_12 = temp_tempTupleSelectionResult_1_24
		call dispatch_UnitOrBuildingOrHeroDefinition_setIconGameInterface(temp_15, tempTupleSelectionResult_1_12, "\n   UnitTypes, line 310" + wurstStackTrace)
		call dispatch_UnitOrBuildingOrHeroDefinition_setAttack1CooldownTime(UnitType_def[this_58], UnitType_attackCooldown, "\n   UnitTypes, line 311" + wurstStackTrace)
		set tempIndex_28 = this_58
		set temp_tempTupleSelectionResult_1_25 = UnitType_attackBackswingPoint[tempIndex_28]
		set temp_tempTupleSelectionResult_2_35 = UnitType_attackBackswingPoint_2[tempIndex_28]
		set tempTupleSelectionResult_2_15 = temp_tempTupleSelectionResult_2_35
		if tempTupleSelectionResult_2_15 == 0 then
			call compileError("Missing information: Attack backswing point?")
		endif
		set temp_16 = UnitType_def[this_58]
		set tempIndex_29 = this_58
		set temp_tempTupleSelectionResult_1_26 = UnitType_attackBackswingPoint[tempIndex_29]
		set temp_tempTupleSelectionResult_2_36 = UnitType_attackBackswingPoint_2[tempIndex_29]
		set tempTupleSelectionResult_1_13 = temp_tempTupleSelectionResult_1_26
		call dispatch_UnitOrBuildingOrHeroDefinition_setAttack1AnimationBackswingPoint(temp_16, tempTupleSelectionResult_1_13, "\n   UnitTypes, line 314" + wurstStackTrace)
		set tempIndex_30 = this_58
		set temp_tempTupleSelectionResult_1_27 = UnitType_attackDamagePoint[tempIndex_30]
		set temp_tempTupleSelectionResult_2_37 = UnitType_attackDamagePoint_2[tempIndex_30]
		set tempTupleSelectionResult_2_16 = temp_tempTupleSelectionResult_2_37
		if tempTupleSelectionResult_2_16 == 0 then
			call compileError("Missing information: Attack damage point?")
		endif
		set tempIndex_31 = this_58
		set temp_tempTupleSelectionResult_1_28 = UnitType_attackDamagePoint[tempIndex_31]
		set temp_tempTupleSelectionResult_2_38 = UnitType_attackDamagePoint_2[tempIndex_31]
		set tempTupleSelectionResult_1_14 = temp_tempTupleSelectionResult_1_28
		if tempTupleSelectionResult_1_14 > UnitType_attackCooldown then
			call compileError("Invaild information: To long attack damage point")
		endif
		set temp_17 = UnitType_def[this_58]
		set tempIndex_32 = this_58
		set temp_tempTupleSelectionResult_1_29 = UnitType_attackBackswingPoint[tempIndex_32]
		set temp_tempTupleSelectionResult_2_39 = UnitType_attackBackswingPoint_2[tempIndex_32]
		set tempTupleSelectionResult_1_15 = temp_tempTupleSelectionResult_1_29
		call dispatch_UnitOrBuildingOrHeroDefinition_setAttack1AnimationDamagePoint(temp_17, tempTupleSelectionResult_1_15, "\n   UnitTypes, line 319" + wurstStackTrace)
		call dispatch_UnitOrBuildingOrHeroDefinition_setAttack1DamageBase(UnitType_def[this_58], UnitType_basicAttack, "\n   UnitTypes, line 320" + wurstStackTrace)
		set tempIndex_33 = this_58
		set temp_tempTupleSelectionResult_1_30 = UnitType_ranged[tempIndex_33]
		set temp_tempTupleSelectionResult_2_40 = UnitType_ranged_2[tempIndex_33]
		set tempTupleSelectionResult_1_16 = temp_tempTupleSelectionResult_1_30
		if tempTupleSelectionResult_1_16 then
			set tempIndex_34 = this_58
			set temp_tempTupleSelectionResult_1_31 = UnitType_missleArc[tempIndex_34]
			set temp_tempTupleSelectionResult_2_41 = UnitType_missleArc_2[tempIndex_34]
			set tempTupleSelectionResult_2_17 = temp_tempTupleSelectionResult_2_41
			if tempTupleSelectionResult_2_17 == 3 then
				call compileError("Missing information: Missle arc?")
			endif
			set tempIndex_35 = this_58
			set temp_tempTupleSelectionResult_1_32 = UnitType_missleModel[tempIndex_35]
			set temp_tempTupleSelectionResult_2_42 = UnitType_missleModel_2[tempIndex_35]
			set tempTupleSelectionResult_2_18 = temp_tempTupleSelectionResult_2_42
			if tempTupleSelectionResult_2_18 == 3 then
				call compileError("Missing information: Missle model?")
			endif
			set tempIndex_36 = this_58
			set temp_tempTupleSelectionResult_1_33 = UnitType_missleSpeed[tempIndex_36]
			set temp_tempTupleSelectionResult_2_43 = UnitType_missleSpeed_2[tempIndex_36]
			set tempTupleSelectionResult_2_19 = temp_tempTupleSelectionResult_2_43
			if tempTupleSelectionResult_2_19 == 3 then
				call compileError("Missing information: Missle speed?")
			endif
			set temp_18 = UnitType_def[this_58]
			set tempIndex_37 = this_58
			set temp_tempTupleSelectionResult_1_34 = UnitType_missleArc[tempIndex_37]
			set temp_tempTupleSelectionResult_2_44 = UnitType_missleArc_2[tempIndex_37]
			set tempTupleSelectionResult_1_17 = temp_tempTupleSelectionResult_1_34
			call dispatch_UnitOrBuildingOrHeroDefinition_setAttack1ProjectileArc(temp_18, tempTupleSelectionResult_1_17, "\n   UnitTypes, line 328" + wurstStackTrace)
			set temp_19 = UnitType_def[this_58]
			set tempIndex_38 = this_58
			set temp_tempTupleSelectionResult_1_35 = UnitType_missleModel[tempIndex_38]
			set temp_tempTupleSelectionResult_2_45 = UnitType_missleModel_2[tempIndex_38]
			set tempTupleSelectionResult_1_18 = temp_tempTupleSelectionResult_1_35
			call dispatch_UnitOrBuildingOrHeroDefinition_setAttack1ProjectileArt(temp_19, tempTupleSelectionResult_1_18, "\n   UnitTypes, line 329" + wurstStackTrace)
			set temp_20 = UnitType_def[this_58]
			set tempIndex_39 = this_58
			set temp_tempTupleSelectionResult_1_36 = UnitType_missleSpeed[tempIndex_39]
			set temp_tempTupleSelectionResult_2_46 = UnitType_missleSpeed_2[tempIndex_39]
			set tempTupleSelectionResult_1_19 = temp_tempTupleSelectionResult_1_36
			call dispatch_UnitOrBuildingOrHeroDefinition_setAttack1ProjectileSpeed(temp_20, tempTupleSelectionResult_1_19, "\n   UnitTypes, line 330" + wurstStackTrace)
		endif
		set tempIndex_40 = this_58
		set temp_tempTupleSelectionResult_1_37 = UnitType_attackRange[tempIndex_40]
		set temp_tempTupleSelectionResult_2_47 = UnitType_attackRange_2[tempIndex_40]
		set tempTupleSelectionResult_2_20 = temp_tempTupleSelectionResult_2_47
		if tempTupleSelectionResult_2_20 == 0 then
			call compileError("Missing information: attackrange?")
		endif
		call dispatch_UnitOrBuildingOrHeroDefinition_setAttack1DamageSidesperDie(UnitType_def[this_58], UnitType_diceSides, "\n   UnitTypes, line 333" + wurstStackTrace)
		call dispatch_UnitOrBuildingOrHeroDefinition_setAttack1DamageNumberofDice(UnitType_def[this_58], UnitType_diceCount, "\n   UnitTypes, line 334" + wurstStackTrace)
		set tempIndex_41 = this_58
		set temp_tempTupleSelectionResult_1_38 = UnitType_weaponSound[tempIndex_41]
		set temp_tempTupleSelectionResult_2_48 = UnitType_weaponSound_2[tempIndex_41]
		set tempTupleSelectionResult_2_21 = temp_tempTupleSelectionResult_2_48
		if tempTupleSelectionResult_2_21 == 5 then
			set temp_21 = UnitType_def[this_58]
			set tempIndex_42 = this_58
			set temp_tempTupleSelectionResult_1_39 = UnitType_weaponSound[tempIndex_42]
			set temp_tempTupleSelectionResult_2_49 = UnitType_weaponSound_2[tempIndex_42]
			set tempTupleSelectionResult_1_20 = temp_tempTupleSelectionResult_1_39
			call dispatch_UnitOrBuildingOrHeroDefinition_setAttack1WeaponSound(temp_21, tempTupleSelectionResult_1_20, "\n   UnitTypes, line 336" + wurstStackTrace)
		endif
		set tempIndex_43 = this_58
		set temp_tempTupleSelectionResult_1_40 = UnitType_ranged[tempIndex_43]
		set temp_tempTupleSelectionResult_2_50 = UnitType_ranged_2[tempIndex_43]
		set tempTupleSelectionResult_1_21 = temp_tempTupleSelectionResult_1_40
		if tempTupleSelectionResult_1_21 then
			call dispatch_UnitOrBuildingOrHeroDefinition_setAttack1WeaponType(UnitType_def[this_58], "missile", "\n   UnitTypes, line 338" + wurstStackTrace)
			call dispatch_UnitOrBuildingOrHeroDefinition_setAttack1ProjectileHomingEnabled(UnitType_def[this_58], true, "\n   UnitTypes, line 339" + wurstStackTrace)
		endif
		set tempIndex_44 = this_58
		set temp_tempTupleSelectionResult_1_41 = UnitType_armor[tempIndex_44]
		set temp_tempTupleSelectionResult_2_51 = UnitType_armor_2[tempIndex_44]
		set tempTupleSelectionResult_2_22 = temp_tempTupleSelectionResult_2_51
		if tempTupleSelectionResult_2_22 == 0 then
			call compileError("Missing information: Basic armor?")
		endif
		set tempIndex_45 = this_58
		set temp_tempTupleSelectionResult_1_42 = UnitType_armorType[tempIndex_45]
		set temp_tempTupleSelectionResult_2_52 = UnitType_armorType_2[tempIndex_45]
		set tempTupleSelectionResult_2_23 = temp_tempTupleSelectionResult_2_52
		if tempTupleSelectionResult_2_23 == 5 then
			set temp_22 = UnitType_def[this_58]
			set tempIndex_46 = this_58
			set temp_tempTupleSelectionResult_1_43 = UnitType_armorType[tempIndex_46]
			set temp_tempTupleSelectionResult_2_53 = UnitType_armorType_2[tempIndex_46]
			set tempTupleSelectionResult_1_22 = temp_tempTupleSelectionResult_1_43
			call dispatch_UnitOrBuildingOrHeroDefinition_setArmorSoundType(temp_22, tempTupleSelectionResult_1_22, "\n   UnitTypes, line 343" + wurstStackTrace)
		endif
		set temp_23 = UnitType_def[this_58]
		set tempIndex_47 = this_58
		set temp_tempTupleSelectionResult_1_44 = UnitType_attackRange[tempIndex_47]
		set temp_tempTupleSelectionResult_2_54 = UnitType_attackRange_2[tempIndex_47]
		set tempTupleSelectionResult_1_23 = temp_tempTupleSelectionResult_1_44
		call dispatch_UnitOrBuildingOrHeroDefinition_setAcquisitionRange(temp_23, tempTupleSelectionResult_1_23 * 1., "\n   UnitTypes, line 344" + wurstStackTrace)
		set tempIndex_48 = this_58
		set temp_tempTupleSelectionResult_1_45 = UnitType_soundSet[tempIndex_48]
		set temp_tempTupleSelectionResult_2_55 = UnitType_soundSet_2[tempIndex_48]
		set tempTupleSelectionResult_2_24 = temp_tempTupleSelectionResult_2_55
		if tempTupleSelectionResult_2_24 == 5 then
			set temp_24 = UnitType_def[this_58]
			set tempIndex_49 = this_58
			set temp_tempTupleSelectionResult_1_46 = UnitType_soundSet[tempIndex_49]
			set temp_tempTupleSelectionResult_2_56 = UnitType_soundSet_2[tempIndex_49]
			set tempTupleSelectionResult_1_24 = temp_tempTupleSelectionResult_1_46
			call dispatch_UnitOrBuildingOrHeroDefinition_setUnitSoundSet(temp_24, tempTupleSelectionResult_1_24, "\n   UnitTypes, line 346" + wurstStackTrace)
		endif
		set tempIndex_50 = this_58
		set temp_tempTupleSelectionResult_1_47 = UnitType_name[tempIndex_50]
		set temp_tempTupleSelectionResult_2_57 = UnitType_name_2[tempIndex_50]
		set tempTupleSelectionResult_2_25 = temp_tempTupleSelectionResult_2_57
		if tempTupleSelectionResult_2_25 == 0 then
			call compileError("Missing information: Unit name?")
		endif
		set temp_25 = UnitType_def[this_58]
		set tempIndex_51 = this_58
		set temp_tempTupleSelectionResult_1_48 = UnitType_name[tempIndex_51]
		set temp_tempTupleSelectionResult_2_58 = UnitType_name_2[tempIndex_51]
		set tempTupleSelectionResult_1_25 = temp_tempTupleSelectionResult_1_48
		call dispatch_W3UDefinition_setName(temp_25, tempTupleSelectionResult_1_25, "\n   UnitTypes, line 349" + wurstStackTrace)
		set tempIndex_52 = this_58
		set temp_tempTupleSelectionResult_1_49 = UnitType_collisionSize[tempIndex_52]
		set temp_tempTupleSelectionResult_2_59 = UnitType_collisionSize_2[tempIndex_52]
		set tempTupleSelectionResult_2_26 = temp_tempTupleSelectionResult_2_59
		if tempTupleSelectionResult_2_26 == 0 then
			call compileError("Missing information: Collision size?")
		endif
		set temp_26 = UnitType_def[this_58]
		set tempIndex_53 = this_58
		set temp_tempTupleSelectionResult_1_50 = UnitType_collisionSize[tempIndex_53]
		set temp_tempTupleSelectionResult_2_60 = UnitType_collisionSize_2[tempIndex_53]
		set tempTupleSelectionResult_1_26 = temp_tempTupleSelectionResult_1_50
		call dispatch_UnitOrBuildingOrHeroDefinition_setCollisionSize(temp_26, tempTupleSelectionResult_1_26, "\n   UnitTypes, line 352" + wurstStackTrace)
		call dispatch_UnitOrBuildingOrHeroDefinition_setFoodCost(UnitType_def[this_58], UnitType_foodCost, "\n   UnitTypes, line 353" + wurstStackTrace)
		set tempIndex_54 = this_58
		set temp_tempTupleSelectionResult_1_51 = UnitType_life[tempIndex_54]
		set temp_tempTupleSelectionResult_2_61 = UnitType_life_2[tempIndex_54]
		set tempTupleSelectionResult_2_27 = temp_tempTupleSelectionResult_2_61
		if tempTupleSelectionResult_2_27 == 0 then
			call compileError("Missing information: unit life?")
		endif
		set temp_27 = UnitType_def[this_58]
		set tempIndex_55 = this_58
		set temp_tempTupleSelectionResult_1_52 = UnitType_life[tempIndex_55]
		set temp_tempTupleSelectionResult_2_62 = UnitType_life_2[tempIndex_55]
		set tempTupleSelectionResult_1_27 = temp_tempTupleSelectionResult_1_52
		call dispatch_UnitOrBuildingOrHeroDefinition_setHitPointsMaximumBase(temp_27, tempTupleSelectionResult_1_27, "\n   UnitTypes, line 356" + wurstStackTrace)
		set tempIndex_56 = this_58
		set temp_tempTupleSelectionResult_1_53 = UnitType_mana[tempIndex_56]
		set temp_tempTupleSelectionResult_2_63 = UnitType_mana_2[tempIndex_56]
		set tempTupleSelectionResult_2_28 = temp_tempTupleSelectionResult_2_63
		if tempTupleSelectionResult_2_28 == 5 then
			set temp_28 = UnitType_def[this_58]
			set tempIndex_57 = this_58
			set temp_tempTupleSelectionResult_1_54 = UnitType_mana[tempIndex_57]
			set temp_tempTupleSelectionResult_2_64 = UnitType_mana_2[tempIndex_57]
			set tempTupleSelectionResult_1_28 = temp_tempTupleSelectionResult_1_54
			call dispatch_UnitOrBuildingOrHeroDefinition_setManaMaximum(temp_28, tempTupleSelectionResult_1_28, "\n   UnitTypes, line 358" + wurstStackTrace)
			call dispatch_UnitOrBuildingOrHeroDefinition_setManaInitialAmount(UnitType_def[this_58], UnitType_startMana, "\n   UnitTypes, line 359" + wurstStackTrace)
		endif
		call dispatch_UnitOrBuildingOrHeroDefinition_setSightRadiusDay(UnitType_def[this_58], UnitType_sightRange, "\n   UnitTypes, line 360" + wurstStackTrace)
		call dispatch_UnitOrBuildingOrHeroDefinition_setSightRadiusNight(UnitType_def[this_58], UnitType_sightRange, "\n   UnitTypes, line 361" + wurstStackTrace)
	else
		set temp_29 = UnitTypes_unitTypes
		set tempIndex_58 = this_58
		set temp_tempTupleSelectionResult_1_55 = UnitType_name[tempIndex_58]
		set temp_tempTupleSelectionResult_2_65 = UnitType_name_2[tempIndex_58]
		set tempTupleSelectionResult_1_29 = temp_tempTupleSelectionResult_1_55
		call dispatch_HashMap_put(temp_29, StringHash(tempTupleSelectionResult_1_29), this_58, "\n   UnitTypes, line 363" + wurstStackTrace)
		call addUnitToPreload(UnitType_id[this_58], "\n   UnitTypes, line 364" + wurstStackTrace)
	endif
endfunction

function HeroDefinition_setAgilityPerLevel takes integer this_58, real data returns nothing
	local integer tempIndex = this_58
	call ObjectDefinition_setUnreal(W3UDefinition_def[tempIndex], "uagp", data)
endfunction

function dispatch_HeroDefinition_setAgilityPerLevel takes integer this_58, real data, string wurstStackTrace returns nothing
	if W3UDefinition_typeId[this_58] == 0 then
		if this_58 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling HeroDefinition.setAgilityPerLevel" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called HeroDefinition.setAgilityPerLevel on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call HeroDefinition_setAgilityPerLevel(this_58, data)
endfunction

function HeroDefinition_setHeroAbilities takes integer this_58, string data returns nothing
	local integer tempIndex = this_58
	call ObjectDefinition_setString(W3UDefinition_def[tempIndex], "uhab", data)
endfunction

function dispatch_HeroDefinition_setHeroAbilities takes integer this_58, string data, string wurstStackTrace returns nothing
	if W3UDefinition_typeId[this_58] == 0 then
		if this_58 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling HeroDefinition.setHeroAbilities" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called HeroDefinition.setHeroAbilities on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call HeroDefinition_setHeroAbilities(this_58, data)
endfunction

function HeroDefinition_setIntelligencePerLevel takes integer this_58, real data returns nothing
	local integer tempIndex = this_58
	call ObjectDefinition_setUnreal(W3UDefinition_def[tempIndex], "uinp", data)
endfunction

function dispatch_HeroDefinition_setIntelligencePerLevel takes integer this_58, real data, string wurstStackTrace returns nothing
	if W3UDefinition_typeId[this_58] == 0 then
		if this_58 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling HeroDefinition.setIntelligencePerLevel" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called HeroDefinition.setIntelligencePerLevel on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call HeroDefinition_setIntelligencePerLevel(this_58, data)
endfunction

function HeroDefinition_setPrimaryAttribute takes integer this_58, string data returns nothing
	local integer tempIndex = this_58
	call ObjectDefinition_setString(W3UDefinition_def[tempIndex], "upra", data)
endfunction

function dispatch_HeroDefinition_setPrimaryAttribute takes integer this_58, string data, string wurstStackTrace returns nothing
	if W3UDefinition_typeId[this_58] == 0 then
		if this_58 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling HeroDefinition.setPrimaryAttribute" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called HeroDefinition.setPrimaryAttribute on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call HeroDefinition_setPrimaryAttribute(this_58, data)
endfunction

function HeroDefinition_setProperNames takes integer this_58, string data returns nothing
	local integer tempIndex = this_58
	call ObjectDefinition_setString(W3UDefinition_def[tempIndex], "upro", data)
endfunction

function dispatch_HeroDefinition_setProperNames takes integer this_58, string data, string wurstStackTrace returns nothing
	if W3UDefinition_typeId[this_58] == 0 then
		if this_58 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling HeroDefinition.setProperNames" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called HeroDefinition.setProperNames on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call HeroDefinition_setProperNames(this_58, data)
endfunction

function HeroDefinition_setStartingAgility takes integer this_58, integer data returns nothing
	local integer tempIndex = this_58
	call ObjectDefinition_setInt(W3UDefinition_def[tempIndex], "uagi", data)
endfunction

function dispatch_HeroDefinition_setStartingAgility takes integer this_58, integer data, string wurstStackTrace returns nothing
	if W3UDefinition_typeId[this_58] == 0 then
		if this_58 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling HeroDefinition.setStartingAgility" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called HeroDefinition.setStartingAgility on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call HeroDefinition_setStartingAgility(this_58, data)
endfunction

function HeroDefinition_setStartingIntelligence takes integer this_58, integer data returns nothing
	local integer tempIndex = this_58
	call ObjectDefinition_setInt(W3UDefinition_def[tempIndex], "uint", data)
endfunction

function dispatch_HeroDefinition_setStartingIntelligence takes integer this_58, integer data, string wurstStackTrace returns nothing
	if W3UDefinition_typeId[this_58] == 0 then
		if this_58 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling HeroDefinition.setStartingIntelligence" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called HeroDefinition.setStartingIntelligence on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call HeroDefinition_setStartingIntelligence(this_58, data)
endfunction

function HeroDefinition_setStartingStrength takes integer this_58, integer data returns nothing
	local integer tempIndex = this_58
	call ObjectDefinition_setInt(W3UDefinition_def[tempIndex], "ustr", data)
endfunction

function dispatch_HeroDefinition_setStartingStrength takes integer this_58, integer data, string wurstStackTrace returns nothing
	if W3UDefinition_typeId[this_58] == 0 then
		if this_58 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling HeroDefinition.setStartingStrength" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called HeroDefinition.setStartingStrength on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call HeroDefinition_setStartingStrength(this_58, data)
endfunction

function HeroDefinition_setStrengthPerLevel takes integer this_58, real data returns nothing
	local integer tempIndex = this_58
	call ObjectDefinition_setUnreal(W3UDefinition_def[tempIndex], "ustp", data)
endfunction

function dispatch_HeroDefinition_setStrengthPerLevel takes integer this_58, real data, string wurstStackTrace returns nothing
	if W3UDefinition_typeId[this_58] == 0 then
		if this_58 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling HeroDefinition.setStrengthPerLevel" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called HeroDefinition.setStrengthPerLevel on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call HeroDefinition_setStrengthPerLevel(this_58, data)
endfunction

function HeroType_finalize takes integer this_58, string wurstStackTrace returns nothing
	local integer tempIndex
	local integer tempTupleSelectionResult_2
	local string temp_tempTupleSelectionResult_1
	local integer temp_tempTupleSelectionResult_2
	local integer tempIndex_2
	local string tempTupleSelectionResult_1
	local string temp_tempTupleSelectionResult_1_2
	local integer temp_tempTupleSelectionResult_2_2
	local integer tempIndex_3
	local string tempTupleSelectionResult_1_2
	local string temp_tempTupleSelectionResult_1_3
	local integer temp_tempTupleSelectionResult_2_3
	local integer temp
	local integer temp_2
	if CompiletimeInit_compiletime then
		call UnitType_finalize(this_58, "\n   HeroTypes, line 40" + wurstStackTrace)
		call dispatch_HeroDefinition_setHeroAbilities(UnitType_def[this_58], HeroType_heroAbis, "\n   HeroTypes, line 41" + wurstStackTrace)
		call dispatch_HeroDefinition_setStartingStrength(UnitType_def[this_58], 0, "\n   HeroTypes, line 42" + wurstStackTrace)
		call dispatch_HeroDefinition_setStrengthPerLevel(UnitType_def[this_58], 0., "\n   HeroTypes, line 43" + wurstStackTrace)
		call dispatch_HeroDefinition_setStartingAgility(UnitType_def[this_58], 0, "\n   HeroTypes, line 44" + wurstStackTrace)
		call dispatch_HeroDefinition_setAgilityPerLevel(UnitType_def[this_58], 0., "\n   HeroTypes, line 45" + wurstStackTrace)
		call dispatch_HeroDefinition_setStartingIntelligence(UnitType_def[this_58], 0, "\n   HeroTypes, line 46" + wurstStackTrace)
		call dispatch_HeroDefinition_setIntelligencePerLevel(UnitType_def[this_58], 0., "\n   HeroTypes, line 47" + wurstStackTrace)
		call dispatch_HeroDefinition_setPrimaryAttribute(UnitType_def[this_58], "strength", "\n   HeroTypes, line 48" + wurstStackTrace)
		set tempIndex = this_58
		set temp_tempTupleSelectionResult_1 = HeroType_properName[tempIndex]
		set temp_tempTupleSelectionResult_2 = HeroType_properName_2[tempIndex]
		set tempTupleSelectionResult_2 = temp_tempTupleSelectionResult_2
		if tempTupleSelectionResult_2 == 0 then
			call compileError("Missing information: Hero proper name?")
		endif
		set temp = UnitType_def[this_58]
		set tempIndex_2 = this_58
		set temp_tempTupleSelectionResult_1_2 = HeroType_properName[tempIndex_2]
		set temp_tempTupleSelectionResult_2_2 = HeroType_properName_2[tempIndex_2]
		set tempTupleSelectionResult_1 = temp_tempTupleSelectionResult_1_2
		call dispatch_HeroDefinition_setProperNames(temp, tempTupleSelectionResult_1, "\n   HeroTypes, line 51" + wurstStackTrace)
	else
		set temp_2 = HeroTypes_heros
		set tempIndex_3 = this_58
		set temp_tempTupleSelectionResult_1_3 = UnitType_name[tempIndex_3]
		set temp_tempTupleSelectionResult_2_3 = UnitType_name_2[tempIndex_3]
		set tempTupleSelectionResult_1_2 = temp_tempTupleSelectionResult_1_3
		call dispatch_HashMap_put(temp_2, StringHash(tempTupleSelectionResult_1_2), this_58, "\n   HeroTypes, line 53" + wurstStackTrace)
	endif
	call UnitType_finalize(this_58, "\n   HeroTypes, line 54" + wurstStackTrace)
endfunction

function dispatch_HeroType_finalize takes integer this_58, string wurstStackTrace returns nothing
	if UnitType_typeId[this_58] == 0 then
		if this_58 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling HeroType.finalize" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called HeroType.finalize on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call HeroType_finalize(this_58, "\n   HeroTypes, line 38" + wurstStackTrace)
endfunction

function alloc_HeroType takes nothing returns integer
	local integer this_58
	if UnitType_firstFree == 0 then
		set UnitType_maxIndex = UnitType_maxIndex + 1
		set this_58 = UnitType_maxIndex
	else
		set UnitType_firstFree = UnitType_firstFree - 1
		set this_58 = UnitType_nextFree[UnitType_firstFree]
	endif
	set UnitType_typeId[this_58] = 860
	return this_58
endfunction

function alloc_HeroDefinition takes nothing returns integer
	local integer this_58
	if W3UDefinition_firstFree == 0 then
		set W3UDefinition_maxIndex = W3UDefinition_maxIndex + 1
		set this_58 = W3UDefinition_maxIndex
	else
		set W3UDefinition_firstFree = W3UDefinition_firstFree - 1
		set this_58 = W3UDefinition_nextFree[W3UDefinition_firstFree]
	endif
	set W3UDefinition_typeId[this_58] = 18
	return this_58
endfunction

function createObjectDefinition takes string fileType, integer newId, integer deriveFrom returns integer
	return 0
endfunction

function construct_W3UDefinition takes integer this_58, integer newUnitId, integer origUnitId returns nothing
	set W3UDefinition_def[this_58] = createObjectDefinition("w3u", newUnitId, origUnitId)
endfunction

function construct_UnitOrBuildingOrHeroDefinition takes integer this_58, integer newUnitId, integer origUnitId returns nothing
	call construct_W3UDefinition(this_58, newUnitId, origUnitId)
endfunction

function construct_UnitOrHeroDefinition takes integer this_58, integer newId, integer origId returns nothing
	call construct_UnitOrBuildingOrHeroDefinition(this_58, newId, origId)
endfunction

function construct_HeroDefinition takes integer this_58, integer newId, integer origId returns nothing
	call construct_UnitOrHeroDefinition(this_58, newId, origId)
endfunction

function new_HeroDefinition takes integer newId, integer origId returns integer
	local integer this_58 = alloc_HeroDefinition()
	call construct_HeroDefinition(this_58, newId, origId)
	return this_58
endfunction

function alloc_StringList takes nothing returns integer
	local integer this_58
	if StringList_firstFree == 0 then
		set StringList_maxIndex = StringList_maxIndex + 1
		set this_58 = StringList_maxIndex
	else
		set StringList_firstFree = StringList_firstFree - 1
		set this_58 = StringList_nextFree[StringList_firstFree]
	endif
	set StringList_typeId[this_58] = 781
	return this_58
endfunction

function construct_StringList takes integer this_58 returns nothing
	set StringList_first[this_58] = 0
endfunction

function new_StringList takes nothing returns integer
	local integer this_58 = alloc_StringList()
	call construct_StringList(this_58)
	return this_58
endfunction

function construct_UnitType takes integer this_58, integer id returns nothing
	local integer tempIndex = this_58
	local integer tempIndex_2
	local integer tempIndex_3
	local integer tempIndex_4
	local integer tempIndex_5
	local integer tempIndex_6
	local integer tempIndex_7
	local integer tempIndex_8
	local integer tempIndex_9
	local integer tempIndex_10
	local integer tempIndex_11
	local integer tempIndex_12
	local integer tempIndex_13
	local integer tempIndex_14
	local integer tempIndex_15
	local integer tempIndex_16
	local integer tempIndex_17
	local integer tempIndex_18
	local integer tempIndex_19
	local integer tempIndex_20
	local integer tempIndex_21
	local integer tempIndex_22
	local integer tempIndex_23
	local integer tempIndex_24
	local integer tempIndex_25
	local integer tempIndex_26
	local integer tempIndex_27
	local integer tempIndex_28
	local integer tempIndex_29
	local integer tempIndex_30
	local integer tempIndex_31
	local integer tempIndex_32
	local integer tempIndex_33
	set UnitType_moveSpeed[tempIndex] = UnitType_basicMovespeed
	set UnitType_moveSpeed_2[tempIndex] = 2
	set UnitType_abis[this_58] = new_StringList()
	set tempIndex_2 = this_58
	set UnitType_walkSpeed[tempIndex_2] = 0.
	set UnitType_walkSpeed_2[tempIndex_2] = 1
	set tempIndex_3 = this_58
	set UnitType_runSpeed[tempIndex_3] = 0.
	set UnitType_runSpeed_2[tempIndex_3] = 1
	set tempIndex_4 = this_58
	set UnitType_selectionRadius[tempIndex_4] = 0.
	set UnitType_selectionRadius_2[tempIndex_4] = 1
	set tempIndex_5 = this_58
	set UnitType_ranged[tempIndex_5] = false
	set UnitType_ranged_2[tempIndex_5] = 0
	set tempIndex_6 = this_58
	set UnitType_missleTargetZ[tempIndex_6] = 0.
	set UnitType_missleTargetZ_2[tempIndex_6] = 3
	set tempIndex_7 = this_58
	set UnitType_missleStart_x[tempIndex_7] = 0.
	set UnitType_missleStart_y[tempIndex_7] = 0.
	set UnitType_missleStart_z[tempIndex_7] = 0.
	set UnitType_missleStart[tempIndex_7] = 3
	set tempIndex_8 = this_58
	set UnitType_model[tempIndex_8] = ""
	set UnitType_model_2[tempIndex_8] = 0
	set tempIndex_9 = this_58
	set UnitType_shaddowSize_x[tempIndex_9] = 0.
	set UnitType_shaddowSize_y[tempIndex_9] = 0.
	set UnitType_shaddowSize[tempIndex_9] = 1
	set tempIndex_10 = this_58
	set UnitType_shaddowPosFix_x[tempIndex_10] = 0.
	set UnitType_shaddowPosFix_y[tempIndex_10] = 0.
	set UnitType_shaddowPosFix[tempIndex_10] = 1
	set tempIndex_11 = this_58
	set UnitType_scale[tempIndex_11] = 0.
	set UnitType_scale_2[tempIndex_11] = 1
	set tempIndex_12 = this_58
	set UnitType_icon[tempIndex_12] = ""
	set UnitType_icon_2[tempIndex_12] = 0
	set tempIndex_13 = this_58
	set UnitType_attackBackswingPoint[tempIndex_13] = 0.
	set UnitType_attackBackswingPoint_2[tempIndex_13] = 0
	set tempIndex_14 = this_58
	set UnitType_attackDamagePoint[tempIndex_14] = 0.
	set UnitType_attackDamagePoint_2[tempIndex_14] = 0
	set tempIndex_15 = this_58
	set UnitType_attack[tempIndex_15] = 0
	set UnitType_attack_2[tempIndex_15] = 0
	set tempIndex_16 = this_58
	set UnitType_missleArc[tempIndex_16] = 0.
	set UnitType_missleArc_2[tempIndex_16] = 3
	set tempIndex_17 = this_58
	set UnitType_missleModel[tempIndex_17] = ""
	set UnitType_missleModel_2[tempIndex_17] = 3
	set tempIndex_18 = this_58
	set UnitType_missleSpeed[tempIndex_18] = 0
	set UnitType_missleSpeed_2[tempIndex_18] = 3
	set tempIndex_19 = this_58
	set UnitType_attackRange[tempIndex_19] = 0
	set UnitType_attackRange_2[tempIndex_19] = 0
	set tempIndex_20 = this_58
	set tempIndex_21 = this_58
	set UnitType_weaponSound[tempIndex_21] = 0
	set UnitType_weaponSound_2[tempIndex_21] = 1
	set tempIndex_22 = this_58
	set UnitType_armor[tempIndex_22] = 0
	set UnitType_armor_2[tempIndex_22] = 0
	set tempIndex_23 = this_58
	set UnitType_armorType[tempIndex_23] = 0
	set UnitType_armorType_2[tempIndex_23] = 1
	set tempIndex_24 = this_58
	set UnitType_soundSet[tempIndex_24] = ""
	set UnitType_soundSet_2[tempIndex_24] = 1
	set tempIndex_25 = this_58
	set UnitType_name[tempIndex_25] = ""
	set UnitType_name_2[tempIndex_25] = 0
	set tempIndex_26 = this_58
	set UnitType_collisionSize[tempIndex_26] = 0.
	set UnitType_collisionSize_2[tempIndex_26] = 1
	set tempIndex_27 = this_58
	set UnitType_mana[tempIndex_27] = 0
	set UnitType_mana_2[tempIndex_27] = 1
	set tempIndex_28 = this_58
	set UnitType_life[tempIndex_28] = 0
	set UnitType_life_2[tempIndex_28] = 0
	set tempIndex_29 = this_58
	set tempIndex_30 = this_58
	set UnitType_bounty[tempIndex_30] = UnitType_baseBounty
	set UnitType_bounty_2[tempIndex_30] = 1
	set tempIndex_31 = this_58
	set UnitType_mass[tempIndex_31] = UnitType_baseMass
	set UnitType_mass_2[tempIndex_31] = 1
	set tempIndex_32 = this_58
	set UnitType_radius[tempIndex_32] = UnitType_baseRadius
	set UnitType_radius_2[tempIndex_32] = 1
	set tempIndex_33 = this_58
	set UnitType_height[tempIndex_33] = UnitType_baseHeight
	set UnitType_height_2[tempIndex_33] = 1
	set UnitType_id[this_58] = id
	set UnitType_def[this_58] = new_HeroDefinition(id, UnitType_basicId)
endfunction

function fourChar takes integer a, integer b, integer c, integer d_2 returns integer
	return ((a * 256 + b) * 256 + c) * 256 + d_2
endfunction

function nextValid takes integer c returns integer
	local integer r = c + 1
	if r == 95 then
		set r = r + 1
	endif
	return r
endfunction

function newId takes integer prefix, string wurstStackTrace returns integer
	local integer i
	local integer j
	local integer temp
	if ObjectIdGenerator_helperActivator then
		set i = 0
		loop
			exitwhen i > 2
			if ObjectIdGenerator_id[i] < 126 then
				set ObjectIdGenerator_id[i] = nextValid(ObjectIdGenerator_id[i])
				set j = 0
				set temp = i - 1
				loop
					exitwhen j > temp
					set ObjectIdGenerator_id[j] = 33
					set j = j + 1
				endloop
				return fourChar(prefix, ObjectIdGenerator_id[2], ObjectIdGenerator_id[1], ObjectIdGenerator_id[0])
			endif
			set i = i + 1
		endloop
		call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "No vaild id left" + wurstStackTrace)
		call I2S(1 / 0)
	endif
	return 0
endfunction

function genHeroId takes string wurstStackTrace returns integer
	return newId(ObjectIdGenerator_heroPrefix, "\n   ObjectIdGenerator, line 36" + wurstStackTrace)
endfunction

function construct_HeroType takes integer this_58, string wurstStackTrace returns nothing
	local integer tempIndex
	local integer tempIndex_2
	local integer tempIndex_3
	local integer tempIndex_4
	local integer tempIndex_5
	local integer tempIndex_6
	call construct_UnitType(this_58, genHeroId("\n   HeroTypes, line 36" + wurstStackTrace))
	set tempIndex = this_58
	set HeroType_properName[tempIndex] = ""
	set HeroType_properName_2[tempIndex] = 0
	set tempIndex_2 = this_58
	set tempIndex_3 = this_58
	set tempIndex_4 = this_58
	set tempIndex_5 = this_58
	set tempIndex_6 = this_58
endfunction

function new_HeroType takes string wurstStackTrace returns integer
	local integer this_58 = alloc_HeroType()
	call construct_HeroType(this_58, "\n   HeroTypes, line 35" + wurstStackTrace)
	return this_58
endfunction

function HeroInit_initHelper takes string wurstStackTrace returns boolean
	set HeroInit_t = new_HeroType("\n   HeroTypes, line 15" + wurstStackTrace)
	call TestHero_settings(HeroInit_t, "\n   HeroTypes, line 16" + wurstStackTrace)
	call dispatch_HeroType_finalize(HeroInit_t, "\n   HeroTypes, line 17" + wurstStackTrace)
	return true
endfunction

function alloc_Ability takes nothing returns integer
	local integer this_58
	if Ability_firstFree == 0 then
		set Ability_maxIndex = Ability_maxIndex + 1
		set this_58 = Ability_maxIndex
	else
		set Ability_firstFree = Ability_firstFree - 1
		set this_58 = Ability_nextFree[Ability_firstFree]
	endif
	return this_58
endfunction

function construct_Ability takes integer this_58, integer id, integer lvl returns nothing
	set Ability_id[this_58] = id
	set Ability_lvl[this_58] = lvl
endfunction

function new_Ability takes integer id, integer lvl returns integer
	local integer this_58 = alloc_Ability()
	call construct_Ability(this_58, id, lvl)
	return this_58
endfunction

function addAbilityToPreload takes integer id, integer lvl, string wurstStackTrace returns nothing
	call dispatch_HashList_add(PreloadSystem_abilitysToPreload, new_Ability(id, lvl), "\n   PreloadSystem, line 40" + wurstStackTrace)
endfunction

function ObjectDefinition_setLvlDataInt takes integer this_key, string modification, integer lvl, integer dataPointer, integer value returns nothing
endfunction

function AbilityDefinitionAgilityBonusPlus1_setAgilityBonus takes integer this_58, integer level, integer value returns nothing
	local integer tempIndex = this_58
	call ObjectDefinition_setLvlDataInt(AbilityDefinition_def[tempIndex], "Iagi", level, 1, value)
endfunction

function dispatch_AbilityDefinitionAgilityBonusPlus1_setAgilityBonus takes integer this_58, integer level, integer value, string wurstStackTrace returns nothing
	if AbilityDefinition_typeId[this_58] == 0 then
		if this_58 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling AbilityDefinitionAgilityBonusPlus1.setAgilityBonus" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called AbilityDefinitionAgilityBonusPlus1.setAgilityBonus on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call AbilityDefinitionAgilityBonusPlus1_setAgilityBonus(this_58, level, value)
endfunction

function ObjectDefinition_setLvlDataBoolean takes integer this_key, string modification, integer lvl, integer dataPointer, boolean value returns nothing
	if value then
		call ObjectDefinition_setLvlDataInt(this_key, modification, lvl, dataPointer, 1)
	else
		call ObjectDefinition_setLvlDataInt(this_key, modification, lvl, dataPointer, 0)
	endif
endfunction

function AbilityDefinitionAgilityBonusPlus1_setHideButton takes integer this_58, integer level, boolean value returns nothing
	local integer tempIndex = this_58
	call ObjectDefinition_setLvlDataBoolean(AbilityDefinition_def[tempIndex], "Ihid", level, 4, value)
endfunction

function dispatch_AbilityDefinitionAgilityBonusPlus1_setHideButton takes integer this_58, integer level, boolean value, string wurstStackTrace returns nothing
	if AbilityDefinition_typeId[this_58] == 0 then
		if this_58 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling AbilityDefinitionAgilityBonusPlus1.setHideButton" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called AbilityDefinitionAgilityBonusPlus1.setHideButton on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call AbilityDefinitionAgilityBonusPlus1_setHideButton(this_58, level, value)
endfunction

function ObjectDefinition_setLvlDataString takes integer this_key, string modification, integer lvl, integer dataPointer, string value returns nothing
endfunction

function AbilityDefinition_setEditorSuffix takes integer this_58, string value returns nothing
	local integer tempIndex = this_58
	call ObjectDefinition_setLvlDataString(AbilityDefinition_def[tempIndex], "ansf", 0, 0, value)
endfunction

function dispatch_AbilityDefinition_setEditorSuffix takes integer this_58, string value, string wurstStackTrace returns nothing
	if AbilityDefinition_typeId[this_58] == 0 then
		if this_58 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling AbilityDefinition.setEditorSuffix" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called AbilityDefinition.setEditorSuffix on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	if AbilityDefinition_typeId[this_58] <= 32 then
		if AbilityDefinition_typeId[this_58] <= 27 then
			call AbilityDefinition_setEditorSuffix(this_58, value)
		else
			call AbilityDefinition_setEditorSuffix(this_58, value)
		endif
	else
		call AbilityDefinition_setEditorSuffix(this_58, value)
	endif
endfunction

function AbilityDefinition_setItemAbility takes integer this_58, boolean value returns nothing
	local integer tempIndex = this_58
	call ObjectDefinition_setLvlDataBoolean(AbilityDefinition_def[tempIndex], "aite", 0, 0, value)
endfunction

function dispatch_AbilityDefinition_setItemAbility takes integer this_58, boolean value, string wurstStackTrace returns nothing
	if AbilityDefinition_typeId[this_58] == 0 then
		if this_58 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling AbilityDefinition.setItemAbility" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called AbilityDefinition.setItemAbility on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	if AbilityDefinition_typeId[this_58] <= 32 then
		if AbilityDefinition_typeId[this_58] <= 27 then
			call AbilityDefinition_setItemAbility(this_58, value)
		else
			call AbilityDefinition_setItemAbility(this_58, value)
		endif
	else
		call AbilityDefinition_setItemAbility(this_58, value)
	endif
endfunction

function AbilityDefinition_setName takes integer this_58, string value returns nothing
	local integer tempIndex = this_58
	call ObjectDefinition_setLvlDataString(AbilityDefinition_def[tempIndex], "anam", 0, 0, value)
endfunction

function dispatch_AbilityDefinition_setName takes integer this_58, string value, string wurstStackTrace returns nothing
	if AbilityDefinition_typeId[this_58] == 0 then
		if this_58 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling AbilityDefinition.setName" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called AbilityDefinition.setName on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	if AbilityDefinition_typeId[this_58] <= 32 then
		if AbilityDefinition_typeId[this_58] <= 27 then
			call AbilityDefinition_setName(this_58, value)
		else
			call AbilityDefinition_setName(this_58, value)
		endif
	else
		call AbilityDefinition_setName(this_58, value)
	endif
endfunction

function int_pow takes integer this_58, integer n returns integer
	local integer result
	local integer i
	local integer temp
	if n == 0 then
		return 1
	endif
	set result = this_58
	set i = 1
	set temp = n - 1
	loop
		exitwhen i > temp
		set result = result * this_58
		set i = i + 1
	endloop
	return result
endfunction

function alloc_AbilityDefinitionAgilityBonusPlus1 takes nothing returns integer
	local integer this_58
	if AbilityDefinition_firstFree == 0 then
		set AbilityDefinition_maxIndex = AbilityDefinition_maxIndex + 1
		set this_58 = AbilityDefinition_maxIndex
	else
		set AbilityDefinition_firstFree = AbilityDefinition_firstFree - 1
		set this_58 = AbilityDefinition_nextFree[AbilityDefinition_firstFree]
	endif
	set AbilityDefinition_typeId[this_58] = 47
	return this_58
endfunction

function construct_AbilityDefinition takes integer this_58, integer newAbilityId, integer origAbilityId returns nothing
	set AbilityDefinition_def[this_58] = createObjectDefinition("w3a", newAbilityId, origAbilityId)
endfunction

function construct_AbilityDefinitionAgilityBonusPlus1 takes integer this_58, integer newAbilityId returns nothing
	call construct_AbilityDefinition(this_58, newAbilityId, 1095328049)
endfunction

function new_AbilityDefinitionAgilityBonusPlus1 takes integer newAbilityId returns integer
	local integer this_58 = alloc_AbilityDefinitionAgilityBonusPlus1()
	call construct_AbilityDefinitionAgilityBonusPlus1(this_58, newAbilityId)
	return this_58
endfunction

function agiAbilitys takes string wurstStackTrace returns nothing
	local integer i = 97
	local integer temp = 97 + (Setup_maxBonSize - 1)
	local integer obj
	local integer objN
	loop
		exitwhen i > temp
		if CompiletimeInit_compiletime then
			set obj = new_AbilityDefinitionAgilityBonusPlus1(Setup_agiRaw + i)
			call dispatch_AbilityDefinitionAgilityBonusPlus1_setAgilityBonus(obj, 1, int_pow(2, i - 97), "\n   OeSetup, line 65" + wurstStackTrace)
			call dispatch_AbilityDefinition_setItemAbility(obj, false, "\n   OeSetup, line 66" + wurstStackTrace)
			call dispatch_AbilityDefinition_setName(obj, "Bonus Agi +", "\n   OeSetup, line 67" + wurstStackTrace)
			call dispatch_AbilityDefinition_setEditorSuffix(obj, int_toString(int_pow(2, i - 97)), "\n   OeSetup, line 68" + wurstStackTrace)
		else
			call addAbilityToPreload(Setup_agiRaw + i, 1, "\n   OeSetup, line 70" + wurstStackTrace)
		endif
		set i = i + 1
	endloop
	if CompiletimeInit_compiletime then
		set objN = new_AbilityDefinitionAgilityBonusPlus1(Setup_agiRaw + 45)
		call dispatch_AbilityDefinitionAgilityBonusPlus1_setHideButton(objN, 1, true, "\n   OeSetup, line 73" + wurstStackTrace)
		call dispatch_AbilityDefinitionAgilityBonusPlus1_setAgilityBonus(objN, 1,  - int_pow(2, Setup_maxBonSize), "\n   OeSetup, line 74" + wurstStackTrace)
		call dispatch_AbilityDefinition_setItemAbility(objN, false, "\n   OeSetup, line 75" + wurstStackTrace)
		call dispatch_AbilityDefinition_setName(objN, "Bonus Agi -", "\n   OeSetup, line 76" + wurstStackTrace)
		call dispatch_AbilityDefinition_setEditorSuffix(objN, int_toString(int_pow(2, Setup_maxBonSize)), "\n   OeSetup, line 77" + wurstStackTrace)
	endif
	call addAbilityToPreload(Setup_agiRaw + 45, 1, "\n   OeSetup, line 78" + wurstStackTrace)
endfunction

function AbilityDefinitionDefenseBonusPlus1_setDefenseBonus takes integer this_58, integer level, integer value returns nothing
	local integer tempIndex = this_58
	call ObjectDefinition_setLvlDataInt(AbilityDefinition_def[tempIndex], "Idef", level, 1, value)
endfunction

function dispatch_AbilityDefinitionDefenseBonusPlus1_setDefenseBonus takes integer this_58, integer level, integer value, string wurstStackTrace returns nothing
	if AbilityDefinition_typeId[this_58] == 0 then
		if this_58 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling AbilityDefinitionDefenseBonusPlus1.setDefenseBonus" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called AbilityDefinitionDefenseBonusPlus1.setDefenseBonus on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call AbilityDefinitionDefenseBonusPlus1_setDefenseBonus(this_58, level, value)
endfunction

function alloc_AbilityDefinitionDefenseBonusPlus1 takes nothing returns integer
	local integer this_58
	if AbilityDefinition_firstFree == 0 then
		set AbilityDefinition_maxIndex = AbilityDefinition_maxIndex + 1
		set this_58 = AbilityDefinition_maxIndex
	else
		set AbilityDefinition_firstFree = AbilityDefinition_firstFree - 1
		set this_58 = AbilityDefinition_nextFree[AbilityDefinition_firstFree]
	endif
	set AbilityDefinition_typeId[this_58] = 109
	return this_58
endfunction

function construct_AbilityDefinitionDefenseBonusPlus1 takes integer this_58, integer newAbilityId returns nothing
	call construct_AbilityDefinition(this_58, newAbilityId, 1095328817)
endfunction

function new_AbilityDefinitionDefenseBonusPlus1 takes integer newAbilityId returns integer
	local integer this_58 = alloc_AbilityDefinitionDefenseBonusPlus1()
	call construct_AbilityDefinitionDefenseBonusPlus1(this_58, newAbilityId)
	return this_58
endfunction

function armorAbilitys takes string wurstStackTrace returns nothing
	local integer i = 97
	local integer temp = 97 + (Setup_maxBonSize - 1)
	local integer obj
	local integer objN
	loop
		exitwhen i > temp
		if CompiletimeInit_compiletime then
			set obj = new_AbilityDefinitionDefenseBonusPlus1(Setup_armorRaw + i)
			call dispatch_AbilityDefinitionDefenseBonusPlus1_setDefenseBonus(obj, 1, int_pow(2, i - 97), "\n   OeSetup, line 159" + wurstStackTrace)
			call dispatch_AbilityDefinition_setItemAbility(obj, false, "\n   OeSetup, line 160" + wurstStackTrace)
			call dispatch_AbilityDefinition_setName(obj, "Bonus Armor +", "\n   OeSetup, line 161" + wurstStackTrace)
			call dispatch_AbilityDefinition_setEditorSuffix(obj, int_toString(int_pow(2, i - 97)), "\n   OeSetup, line 162" + wurstStackTrace)
		else
			call addAbilityToPreload(Setup_armorRaw + i, 1, "\n   OeSetup, line 164" + wurstStackTrace)
		endif
		set i = i + 1
	endloop
	if CompiletimeInit_compiletime then
		set objN = new_AbilityDefinitionDefenseBonusPlus1(Setup_armorRaw + 45)
		call dispatch_AbilityDefinitionDefenseBonusPlus1_setDefenseBonus(objN, 1,  - int_pow(2, Setup_maxBonSize), "\n   OeSetup, line 167" + wurstStackTrace)
		call dispatch_AbilityDefinition_setItemAbility(objN, false, "\n   OeSetup, line 168" + wurstStackTrace)
		call dispatch_AbilityDefinition_setName(objN, "Bonus Armor -", "\n   OeSetup, line 169" + wurstStackTrace)
		call dispatch_AbilityDefinition_setEditorSuffix(objN, int_toString(int_pow(2, Setup_maxBonSize)), "\n   OeSetup, line 170" + wurstStackTrace)
	else
		call addAbilityToPreload(Setup_armorRaw + 45, 1, "\n   OeSetup, line 172" + wurstStackTrace)
	endif
endfunction

function AbilityDefinitionAttackBonusAItf_setAttackBonus takes integer this_58, integer level, integer value returns nothing
	local integer tempIndex = this_58
	call ObjectDefinition_setLvlDataInt(AbilityDefinition_def[tempIndex], "Iatt", level, 1, value)
endfunction

function dispatch_AbilityDefinitionAttackBonusAItf_setAttackBonus takes integer this_58, integer level, integer value, string wurstStackTrace returns nothing
	if AbilityDefinition_typeId[this_58] == 0 then
		if this_58 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling AbilityDefinitionAttackBonusAItf.setAttackBonus" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called AbilityDefinitionAttackBonusAItf.setAttackBonus on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call AbilityDefinitionAttackBonusAItf_setAttackBonus(this_58, level, value)
endfunction

function alloc_AbilityDefinitionAttackBonusAItf takes nothing returns integer
	local integer this_58
	if AbilityDefinition_firstFree == 0 then
		set AbilityDefinition_maxIndex = AbilityDefinition_maxIndex + 1
		set this_58 = AbilityDefinition_maxIndex
	else
		set AbilityDefinition_firstFree = AbilityDefinition_firstFree - 1
		set this_58 = AbilityDefinition_nextFree[AbilityDefinition_firstFree]
	endif
	set AbilityDefinition_typeId[this_58] = 570
	return this_58
endfunction

function construct_AbilityDefinitionAttackBonusAItf takes integer this_58, integer newAbilityId returns nothing
	call construct_AbilityDefinition(this_58, newAbilityId, 1095332966)
endfunction

function new_AbilityDefinitionAttackBonusAItf takes integer newAbilityId returns integer
	local integer this_58 = alloc_AbilityDefinitionAttackBonusAItf()
	call construct_AbilityDefinitionAttackBonusAItf(this_58, newAbilityId)
	return this_58
endfunction

function attackAbilitys takes string wurstStackTrace returns nothing
	local integer i = 97
	local integer temp = 97 + (Setup_maxBonSize - 1)
	local integer obj
	local integer objN
	loop
		exitwhen i > temp
		if CompiletimeInit_compiletime then
			set obj = new_AbilityDefinitionAttackBonusAItf(Setup_attackRaw + i)
			call dispatch_AbilityDefinitionAttackBonusAItf_setAttackBonus(obj, 1, int_pow(2, i - 97), "\n   OeSetup, line 121" + wurstStackTrace)
			call dispatch_AbilityDefinition_setItemAbility(obj, false, "\n   OeSetup, line 122" + wurstStackTrace)
			call dispatch_AbilityDefinition_setName(obj, "Bonus Attack +", "\n   OeSetup, line 123" + wurstStackTrace)
			call dispatch_AbilityDefinition_setEditorSuffix(obj, int_toString(int_pow(2, i - 97)), "\n   OeSetup, line 124" + wurstStackTrace)
		else
			call addAbilityToPreload(Setup_attackRaw + i, 1, "\n   OeSetup, line 126" + wurstStackTrace)
		endif
		set i = i + 1
	endloop
	if CompiletimeInit_compiletime then
		set objN = new_AbilityDefinitionAttackBonusAItf(Setup_attackRaw + 45)
		call dispatch_AbilityDefinitionAttackBonusAItf_setAttackBonus(objN, 1,  - int_pow(2, Setup_maxBonSize), "\n   OeSetup, line 129" + wurstStackTrace)
		call dispatch_AbilityDefinition_setItemAbility(objN, false, "\n   OeSetup, line 130" + wurstStackTrace)
		call dispatch_AbilityDefinition_setName(objN, "Bonus Attack -", "\n   OeSetup, line 131" + wurstStackTrace)
		call dispatch_AbilityDefinition_setEditorSuffix(objN, int_toString(int_pow(2, Setup_maxBonSize)), "\n   OeSetup, line 132" + wurstStackTrace)
	else
		call addAbilityToPreload(Setup_attackRaw + 45, 1, "\n   OeSetup, line 134" + wurstStackTrace)
	endif
endfunction

function ObjectDefinition_setLvlDataUnreal takes integer this_key, string modification, integer lvl, integer dataPointer, real value returns nothing
endfunction

function AbilityDefinitionAttackSpeedIncrease_setAttackSpeedIncrease takes integer this_58, integer level, real value returns nothing
	local integer tempIndex = this_58
	call ObjectDefinition_setLvlDataUnreal(AbilityDefinition_def[tempIndex], "Isx1", level, 1, value)
endfunction

function dispatch_AbilityDefinitionAttackSpeedIncrease_setAttackSpeedIncrease takes integer this_58, integer level, real value, string wurstStackTrace returns nothing
	if AbilityDefinition_typeId[this_58] == 0 then
		if this_58 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling AbilityDefinitionAttackSpeedIncrease.setAttackSpeedIncrease" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called AbilityDefinitionAttackSpeedIncrease.setAttackSpeedIncrease on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call AbilityDefinitionAttackSpeedIncrease_setAttackSpeedIncrease(this_58, level, value)
endfunction

function alloc_AbilityDefinitionAttackSpeedIncrease takes nothing returns integer
	local integer this_58
	if AbilityDefinition_firstFree == 0 then
		set AbilityDefinition_maxIndex = AbilityDefinition_maxIndex + 1
		set this_58 = AbilityDefinition_maxIndex
	else
		set AbilityDefinition_firstFree = AbilityDefinition_firstFree - 1
		set this_58 = AbilityDefinition_nextFree[AbilityDefinition_firstFree]
	endif
	set AbilityDefinition_typeId[this_58] = 556
	return this_58
endfunction

function construct_AbilityDefinitionAttackSpeedIncrease takes integer this_58, integer newAbilityId returns nothing
	call construct_AbilityDefinition(this_58, newAbilityId, 1095332728)
endfunction

function new_AbilityDefinitionAttackSpeedIncrease takes integer newAbilityId returns integer
	local integer this_58 = alloc_AbilityDefinitionAttackSpeedIncrease()
	call construct_AbilityDefinitionAttackSpeedIncrease(this_58, newAbilityId)
	return this_58
endfunction

function attackSpeedAbilitys takes string wurstStackTrace returns nothing
	local integer i = 97
	local integer temp = 97 + (Setup_maxBonSize - 1)
	local integer obj
	local integer objN
	loop
		exitwhen i > temp
		if CompiletimeInit_compiletime then
			set obj = new_AbilityDefinitionAttackSpeedIncrease(Setup_attackSpeedRaw + i)
			call dispatch_AbilityDefinitionAttackSpeedIncrease_setAttackSpeedIncrease(obj, 1, int_pow(2, i - 97) * 1. / 100, "\n   OeSetup, line 140" + wurstStackTrace)
			call dispatch_AbilityDefinition_setItemAbility(obj, false, "\n   OeSetup, line 141" + wurstStackTrace)
			call dispatch_AbilityDefinition_setName(obj, "Bonus AttackSpeed +", "\n   OeSetup, line 142" + wurstStackTrace)
			call dispatch_AbilityDefinition_setEditorSuffix(obj, int_toString(int_pow(2, i - 97)), "\n   OeSetup, line 143" + wurstStackTrace)
		else
			call addAbilityToPreload(Setup_attackSpeedRaw + i, 1, "\n   OeSetup, line 145" + wurstStackTrace)
		endif
		set i = i + 1
	endloop
	if CompiletimeInit_compiletime then
		set objN = new_AbilityDefinitionAttackSpeedIncrease(Setup_attackSpeedRaw + 45)
		call dispatch_AbilityDefinitionAttackSpeedIncrease_setAttackSpeedIncrease(objN, 1,  - (int_pow(2, Setup_maxBonSize) * 1. / 100), "\n   OeSetup, line 148" + wurstStackTrace)
		call dispatch_AbilityDefinition_setItemAbility(objN, false, "\n   OeSetup, line 149" + wurstStackTrace)
		call dispatch_AbilityDefinition_setName(objN, "Bonus AttackSpeed -", "\n   OeSetup, line 150" + wurstStackTrace)
		call dispatch_AbilityDefinition_setEditorSuffix(objN, int_toString(int_pow(2, Setup_maxBonSize)), "\n   OeSetup, line 151" + wurstStackTrace)
	else
		call addAbilityToPreload(Setup_attackSpeedRaw + 45, 1, "\n   OeSetup, line 153" + wurstStackTrace)
	endif
endfunction

function AbilityDefinitionIntelligenceBonusPlus1_setIntelligenceBonus takes integer this_58, integer level, integer value returns nothing
	local integer tempIndex = this_58
	call ObjectDefinition_setLvlDataInt(AbilityDefinition_def[tempIndex], "Iint", level, 2, value)
endfunction

function dispatch_AbilityDefinitionIntelligenceBonusPlus1_setIntelligenceBonus takes integer this_58, integer level, integer value, string wurstStackTrace returns nothing
	if AbilityDefinition_typeId[this_58] == 0 then
		if this_58 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling AbilityDefinitionIntelligenceBonusPlus1.setIntelligenceBonus" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called AbilityDefinitionIntelligenceBonusPlus1.setIntelligenceBonus on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call AbilityDefinitionIntelligenceBonusPlus1_setIntelligenceBonus(this_58, level, value)
endfunction

function alloc_AbilityDefinitionIntelligenceBonusPlus1 takes nothing returns integer
	local integer this_58
	if AbilityDefinition_firstFree == 0 then
		set AbilityDefinition_maxIndex = AbilityDefinition_maxIndex + 1
		set this_58 = AbilityDefinition_maxIndex
	else
		set AbilityDefinition_firstFree = AbilityDefinition_firstFree - 1
		set this_58 = AbilityDefinition_nextFree[AbilityDefinition_firstFree]
	endif
	set AbilityDefinition_typeId[this_58] = 196
	return this_58
endfunction

function construct_AbilityDefinitionIntelligenceBonusPlus1 takes integer this_58, integer newAbilityId returns nothing
	call construct_AbilityDefinition(this_58, newAbilityId, 1095330097)
endfunction

function new_AbilityDefinitionIntelligenceBonusPlus1 takes integer newAbilityId returns integer
	local integer this_58 = alloc_AbilityDefinitionIntelligenceBonusPlus1()
	call construct_AbilityDefinitionIntelligenceBonusPlus1(this_58, newAbilityId)
	return this_58
endfunction

function intAbilitys takes string wurstStackTrace returns nothing
	local integer i = 97
	local integer temp = 97 + (Setup_maxBonSize - 1)
	local integer obj
	local integer objN
	loop
		exitwhen i > temp
		if CompiletimeInit_compiletime then
			set obj = new_AbilityDefinitionIntelligenceBonusPlus1(Setup_intRaw + i)
			call dispatch_AbilityDefinitionIntelligenceBonusPlus1_setIntelligenceBonus(obj, 1, int_pow(2, i - 97), "\n   OeSetup, line 103" + wurstStackTrace)
			call dispatch_AbilityDefinition_setItemAbility(obj, false, "\n   OeSetup, line 104" + wurstStackTrace)
			call dispatch_AbilityDefinition_setName(obj, "Bonus Int +", "\n   OeSetup, line 105" + wurstStackTrace)
			call dispatch_AbilityDefinition_setEditorSuffix(obj, int_toString(int_pow(2, i - 97)), "\n   OeSetup, line 106" + wurstStackTrace)
		else
			call addAbilityToPreload(Setup_intRaw + i, 1, "\n   OeSetup, line 108" + wurstStackTrace)
		endif
		set i = i + 1
	endloop
	if CompiletimeInit_compiletime then
		set objN = new_AbilityDefinitionIntelligenceBonusPlus1(Setup_intRaw + 45)
		call dispatch_AbilityDefinitionIntelligenceBonusPlus1_setIntelligenceBonus(objN, 1,  - int_pow(2, Setup_maxBonSize), "\n   OeSetup, line 111" + wurstStackTrace)
		call dispatch_AbilityDefinition_setItemAbility(objN, false, "\n   OeSetup, line 112" + wurstStackTrace)
		call dispatch_AbilityDefinition_setName(objN, "Bonus Int -", "\n   OeSetup, line 113" + wurstStackTrace)
		call dispatch_AbilityDefinition_setEditorSuffix(objN, int_toString(int_pow(2, Setup_maxBonSize)), "\n   OeSetup, line 114" + wurstStackTrace)
	endif
	call addAbilityToPreload(Setup_intRaw + 45, 1, "\n   OeSetup, line 115" + wurstStackTrace)
endfunction

function AbilityDefinitionMaxLifeBonusLesser_setMaxLifeGained takes integer this_58, integer level, integer value returns nothing
	local integer tempIndex = this_58
	call ObjectDefinition_setLvlDataInt(AbilityDefinition_def[tempIndex], "Ilif", level, 1, value)
endfunction

function dispatch_AbilityDefinitionMaxLifeBonusLesser_setMaxLifeGained takes integer this_58, integer level, integer value, string wurstStackTrace returns nothing
	if AbilityDefinition_typeId[this_58] == 0 then
		if this_58 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling AbilityDefinitionMaxLifeBonusLesser.setMaxLifeGained" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called AbilityDefinitionMaxLifeBonusLesser.setMaxLifeGained on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call AbilityDefinitionMaxLifeBonusLesser_setMaxLifeGained(this_58, level, value)
endfunction

function alloc_AbilityDefinitionMaxLifeBonusLesser takes nothing returns integer
	local integer this_58
	if AbilityDefinition_firstFree == 0 then
		set AbilityDefinition_maxIndex = AbilityDefinition_maxIndex + 1
		set this_58 = AbilityDefinition_maxIndex
	else
		set AbilityDefinition_firstFree = AbilityDefinition_firstFree - 1
		set this_58 = AbilityDefinition_nextFree[AbilityDefinition_firstFree]
	endif
	set AbilityDefinition_typeId[this_58] = 259
	return this_58
endfunction

function construct_AbilityDefinitionMaxLifeBonusLesser takes integer this_58, integer newAbilityId returns nothing
	call construct_AbilityDefinition(this_58, newAbilityId, 1095330865)
endfunction

function new_AbilityDefinitionMaxLifeBonusLesser takes integer newAbilityId returns integer
	local integer this_58 = alloc_AbilityDefinitionMaxLifeBonusLesser()
	call construct_AbilityDefinitionMaxLifeBonusLesser(this_58, newAbilityId)
	return this_58
endfunction

function lifeAbilitys takes string wurstStackTrace returns nothing
	local integer i = 97
	local integer temp = 97 + (Setup_maxBonSize - 1)
	local integer obj
	local integer objN
	loop
		exitwhen i > temp
		if CompiletimeInit_compiletime then
			set obj = new_AbilityDefinitionMaxLifeBonusLesser(Setup_lifeRaw + i)
			call dispatch_AbilityDefinitionMaxLifeBonusLesser_setMaxLifeGained(obj, 1, int_pow(2, i - 97), "\n   OeSetup, line 27" + wurstStackTrace)
			call dispatch_AbilityDefinition_setItemAbility(obj, false, "\n   OeSetup, line 28" + wurstStackTrace)
			call dispatch_AbilityDefinition_setName(obj, "Bonus Life +", "\n   OeSetup, line 29" + wurstStackTrace)
			call dispatch_AbilityDefinition_setEditorSuffix(obj, int_toString(int_pow(2, i - 97)), "\n   OeSetup, line 30" + wurstStackTrace)
		else
			call addAbilityToPreload(Setup_lifeRaw + i, 1, "\n   OeSetup, line 32" + wurstStackTrace)
		endif
		set i = i + 1
	endloop
	if CompiletimeInit_compiletime then
		set objN = new_AbilityDefinitionMaxLifeBonusLesser(Setup_lifeRaw + 45)
		call dispatch_AbilityDefinitionMaxLifeBonusLesser_setMaxLifeGained(objN, 1,  - int_pow(2, Setup_maxBonSize), "\n   OeSetup, line 35" + wurstStackTrace)
		call dispatch_AbilityDefinition_setItemAbility(objN, false, "\n   OeSetup, line 36" + wurstStackTrace)
		call dispatch_AbilityDefinition_setName(objN, "Bonus Life -", "\n   OeSetup, line 37" + wurstStackTrace)
		call dispatch_AbilityDefinition_setEditorSuffix(objN, int_toString(int_pow(2, Setup_maxBonSize)), "\n   OeSetup, line 38" + wurstStackTrace)
	else
		call addAbilityToPreload(Setup_lifeRaw + 45, 1, "\n   OeSetup, line 40" + wurstStackTrace)
	endif
endfunction

function AbilityDefinitionNeutralRegenhealthonly_setAmountofHitPointsRegenerated takes integer this_58, integer level, real value returns nothing
	local integer tempIndex = this_58
	call ObjectDefinition_setLvlDataUnreal(AbilityDefinition_def[tempIndex], "Oar1", level, 1, value)
endfunction

function dispatch_AbilityDefinitionNeutralRegenhealthonly_setAmountofHitPointsRegenerated takes integer this_58, integer level, real value, string wurstStackTrace returns nothing
	if AbilityDefinition_typeId[this_58] == 0 then
		if this_58 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling AbilityDefinitionNeutralRegenhealthonly.setAmountofHitPointsRegenerated" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called AbilityDefinitionNeutralRegenhealthonly.setAmountofHitPointsRegenerated on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call AbilityDefinitionNeutralRegenhealthonly_setAmountofHitPointsRegenerated(this_58, level, value)
endfunction

function AbilityDefinitionNeutralRegenhealthonly_setPercentage takes integer this_58, integer level, boolean value returns nothing
	local integer tempIndex = this_58
	call ObjectDefinition_setLvlDataBoolean(AbilityDefinition_def[tempIndex], "Oar2", level, 2, value)
endfunction

function dispatch_AbilityDefinitionNeutralRegenhealthonly_setPercentage takes integer this_58, integer level, boolean value, string wurstStackTrace returns nothing
	if AbilityDefinition_typeId[this_58] == 0 then
		if this_58 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling AbilityDefinitionNeutralRegenhealthonly.setPercentage" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called AbilityDefinitionNeutralRegenhealthonly.setPercentage on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call AbilityDefinitionNeutralRegenhealthonly_setPercentage(this_58, level, value)
endfunction

function AbilityDefinition_setAreaofEffect takes integer this_58, integer level, real value returns nothing
	local integer tempIndex = this_58
	call ObjectDefinition_setLvlDataUnreal(AbilityDefinition_def[tempIndex], "aare", level, 0, value)
endfunction

function dispatch_AbilityDefinition_setAreaofEffect takes integer this_58, integer level, real value, string wurstStackTrace returns nothing
	if AbilityDefinition_typeId[this_58] == 0 then
		if this_58 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling AbilityDefinition.setAreaofEffect" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called AbilityDefinition.setAreaofEffect on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	if AbilityDefinition_typeId[this_58] <= 32 then
		if AbilityDefinition_typeId[this_58] <= 27 then
			call AbilityDefinition_setAreaofEffect(this_58, level, value)
		else
			call AbilityDefinition_setAreaofEffect(this_58, level, value)
		endif
	else
		call AbilityDefinition_setAreaofEffect(this_58, level, value)
	endif
endfunction

function Race_toObjectString takes integer this_58 returns string
	local string result = "unknown"
	local integer temp = this_58
	if temp == 0 then
		set result = "commoner"
	elseif temp == 1 then
		set result = "creeps"
	elseif temp == 2 then
		set result = "critters"
	elseif temp == 3 then
		set result = "demon"
	elseif temp == 4 then
		set result = "human"
	elseif temp == 5 then
		set result = "naga"
	elseif temp == 6 then
		set result = "nightelf"
	elseif temp == 7 then
		set result = "orc"
	elseif temp == 8 then
		set result = "other"
	elseif temp == 9 then
		set result = "undead"
	elseif temp == 10 then
		set result = "unknown"
	endif
	return result
endfunction

function AbilityDefinition_setRace takes integer this_58, integer rce returns nothing
	local integer tempIndex = this_58
	call ObjectDefinition_setLvlDataString(AbilityDefinition_def[tempIndex], "arac", 0, 0, Race_toObjectString(rce))
endfunction

function dispatch_AbilityDefinition_setRace takes integer this_58, integer rce, string wurstStackTrace returns nothing
	if AbilityDefinition_typeId[this_58] == 0 then
		if this_58 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling AbilityDefinition.setRace" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called AbilityDefinition.setRace on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	if AbilityDefinition_typeId[this_58] <= 32 then
		if AbilityDefinition_typeId[this_58] <= 27 then
			call AbilityDefinition_setRace(this_58, rce)
		else
			call AbilityDefinition_setRace(this_58, rce)
		endif
	else
		call AbilityDefinition_setRace(this_58, rce)
	endif
endfunction

function AbilityDefinition_setTargetsAllowed takes integer this_58, integer level, string value returns nothing
	local integer tempIndex = this_58
	call ObjectDefinition_setLvlDataString(AbilityDefinition_def[tempIndex], "atar", level, 0, value)
endfunction

function dispatch_AbilityDefinition_setTargetsAllowed takes integer this_58, integer level, string value, string wurstStackTrace returns nothing
	if AbilityDefinition_typeId[this_58] == 0 then
		if this_58 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling AbilityDefinition.setTargetsAllowed" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called AbilityDefinition.setTargetsAllowed on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	if AbilityDefinition_typeId[this_58] <= 32 then
		if AbilityDefinition_typeId[this_58] <= 27 then
			call AbilityDefinition_setTargetsAllowed(this_58, level, value)
		else
			call AbilityDefinition_setTargetsAllowed(this_58, level, value)
		endif
	else
		call AbilityDefinition_setTargetsAllowed(this_58, level, value)
	endif
endfunction

function alloc_AbilityDefinitionNeutralRegenhealthonly takes nothing returns integer
	local integer this_58
	if AbilityDefinition_firstFree == 0 then
		set AbilityDefinition_maxIndex = AbilityDefinition_maxIndex + 1
		set this_58 = AbilityDefinition_maxIndex
	else
		set AbilityDefinition_firstFree = AbilityDefinition_firstFree - 1
		set this_58 = AbilityDefinition_nextFree[AbilityDefinition_firstFree]
	endif
	set AbilityDefinition_typeId[this_58] = 181
	return this_58
endfunction

function construct_AbilityDefinitionNeutralRegenhealthonly takes integer this_58, integer newAbilityId returns nothing
	call construct_AbilityDefinition(this_58, newAbilityId, 1094938226)
endfunction

function new_AbilityDefinitionNeutralRegenhealthonly takes integer newAbilityId returns integer
	local integer this_58 = alloc_AbilityDefinitionNeutralRegenhealthonly()
	call construct_AbilityDefinitionNeutralRegenhealthonly(this_58, newAbilityId)
	return this_58
endfunction

function lifeRegAbilitys takes string wurstStackTrace returns nothing
	local integer i = 97
	local integer temp = 97 + (Setup_maxBonSize - 1)
	local integer obj
	local integer objN
	loop
		exitwhen i > temp
		if CompiletimeInit_compiletime then
			set obj = new_AbilityDefinitionNeutralRegenhealthonly(Setup_lifeRegRaw + i)
			call dispatch_AbilityDefinition_setRace(obj, 8, "\n   OeSetup, line 178" + wurstStackTrace)
			call dispatch_AbilityDefinitionNeutralRegenhealthonly_setPercentage(obj, 1, false, "\n   OeSetup, line 179" + wurstStackTrace)
			call dispatch_AbilityDefinition_setAreaofEffect(obj, 1, 1., "\n   OeSetup, line 180" + wurstStackTrace)
			call dispatch_AbilityDefinition_setTargetsAllowed(obj, 1, "self", "\n   OeSetup, line 181" + wurstStackTrace)
			call dispatch_AbilityDefinitionNeutralRegenhealthonly_setAmountofHitPointsRegenerated(obj, 1, int_pow(2, i - 97) * 0.05, "\n   OeSetup, line 182" + wurstStackTrace)
			call dispatch_AbilityDefinition_setItemAbility(obj, false, "\n   OeSetup, line 183" + wurstStackTrace)
			call dispatch_AbilityDefinition_setName(obj, "Bonus LifeReg +", "\n   OeSetup, line 184" + wurstStackTrace)
			call dispatch_AbilityDefinition_setEditorSuffix(obj, int_toString(int_pow(2, i - 97)), "\n   OeSetup, line 185" + wurstStackTrace)
		else
			call addAbilityToPreload(Setup_lifeRegRaw + i, 1, "\n   OeSetup, line 187" + wurstStackTrace)
		endif
		set i = i + 1
	endloop
	if CompiletimeInit_compiletime then
		set objN = new_AbilityDefinitionNeutralRegenhealthonly(Setup_lifeRegRaw + 45)
		call dispatch_AbilityDefinition_setRace(objN, 8, "\n   OeSetup, line 190" + wurstStackTrace)
		call dispatch_AbilityDefinitionNeutralRegenhealthonly_setPercentage(objN, 1, false, "\n   OeSetup, line 191" + wurstStackTrace)
		call dispatch_AbilityDefinition_setAreaofEffect(objN, 1, 1., "\n   OeSetup, line 192" + wurstStackTrace)
		call dispatch_AbilityDefinition_setTargetsAllowed(objN, 1, "self", "\n   OeSetup, line 193" + wurstStackTrace)
		call dispatch_AbilityDefinitionNeutralRegenhealthonly_setAmountofHitPointsRegenerated(objN, 1,  - (int_pow(2, Setup_maxBonSize) * 0.05), "\n   OeSetup, line 194" + wurstStackTrace)
		call dispatch_AbilityDefinition_setItemAbility(objN, false, "\n   OeSetup, line 195" + wurstStackTrace)
		call dispatch_AbilityDefinition_setName(objN, "Bonus LifeReg -", "\n   OeSetup, line 196" + wurstStackTrace)
		call dispatch_AbilityDefinition_setEditorSuffix(objN, int_toString(int_pow(2, Setup_maxBonSize)), "\n   OeSetup, line 197" + wurstStackTrace)
	else
		call addAbilityToPreload(Setup_lifeRegRaw + 45, 1, "\n   OeSetup, line 199" + wurstStackTrace)
	endif
endfunction

function AbilityDefinitionMaxManaBonusLeast_setMaxManaGained takes integer this_58, integer level, integer value returns nothing
	local integer tempIndex = this_58
	call ObjectDefinition_setLvlDataInt(AbilityDefinition_def[tempIndex], "Iman", level, 1, value)
endfunction

function dispatch_AbilityDefinitionMaxManaBonusLeast_setMaxManaGained takes integer this_58, integer level, integer value, string wurstStackTrace returns nothing
	if AbilityDefinition_typeId[this_58] == 0 then
		if this_58 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling AbilityDefinitionMaxManaBonusLeast.setMaxManaGained" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called AbilityDefinitionMaxManaBonusLeast.setMaxManaGained on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call AbilityDefinitionMaxManaBonusLeast_setMaxManaGained(this_58, level, value)
endfunction

function alloc_AbilityDefinitionMaxManaBonusLeast takes nothing returns integer
	local integer this_58
	if AbilityDefinition_firstFree == 0 then
		set AbilityDefinition_maxIndex = AbilityDefinition_maxIndex + 1
		set this_58 = AbilityDefinition_maxIndex
	else
		set AbilityDefinition_firstFree = AbilityDefinition_firstFree - 1
		set this_58 = AbilityDefinition_nextFree[AbilityDefinition_firstFree]
	endif
	set AbilityDefinition_typeId[this_58] = 295
	return this_58
endfunction

function construct_AbilityDefinitionMaxManaBonusLeast takes integer this_58, integer newAbilityId returns nothing
	call construct_AbilityDefinition(this_58, newAbilityId, 1095331170)
endfunction

function new_AbilityDefinitionMaxManaBonusLeast takes integer newAbilityId returns integer
	local integer this_58 = alloc_AbilityDefinitionMaxManaBonusLeast()
	call construct_AbilityDefinitionMaxManaBonusLeast(this_58, newAbilityId)
	return this_58
endfunction

function manaAbilitys takes string wurstStackTrace returns nothing
	local integer i = 97
	local integer temp = 97 + (Setup_maxBonSize - 1)
	local integer obj
	local integer objN
	loop
		exitwhen i > temp
		if CompiletimeInit_compiletime then
			set obj = new_AbilityDefinitionMaxManaBonusLeast(Setup_manaRaw + i)
			call dispatch_AbilityDefinitionMaxManaBonusLeast_setMaxManaGained(obj, 1, int_pow(2, i - 97), "\n   OeSetup, line 46" + wurstStackTrace)
			call dispatch_AbilityDefinition_setItemAbility(obj, false, "\n   OeSetup, line 47" + wurstStackTrace)
			call dispatch_AbilityDefinition_setName(obj, "Bonus Mana +", "\n   OeSetup, line 48" + wurstStackTrace)
			call dispatch_AbilityDefinition_setEditorSuffix(obj, int_toString(int_pow(2, i - 97)), "\n   OeSetup, line 49" + wurstStackTrace)
		else
			call addAbilityToPreload(Setup_manaRaw + i, 1, "\n   OeSetup, line 51" + wurstStackTrace)
		endif
		set i = i + 1
	endloop
	if CompiletimeInit_compiletime then
		set objN = new_AbilityDefinitionMaxManaBonusLeast(Setup_manaRaw + 45)
		call dispatch_AbilityDefinitionMaxManaBonusLeast_setMaxManaGained(objN, 1,  - int_pow(2, Setup_maxBonSize), "\n   OeSetup, line 54" + wurstStackTrace)
		call dispatch_AbilityDefinition_setItemAbility(objN, false, "\n   OeSetup, line 55" + wurstStackTrace)
		call dispatch_AbilityDefinition_setName(objN, "Bonus Mana -", "\n   OeSetup, line 56" + wurstStackTrace)
		call dispatch_AbilityDefinition_setEditorSuffix(objN, int_toString(int_pow(2, Setup_maxBonSize)), "\n   OeSetup, line 57" + wurstStackTrace)
	else
		call addAbilityToPreload(Setup_manaRaw + 45, 1, "\n   OeSetup, line 59" + wurstStackTrace)
	endif
endfunction

function AbilityDefinitionNeutralRegenmanaonly_setAmountRegenerated takes integer this_58, integer level, real value returns nothing
	local integer tempIndex = this_58
	call ObjectDefinition_setLvlDataUnreal(AbilityDefinition_def[tempIndex], "Arm1", level, 1, value)
endfunction

function dispatch_AbilityDefinitionNeutralRegenmanaonly_setAmountRegenerated takes integer this_58, integer level, real value, string wurstStackTrace returns nothing
	if AbilityDefinition_typeId[this_58] == 0 then
		if this_58 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling AbilityDefinitionNeutralRegenmanaonly.setAmountRegenerated" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called AbilityDefinitionNeutralRegenmanaonly.setAmountRegenerated on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call AbilityDefinitionNeutralRegenmanaonly_setAmountRegenerated(this_58, level, value)
endfunction

function AbilityDefinitionNeutralRegenmanaonly_setPercentage takes integer this_58, integer level, boolean value returns nothing
	local integer tempIndex = this_58
	call ObjectDefinition_setLvlDataBoolean(AbilityDefinition_def[tempIndex], "Arm2", level, 2, value)
endfunction

function dispatch_AbilityDefinitionNeutralRegenmanaonly_setPercentage takes integer this_58, integer level, boolean value, string wurstStackTrace returns nothing
	if AbilityDefinition_typeId[this_58] == 0 then
		if this_58 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling AbilityDefinitionNeutralRegenmanaonly.setPercentage" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called AbilityDefinitionNeutralRegenmanaonly.setPercentage on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call AbilityDefinitionNeutralRegenmanaonly_setPercentage(this_58, level, value)
endfunction

function alloc_AbilityDefinitionNeutralRegenmanaonly takes nothing returns integer
	local integer this_58
	if AbilityDefinition_firstFree == 0 then
		set AbilityDefinition_maxIndex = AbilityDefinition_maxIndex + 1
		set this_58 = AbilityDefinition_maxIndex
	else
		set AbilityDefinition_firstFree = AbilityDefinition_firstFree - 1
		set this_58 = AbilityDefinition_nextFree[AbilityDefinition_firstFree]
	endif
	set AbilityDefinition_typeId[this_58] = 93
	return this_58
endfunction

function construct_AbilityDefinitionNeutralRegenmanaonly takes integer this_58, integer newAbilityId returns nothing
	call construct_AbilityDefinition(this_58, newAbilityId, 1095660133)
endfunction

function new_AbilityDefinitionNeutralRegenmanaonly takes integer newAbilityId returns integer
	local integer this_58 = alloc_AbilityDefinitionNeutralRegenmanaonly()
	call construct_AbilityDefinitionNeutralRegenmanaonly(this_58, newAbilityId)
	return this_58
endfunction

function manaRegAbilitys takes string wurstStackTrace returns nothing
	local integer i = 97
	local integer temp = 97 + (Setup_maxBonSize - 1)
	local integer obj
	local integer objN
	loop
		exitwhen i > temp
		if CompiletimeInit_compiletime then
			set obj = new_AbilityDefinitionNeutralRegenmanaonly(Setup_manaRegRaw + i)
			call dispatch_AbilityDefinition_setRace(obj, 8, "\n   OeSetup, line 205" + wurstStackTrace)
			call dispatch_AbilityDefinitionNeutralRegenmanaonly_setPercentage(obj, 1, false, "\n   OeSetup, line 206" + wurstStackTrace)
			call dispatch_AbilityDefinition_setAreaofEffect(obj, 1, 1., "\n   OeSetup, line 207" + wurstStackTrace)
			call dispatch_AbilityDefinition_setTargetsAllowed(obj, 1, "self", "\n   OeSetup, line 208" + wurstStackTrace)
			call dispatch_AbilityDefinitionNeutralRegenmanaonly_setAmountRegenerated(obj, 1, int_pow(2, i - 97) * 0.05, "\n   OeSetup, line 209" + wurstStackTrace)
			call dispatch_AbilityDefinition_setItemAbility(obj, false, "\n   OeSetup, line 210" + wurstStackTrace)
			call dispatch_AbilityDefinition_setName(obj, "Bonus ManaReg +", "\n   OeSetup, line 211" + wurstStackTrace)
			call dispatch_AbilityDefinition_setEditorSuffix(obj, int_toString(int_pow(2, i - 97)), "\n   OeSetup, line 212" + wurstStackTrace)
		else
			call addAbilityToPreload(Setup_manaRegRaw + i, 1, "\n   OeSetup, line 214" + wurstStackTrace)
		endif
		set i = i + 1
	endloop
	if CompiletimeInit_compiletime then
		set objN = new_AbilityDefinitionNeutralRegenmanaonly(Setup_manaRegRaw + 45)
		call dispatch_AbilityDefinition_setRace(objN, 8, "\n   OeSetup, line 217" + wurstStackTrace)
		call dispatch_AbilityDefinitionNeutralRegenmanaonly_setPercentage(objN, 1, false, "\n   OeSetup, line 218" + wurstStackTrace)
		call dispatch_AbilityDefinition_setAreaofEffect(objN, 1, 1., "\n   OeSetup, line 219" + wurstStackTrace)
		call dispatch_AbilityDefinition_setTargetsAllowed(objN, 1, "self", "\n   OeSetup, line 220" + wurstStackTrace)
		call dispatch_AbilityDefinitionNeutralRegenmanaonly_setAmountRegenerated(objN, 1,  - (int_pow(2, Setup_maxBonSize) * 0.05), "\n   OeSetup, line 221" + wurstStackTrace)
		call dispatch_AbilityDefinition_setItemAbility(objN, false, "\n   OeSetup, line 222" + wurstStackTrace)
		call dispatch_AbilityDefinition_setName(objN, "Bonus manaReg -", "\n   OeSetup, line 223" + wurstStackTrace)
		call dispatch_AbilityDefinition_setEditorSuffix(objN, int_toString(int_pow(2, Setup_maxBonSize)), "\n   OeSetup, line 224" + wurstStackTrace)
	else
		call addAbilityToPreload(Setup_manaRegRaw + 45, 1, "\n   OeSetup, line 226" + wurstStackTrace)
	endif
endfunction

function addItemToPreload takes integer id, string wurstStackTrace returns nothing
	call dispatch_HashList_add(PreloadSystem_itemsToPreload, id, "\n   PreloadSystem, line 49" + wurstStackTrace)
endfunction

function permAttackAbilitys takes string wurstStackTrace returns nothing
	local integer i = 97
	local integer temp = 97 + (Setup_maxBonSize - 1)
	local integer u_key
	local integer un_key
	loop
		exitwhen i > temp
		if CompiletimeInit_compiletime then
			set u_key = createObjectDefinition("w3a", Setup_permAttackRaw + i, 1095328097)
			call ObjectDefinition_setLvlDataString(u_key, "anam", 0, 0, "BonusMod - AttackPerm")
			call ObjectDefinition_setLvlDataString(u_key, "ansf", 0, 0, "(+" + int_toString(int_pow(2, i - 97)) + ")")
			call ObjectDefinition_setLvlDataString(u_key, "acat", 0, 0, "")
			call ObjectDefinition_setLvlDataInt(u_key, "Iaa1", 1, 1, int_pow(2, i - 97))
			call ObjectDefinition_setLvlDataInt(u_key, "aite", 0, 0, 0)
		else
			call addItemToPreload(Setup_permAttackItemRaw + i, "\n   OeSetup, line 261" + wurstStackTrace)
		endif
		set i = i + 1
	endloop
	if CompiletimeInit_compiletime then
		set un_key = createObjectDefinition("w3a", Setup_permAttackRaw + 45, 1095328097)
		call ObjectDefinition_setLvlDataString(un_key, "anam", 0, 0, "BonusMod - AttackPerm")
		call ObjectDefinition_setLvlDataString(un_key, "ansf", 0, 0, "(-" + int_toString(int_pow(2, Setup_maxBonSize)) + ")")
		call ObjectDefinition_setLvlDataString(un_key, "acat", 0, 0, "")
		call ObjectDefinition_setLvlDataInt(un_key, "Iaa1", 1, 1, int_pow(2, Setup_maxBonSize))
		call ObjectDefinition_setLvlDataInt(un_key, "aite", 0, 0, 0)
	else
		call addItemToPreload(Setup_permAttackItemRaw + 45, "\n   OeSetup, line 270" + wurstStackTrace)
	endif
endfunction

function int_asFourchar takes integer this_58 returns string
	local string charMap = ".................................!.#$%&'()*+,-./0123456789:;<=>.@ABCDEFGHIJKLMNOPQRSTUVWXYZ[.]^_`abcdefghijklmnopqrstuvwxyz{|}~................................................................................................................................."
	local string result = ""
	local integer remainingValue = this_58
	local integer byteno = 0
	local integer charValue
	loop
		exitwhen byteno > 3
		set charValue = ModuloInteger(remainingValue, 256)
		set remainingValue = remainingValue / 256
		set result = SubString(charMap, charValue, charValue + 1) + result
		set byteno = byteno + 1
	endloop
	return result
endfunction

function permAttackItems takes string wurstStackTrace returns nothing
	local integer i = 97
	local integer temp = 97 + (Setup_maxBonSize - 1)
	local integer u_key
	local integer un_key
	loop
		exitwhen i > temp
		if CompiletimeInit_compiletime then
			set u_key = createObjectDefinition("w3t", Setup_permAttackItemRaw + i, 1953066612)
			call ObjectDefinition_setString(u_key, "iabi", int_asFourchar(Setup_permAttackRaw + i))
			call ObjectDefinition_setString(u_key, "ifil", "none.mdl")
			call ObjectDefinition_setInt(u_key, "ihtp", 100)
			call ObjectDefinition_setString(u_key, "iico", "ReplaceableTextures\\CommandButtons\\BTNArcaniteMelee.blp")
			call ObjectDefinition_setString(u_key, "unam", "Attack Tome +" + int_toString(int_pow(2, i - 97)))
			call ObjectDefinition_setInt(u_key, "iicd", 1)
		else
			call addItemToPreload(Setup_permAttackItemRaw + i, "\n   OeSetup, line 239" + wurstStackTrace)
		endif
		set i = i + 1
	endloop
	if CompiletimeInit_compiletime then
		set un_key = createObjectDefinition("w3t", Setup_permAttackItemRaw + 45, 1953066612)
		call ObjectDefinition_setString(un_key, "iabi", int_asFourchar(Setup_permAttackRaw + 45))
		call ObjectDefinition_setString(un_key, "ifil", "none.mdl")
		call ObjectDefinition_setInt(un_key, "ihtp", 100)
		call ObjectDefinition_setString(un_key, "iico", "ReplaceableTextures\\CommandButtons\\BTNArcaniteMelee.blp")
		call ObjectDefinition_setString(un_key, "unam", "Attack Tome -" + int_toString(int_pow(2, Setup_maxBonSize)))
		call ObjectDefinition_setInt(un_key, "iicd", 1)
	else
		call addItemToPreload(Setup_permAttackItemRaw + 45, "\n   OeSetup, line 249" + wurstStackTrace)
	endif
endfunction

function AbilityDefinitionStrengthBonusPlus1_setStrengthBonus takes integer this_58, integer level, integer value returns nothing
	local integer tempIndex = this_58
	call ObjectDefinition_setLvlDataInt(AbilityDefinition_def[tempIndex], "Istr", level, 3, value)
endfunction

function dispatch_AbilityDefinitionStrengthBonusPlus1_setStrengthBonus takes integer this_58, integer level, integer value, string wurstStackTrace returns nothing
	if AbilityDefinition_typeId[this_58] == 0 then
		if this_58 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling AbilityDefinitionStrengthBonusPlus1.setStrengthBonus" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called AbilityDefinitionStrengthBonusPlus1.setStrengthBonus on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call AbilityDefinitionStrengthBonusPlus1_setStrengthBonus(this_58, level, value)
endfunction

function alloc_AbilityDefinitionStrengthBonusPlus1 takes nothing returns integer
	local integer this_58
	if AbilityDefinition_firstFree == 0 then
		set AbilityDefinition_maxIndex = AbilityDefinition_maxIndex + 1
		set this_58 = AbilityDefinition_maxIndex
	else
		set AbilityDefinition_firstFree = AbilityDefinition_firstFree - 1
		set this_58 = AbilityDefinition_nextFree[AbilityDefinition_firstFree]
	endif
	set AbilityDefinition_typeId[this_58] = 427
	return this_58
endfunction

function construct_AbilityDefinitionStrengthBonusPlus1 takes integer this_58, integer newAbilityId returns nothing
	call construct_AbilityDefinition(this_58, newAbilityId, 1095332657)
endfunction

function new_AbilityDefinitionStrengthBonusPlus1 takes integer newAbilityId returns integer
	local integer this_58 = alloc_AbilityDefinitionStrengthBonusPlus1()
	call construct_AbilityDefinitionStrengthBonusPlus1(this_58, newAbilityId)
	return this_58
endfunction

function strAbilitys takes string wurstStackTrace returns nothing
	local integer i = 97
	local integer temp = 97 + (Setup_maxBonSize - 1)
	local integer obj
	local integer objN
	loop
		exitwhen i > temp
		if CompiletimeInit_compiletime then
			set obj = new_AbilityDefinitionStrengthBonusPlus1(Setup_strRaw + i)
			call dispatch_AbilityDefinitionStrengthBonusPlus1_setStrengthBonus(obj, 1, int_pow(2, i - 97), "\n   OeSetup, line 84" + wurstStackTrace)
			call dispatch_AbilityDefinition_setItemAbility(obj, false, "\n   OeSetup, line 85" + wurstStackTrace)
			call dispatch_AbilityDefinition_setName(obj, "Bonus Str +", "\n   OeSetup, line 86" + wurstStackTrace)
			call dispatch_AbilityDefinition_setEditorSuffix(obj, int_toString(int_pow(2, i - 97)), "\n   OeSetup, line 87" + wurstStackTrace)
		else
			call addAbilityToPreload(Setup_strRaw + i, 1, "\n   OeSetup, line 89" + wurstStackTrace)
		endif
		set i = i + 1
	endloop
	if CompiletimeInit_compiletime then
		set objN = new_AbilityDefinitionStrengthBonusPlus1(Setup_strRaw + 45)
		call dispatch_AbilityDefinitionStrengthBonusPlus1_setStrengthBonus(objN, 1,  - int_pow(2, Setup_maxBonSize), "\n   OeSetup, line 92" + wurstStackTrace)
		call dispatch_AbilityDefinition_setItemAbility(objN, false, "\n   OeSetup, line 93" + wurstStackTrace)
		call dispatch_AbilityDefinition_setName(objN, "Bonus Str -", "\n   OeSetup, line 94" + wurstStackTrace)
		call dispatch_AbilityDefinition_setEditorSuffix(objN, int_toString(int_pow(2, Setup_maxBonSize)), "\n   OeSetup, line 95" + wurstStackTrace)
	else
		call addAbilityToPreload(Setup_strRaw + 45, 1, "\n   OeSetup, line 97" + wurstStackTrace)
	endif
endfunction

function createObjects takes string wurstStackTrace returns nothing
	call lifeAbilitys("\n   OeSetup, line 10" + wurstStackTrace)
	call manaAbilitys("\n   OeSetup, line 11" + wurstStackTrace)
	call agiAbilitys("\n   OeSetup, line 12" + wurstStackTrace)
	call strAbilitys("\n   OeSetup, line 13" + wurstStackTrace)
	call intAbilitys("\n   OeSetup, line 14" + wurstStackTrace)
	call attackAbilitys("\n   OeSetup, line 15" + wurstStackTrace)
	call attackSpeedAbilitys("\n   OeSetup, line 16" + wurstStackTrace)
	call armorAbilitys("\n   OeSetup, line 17" + wurstStackTrace)
	call lifeRegAbilitys("\n   OeSetup, line 18" + wurstStackTrace)
	call manaRegAbilitys("\n   OeSetup, line 19" + wurstStackTrace)
	call permAttackItems("\n   OeSetup, line 20" + wurstStackTrace)
	call permAttackAbilitys("\n   OeSetup, line 21" + wurstStackTrace)
endfunction

function addDestructableToPreload takes integer id, string wurstStackTrace returns nothing
	call dispatch_HashList_add(PreloadSystem_destructablesToPreload, id, "\n   PreloadSystem, line 52" + wurstStackTrace)
endfunction

function genId takes string wurstStackTrace returns integer
	return newId(ObjectIdGenerator_nonheroPrefix, "\n   ObjectIdGenerator, line 34" + wurstStackTrace)
endfunction

function real_toInt takes real this_58 returns integer
	return R2I(this_58)
endfunction

function addIconType takes string name, string iconPath, string wurstStackTrace returns nothing
	local integer icon1 = genId("\n   IconType, line 644" + wurstStackTrace)
	local integer icon2 = genId("\n   IconType, line 645" + wurstStackTrace)
	local integer u_key
	if  not CompiletimeInit_compiletime then
		call dispatch_HashMap_put(IconType_iconMap1, StringHash(name), icon1, "\n   IconType, line 647" + wurstStackTrace)
		call dispatch_HashMap_put(IconType_iconMap2, StringHash(name), icon2, "\n   IconType, line 648" + wurstStackTrace)
		call addDestructableToPreload(icon1, "\n   IconType, line 649" + wurstStackTrace)
		call addDestructableToPreload(icon2, "\n   IconType, line 650" + wurstStackTrace)
	else
		set u_key = createObjectDefinition("w3b", icon1, 1498704994)
		call ObjectDefinition_setReal(u_key, "bgsc", 0.0)
		call ObjectDefinition_setString(u_key, "bshd", "")
		call ObjectDefinition_setInt(u_key, "bcpd", 0)
		call ObjectDefinition_setString(u_key, "bsuf", "Icon")
		call ObjectDefinition_setUnreal(u_key, "boch", 0.0)
		call ObjectDefinition_setUnreal(u_key, "bsel", 0.0)
		call ObjectDefinition_setString(u_key, "bfil", "war3mapImported\\ButtonC.mdl")
		call ObjectDefinition_setString(u_key, "bnam", name)
		call ObjectDefinition_setString(u_key, "barm", "Ethereal")
		call ObjectDefinition_setString(u_key, "btar", "")
		call ObjectDefinition_setInt(u_key, "bcpr", 0)
		call ObjectDefinition_setString(u_key, "bptx", "")
		call ObjectDefinition_setInt(u_key, "btxi", 31)
		call ObjectDefinition_setString(u_key, "btxf", iconPath)
		set u_key = createObjectDefinition("w3b", icon2, 1498704994)
		call ObjectDefinition_setReal(u_key, "bgsc", 0.0)
		call ObjectDefinition_setString(u_key, "bshd", "")
		call ObjectDefinition_setInt(u_key, "bcpd", 0)
		call ObjectDefinition_setString(u_key, "bsuf", "Icon")
		call ObjectDefinition_setUnreal(u_key, "boch", 0.0)
		call ObjectDefinition_setUnreal(u_key, "bsel", 0.0)
		call ObjectDefinition_setString(u_key, "bfil", "war3mapImported\\ButtonC.mdl")
		call ObjectDefinition_setString(u_key, "bnam", name)
		call ObjectDefinition_setString(u_key, "barm", "Ethereal")
		call ObjectDefinition_setString(u_key, "btar", "")
		call ObjectDefinition_setInt(u_key, "bcpr", 0)
		call ObjectDefinition_setString(u_key, "bptx", "")
		call ObjectDefinition_setInt(u_key, "btxi", 31)
		call ObjectDefinition_setString(u_key, "btxf", iconPath)
		call ObjectDefinition_setInt(u_key, "bvcr", real_toInt(255. * IconType_restColor))
		call ObjectDefinition_setInt(u_key, "bvcg", real_toInt(255. * IconType_restColor))
		call ObjectDefinition_setInt(u_key, "bvcb", real_toInt(255. * IconType_restColor))
	endif
endfunction

function types takes string wurstStackTrace returns nothing
	call addIconType("RingDesCrigges", "ReplaceableTextures\\CommandButtons\\BTNSlow.blp", "\n   IconType, line 13" + wurstStackTrace)
	call addIconType("3M1", "ReplaceableTextures\\CommandButtons\\BTN3M1.blp", "\n   IconType, line 14" + wurstStackTrace)
endfunction

function addTipType takes string name, string content, string wurstStackTrace returns nothing
	local integer tip = genId("\n   ToolTipTypes, line 15" + wurstStackTrace)
	local integer u_key
	if  not CompiletimeInit_compiletime then
		call dispatch_HashMap_put(ToolTipTypes_tipMap, StringHash(name), tip, "\n   ToolTipTypes, line 17" + wurstStackTrace)
		call addDestructableToPreload(tip, "\n   ToolTipTypes, line 18" + wurstStackTrace)
	else
		set u_key = createObjectDefinition("w3b", tip, 1498704994)
		call ObjectDefinition_setReal(u_key, "bgsc", 0.01)
		call ObjectDefinition_setString(u_key, "bshd", "")
		call ObjectDefinition_setInt(u_key, "bcpd", 0)
		call ObjectDefinition_setString(u_key, "bsuf", "Tip")
		call ObjectDefinition_setUnreal(u_key, "boch", 0.0)
		call ObjectDefinition_setUnreal(u_key, "bsel", 0.0)
		call ObjectDefinition_setString(u_key, "bfil", "war3mapImported\\ButtonC2.mdl")
		call ObjectDefinition_setString(u_key, "bnam", content)
		call ObjectDefinition_setString(u_key, "barm", "Ethereal")
		call ObjectDefinition_setString(u_key, "btar", "")
		call ObjectDefinition_setInt(u_key, "bcpr", 0)
		call ObjectDefinition_setString(u_key, "bptx", "")
		call ObjectDefinition_setInt(u_key, "btxi", 31)
		call ObjectDefinition_setString(u_key, "btxf", "Alphaicon.blp")
		call ObjectDefinition_setBoolean(u_key, "bgse", true)
		call ObjectDefinition_setUnreal(u_key, "bmas", 5.)
		call ObjectDefinition_setUnreal(u_key, "bmis", 5.)
	endif
endfunction

function types_2 takes string wurstStackTrace returns nothing
	call addTipType("test", "Harry Potter ist eine populäre Fantasy-Romanreihe|nder englischen Schriftstellerin Joanne K. Rowling.|nErzählt wird die sieben-teilige Geschichte des|nTitelhelden Harry James Potter, eines Schülers|ndes britischen Zaubererinternats Hogwarts, und|nseiner Konfrontationen mit dem bösen Magier Lord|nVoldemort und dessen Gefolgsleuten, den|nsogenannten Todessern. Jeder der sieben Bände|nbeschreibt ein Schul- und Lebensjahr von Harry|nPotter, beginnend kurz vor seinem elften|nGeburtstag.", "\n   ToolTipTypes, line 11" + wurstStackTrace)
endfunction

function closure_impl_42 takes integer this_58, string wurstStackTrace returns nothing
	call createObjects("\n   CompiletimeInit, line 8" + wurstStackTrace)
	call types_2("\n   CompiletimeInit, line 8" + wurstStackTrace)
	call types("\n   CompiletimeInit, line 8" + wurstStackTrace)
	call HeroInit_initHelper("\n   CompiletimeInit, line 8" + wurstStackTrace)
endfunction

function closure_impl_43 takes integer this_58 returns nothing
	set Unit_magicReduction[this_16[this_58]] = Unit_magicReduction[this_16[this_58]] - amount_14[this_58]
endfunction

function closure_impl_44 takes integer this_58 returns nothing
	call RemoveDestructable(d[this_58])
endfunction

function closure_impl_45 takes integer this_58, string wurstStackTrace returns nothing
	set Unit_bonusAttack[this_4[this_58]] = Unit_bonusAttack[this_4[this_58]] - amount_2[this_58]
	call dispatch_Unit_updateAttack(this_4[this_58], "\n   UnitClass, line 480" + wurstStackTrace)
endfunction

function closure_impl_46 takes integer this_58 returns nothing
	set Unit_normalReduction[this_14[this_58]] = Unit_normalReduction[this_14[this_58]] - amount_12[this_58]
endfunction

function closure_impl_47 takes integer this_58, string wurstStackTrace returns nothing
	set Unit_bonusAttackPer[this_6[this_58]] = Unit_bonusAttackPer[this_6[this_58]] - amount_4[this_58]
	call dispatch_Unit_updateAttack(this_6[this_58], "\n   UnitClass, line 499" + wurstStackTrace)
endfunction

function closure_impl_48 takes integer this_58, string wurstStackTrace returns nothing
	set Unit_bonusLifeReg[this_42[this_58]] = Unit_bonusLifeReg[this_42[this_58]] - amount_40[this_58]
	call dispatch_Unit_updateLifeReg(this_42[this_58], "\n   UnitClass, line 816" + wurstStackTrace)
endfunction

function closure_impl_49 takes integer this_58, string wurstStackTrace returns nothing
	set Unit_bonusManaReg[this_50[this_58]] = Unit_bonusManaReg[this_50[this_58]] - amount_48[this_58]
	call dispatch_Unit_updateManaReg(this_50[this_58], "\n   UnitClass, line 898" + wurstStackTrace)
endfunction

function closure_impl_50 takes integer this_58 returns nothing
	set Unit_lifesteal[this_10[this_58]] = Unit_lifesteal[this_10[this_58]] - amount_8[this_58]
endfunction

function closure_impl_51 takes integer this_58, string wurstStackTrace returns nothing
	set Unit_bonusArmorPer[this_26[this_58]] = Unit_bonusArmorPer[this_26[this_58]] - amount_24[this_58]
	call dispatch_Unit_updateArmor(this_26[this_58], "\n   UnitClass, line 660" + wurstStackTrace)
endfunction

function closure_impl_52 takes integer this_58, string wurstStackTrace returns nothing
	set Unit_bonusLife[this_38[this_58]] = Unit_bonusLife[this_38[this_58]] - amount_36[this_58]
	call dispatch_Unit_updateLife(this_38[this_58], "\n   UnitClass, line 775" + wurstStackTrace)
endfunction

function unit_remove takes unit this_58 returns nothing
	call RemoveUnit(this_58)
endfunction

function closure_impl_53 takes integer this_58 returns nothing
	call unit_remove(u[this_58])
endfunction

function closure_impl_54 takes integer this_58, string wurstStackTrace returns nothing
	set Unit_bonusMana[this_48[this_58]] = Unit_bonusMana[this_48[this_58]] - amount_46[this_58]
	call dispatch_Unit_updateMana(this_48[this_58], "\n   UnitClass, line 876" + wurstStackTrace)
endfunction

function closure_impl_55 takes integer this_58, string wurstStackTrace returns nothing
	set Unit_bonusMovespeed[this_34[this_58]] = Unit_bonusMovespeed[this_34[this_58]] - amount_32[this_58]
	call dispatch_Unit_updateMovespeed(this_34[this_58], "\n   UnitClass, line 734" + wurstStackTrace)
endfunction

function closure_impl_56 takes integer this_58, string wurstStackTrace returns nothing
	set Unit_bonusMovespeedPer[this_36[this_58]] = Unit_bonusMovespeedPer[this_36[this_58]] - amount_34[this_58]
	call dispatch_Unit_updateMovespeed(this_36[this_58], "\n   UnitClass, line 753" + wurstStackTrace)
endfunction

function closure_impl_57 takes integer this_58, string wurstStackTrace returns nothing
	set Unit_bonusManaRegPer[this_52[this_58]] = Unit_bonusManaRegPer[this_52[this_58]] - amount_50[this_58]
	call dispatch_Unit_updateManaReg(this_52[this_58], "\n   UnitClass, line 917" + wurstStackTrace)
endfunction

function closure_impl_58 takes integer this_58 returns nothing
	if GetLocalPlayer() == p[this_58] then
	endif
endfunction

function closure_impl_59 takes integer this_58, string wurstStackTrace returns nothing
	set Unit_bonusMana[this_46[this_58]] = Unit_bonusMana[this_46[this_58]] - amount_44[this_58]
	call dispatch_Unit_updateMana(this_46[this_58], "\n   UnitClass, line 857" + wurstStackTrace)
endfunction

function closure_impl_60 takes integer this_58, string wurstStackTrace returns nothing
	set Unit_bonusLifePer[this_40[this_58]] = Unit_bonusLifePer[this_40[this_58]] - amount_38[this_58]
	call dispatch_Unit_updateLife(this_40[this_58], "\n   UnitClass, line 794" + wurstStackTrace)
endfunction

function closure_impl_61 takes integer this_58, string wurstStackTrace returns nothing
	set Unit_bonusAttackspeed[this_32[this_58]] = Unit_bonusAttackspeed[this_32[this_58]] - amount_30[this_58]
	call dispatch_Unit_updateAttackspeed(this_32[this_58], "\n   UnitClass, line 712" + wurstStackTrace)
endfunction

function closure_impl_62 takes integer this_58 returns nothing
	call RemoveDestructable(Tooltip_d[this_54[this_58]])
endfunction

function closure_impl_63 takes integer this_58 returns nothing
	set Unit_critdamage[this_20[this_58]] = Unit_critdamage[this_20[this_58]] - amount_18[this_58]
endfunction

function closure_impl_64 takes integer this_58 returns nothing
	set Unit_spellpower[this_8[this_58]] = Unit_spellpower[this_8[this_58]] - amount_6[this_58]
endfunction

function dispatch_CallbackSingle_call takes integer this_58, string wurstStackTrace returns nothing
	if CallbackSingle_typeId[this_58] == 0 then
		if this_58 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling CallbackSingle.call" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called CallbackSingle.call on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	if CallbackSingle_typeId[this_58] <= 738 then
		if CallbackSingle_typeId[this_58] <= 722 then
			if CallbackSingle_typeId[this_58] <= 714 then
				if CallbackSingle_typeId[this_58] <= 677 then
					if CallbackSingle_typeId[this_58] <= 676 then
						if CallbackSingle_typeId[this_58] <= 672 then
							call closure_impl_53(this_58)
						else
							call closure_impl_44(this_58)
						endif
					else
						call closure_impl_42(this_58, "\n   ClosureTimers, line 64" + wurstStackTrace)
					endif
				elseif CallbackSingle_typeId[this_58] <= 712 then
					call closure_impl_45(this_58, "\n   ClosureTimers, line 64" + wurstStackTrace)
				else
					call closure_impl_47(this_58, "\n   ClosureTimers, line 64" + wurstStackTrace)
				endif
			elseif CallbackSingle_typeId[this_58] <= 718 then
				if CallbackSingle_typeId[this_58] <= 716 then
					call closure_impl_64(this_58)
				else
					call closure_impl_50(this_58)
				endif
			elseif CallbackSingle_typeId[this_58] <= 720 then
				call closure_impl_38(this_58)
			else
				call closure_impl_46(this_58)
			endif
		elseif CallbackSingle_typeId[this_58] <= 730 then
			if CallbackSingle_typeId[this_58] <= 726 then
				if CallbackSingle_typeId[this_58] <= 724 then
					call closure_impl_43(this_58)
				else
					call closure_impl_34(this_58)
				endif
			elseif CallbackSingle_typeId[this_58] <= 728 then
				call closure_impl_63(this_58)
			else
				call closure_impl_32(this_58)
			endif
		elseif CallbackSingle_typeId[this_58] <= 734 then
			if CallbackSingle_typeId[this_58] <= 732 then
				call closure_impl_39(this_58, "\n   ClosureTimers, line 64" + wurstStackTrace)
			else
				call closure_impl_51(this_58, "\n   ClosureTimers, line 64" + wurstStackTrace)
			endif
		elseif CallbackSingle_typeId[this_58] <= 736 then
			call closure_impl_35(this_58)
		else
			call closure_impl_40(this_58)
		endif
	elseif CallbackSingle_typeId[this_58] <= 754 then
		if CallbackSingle_typeId[this_58] <= 746 then
			if CallbackSingle_typeId[this_58] <= 742 then
				if CallbackSingle_typeId[this_58] <= 740 then
					call closure_impl_61(this_58, "\n   ClosureTimers, line 64" + wurstStackTrace)
				else
					call closure_impl_55(this_58, "\n   ClosureTimers, line 64" + wurstStackTrace)
				endif
			elseif CallbackSingle_typeId[this_58] <= 744 then
				call closure_impl_56(this_58, "\n   ClosureTimers, line 64" + wurstStackTrace)
			else
				call closure_impl_52(this_58, "\n   ClosureTimers, line 64" + wurstStackTrace)
			endif
		elseif CallbackSingle_typeId[this_58] <= 750 then
			if CallbackSingle_typeId[this_58] <= 748 then
				call closure_impl_60(this_58, "\n   ClosureTimers, line 64" + wurstStackTrace)
			else
				call closure_impl_48(this_58, "\n   ClosureTimers, line 64" + wurstStackTrace)
			endif
		elseif CallbackSingle_typeId[this_58] <= 752 then
			call closure_impl_33(this_58, "\n   ClosureTimers, line 64" + wurstStackTrace)
		else
			call closure_impl_59(this_58, "\n   ClosureTimers, line 64" + wurstStackTrace)
		endif
	elseif CallbackSingle_typeId[this_58] <= 762 then
		if CallbackSingle_typeId[this_58] <= 758 then
			if CallbackSingle_typeId[this_58] <= 756 then
				call closure_impl_54(this_58, "\n   ClosureTimers, line 64" + wurstStackTrace)
			else
				call closure_impl_49(this_58, "\n   ClosureTimers, line 64" + wurstStackTrace)
			endif
		elseif CallbackSingle_typeId[this_58] <= 760 then
			call closure_impl_57(this_58, "\n   ClosureTimers, line 64" + wurstStackTrace)
		else
			call closure_impl_37(this_58, "\n   ClosureTimers, line 64" + wurstStackTrace)
		endif
	elseif CallbackSingle_typeId[this_58] <= 811 then
		if CallbackSingle_typeId[this_58] <= 810 then
			call closure_impl_62(this_58)
		else
			call closure_impl_58(this_58)
		endif
	elseif CallbackSingle_typeId[this_58] <= 865 then
		call closure_impl_41(this_58, "\n   ClosureTimers, line 64" + wurstStackTrace)
	else
		call closure_impl_36(this_58, "\n   ClosureTimers, line 64" + wurstStackTrace)
	endif
endfunction

function CallbackSingle_onDestroy takes integer this_58 returns nothing
endfunction

function dealloc_CallbackSingle takes integer obj, string wurstStackTrace returns nothing
	if CallbackSingle_typeId[obj] == 0 then
		call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Double free: object of type CallbackSingle" + wurstStackTrace)
		call I2S(1 / 0)
	else
		set CallbackSingle_nextFree[CallbackSingle_firstFree] = obj
		set CallbackSingle_firstFree = CallbackSingle_firstFree + 1
		set CallbackSingle_typeId[obj] = 0
	endif
endfunction

function destroyCallbackSingle takes integer this_58, string wurstStackTrace returns nothing
	call CallbackSingle_onDestroy(this_58)
	call dealloc_CallbackSingle(this_58, "\n   ClosureTimers, line 62" + wurstStackTrace)
endfunction

function dispatch_CallbackSingle_destroyCallbackSingle takes integer this_58, string wurstStackTrace returns nothing
	if CallbackSingle_typeId[this_58] == 0 then
		if this_58 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling CallbackSingle.destroyCallbackSingle" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called CallbackSingle.destroyCallbackSingle on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	if CallbackSingle_typeId[this_58] <= 736 then
		if CallbackSingle_typeId[this_58] <= 720 then
			if CallbackSingle_typeId[this_58] <= 712 then
				if CallbackSingle_typeId[this_58] <= 672 then
					if CallbackSingle_typeId[this_58] <= 665 then
						call destroyCallbackSingle(this_58, "\n   ClosureTimers, line 62" + wurstStackTrace)
					else
						call destroyCallbackSingle(this_58, "\n   ClosureTimers, line 62" + wurstStackTrace)
					endif
				elseif CallbackSingle_typeId[this_58] <= 677 then
					call destroyCallbackSingle(this_58, "\n   ClosureTimers, line 62" + wurstStackTrace)
				else
					call destroyCallbackSingle(this_58, "\n   ClosureTimers, line 62" + wurstStackTrace)
				endif
			elseif CallbackSingle_typeId[this_58] <= 716 then
				if CallbackSingle_typeId[this_58] <= 714 then
					call destroyCallbackSingle(this_58, "\n   ClosureTimers, line 62" + wurstStackTrace)
				else
					call destroyCallbackSingle(this_58, "\n   ClosureTimers, line 62" + wurstStackTrace)
				endif
			elseif CallbackSingle_typeId[this_58] <= 718 then
				call destroyCallbackSingle(this_58, "\n   ClosureTimers, line 62" + wurstStackTrace)
			else
				call destroyCallbackSingle(this_58, "\n   ClosureTimers, line 62" + wurstStackTrace)
			endif
		elseif CallbackSingle_typeId[this_58] <= 728 then
			if CallbackSingle_typeId[this_58] <= 724 then
				if CallbackSingle_typeId[this_58] <= 722 then
					call destroyCallbackSingle(this_58, "\n   ClosureTimers, line 62" + wurstStackTrace)
				else
					call destroyCallbackSingle(this_58, "\n   ClosureTimers, line 62" + wurstStackTrace)
				endif
			elseif CallbackSingle_typeId[this_58] <= 726 then
				call destroyCallbackSingle(this_58, "\n   ClosureTimers, line 62" + wurstStackTrace)
			else
				call destroyCallbackSingle(this_58, "\n   ClosureTimers, line 62" + wurstStackTrace)
			endif
		elseif CallbackSingle_typeId[this_58] <= 732 then
			if CallbackSingle_typeId[this_58] <= 730 then
				call destroyCallbackSingle(this_58, "\n   ClosureTimers, line 62" + wurstStackTrace)
			else
				call destroyCallbackSingle(this_58, "\n   ClosureTimers, line 62" + wurstStackTrace)
			endif
		elseif CallbackSingle_typeId[this_58] <= 734 then
			call destroyCallbackSingle(this_58, "\n   ClosureTimers, line 62" + wurstStackTrace)
		else
			call destroyCallbackSingle(this_58, "\n   ClosureTimers, line 62" + wurstStackTrace)
		endif
	elseif CallbackSingle_typeId[this_58] <= 752 then
		if CallbackSingle_typeId[this_58] <= 744 then
			if CallbackSingle_typeId[this_58] <= 740 then
				if CallbackSingle_typeId[this_58] <= 738 then
					call destroyCallbackSingle(this_58, "\n   ClosureTimers, line 62" + wurstStackTrace)
				else
					call destroyCallbackSingle(this_58, "\n   ClosureTimers, line 62" + wurstStackTrace)
				endif
			elseif CallbackSingle_typeId[this_58] <= 742 then
				call destroyCallbackSingle(this_58, "\n   ClosureTimers, line 62" + wurstStackTrace)
			else
				call destroyCallbackSingle(this_58, "\n   ClosureTimers, line 62" + wurstStackTrace)
			endif
		elseif CallbackSingle_typeId[this_58] <= 748 then
			if CallbackSingle_typeId[this_58] <= 746 then
				call destroyCallbackSingle(this_58, "\n   ClosureTimers, line 62" + wurstStackTrace)
			else
				call destroyCallbackSingle(this_58, "\n   ClosureTimers, line 62" + wurstStackTrace)
			endif
		elseif CallbackSingle_typeId[this_58] <= 750 then
			call destroyCallbackSingle(this_58, "\n   ClosureTimers, line 62" + wurstStackTrace)
		else
			call destroyCallbackSingle(this_58, "\n   ClosureTimers, line 62" + wurstStackTrace)
		endif
	elseif CallbackSingle_typeId[this_58] <= 760 then
		if CallbackSingle_typeId[this_58] <= 756 then
			if CallbackSingle_typeId[this_58] <= 754 then
				call destroyCallbackSingle(this_58, "\n   ClosureTimers, line 62" + wurstStackTrace)
			else
				call destroyCallbackSingle(this_58, "\n   ClosureTimers, line 62" + wurstStackTrace)
			endif
		elseif CallbackSingle_typeId[this_58] <= 758 then
			call destroyCallbackSingle(this_58, "\n   ClosureTimers, line 62" + wurstStackTrace)
		else
			call destroyCallbackSingle(this_58, "\n   ClosureTimers, line 62" + wurstStackTrace)
		endif
	elseif CallbackSingle_typeId[this_58] <= 811 then
		if CallbackSingle_typeId[this_58] <= 762 then
			call destroyCallbackSingle(this_58, "\n   ClosureTimers, line 62" + wurstStackTrace)
		else
			call destroyCallbackSingle(this_58, "\n   ClosureTimers, line 62" + wurstStackTrace)
		endif
	elseif CallbackSingle_typeId[this_58] <= 865 then
		call destroyCallbackSingle(this_58, "\n   ClosureTimers, line 62" + wurstStackTrace)
	else
		call destroyCallbackSingle(this_58, "\n   ClosureTimers, line 62" + wurstStackTrace)
	endif
endfunction

function CallbackSingle_staticCallback takes string wurstStackTrace returns nothing
	local timer t = GetExpiredTimer()
	local integer cb = timer_getData(t, "\n   ClosureTimers, line 73" + wurstStackTrace)
	call dispatch_CallbackSingle_call(cb, "\n   ClosureTimers, line 74" + wurstStackTrace)
	call dispatch_CallbackSingle_destroyCallbackSingle(cb, "\n   ClosureTimers, line 75" + wurstStackTrace)
	call timer_release(t, "\n   ClosureTimers, line 76" + wurstStackTrace)
	set t = null
endfunction

function bridge_CallbackSingle_staticCallback takes nothing returns nothing
	call CallbackSingle_staticCallback("\n   ClosureTimers, line 67")
endfunction

function CustomBar_unlock takes integer this_58 returns nothing
	if  not CustomBar_locked[this_58] then
		return
	endif
	set CustomBar_count = CustomBar_count - 1
	if CustomBar_count == 0 then
		call PauseTimer(CustomBar_animationTimer)
	endif
	set CustomBar_bars[CustomBar_lockindex[this_58]] = CustomBar_bars[CustomBar_count]
	set CustomBar_lockindex[CustomBar_bars[CustomBar_count]] = CustomBar_lockindex[this_58]
	set CustomBar_locked[this_58] = false
endfunction

function dispatch_CustomBar_unlock takes integer this_58, string wurstStackTrace returns nothing
	if CustomBar_typeId[this_58] == 0 then
		if this_58 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling CustomBar.unlock" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called CustomBar.unlock on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call CustomBar_unlock(this_58)
endfunction

function CustomBar_onDestroy takes integer this_58, string wurstStackTrace returns nothing
	if CustomBar_t[this_58] != null then
		call DestroyTextTag(CustomBar_t[this_58])
	endif
	if CustomBar_locked[this_58] then
		call dispatch_CustomBar_unlock(this_58, "\n   CustomBar, line 357" + wurstStackTrace)
	endif
endfunction

function dealloc_CustomBar takes integer obj, string wurstStackTrace returns nothing
	if CustomBar_typeId[obj] == 0 then
		call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Double free: object of type CustomBar" + wurstStackTrace)
		call I2S(1 / 0)
	else
		set CustomBar_firstFree = CustomBar_firstFree + 1
		set CustomBar_typeId[obj] = 0
	endif
endfunction

function destroyCustomBar takes integer this_58, string wurstStackTrace returns nothing
	call CustomBar_onDestroy(this_58, "\n   CustomBar, line 352" + wurstStackTrace)
	call dealloc_CustomBar(this_58, "\n   CustomBar, line 352" + wurstStackTrace)
endfunction

function dispatch_CustomBar_destroyCustomBar takes integer this_58, string wurstStackTrace returns nothing
	if CustomBar_typeId[this_58] == 0 then
		if this_58 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling CustomBar.destroyCustomBar" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called CustomBar.destroyCustomBar on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call destroyCustomBar(this_58, "\n   CustomBar, line 110" + wurstStackTrace)
endfunction

function CustomBar_fadeOutCallback takes string wurstStackTrace returns nothing
	local integer bar = timer_getData(GetExpiredTimer(), "\n   CustomBar, line 361" + wurstStackTrace)
	set CustomBar_t[bar] = null
	call dispatch_CustomBar_destroyCustomBar(bar, "\n   CustomBar, line 363" + wurstStackTrace)
	call timer_release(GetExpiredTimer(), "\n   CustomBar, line 364" + wurstStackTrace)
endfunction

function bridge_CustomBar_fadeOutCallback takes nothing returns nothing
	call CustomBar_fadeOutCallback("\n   CustomBar, line 377")
endfunction

function ArrayQueue_units_set takes integer instanceId, integer arrayIndex, unit value, string wurstStackTrace returns nothing
	if arrayIndex < 0 or arrayIndex >= 6 then
		call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Index out of Bounds" + wurstStackTrace)
		call I2S(1 / 0)
	elseif arrayIndex <= 2 then
		if arrayIndex <= 1 then
			if arrayIndex <= 0 then
				set ArrayQueue_units_0[instanceId] = value
			else
				set ArrayQueue_units_1[instanceId] = value
			endif
		else
			set ArrayQueue_units_2[instanceId] = value
		endif
	elseif arrayIndex <= 4 then
		if arrayIndex <= 3 then
			set ArrayQueue_units_3[instanceId] = value
		else
			set ArrayQueue_units_4[instanceId] = value
		endif
	else
		set ArrayQueue_units_5[instanceId] = value
	endif
endfunction

function ArrayQueue_enqueue takes integer this_58, unit u_2, string wurstStackTrace returns nothing
	if ArrayQueue_size[this_58] < NewDummyRecycler_SAVED_UNITS_PER_ANGLE then
		set ArrayQueue_size[this_58] = ArrayQueue_size[this_58] + 1
		set ArrayQueue_rp[this_58] = ModuloInteger(ArrayQueue_rp[this_58] + 1, NewDummyRecycler_SAVED_UNITS_PER_ANGLE)
		call ArrayQueue_units_set(this_58, ArrayQueue_rp[this_58], u_2, "\n   NewDummyRecycler, line 47" + wurstStackTrace)
	else
		call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Queue Overflow" + wurstStackTrace)
		call I2S(1 / 0)
	endif
endfunction

function dispatch_ArrayQueue_enqueue takes integer this_58, unit u_2, string wurstStackTrace returns nothing
	if ArrayQueue_typeId[this_58] == 0 then
		if this_58 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling ArrayQueue.enqueue" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called ArrayQueue.enqueue on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call ArrayQueue_enqueue(this_58, u_2, "\n   NewDummyRecycler, line 43" + wurstStackTrace)
endfunction

function unit_pause takes unit this_58 returns nothing
	call PauseUnit(this_58, true)
endfunction

function unit_setFacing takes unit this_58, real deg returns nothing
	call SetUnitFacing(this_58, deg)
endfunction

function unit_setXY takes unit this_58, real pos_x, real pos_y returns nothing
	call SetUnitX(this_58, pos_x)
	call SetUnitY(this_58, pos_y)
endfunction

function DummyRecycler_recycle_2 takes unit u_2, string wurstStackTrace returns nothing
	local integer smallestQueue = 0
	local integer i = 1
	local integer temp = NewDummyRecycler_DIFFERENT_ANGLES - 1
	local unit receiver
	local unit receiver_2
	local unit receiver_3
	loop
		exitwhen i > temp
		if ArrayQueue_size[DummyRecycler_angleQueues[smallestQueue]] > ArrayQueue_size[DummyRecycler_angleQueues[i]] then
			set smallestQueue = i
		endif
		set i = i + 1
	endloop
	if ArrayQueue_size[DummyRecycler_angleQueues[smallestQueue]] >= NewDummyRecycler_SAVED_UNITS_PER_ANGLE then
		call unit_remove(u_2)
	else
		call dispatch_ArrayQueue_enqueue(DummyRecycler_angleQueues[smallestQueue], u_2, "\n   NewDummyRecycler, line 27" + wurstStackTrace)
		set receiver = u_2
		call unit_setXY(receiver, MapBounds_boundMax_x, MapBounds_boundMax_y)
		set receiver_2 = receiver
		call unit_pause(receiver_2)
		set receiver_3 = receiver_2
		call unit_setFacing(receiver_3, smallestQueue * NewDummyRecycler_ANGLE_DEGREE)
	endif
	set receiver = null
	set receiver_2 = null
	set receiver_3 = null
endfunction

function DelayNode_onDestroy takes integer this_58 returns nothing
endfunction

function dealloc_DelayNode takes integer obj, string wurstStackTrace returns nothing
	if DelayNode_typeId[obj] == 0 then
		call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Double free: object of type DelayNode" + wurstStackTrace)
		call I2S(1 / 0)
	else
		set DelayNode_nextFree[DelayNode_firstFree] = obj
		set DelayNode_firstFree = DelayNode_firstFree + 1
		set DelayNode_typeId[obj] = 0
	endif
endfunction

function destroyDelayNode takes integer this_58, string wurstStackTrace returns nothing
	call DelayNode_onDestroy(this_58)
	call dealloc_DelayNode(this_58, "\n   NewDummyRecycler, line 60" + wurstStackTrace)
endfunction

function dispatch_DelayNode_destroyDelayNode takes integer this_58, string wurstStackTrace returns nothing
	if DelayNode_typeId[this_58] == 0 then
		if this_58 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling DelayNode.destroyDelayNode" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called DelayNode.destroyDelayNode on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call destroyDelayNode(this_58, "\n   NewDummyRecycler, line 60" + wurstStackTrace)
endfunction

function DelayNode_recycle takes string wurstStackTrace returns nothing
	local integer tmp
	call DummyRecycler_recycle_2(DelayNode_u[DelayNode_first], "\n   NewDummyRecycler, line 109" + wurstStackTrace)
	set tmp = DelayNode_first
	if DelayNode_next[DelayNode_first] == 0 then
		set DelayNode_first = 0
	endif
	if DelayNode_next[DelayNode_first] != 0 then
		set DelayNode_first = DelayNode_next[DelayNode_first]
		call timer_start(DelayNode_t, DelayNode_delayTime[DelayNode_first] - getElapsedGameTime(), ref_function_bridge_DelayNode_recycle)
	else
		set DelayNode_first = 0
	endif
	call dispatch_DelayNode_destroyDelayNode(tmp, "\n   NewDummyRecycler, line 119" + wurstStackTrace)
endfunction

function bridge_DelayNode_recycle takes nothing returns nothing
	call DelayNode_recycle("\n   NewDummyRecycler, line 106")
endfunction

function bridge_DelayNode_recycle_2 takes nothing returns nothing
	call DelayNode_recycle("\n   NewDummyRecycler, line 104")
endfunction

function bridge_DelayNode_recycle_3 takes nothing returns nothing
	call DelayNode_recycle("\n   NewDummyRecycler, line 116")
endfunction

function LinkedListModule_getFirst takes nothing returns integer
	return LinkedListModule_first
endfunction

function LinkedListModule_getNext takes integer this_58 returns integer
	return LinkedListModule_next[this_58]
endfunction

function dispatch_Dot_getNext takes integer this_58, string wurstStackTrace returns integer
	local integer getNext_result
	if Dot_typeId[this_58] == 0 then
		if this_58 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Dot.getNext" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Dot.getNext on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	set getNext_result = LinkedListModule_getNext(this_58)
	return getNext_result
endfunction

function Event_onDestroy takes integer this_58, string wurstStackTrace returns nothing
	local integer buffer1 = Event_first[this_58]
	local integer buffer2
	loop
		exitwhen  not (buffer1 != 0)
		set buffer2 = Action_next[buffer1]
		call dispatch_Action_destroyAction(buffer1, "\n   CustomClosureEvents, line 58" + wurstStackTrace)
		set buffer1 = buffer2
	endloop
endfunction

function Unit2Event_onDestroy takes integer this_58, string wurstStackTrace returns nothing
	call Event_onDestroy(this_58, "\n   UnitEvents, line 105" + wurstStackTrace)
endfunction

function dealloc_Unit2Event takes integer obj, string wurstStackTrace returns nothing
	if Event_typeId[obj] == 0 then
		call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Double free: object of type Unit2Event" + wurstStackTrace)
		call I2S(1 / 0)
	else
		set Event_nextFree[Event_firstFree] = obj
		set Event_firstFree = Event_firstFree + 1
		set Event_typeId[obj] = 0
	endif
endfunction

function destroyUnit2Event takes integer this_58, string wurstStackTrace returns nothing
	call Unit2Event_onDestroy(this_58, "\n   UnitEvents, line 105" + wurstStackTrace)
	call dealloc_Unit2Event(this_58, "\n   UnitEvents, line 105" + wurstStackTrace)
endfunction

function dispatch_Unit2Event_destroyUnit2Event takes integer this_58, string wurstStackTrace returns nothing
	if Event_typeId[this_58] == 0 then
		if this_58 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Unit2Event.destroyUnit2Event" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Unit2Event.destroyUnit2Event on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call destroyUnit2Event(this_58, "\n   UnitEvents, line 105" + wurstStackTrace)
endfunction

function Shield_onDestroy takes integer this_58, string wurstStackTrace returns nothing
	set ShieldList_shieldSum[Shield_referingList[this_58]] = ShieldList_shieldSum[Shield_referingList[this_58]] - Shield_amount[this_58]
	call timer_release(Shield_t[this_58], "\n   Shield, line 93" + wurstStackTrace)
	if Shield_shieldDestroyed[this_58] != 0 then
		call dispatch_Unit2Event_destroyUnit2Event(Shield_shieldDestroyed[this_58], "\n   Shield, line 95" + wurstStackTrace)
	endif
	if Shield_prev[this_58] != 0 then
		set Shield_next[Shield_prev[this_58]] = Shield_next[this_58]
	endif
	if Shield_next[this_58] != 0 then
		set Shield_prev[Shield_next[this_58]] = Shield_prev[this_58]
	endif
	if ShieldList_first[Shield_referingList[this_58]] == this_58 then
		set ShieldList_first[Shield_referingList[this_58]] = Shield_next[this_58]
	endif
	if ShieldList_last[Shield_referingList[this_58]] == this_58 then
		set ShieldList_last[Shield_referingList[this_58]] = Shield_prev[this_58]
	endif
endfunction

function dealloc_Shield takes integer obj, string wurstStackTrace returns nothing
	if Shield_typeId[obj] == 0 then
		call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Double free: object of type Shield" + wurstStackTrace)
		call I2S(1 / 0)
	else
		set Shield_nextFree[Shield_firstFree] = obj
		set Shield_firstFree = Shield_firstFree + 1
		set Shield_typeId[obj] = 0
	endif
endfunction

function destroyShield takes integer this_58, string wurstStackTrace returns nothing
	call Shield_onDestroy(this_58, "\n   Shield, line 91" + wurstStackTrace)
	call dealloc_Shield(this_58, "\n   Shield, line 91" + wurstStackTrace)
endfunction

function dispatch_Shield_destroyShield takes integer this_58, string wurstStackTrace returns nothing
	if Shield_typeId[this_58] == 0 then
		if this_58 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Shield.destroyShield" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Shield.destroyShield on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call destroyShield(this_58, "\n   Shield, line 64" + wurstStackTrace)
endfunction

function Units_onDestroy takes integer this_58 returns nothing
endfunction

function dealloc_Units takes integer obj, string wurstStackTrace returns nothing
	if Units_typeId[obj] == 0 then
		call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Double free: object of type Units" + wurstStackTrace)
		call I2S(1 / 0)
	else
		set Units_nextFree[Units_firstFree] = obj
		set Units_firstFree = Units_firstFree + 1
		set Units_typeId[obj] = 0
	endif
endfunction

function destroyUnits takes integer this_58, string wurstStackTrace returns nothing
	call Units_onDestroy(this_58)
	call dealloc_Units(this_58, "\n   UnitEvents, line 99" + wurstStackTrace)
endfunction

function dispatch_Units_destroyUnits takes integer this_58, string wurstStackTrace returns nothing
	if Units_typeId[this_58] == 0 then
		if this_58 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Units.destroyUnits" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Units.destroyUnits on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call destroyUnits(this_58, "\n   UnitEvents, line 99" + wurstStackTrace)
endfunction

function alloc_Units takes nothing returns integer
	local integer this_58
	if Units_firstFree == 0 then
		set Units_maxIndex = Units_maxIndex + 1
		set this_58 = Units_maxIndex
	else
		set Units_firstFree = Units_firstFree - 1
		set this_58 = Units_nextFree[Units_firstFree]
	endif
	set Units_typeId[this_58] = 792
	return this_58
endfunction

function construct_Units takes integer this_58 returns nothing
endfunction

function new_Units takes nothing returns integer
	local integer this_58 = alloc_Units()
	call construct_Units(this_58)
	return this_58
endfunction

function Unit2Event_fire takes integer this_58, integer source, integer target, string wurstStackTrace returns nothing
	local integer data = new_Units()
	set Units_target[data] = target
	call Event_callActions(this_58, data, "\n   UnitEvents, line 111" + wurstStackTrace)
	call dispatch_Units_destroyUnits(data, "\n   UnitEvents, line 112" + wurstStackTrace)
endfunction

function dispatch_Unit2Event_fire takes integer this_58, integer source, integer target, string wurstStackTrace returns nothing
	if Event_typeId[this_58] == 0 then
		if this_58 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Unit2Event.fire" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Unit2Event.fire on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call Unit2Event_fire(this_58, source, target, "\n   UnitEvents, line 107" + wurstStackTrace)
endfunction

function ShieldList_damage takes integer this_58, real amount_51, integer source, string wurstStackTrace returns real
	local real remainingDmg
	local integer pos
	local integer buffer
	if ShieldList_first[this_58] == 0 then
		return amount_51
	endif
	if amount_51 > ShieldList_shieldSum[this_58] then
		set ShieldList_shieldSum[this_58] = 0.
	else
		set ShieldList_shieldSum[this_58] = ShieldList_shieldSum[this_58] - amount_51
	endif
	set remainingDmg = amount_51
	set pos = ShieldList_first[this_58]
	loop
		exitwhen  not (remainingDmg > 0. and pos != 0)
		if Shield_amount[pos] >= remainingDmg then
			set Shield_amount[pos] = Shield_amount[pos] - remainingDmg
			return 0.
		else
			set remainingDmg = remainingDmg - Shield_amount[pos]
			set Shield_amount[pos] = 0.
			if Shield_shieldDestroyed[pos] != 0 then
				call dispatch_Unit2Event_fire(Shield_shieldDestroyed[pos], source, Shield_target[pos], "\n   Shield, line 29" + wurstStackTrace)
			endif
			set buffer = pos
			set pos = Shield_next[buffer]
			call dispatch_Shield_destroyShield(buffer, "\n   Shield, line 32" + wurstStackTrace)
		endif
	endloop
	return remainingDmg
endfunction

function dispatch_ShieldList_damage takes integer this_58, real amount_51, integer source, string wurstStackTrace returns real
	local real damage_result
	if ShieldList_typeId[this_58] == 0 then
		if this_58 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling ShieldList.damage" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called ShieldList.damage on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	set damage_result = ShieldList_damage(this_58, amount_51, source, "\n   Shield, line 11" + wurstStackTrace)
	return damage_result
endfunction

function hashtable_loadReal takes hashtable this_58, integer parentKey, integer childKey returns real
	return LoadReal(this_58, parentKey, childKey)
endfunction

function Table_loadReal takes integer this_58, integer parentKey returns real
	return hashtable_loadReal(Table_ht, this_58, parentKey)
endfunction

function dispatch_Table_loadReal takes integer this_58, integer parentKey, string wurstStackTrace returns real
	local real loadReal_result
	if Table_typeId[this_58] == 0 then
		if this_58 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Table.loadReal" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Table.loadReal on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	set loadReal_result = Table_loadReal(this_58, parentKey)
	return loadReal_result
endfunction

function Unit_invuTT takes integer this_58 returns nothing
endfunction

function dispatch_Unit_invuTT takes integer this_58, string wurstStackTrace returns nothing
	if Unit_typeId[this_58] == 0 then
		if this_58 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Unit.invuTT" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Unit.invuTT on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	if Unit_typeId[this_58] <= 709 then
		call Unit_invuTT(this_58)
	else
		call Unit_invuTT(this_58)
	endif
endfunction

function Unit_goldTT takes integer this_58, real dmg, player p_2 returns nothing
endfunction

function dispatch_Unit_goldTT takes integer this_58, real dmg, player p_2, string wurstStackTrace returns nothing
	if Unit_typeId[this_58] == 0 then
		if this_58 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Unit.goldTT" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Unit.goldTT on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	if Unit_typeId[this_58] <= 709 then
		call Unit_goldTT(this_58, dmg, p_2)
	else
		call Unit_goldTT(this_58, dmg, p_2)
	endif
endfunction

function unit_kill takes unit this_58 returns nothing
	call KillUnit(this_58)
endfunction

function Unit_kill takes integer this_58, integer source, string wurstStackTrace returns nothing
	local integer i
	local integer goldAmount
	if  not Unit_isDead[this_58] then
		set Unit_isDead[this_58] = true
		call unit_addAbility(Unit_u[this_58], 1684365668)
		if Unit_onDeath[this_58] != 0 then
			call dispatch_Unit2Event_fire(Unit_onDeath[this_58], source, this_58, "\n   UnitClass, line 252" + wurstStackTrace)
		endif
		if Unit_causeDeath[this_58] != 0 then
			call dispatch_Unit2Event_fire(Unit_causeDeath[this_58], source, this_58, "\n   UnitClass, line 254" + wurstStackTrace)
		endif
		set i = 0
		loop
			exitwhen i > 11
			if dispatch_Table_loadReal(Unit_playerDamage[this_58], i, "\n   UnitClass, line 256" + wurstStackTrace) != 0. then
				set goldAmount = roundReal(dispatch_Table_loadReal(Unit_playerDamage[this_58], i, "\n   UnitClass, line 257" + wurstStackTrace) / Unit_totalDamage[this_58] * Unit_bounty[this_58])
				call SetPlayerState(Player(i), PLAYER_STATE_RESOURCE_GOLD, GetPlayerState(Player(i), PLAYER_STATE_RESOURCE_GOLD) + goldAmount)
				call dispatch_Unit_goldTT(this_58, goldAmount * 1., Player(i), "\n   UnitClass, line 259" + wurstStackTrace)
			endif
			set i = i + 1
		endloop
		call unit_kill(Unit_u[this_58])
	endif
endfunction

function Bar_disable takes integer this_58 returns nothing
	call texttag_setVisibility(Bar_tt[this_58], false)
	set Bar_check[this_58] = false
endfunction

function dispatch_Bar_disable takes integer this_58, string wurstStackTrace returns nothing
	if Bar_typeId[this_58] == 0 then
		if this_58 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Bar.disable" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Bar.disable on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call Bar_disable(this_58)
endfunction

function Hero_kill takes integer this_58, integer source, string wurstStackTrace returns nothing
	call dispatch_Bar_disable(Hero_hb[this_58], "\n   HeroClass, line 78" + wurstStackTrace)
	call Unit_kill(this_58, source, "\n   HeroClass, line 79" + wurstStackTrace)
endfunction

function dispatch_Unit_kill takes integer this_58, integer source, string wurstStackTrace returns nothing
	if Unit_typeId[this_58] == 0 then
		if this_58 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Unit.kill" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Unit.kill on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	if Unit_typeId[this_58] <= 709 then
		call Unit_kill(this_58, source, "\n   UnitClass, line 247" + wurstStackTrace)
	else
		call Hero_kill(this_58, source, "\n   UnitClass, line 247" + wurstStackTrace)
	endif
endfunction

function unit_setState takes unit this_58, unitstate state, real value returns nothing
	call SetUnitState(this_58, state, value)
endfunction

function unit_setHP takes unit this_58, real hp returns nothing
	call unit_setState(this_58, UNIT_STATE_LIFE, hp)
endfunction

function Unit_dealDamage takes integer this_58, real amount_51, integer source, boolean reward, string wurstStackTrace returns boolean
	local real tHP
	local real currentAmount
	if Unit_isHero[source] then
		set Unit_lastHeroDamager[this_58] = source
	endif
	if Unit_vunerable[this_58] then
		set tHP = unit_getHP(Unit_u[this_58])
		set currentAmount = dispatch_ShieldList_damage(Unit_shieldList[this_58], amount_51, source, "\n   UnitClass, line 1096" + wurstStackTrace)
		set Unit_totalDamage[this_58] = Unit_totalDamage[this_58] + amount_51
		if  not reward then
			set Unit_systemDamage[this_58] = Unit_systemDamage[this_58] + amount_51
		endif
		if tHP - 0.405 <= currentAmount then
			if reward then
				call dispatch_Table_saveReal(Unit_playerDamage[this_58], Unit_ownerId[this_58], dispatch_Table_loadReal(Unit_playerDamage[this_58], Unit_ownerId[this_58], "\n   UnitClass, line 1102" + wurstStackTrace) + tHP, "\n   UnitClass, line 1102" + wurstStackTrace)
			endif
			call dispatch_Unit_kill(this_58, source, "\n   UnitClass, line 1103" + wurstStackTrace)
		elseif reward then
			call dispatch_Table_saveReal(Unit_playerDamage[this_58], Unit_ownerId[this_58], dispatch_Table_loadReal(Unit_playerDamage[this_58], Unit_ownerId[this_58], "\n   UnitClass, line 1106" + wurstStackTrace) + amount_51, "\n   UnitClass, line 1106" + wurstStackTrace)
		endif
		call unit_setHP(Unit_u[this_58], tHP - currentAmount)
		if Unit_isHero[this_58] or Unit_isHero[source] then
			return true
		else
			return false
		endif
	else
		if Unit_isHero[this_58] or Unit_isHero[source] then
			call dispatch_Unit_invuTT(this_58, "\n   UnitClass, line 1114" + wurstStackTrace)
		endif
		return false
	endif
endfunction

function Hero_dealDamage takes integer this_58, real amount_51, integer source, boolean bonus, string wurstStackTrace returns boolean
	call dispatch_Bar_update(Hero_hb[this_58], "\n   HeroClass, line 151" + wurstStackTrace)
	return Unit_dealDamage(this_58, amount_51, source, bonus, "\n   HeroClass, line 152" + wurstStackTrace)
endfunction

function dispatch_Unit_dealDamage takes integer this_58, real amount_51, integer source, boolean reward, string wurstStackTrace returns boolean
	local boolean dealDamage_result
	if Unit_typeId[this_58] == 0 then
		if this_58 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Unit.dealDamage" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Unit.dealDamage on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	if Unit_typeId[this_58] <= 709 then
		set dealDamage_result = Unit_dealDamage(this_58, amount_51, source, reward, "\n   UnitClass, line 1090" + wurstStackTrace)
	else
		set dealDamage_result = Hero_dealDamage(this_58, amount_51, source, reward, "\n   UnitClass, line 1090" + wurstStackTrace)
	endif
	return dealDamage_result
endfunction

function Unit_dotTT_2 takes integer this_58, real dmg returns nothing
endfunction

function dispatch_Unit_dotTT takes integer this_58, real dmg, string wurstStackTrace returns nothing
	if Unit_typeId[this_58] == 0 then
		if this_58 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Unit.dotTT" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Unit.dotTT on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	if Unit_typeId[this_58] <= 709 then
		call Unit_dotTT_2(this_58, dmg)
	else
		call Unit_dotTT_2(this_58, dmg)
	endif
endfunction

function Unit_damageDot takes integer this_58, integer source, real amount_51, string wurstStackTrace returns nothing
	if dispatch_Unit_dealDamage(this_58, amount_51, source, true, "\n   UnitClass, line 1125" + wurstStackTrace) then
		call dispatch_Unit_dotTT(this_58, amount_51, "\n   UnitClass, line 1126" + wurstStackTrace)
	endif
endfunction

function dispatch_Unit_damageDot takes integer this_58, integer source, real amount_51, string wurstStackTrace returns nothing
	if Unit_typeId[this_58] == 0 then
		if this_58 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Unit.damageDot" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Unit.damageDot on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	if Unit_typeId[this_58] <= 709 then
		call Unit_damageDot(this_58, source, amount_51, "\n   UnitClass, line 1124" + wurstStackTrace)
	else
		call Unit_damageDot(this_58, source, amount_51, "\n   UnitClass, line 1124" + wurstStackTrace)
	endif
endfunction

function Dot_loopList takes string wurstStackTrace returns nothing
	local integer d_2 = LinkedListModule_getFirst()
	local integer buffer
	loop
		exitwhen  not (d_2 != 0)
		set buffer = d_2
		set d_2 = dispatch_Dot_getNext(d_2, "\n   Dot, line 36" + wurstStackTrace)
		call dispatch_Unit_damageDot(Dot_u[buffer], Dot_source[buffer], Dot_damage[buffer], "\n   Dot, line 37" + wurstStackTrace)
	endloop
endfunction

function bridge_Dot_loopList takes nothing returns nothing
	call Dot_loopList("\n   GameStart, line 87")
endfunction

function Dot_timerDestroyDot takes string wurstStackTrace returns nothing
	call dispatch_Dot_destroyDot(timer_getData(GetExpiredTimer(), "\n   Dot, line 30" + wurstStackTrace), "\n   Dot, line 30" + wurstStackTrace)
endfunction

function bridge_Dot_timerDestroyDot takes nothing returns nothing
	call Dot_timerDestroyDot("\n   Dot, line 27")
endfunction

function timerToIndex takes timer object returns integer
	return handle_getHandleId(object)
endfunction

function Hero_addAbilityCastProtection takes integer this_58, integer abiId, string wurstStackTrace returns nothing
	local timer t
	call SetPlayerAbilityAvailable(Unit_owner[this_58], abiId, false)
	set t = getTimer("\n   HeroClass, line 229" + wurstStackTrace)
	call timer_setData(t, this_58, "\n   HeroClass, line 230" + wurstStackTrace)
	call dispatch_HashMap_put(Hero_enableAbility[this_58], timerToIndex(t), abiId, "\n   HeroClass, line 231" + wurstStackTrace)
	call timer_start(t, 0.0, ref_function_bridge_Hero_enableAbilityTimed)
	set t = null
endfunction

function dispatch_Hero_addAbilityCastProtection takes integer this_58, integer abiId, string wurstStackTrace returns nothing
	if Unit_typeId[this_58] == 0 then
		if this_58 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Hero.addAbilityCastProtection" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Hero.addAbilityCastProtection on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call Hero_addAbilityCastProtection(this_58, abiId, "\n   HeroClass, line 227" + wurstStackTrace)
endfunction

function Hero_channelCancel_2 takes integer this_58, string wurstStackTrace returns nothing
	call dispatch_UnitEvent_fire(Hero_channelCancel[this_58], this_58, "\n   HeroClass, line 343" + wurstStackTrace)
endfunction

function dispatch_Hero_channelCancel takes integer this_58, string wurstStackTrace returns nothing
	if Unit_typeId[this_58] == 0 then
		if this_58 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Hero.channelCancel" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Hero.channelCancel on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call Hero_channelCancel_2(this_58, "\n   HeroClass, line 341" + wurstStackTrace)
endfunction

function Queue_dequeue takes integer this_58 returns integer
	local integer tmp = Queue_front[this_58]
	set Queue_front[this_58] = SEntry_next[Queue_front[this_58]]
	set Queue_size[this_58] = Queue_size[this_58] - 1
	return SEntry_elem[tmp]
endfunction

function dispatch_Queue_dequeue takes integer this_58, string wurstStackTrace returns integer
	local integer dequeue_result
	if Queue_typeId[this_58] == 0 then
		if this_58 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Queue.dequeue" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Queue.dequeue on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	set dequeue_result = Queue_dequeue(this_58)
	return dequeue_result
endfunction

function Hero_cleanCastQueue takes integer this_58, string wurstStackTrace returns nothing
	loop
		exitwhen  not (dispatch_Queue_dequeue(Hero_castQueue[this_58], "\n   HeroClass, line 334" + wurstStackTrace) != 0)
	endloop
endfunction

function dispatch_Hero_cleanCastQueue takes integer this_58, string wurstStackTrace returns nothing
	if Unit_typeId[this_58] == 0 then
		if this_58 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Hero.cleanCastQueue" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Hero.cleanCastQueue on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call Hero_cleanCastQueue(this_58, "\n   HeroClass, line 333" + wurstStackTrace)
endfunction

function Order_onDestroy takes integer this_58 returns nothing
	local multiboarditem mbi
	local multiboarditem receiver
	set InstanceBoard_count[ShowInstances_classId_2] = InstanceBoard_count[ShowInstances_classId_2] - 1
	set mbi = multiboard_getItem(InstanceBoard_mb, ShowInstances_classId_2, 1)
	set receiver = mbi
	call multiboarditem_setValue(receiver, int_toString(InstanceBoard_count[ShowInstances_classId_2]))
	call multiboarditem_release(receiver)
	set mbi = null
	set receiver = null
endfunction

function dealloc_Order takes integer obj, string wurstStackTrace returns nothing
	if Order_typeId[obj] == 0 then
		call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Double free: object of type Order" + wurstStackTrace)
		call I2S(1 / 0)
	else
		set Order_nextFree[Order_firstFree] = obj
		set Order_firstFree = Order_firstFree + 1
		set Order_typeId[obj] = 0
	endif
endfunction

function destroyOrder takes integer this_58, string wurstStackTrace returns nothing
	call Order_onDestroy(this_58)
	call dealloc_Order(this_58, "\n   OrderHandling, line 61" + wurstStackTrace)
endfunction

function dispatch_Order_destroyOrder takes integer this_58, string wurstStackTrace returns nothing
	if Order_typeId[this_58] == 0 then
		if this_58 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Order.destroyOrder" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Order.destroyOrder on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call destroyOrder(this_58, "\n   OrderHandling, line 61" + wurstStackTrace)
endfunction

function Hero_setMainOrder takes integer this_58, integer o, string wurstStackTrace returns nothing
	if Hero_mainOrder[this_58] != 0 then
		call dispatch_Order_destroyOrder(Hero_mainOrder[this_58], "\n   HeroClass, line 236" + wurstStackTrace)
	endif
	set Hero_mainOrder[this_58] = o
endfunction

function dispatch_Hero_setMainOrder takes integer this_58, integer o, string wurstStackTrace returns nothing
	if Unit_typeId[this_58] == 0 then
		if this_58 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Hero.setMainOrder" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Hero.setMainOrder on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call Hero_setMainOrder(this_58, o, "\n   HeroClass, line 234" + wurstStackTrace)
endfunction

function trigger_disable takes trigger this_58 returns nothing
	call DisableTrigger(this_58)
endfunction

function trigger_enable takes trigger this_58 returns nothing
	call EnableTrigger(this_58)
endfunction

function AttackOrder_issueToUnit takes integer this_58, unit u_2 returns boolean
	call trigger_disable(GetOrders_orderDetect)
	call IssueTargetOrderById(u_2, AttackOrder_atkOrderId, AttackOrder_target[this_58])
	call trigger_enable(GetOrders_orderDetect)
	return GetUnitAbilityLevel(u_2, 1684365668) == 1
endfunction

function MoveOrder_issueToUnit takes integer this_58, unit u_2 returns boolean
	local real currentPos_x
	local real currentPos_y
	local boolean b
	local integer tempIndex
	local real tempTupleSelectionResult_1
	local real temp_tempTupleSelectionResult_1
	local real temp_tempTupleSelectionResult_2
	local integer tempIndex_2
	local real tempTupleSelectionResult_2
	local real temp_tempTupleSelectionResult_1_2
	local real temp_tempTupleSelectionResult_2_2
	local real temp_currentPos_x
	local real temp_currentPos_y
	local integer tempIndex_3
	local integer tempIndex_4
	local unit temp
	local integer temp_2
	local real temp_3
	local real temp_4
	call trigger_disable(GetOrders_orderDetect)
	set temp = u_2
	set temp_2 = MoveOrder_moveOrderId
	set tempIndex = this_58
	set temp_tempTupleSelectionResult_1 = MoveOrder_pos[tempIndex]
	set temp_tempTupleSelectionResult_2 = MoveOrder_pos_2[tempIndex]
	set tempTupleSelectionResult_1 = temp_tempTupleSelectionResult_1
	set temp_3 = tempTupleSelectionResult_1
	set tempIndex_2 = this_58
	set temp_tempTupleSelectionResult_1_2 = MoveOrder_pos[tempIndex_2]
	set temp_tempTupleSelectionResult_2_2 = MoveOrder_pos_2[tempIndex_2]
	set tempTupleSelectionResult_2 = temp_tempTupleSelectionResult_2_2
	call IssuePointOrderById(temp, temp_2, temp_3, tempTupleSelectionResult_2)
	call trigger_enable(GetOrders_orderDetect)
	set temp_currentPos_x = unit_getPos(u_2)
	set temp_currentPos_y = unit_getPos_return_y
	set currentPos_x = temp_currentPos_x
	set currentPos_y = temp_currentPos_y
	set temp_4 = currentPos_x
	set tempIndex_3 = this_58
	set b = temp_4 == MoveOrder_lastPos[tempIndex_3] and currentPos_y == MoveOrder_lastPos_2[tempIndex_3]
	set tempIndex_4 = this_58
	set MoveOrder_lastPos[tempIndex_4] = currentPos_x
	set MoveOrder_lastPos_2[tempIndex_4] = currentPos_y
	set temp = null
	return b
endfunction

function dispatch_Order_issueToUnit takes integer this_58, unit u_2, string wurstStackTrace returns boolean
	local boolean issueToUnit_result
	if Order_typeId[this_58] == 0 then
		if this_58 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Order.issueToUnit" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Order.issueToUnit on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	if Order_typeId[this_58] <= 699 then
		set issueToUnit_result = MoveOrder_issueToUnit(this_58, u_2)
	else
		set issueToUnit_result = AttackOrder_issueToUnit(this_58, u_2)
	endif
	return issueToUnit_result
endfunction

function Queue_enqueue takes integer this_58, integer elem returns nothing
	if Queue_front[this_58] == Queue_dummy[this_58] then
		set Queue_front[this_58] = new_SEntry_2(elem, Queue_dummy[this_58])
		set Queue_back[this_58] = Queue_front[this_58]
		set SEntry_next[Queue_front[this_58]] = Queue_dummy[this_58]
	else
		set SEntry_next[Queue_back[this_58]] = new_SEntry_2(elem, Queue_dummy[this_58])
		set Queue_back[this_58] = SEntry_next[Queue_back[this_58]]
	endif
	set Queue_size[this_58] = Queue_size[this_58] + 1
endfunction

function dispatch_Queue_enqueue takes integer this_58, integer elem, string wurstStackTrace returns nothing
	if Queue_typeId[this_58] == 0 then
		if this_58 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Queue.enqueue" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Queue.enqueue on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call Queue_enqueue(this_58, elem)
endfunction

function alloc_Spellcast takes nothing returns integer
	local integer this_58
	if Spellcast_firstFree == 0 then
		set Spellcast_maxIndex = Spellcast_maxIndex + 1
		set this_58 = Spellcast_maxIndex
	else
		set Spellcast_firstFree = Spellcast_firstFree - 1
		set this_58 = Spellcast_nextFree[Spellcast_firstFree]
	endif
	set Spellcast_typeId[this_58] = 703
	return this_58
endfunction

function construct_Spellcast takes integer this_58 returns nothing
endfunction

function new_Spellcast takes nothing returns integer
	local integer this_58 = alloc_Spellcast()
	call construct_Spellcast(this_58)
	return this_58
endfunction

function Spell_getInstantSpellCast takes integer this_58 returns integer
	local integer sc = new_Spellcast()
	set Spellcast_spell[sc] = this_58
	return sc
endfunction

function dispatch_Spell_getInstantSpellCast takes integer this_58, string wurstStackTrace returns integer
	local integer getInstantSpellCast_result
	if Spell_typeId[this_58] == 0 then
		if this_58 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Spell.getInstantSpellCast" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Spell.getInstantSpellCast on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	if Spell_typeId[this_58] <= 841 then
		if Spell_typeId[this_58] <= 708 then
			set getInstantSpellCast_result = Spell_getInstantSpellCast(this_58)
		else
			set getInstantSpellCast_result = Spell_getInstantSpellCast(this_58)
		endif
	else
		set getInstantSpellCast_result = Spell_getInstantSpellCast(this_58)
	endif
	return getInstantSpellCast_result
endfunction

function Spell_getPointSpellCast takes integer this_58, real pos_x, real pos_y returns integer
	local integer sc = new_Spellcast()
	local integer tempIndex
	set Spellcast_spell[sc] = this_58
	set tempIndex = sc
	set Spellcast_pos[tempIndex] = pos_x
	set Spellcast_pos_2[tempIndex] = pos_y
	return sc
endfunction

function dispatch_Spell_getPointSpellCast takes integer this_58, real pos_x, real pos_y, string wurstStackTrace returns integer
	local integer getPointSpellCast_result
	if Spell_typeId[this_58] == 0 then
		if this_58 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Spell.getPointSpellCast" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Spell.getPointSpellCast on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	if Spell_typeId[this_58] <= 841 then
		if Spell_typeId[this_58] <= 708 then
			set getPointSpellCast_result = Spell_getPointSpellCast(this_58, pos_x, pos_y)
		else
			set getPointSpellCast_result = Spell_getPointSpellCast(this_58, pos_x, pos_y)
		endif
	else
		set getPointSpellCast_result = Spell_getPointSpellCast(this_58, pos_x, pos_y)
	endif
	return getPointSpellCast_result
endfunction

function Spell_getUnitSpellCast takes integer this_58, unit target returns integer
	local integer sc = new_Spellcast()
	set Spellcast_spell[sc] = this_58
	set Spellcast_target[sc] = target
	return sc
endfunction

function dispatch_Spell_getUnitSpellCast takes integer this_58, unit target, string wurstStackTrace returns integer
	local integer getUnitSpellCast_result
	if Spell_typeId[this_58] == 0 then
		if this_58 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Spell.getUnitSpellCast" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Spell.getUnitSpellCast on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	if Spell_typeId[this_58] <= 841 then
		if Spell_typeId[this_58] <= 708 then
			set getUnitSpellCast_result = Spell_getUnitSpellCast(this_58, target)
		else
			set getUnitSpellCast_result = Spell_getUnitSpellCast(this_58, target)
		endif
	else
		set getUnitSpellCast_result = Spell_getUnitSpellCast(this_58, target)
	endif
	return getUnitSpellCast_result
endfunction

function alloc_AttackOrder takes nothing returns integer
	local integer this_58
	if Order_firstFree == 0 then
		set Order_maxIndex = Order_maxIndex + 1
		set this_58 = Order_maxIndex
	else
		set Order_firstFree = Order_firstFree - 1
		set this_58 = Order_nextFree[Order_firstFree]
	endif
	set Order_typeId[this_58] = 700
	return this_58
endfunction

function construct_Order takes integer this_58 returns nothing
	local multiboarditem mbi
	local multiboarditem receiver
	set InstanceBoard_count[ShowInstances_classId_2] = InstanceBoard_count[ShowInstances_classId_2] + 1
	set mbi = multiboard_getItem(InstanceBoard_mb, ShowInstances_classId_2, 1)
	set receiver = mbi
	call multiboarditem_setValue(receiver, int_toString(InstanceBoard_count[ShowInstances_classId_2]))
	call multiboarditem_release(receiver)
	set mbi = null
	set receiver = null
endfunction

function construct_AttackOrder takes integer this_58, unit target returns nothing
	call construct_Order(this_58)
	set Order_orderId[this_58] = Order_orderId[this_58]
	set AttackOrder_target[this_58] = target
endfunction

function new_AttackOrder takes unit target returns integer
	local integer this_58 = alloc_AttackOrder()
	call construct_AttackOrder(this_58, target)
	return this_58
endfunction

function alloc_MoveOrder takes nothing returns integer
	local integer this_58
	if Order_firstFree == 0 then
		set Order_maxIndex = Order_maxIndex + 1
		set this_58 = Order_maxIndex
	else
		set Order_firstFree = Order_firstFree - 1
		set this_58 = Order_nextFree[Order_firstFree]
	endif
	set Order_typeId[this_58] = 699
	return this_58
endfunction

function construct_MoveOrder takes integer this_58, real pos_x, real pos_y returns nothing
	local integer tempIndex
	local integer tempIndex_2
	call construct_Order(this_58)
	set tempIndex = this_58
	set MoveOrder_lastPos[tempIndex] = 0.
	set MoveOrder_lastPos_2[tempIndex] = 0.
	set Order_orderId[this_58] = Order_orderId[this_58]
	set tempIndex_2 = this_58
	set MoveOrder_pos[tempIndex_2] = pos_x
	set MoveOrder_pos_2[tempIndex_2] = pos_y
endfunction

function new_MoveOrder takes real pos_x, real pos_y returns integer
	local integer this_58 = alloc_MoveOrder()
	call construct_MoveOrder(this_58, pos_x, pos_y)
	return this_58
endfunction

function Hero_onOrder takes integer this_58, real pos_x, real pos_y, unit target, integer orderId, string wurstStackTrace returns nothing
	local integer temp
	local integer temp_2
	local integer casted
	local integer temp_3
	set Hero_lastOrdered[this_58] = 0
	set temp = orderId
	if temp == OrderHandling_exitDetectId then
		call SetPlayerAbilityAvailable(Unit_owner[this_58], 1702390132, false)
		return
	elseif temp == OrderHandling_scoreboardId then
		call dispatch_Hero_addAbilityCastProtection(this_58, 1935896434, "\n   HeroClass, line 248" + wurstStackTrace)
		return
	endif
	if Hero_acceptOrders[this_58] then
		set temp_2 = orderId
		if temp_2 == OrderHandling_smartId then
			if target == null then
				call dispatch_Hero_setMainOrder(this_58, new_MoveOrder(pos_x, pos_y), "\n   HeroClass, line 255" + wurstStackTrace)
				call dispatch_Order_issueToUnit(Hero_mainOrder[this_58], Unit_u[this_58], "\n   HeroClass, line 256" + wurstStackTrace)
			elseif IsUnitAlly(target, Unit_owner[this_58]) then
				call dispatch_Hero_setMainOrder(this_58, new_MoveOrder(unit_getPos(target), unit_getPos_return_y), "\n   HeroClass, line 259" + wurstStackTrace)
				call dispatch_Order_issueToUnit(Hero_mainOrder[this_58], Unit_u[this_58], "\n   HeroClass, line 260" + wurstStackTrace)
			else
				call dispatch_Hero_setMainOrder(this_58, new_AttackOrder(target), "\n   HeroClass, line 262" + wurstStackTrace)
				call dispatch_Order_issueToUnit(Hero_mainOrder[this_58], Unit_u[this_58], "\n   HeroClass, line 263" + wurstStackTrace)
			endif
		elseif temp_2 == OrderHandling_attackId then
			if IsUnitAlly(target, Unit_owner[this_58]) then
				call dispatch_Hero_setMainOrder(this_58, new_MoveOrder(unit_getPos(target), unit_getPos_return_y), "\n   HeroClass, line 266" + wurstStackTrace)
				call dispatch_Order_issueToUnit(Hero_mainOrder[this_58], Unit_u[this_58], "\n   HeroClass, line 267" + wurstStackTrace)
			else
				call dispatch_Hero_setMainOrder(this_58, new_AttackOrder(target), "\n   HeroClass, line 269" + wurstStackTrace)
				call dispatch_Order_issueToUnit(Hero_mainOrder[this_58], Unit_u[this_58], "\n   HeroClass, line 270" + wurstStackTrace)
			endif
		elseif temp_2 == OrderHandling_stopId then
			call dispatch_Hero_setMainOrder(this_58, 0, "\n   HeroClass, line 272" + wurstStackTrace)
			call IssueImmediateOrderById(Unit_u[this_58], 851972)
		endif
		if Hero_channelCancel[this_58] != 0 and GetUnitTypeId(target) != 1668314229 then
			call dispatch_Hero_channelCancel(this_58, "\n   HeroClass, line 275" + wurstStackTrace)
		elseif GetUnitTypeId(target) == 1668314229 then
		endif
	else
		set casted = 0
		set temp_3 = orderId
		if temp_3 == OrderHandling_smartId then
			call dispatch_Hero_cleanCastQueue(this_58, "\n   HeroClass, line 282" + wurstStackTrace)
			if target == null then
				call dispatch_Hero_setMainOrder(this_58, new_MoveOrder(pos_x, pos_y), "\n   HeroClass, line 284" + wurstStackTrace)
			elseif IsUnitAlly(target, Unit_owner[this_58]) then
				call dispatch_Hero_setMainOrder(this_58, new_MoveOrder(unit_getPos(target), unit_getPos_return_y), "\n   HeroClass, line 287" + wurstStackTrace)
			else
				call dispatch_Hero_setMainOrder(this_58, new_AttackOrder(target), "\n   HeroClass, line 289" + wurstStackTrace)
			endif
		elseif temp_3 == OrderHandling_attackId then
			call dispatch_Hero_cleanCastQueue(this_58, "\n   HeroClass, line 291" + wurstStackTrace)
			call dispatch_Hero_addAbilityCastProtection(this_58, OrderHandling_attackSpell, "\n   HeroClass, line 292" + wurstStackTrace)
			if IsUnitAlly(target, Unit_owner[this_58]) then
				call dispatch_Hero_setMainOrder(this_58, new_MoveOrder(unit_getPos(target), unit_getPos_return_y), "\n   HeroClass, line 294" + wurstStackTrace)
			else
				call dispatch_Hero_setMainOrder(this_58, new_AttackOrder(target), "\n   HeroClass, line 296" + wurstStackTrace)
			endif
		elseif temp_3 == OrderHandling_stopId then
			call dispatch_Hero_cleanCastQueue(this_58, "\n   HeroClass, line 298" + wurstStackTrace)
			call dispatch_Hero_addAbilityCastProtection(this_58, OrderHandling_stopSpell, "\n   HeroClass, line 299" + wurstStackTrace)
			call dispatch_Hero_setMainOrder(this_58, 0, "\n   HeroClass, line 300" + wurstStackTrace)
		elseif temp_3 == Spell_qSpellId then
			set casted = Hero_spellQ[this_58]
			call dispatch_Hero_addAbilityCastProtection(this_58, Spell_spell[Hero_spellQ[this_58]], "\n   HeroClass, line 303" + wurstStackTrace)
		elseif temp_3 == Spell_wSpellId then
			set casted = Hero_spellW[this_58]
			call dispatch_Hero_addAbilityCastProtection(this_58, Spell_spell[Hero_spellW[this_58]], "\n   HeroClass, line 306" + wurstStackTrace)
		elseif temp_3 == Spell_eSpellId then
			set casted = Hero_spellE[this_58]
			call dispatch_Hero_addAbilityCastProtection(this_58, Spell_spell[Hero_spellE[this_58]], "\n   HeroClass, line 309" + wurstStackTrace)
		elseif temp_3 == Spell_rSpellId then
			set casted = Hero_spellR[this_58]
			call dispatch_Hero_addAbilityCastProtection(this_58, Spell_spell[Hero_spellR[this_58]], "\n   HeroClass, line 312" + wurstStackTrace)
		elseif temp_3 == Spell_dSpellId then
			set casted = Hero_spellD[this_58]
			call dispatch_Hero_addAbilityCastProtection(this_58, Spell_spell[Hero_spellD[this_58]], "\n   HeroClass, line 315" + wurstStackTrace)
		elseif temp_3 == Spell_fSpellId then
			set casted = Hero_spellF[this_58]
			call dispatch_Hero_addAbilityCastProtection(this_58, Spell_spell[Hero_spellF[this_58]], "\n   HeroClass, line 318" + wurstStackTrace)
		endif
		if casted != 0 then
			if target == null then
				if pos_x == 0. and pos_y == 0. then
					call dispatch_Queue_enqueue(Hero_castQueue[this_58], dispatch_Spell_getInstantSpellCast(casted, "\n   HeroClass, line 322" + wurstStackTrace), "\n   HeroClass, line 322" + wurstStackTrace)
				else
					call dispatch_Queue_enqueue(Hero_castQueue[this_58], dispatch_Spell_getPointSpellCast(casted, pos_x, pos_y, "\n   HeroClass, line 324" + wurstStackTrace), "\n   HeroClass, line 324" + wurstStackTrace)
				endif
			else
				call dispatch_Queue_enqueue(Hero_castQueue[this_58], dispatch_Spell_getUnitSpellCast(casted, target, "\n   HeroClass, line 326" + wurstStackTrace), "\n   HeroClass, line 326" + wurstStackTrace)
			endif
		endif
		if Hero_channelCancel[this_58] != 0 and GetUnitTypeId(target) != 1668314229 then
			call dispatch_Hero_channelCancel(this_58, "\n   HeroClass, line 328" + wurstStackTrace)
		elseif GetUnitTypeId(target) == 1668314229 then
		endif
	endif
endfunction

function dispatch_Hero_onOrder takes integer this_58, real pos_x, real pos_y, unit target, integer orderId, string wurstStackTrace returns nothing
	if Unit_typeId[this_58] == 0 then
		if this_58 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Hero.onOrder" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Hero.onOrder on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call Hero_onOrder(this_58, pos_x, pos_y, target, orderId, "\n   HeroClass, line 239" + wurstStackTrace)
endfunction

function GetOrders_callOnOrder takes string wurstStackTrace returns nothing
	call trigger_disable(GetOrders_orderDetect)
	call dispatch_Hero_onOrder(unit_getUserData(GetTriggerUnit()), GetOrderPointX(), GetOrderPointY(), GetOrderTargetUnit(), GetIssuedOrderId(), "\n   OrderHandling, line 56" + wurstStackTrace)
	call trigger_enable(GetOrders_orderDetect)
endfunction

function bridge_GetOrders_callOnOrder takes nothing returns nothing
	call GetOrders_callOnOrder("\n   OrderHandling, line 47")
endfunction

function Hero_enableAbilityTimed takes string wurstStackTrace returns nothing
	local timer t = GetExpiredTimer()
	local integer obj = timer_getData(t, "\n   HeroClass, line 222" + wurstStackTrace)
	call SetPlayerAbilityAvailable(Unit_owner[obj], dispatch_HashMap_get(Hero_enableAbility[obj], timerToIndex(t), "\n   HeroClass, line 223" + wurstStackTrace), true)
	call timer_release(t, "\n   HeroClass, line 224" + wurstStackTrace)
	set t = null
	set t = null
endfunction

function bridge_Hero_enableAbilityTimed takes nothing returns nothing
	call Hero_enableAbilityTimed("\n   HeroClass, line 232")
endfunction

function dispatch_InstantSpell_onCast takes integer this_58, integer caster returns nothing
endfunction

function InstantSpell_callOnCast takes integer this_58, integer caster, real targetPos_x, real targetPos_y, integer target returns nothing
	call dispatch_InstantSpell_onCast(this_58, caster)
endfunction

function dispatch_PointOrUnitSpell_onPointCast takes integer this_58, integer caster, real targetPos_x, real targetPos_y returns nothing
endfunction

function dispatch_PointOrUnitSpell_onUnitCast takes integer this_58, integer caster, integer target returns nothing
endfunction

function PointOrUnitSpell_callOnCast takes integer this_58, integer caster, real targetPos_x, real targetPos_y, integer target returns nothing
	if target == 0 then
		call dispatch_PointOrUnitSpell_onPointCast(this_58, caster, targetPos_x, targetPos_y)
	else
		call dispatch_PointOrUnitSpell_onUnitCast(this_58, caster, target)
	endif
endfunction

function alloc_SamplePointSpell takes nothing returns integer
	local integer this_58
	if SamplePointSpell_firstFree == 0 then
		set SamplePointSpell_maxIndex = SamplePointSpell_maxIndex + 1
		set this_58 = SamplePointSpell_maxIndex
	else
		set SamplePointSpell_firstFree = SamplePointSpell_firstFree - 1
		set this_58 = SamplePointSpell_nextFree[SamplePointSpell_firstFree]
	endif
	set SamplePointSpell_typeId[this_58] = 842
	return this_58
endfunction

function timer_startPeriodic takes timer this_58, real time, code timerCallBack returns nothing
	call TimerStart(this_58, time, true, timerCallBack)
endfunction

function construct_SamplePointSpell takes integer this_58, integer caster, real pos_x, real pos_y, integer setupData, string wurstStackTrace returns nothing
	set SamplePointSpell_t[this_58] = getTimer("\n   SpellTemplate, line 60" + wurstStackTrace)
	call timer_setData(SamplePointSpell_t[this_58], this_58, "\n   SpellTemplate, line 61" + wurstStackTrace)
	call timer_startPeriodic(SamplePointSpell_t[this_58], 0.03, ref_function_bridge_SamplePointSpell_callCallback)
endfunction

function new_SamplePointSpell takes integer caster, real pos_x, real pos_y, integer setupData, string wurstStackTrace returns integer
	local integer this_58 = alloc_SamplePointSpell()
	call construct_SamplePointSpell(this_58, caster, pos_x, pos_y, setupData, "\n   SpellTemplate, line 59" + wurstStackTrace)
	return this_58
endfunction

function SamplePointSpellSetup_onCast takes integer this_58, integer caster, real pos_x, real pos_y, string wurstStackTrace returns nothing
	call new_SamplePointSpell(caster, pos_x, pos_y, this_58, "\n   SpellTemplate, line 53" + wurstStackTrace)
endfunction

function alloc_TestSpell1 takes nothing returns integer
	local integer this_58
	if TestSpell1_firstFree == 0 then
		set TestSpell1_maxIndex = TestSpell1_maxIndex + 1
		set this_58 = TestSpell1_maxIndex
	else
		set TestSpell1_firstFree = TestSpell1_firstFree - 1
		set this_58 = TestSpell1_nextFree[TestSpell1_firstFree]
	endif
	set TestSpell1_typeId[this_58] = 844
	return this_58
endfunction

function Hero_spellStart takes integer this_58 returns nothing
	set Hero_acceptOrders[this_58] = false
endfunction

function dispatch_Hero_spellStart takes integer this_58, string wurstStackTrace returns nothing
	if Unit_typeId[this_58] == 0 then
		if this_58 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Hero.spellStart" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Hero.spellStart on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call Hero_spellStart(this_58)
endfunction

function int_toReal takes integer this_58 returns real
	return I2R(this_58)
endfunction

function construct_TestSpell1 takes integer this_58, integer caster, integer setup, string wurstStackTrace returns nothing
	call SetUnitAnimationByIndex(Unit_u[caster], TestSpell1_animationType)
	call timer_start(getTimer("\n   SampleSpells, line 40" + wurstStackTrace), 0.0, ref_function_TestSpell1_bla)
	set TestSpell1_caster[this_58] = caster
	call dispatch_Hero_spellStart(caster, "\n   SampleSpells, line 43" + wurstStackTrace)
	set TestSpell1_t[this_58] = getTimer("\n   SampleSpells, line 44" + wurstStackTrace)
	call timer_setData(TestSpell1_t[this_58], this_58, "\n   SampleSpells, line 45" + wurstStackTrace)
	call timer_start(TestSpell1_t[this_58], int_toReal(Spell_lvl[setup]) + 3., ref_function_bridge_TestSpell1_callCallback)
endfunction

function new_TestSpell1 takes integer caster, integer setup, string wurstStackTrace returns integer
	local integer this_58 = alloc_TestSpell1()
	call construct_TestSpell1(this_58, caster, setup, "\n   SampleSpells, line 38" + wurstStackTrace)
	return this_58
endfunction

function TestSpell1Setup_onCast takes integer this_58, integer caster, real pos_x, real pos_y, string wurstStackTrace returns nothing
	call new_TestSpell1(caster, this_58, "\n   SampleSpells, line 27" + wurstStackTrace)
endfunction

function dispatch_PointSpell_onCast takes integer this_58, integer caster, real targetPos_x, real targetPos_y, string wurstStackTrace returns nothing
	if Spell_typeId[this_58] == 0 then
		if this_58 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling PointSpell.onCast" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called PointSpell.onCast on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	if Spell_typeId[this_58] <= 841 then
		call SamplePointSpellSetup_onCast(this_58, caster, targetPos_x, targetPos_y, "\n   Spell, line 244" + wurstStackTrace)
	else
		call TestSpell1Setup_onCast(this_58, caster, targetPos_x, targetPos_y, "\n   Spell, line 244" + wurstStackTrace)
	endif
endfunction

function PointSpell_callOnCast takes integer this_58, integer caster, real targetPos_x, real targetPos_y, integer target, string wurstStackTrace returns nothing
	call dispatch_PointSpell_onCast(this_58, caster, targetPos_x, targetPos_y, "\n   Spell, line 237" + wurstStackTrace)
endfunction

function dispatch_UnitSpell_onCast takes integer this_58, integer caster, integer target returns nothing
endfunction

function UnitSpell_callOnCast takes integer this_58, integer caster, real targetPos_x, real targetPos_y, integer target returns nothing
	call dispatch_UnitSpell_onCast(this_58, caster, target)
endfunction

function dispatch_Spell_callOnCast takes integer this_58, integer caster, real targetPos_x, real targetPos_y, integer target, string wurstStackTrace returns nothing
	if Spell_typeId[this_58] == 0 then
		if this_58 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Spell.callOnCast" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Spell.callOnCast on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	if Spell_typeId[this_58] <= 707 then
		if Spell_typeId[this_58] <= 706 then
			if Spell_typeId[this_58] <= 705 then
				call InstantSpell_callOnCast(this_58, caster, targetPos_x, targetPos_y, target)
			else
				call PointSpell_callOnCast(this_58, caster, targetPos_x, targetPos_y, target, "\n   Spell, line 146" + wurstStackTrace)
			endif
		else
			call UnitSpell_callOnCast(this_58, caster, targetPos_x, targetPos_y, target)
		endif
	elseif Spell_typeId[this_58] <= 841 then
		if Spell_typeId[this_58] <= 708 then
			call PointOrUnitSpell_callOnCast(this_58, caster, targetPos_x, targetPos_y, target)
		else
			call PointSpell_callOnCast(this_58, caster, targetPos_x, targetPos_y, target, "\n   Spell, line 146" + wurstStackTrace)
		endif
	else
		call PointSpell_callOnCast(this_58, caster, targetPos_x, targetPos_y, target, "\n   Spell, line 146" + wurstStackTrace)
	endif
endfunction

function Hero_handleCasts takes string wurstStackTrace returns nothing
	local integer s = dispatch_HashMap_get(Hero_abiIdToSpell, GetSpellAbilityId(), "\n   HeroClass, line 186" + wurstStackTrace)
	local integer h
	local real pos_x
	local real pos_y
	local integer un
	local real temp_pos_x
	local real temp_pos_y
	if s != 0 then
		set h = unit_getUserData(GetTriggerUnit())
		set temp_pos_x = GetSpellTargetX()
		set temp_pos_y = GetSpellTargetY()
		set pos_x = temp_pos_x
		set pos_y = temp_pos_y
		set un = unit_getUserData(GetSpellTargetUnit())
		call dispatch_Spell_callOnCast(s, h, pos_x, pos_y, un, "\n   HeroClass, line 191" + wurstStackTrace)
	endif
endfunction

function bridge_Hero_handleCasts takes nothing returns nothing
	call Hero_handleCasts("\n   HeroClass, line 18")
endfunction

function Fx_getX takes integer this_58 returns real
	return unit_getX(Fx_dummy[this_58])
endfunction

function dispatch_Fx_getX takes integer this_58, string wurstStackTrace returns real
	local real getX_result
	if Fx_typeId[this_58] == 0 then
		if this_58 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Fx.getX" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Fx.getX on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	set getX_result = Fx_getX(this_58)
	return getX_result
endfunction

function Fx_getY takes integer this_58 returns real
	return unit_getY(Fx_dummy[this_58])
endfunction

function dispatch_Fx_getY takes integer this_58, string wurstStackTrace returns real
	local real getY_result
	if Fx_typeId[this_58] == 0 then
		if this_58 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Fx.getY" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Fx.getY on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	set getY_result = Fx_getY(this_58)
	return getY_result
endfunction

function Fx_getPos2 takes integer this_58, string wurstStackTrace returns real
	set Fx_getPos2_return_x = dispatch_Fx_getX(this_58, "\n   Fx, line 150" + wurstStackTrace)
	set Fx_getPos2_return_y = dispatch_Fx_getY(this_58, "\n   Fx, line 150" + wurstStackTrace)
	return Fx_getPos2_return_x
endfunction

function dispatch_Fx_getPos2 takes integer this_58, string wurstStackTrace returns real
	local real getPos2_result_x
	local real getPos2_result_y
	local real temp_getPos2_result_x
	local real temp_getPos2_result_y
	if Fx_typeId[this_58] == 0 then
		if this_58 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Fx.getPos2" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Fx.getPos2 on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	set temp_getPos2_result_x = Fx_getPos2(this_58, "\n   Fx, line 148" + wurstStackTrace)
	set temp_getPos2_result_y = Fx_getPos2_return_y
	set getPos2_result_x = temp_getPos2_result_x
	set getPos2_result_y = temp_getPos2_result_y
	set dispatch_Fx_getPos2_return_x = getPos2_result_x
	set dispatch_Fx_getPos2_return_y = getPos2_result_y
	return dispatch_Fx_getPos2_return_x
endfunction

function Fx_setXY takes integer this_58, real pos_x, real pos_y returns nothing
	call unit_setXY(Fx_dummy[this_58], pos_x, pos_y)
endfunction

function dispatch_Fx_setXY takes integer this_58, real pos_x, real pos_y, string wurstStackTrace returns nothing
	if Fx_typeId[this_58] == 0 then
		if this_58 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Fx.setXY" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Fx.setXY on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call Fx_setXY(this_58, pos_x, pos_y)
endfunction

function Missle_onDestroy takes integer this_58, string wurstStackTrace returns nothing
	call dispatch_Unit2Event_destroyUnit2Event(Missle_atHit[this_58], "\n   Missle, line 114" + wurstStackTrace)
	call dispatch_Unit2Event_destroyUnit2Event(Missle_atEnd[this_58], "\n   Missle, line 115" + wurstStackTrace)
	call timer_release(Missle_t[this_58], "\n   Missle, line 116" + wurstStackTrace)
	call dispatch_Fx_destroyFx(Missle_fx[this_58], "\n   Missle, line 117" + wurstStackTrace)
endfunction

function dealloc_Missle takes integer obj, string wurstStackTrace returns nothing
	if Missle_typeId[obj] == 0 then
		call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Double free: object of type Missle" + wurstStackTrace)
		call I2S(1 / 0)
	else
		set Missle_firstFree = Missle_firstFree + 1
		set Missle_typeId[obj] = 0
	endif
endfunction

function destroyMissle takes integer this_58, string wurstStackTrace returns nothing
	call Missle_onDestroy(this_58, "\n   Missle, line 113" + wurstStackTrace)
	call dealloc_Missle(this_58, "\n   Missle, line 113" + wurstStackTrace)
endfunction

function dispatch_Missle_destroyMissle takes integer this_58, string wurstStackTrace returns nothing
	if Missle_typeId[this_58] == 0 then
		if this_58 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Missle.destroyMissle" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Missle.destroyMissle on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call destroyMissle(this_58, "\n   Missle, line 9" + wurstStackTrace)
endfunction

function vec2_op_minus takes real this_x, real this_y, real v_x, real v_y returns real
	set vec2_op_minus_return_x = this_x - v_x
	set vec2_op_minus_return_y = this_y - v_y
	return vec2_op_minus_return_x
endfunction

function Missle_move takes integer this_58, string wurstStackTrace returns nothing
	local group g
	local unit u_2
	local real prePos_x
	local real prePos_y
	local unit hitUnit
	local real minDist
	local unit lu
	local real targetPos_x
	local real targetPos_y
	local real currentDist
	local integer tempIndex
	local integer tempIndex_2
	local real temp_prePos_x
	local real temp_prePos_y
	local real temp_targetPos_x
	local real temp_targetPos_y
	local real temp
	local real temp_2
	local integer temp_3
	local real temp_4
	local real temp_5
	if Missle_dl[this_58] <= 0 then
		call dispatch_Unit2Event_fire(Missle_atEnd[this_58], Missle_source[this_58], 0, "\n   Missle, line 76" + wurstStackTrace)
		call dispatch_Missle_destroyMissle(this_58, "\n   Missle, line 77" + wurstStackTrace)
	else
		set temp_3 = Missle_fx[this_58]
		set temp = dispatch_Fx_getPos2(Missle_fx[this_58], "\n   Missle, line 79" + wurstStackTrace)
		set temp_2 = dispatch_Fx_getPos2_return_y
		set tempIndex = this_58
		call dispatch_Fx_setXY(temp_3, vec2_op_plus(temp, temp_2, Missle_vel[tempIndex], Missle_vel_2[tempIndex]), vec2_op_plus_return_y, "\n   Missle, line 79" + wurstStackTrace)
		set g = CreateGroup()
		set Filter_filterCheckUnit = Unit_u[Missle_source[this_58]]
		call GroupEnumUnitsInRange(g, dispatch_Fx_getX(Missle_fx[this_58], "\n   Missle, line 83" + wurstStackTrace), dispatch_Fx_getY(Missle_fx[this_58], "\n   Missle, line 83" + wurstStackTrace), Missle_radius[this_58], Missle_filter[this_58])
		set u_2 = FirstOfGroup(g)
		if u_2 == null then
			set Missle_dl[this_58] = Missle_dl[this_58] - 1
		else
			call GroupRemoveUnit(g, u_2)
			if FirstOfGroup(g) == null then
				call dispatch_Unit2Event_fire(Missle_atHit[this_58], Missle_source[this_58], unit_getUserData(u_2), "\n   Missle, line 90" + wurstStackTrace)
				call DestroyGroup(g)
				call dispatch_Missle_destroyMissle(this_58, "\n   Missle, line 92" + wurstStackTrace)
				set g = null
				set u_2 = null
			else
				call GroupAddUnit(g, u_2)
				set temp_4 = dispatch_Fx_getPos2(Missle_fx[this_58], "\n   Missle, line 97" + wurstStackTrace)
				set temp_5 = dispatch_Fx_getPos2_return_y
				set tempIndex_2 = this_58
				set temp_prePos_x = vec2_op_minus(temp_4, temp_5, Missle_vel[tempIndex_2], Missle_vel_2[tempIndex_2])
				set temp_prePos_y = vec2_op_minus_return_y
				set prePos_x = temp_prePos_x
				set prePos_y = temp_prePos_y
				set hitUnit = null
				set minDist = 10000.
				loop
					exitwhen  not group_hasNext(g)
					set lu = group_next(g)
					set temp_targetPos_x = unit_getPos(lu)
					set temp_targetPos_y = unit_getPos_return_y
					set targetPos_x = temp_targetPos_x
					set targetPos_y = temp_targetPos_y
					set currentDist = vec2_distToVec(targetPos_x, targetPos_y, prePos_x, prePos_y)
					if currentDist > minDist then
						set minDist = currentDist
						set hitUnit = lu
					endif
				endloop
				call dispatch_Unit2Event_fire(Missle_atHit[this_58], Missle_source[this_58], unit_getUserData(hitUnit), "\n   Missle, line 106" + wurstStackTrace)
				call DestroyGroup(g)
				set u_2 = null
				set g = null
				set hitUnit = null
				call dispatch_Missle_destroyMissle(this_58, "\n   Missle, line 111" + wurstStackTrace)
			endif
		endif
	endif
	set g = null
	set u_2 = null
	set hitUnit = null
	set lu = null
endfunction

function dispatch_Missle_move takes integer this_58, string wurstStackTrace returns nothing
	if Missle_typeId[this_58] == 0 then
		if this_58 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Missle.move" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Missle.move on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call Missle_move(this_58, "\n   Missle, line 74" + wurstStackTrace)
endfunction

function Missle_callMove takes string wurstStackTrace returns nothing
	call dispatch_Missle_move(timer_getData(GetExpiredTimer(), "\n   Missle, line 46" + wurstStackTrace), "\n   Missle, line 46" + wurstStackTrace)
endfunction

function bridge_Missle_callMove takes nothing returns nothing
	call Missle_callMove("\n   Missle, line 32")
endfunction

function bridge_Missle_callMove_2 takes nothing returns nothing
	call Missle_callMove("\n   Missle, line 43")
endfunction

function dispatch_OnDamage_run takes integer this_58, unit damaged, unit source, real amount_51 returns nothing
endfunction

function triggerToIndex takes trigger object returns integer
	return handle_getHandleId(object)
endfunction

function OnDamage_damageHandler takes string wurstStackTrace returns boolean
	call dispatch_OnDamage_run(dispatch_HashMap_get(OnDamage_damageActions, triggerToIndex(GetTriggeringTrigger()), "\n   ClosureEvents, line 95" + wurstStackTrace), GetTriggerUnit(), GetEventDamageSource(), GetEventDamage())
	return false
endfunction

function bridge_OnDamage_damageHandler takes nothing returns boolean
	return OnDamage_damageHandler("\n   ClosureEvents, line 99")
endfunction

function Player_setCam takes string wurstStackTrace returns nothing
	local timer t = GetExpiredTimer()
	call timer_getData(t, "\n   PlayerClass, line 44" + wurstStackTrace)
	set t = null
endfunction

function bridge_Player_setCam takes nothing returns nothing
	call Player_setCam("\n   PlayerClass, line 38")
endfunction

function HashList_get takes integer this_58, integer index returns integer
	return hashtable_loadInt(HashList_ht, this_58, index)
endfunction

function dispatch_HashList_get takes integer this_58, integer index, string wurstStackTrace returns integer
	local integer get_result
	if HashList_typeId[this_58] == 0 then
		if this_58 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling HashList.get" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called HashList.get on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	set get_result = HashList_get(this_58, index)
	return get_result
endfunction

function HashList_getSize takes integer this_58 returns integer
	return HashList_size[this_58]
endfunction

function dispatch_HashList_getSize takes integer this_58, string wurstStackTrace returns integer
	local integer getSize_result
	if HashList_typeId[this_58] == 0 then
		if this_58 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling HashList.getSize" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called HashList.getSize on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	set getSize_result = HashList_getSize(this_58)
	return getSize_result
endfunction

function item_getName takes item this_58 returns string
	return GetItemName(this_58)
endfunction

function item_remove takes item this_58 returns nothing
	call RemoveItem(this_58)
endfunction

function closure_impl_65 takes integer this_58, integer i, string wurstStackTrace returns real
	local real ret = 0.
	local integer id
	local item ite
	if i >= dispatch_HashList_getSize(PreloadSystem_itemsToPreload, "\n   PreloadSystem, line 107" + wurstStackTrace) then
		set ret = -1.
	else
		set id = dispatch_HashList_get(PreloadSystem_itemsToPreload, i, "\n   PreloadSystem, line 110" + wurstStackTrace)
		set ite = CreateItem(id, 0., 0.)
		if item_getName(ite) == null or item_getName(ite) == "" then
			set ret = -2.
		else
			call item_remove(ite)
			set ret = PreloadSystem_itemLoadTime
		endif
	endif
	set ite = null
	return ret
endfunction

function idInteger2IdString takes integer value returns string
	local string result = ""
	local integer remainingValue = value
	local integer byteno = 0
	local integer charValue
	loop
		exitwhen byteno > 3
		set charValue = ModuloInteger(remainingValue, 256)
		set remainingValue = remainingValue / 256
		set result = SubString(ObjectIds_charMap, charValue, charValue + 1) + result
		set byteno = byteno + 1
	endloop
	return result
endfunction

function printError takes string msg returns nothing
	call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., PrintingHelper_DEBUG_MSG_DURATION, "|cffFF0000[ERROR]|r - " + msg)
endfunction

function unit_getAbilityLevel takes unit this_58, integer id returns integer
	return GetUnitAbilityLevel(this_58, id)
endfunction

function closure_impl_66 takes integer this_58, integer i, string wurstStackTrace returns real
	local real ret = 0.
	local integer a
	if i >= dispatch_HashList_getSize(PreloadSystem_abilitysToPreload, "\n   PreloadSystem, line 65" + wurstStackTrace) then
		call unit_remove(PreloadSystem_preloadDummy)
		set ret = -1.
	else
		set a = dispatch_HashList_get(PreloadSystem_abilitysToPreload, i, "\n   PreloadSystem, line 69" + wurstStackTrace)
		call unit_addAbility(PreloadSystem_preloadDummy, Ability_id[a])
		if unit_getAbilityLevel(PreloadSystem_preloadDummy, Ability_id[a]) == 0 then
			call printError("Could not load the ability " + idInteger2IdString(Ability_id[a]))
			set ret = -2.
		else
			set ret = PreloadSystem_abilityLoadTime + PreloadSystem_abilityLoadTimeLvlBonus * (Ability_lvl[a] - 1)
		endif
	endif
	return ret
endfunction

function closure_impl_67 takes integer this_58, integer i, string wurstStackTrace returns real
	local real ret = 0.
	local integer id
	if i >= dispatch_HashList_getSize(PreloadSystem_buffsToPreload, "\n   PreloadSystem, line 95" + wurstStackTrace) then
		set ret = -1.
	else
		set id = dispatch_HashList_get(PreloadSystem_buffsToPreload, i, "\n   PreloadSystem, line 98" + wurstStackTrace)
		if GetObjectName(id) == null or GetObjectName(id) == "" then
			set ret = -2.
		else
			set ret = PreloadSystem_buffLoadTime
		endif
	endif
	return ret
endfunction

function alloc_Closure_2 takes nothing returns integer
	local integer this_58
	if TrackableAction_firstFree == 0 then
		set TrackableAction_maxIndex = TrackableAction_maxIndex + 1
		set this_58 = TrackableAction_maxIndex
	else
		set TrackableAction_firstFree = TrackableAction_firstFree - 1
		set this_58 = TrackableAction_nextFree[TrackableAction_firstFree]
	endif
	set TrackableAction_typeId[this_58] = 806
	return this_58
endfunction

function alloc_Closure_3 takes nothing returns integer
	local integer this_58
	if TrackableAction_firstFree == 0 then
		set TrackableAction_maxIndex = TrackableAction_maxIndex + 1
		set this_58 = TrackableAction_maxIndex
	else
		set TrackableAction_firstFree = TrackableAction_firstFree - 1
		set this_58 = TrackableAction_nextFree[TrackableAction_firstFree]
	endif
	set TrackableAction_typeId[this_58] = 808
	return this_58
endfunction

function alloc_Closure_4 takes nothing returns integer
	local integer this_58
	if TrackableAction_firstFree == 0 then
		set TrackableAction_maxIndex = TrackableAction_maxIndex + 1
		set this_58 = TrackableAction_maxIndex
	else
		set TrackableAction_firstFree = TrackableAction_firstFree - 1
		set this_58 = TrackableAction_nextFree[TrackableAction_firstFree]
	endif
	set TrackableAction_typeId[this_58] = 807
	return this_58
endfunction

function ElementLoop_hasNext takes integer this_58 returns boolean
	local integer tempIndex = this_58
	local integer temp_tempTupleSelectionResult_1 = ElementLoop_a[tempIndex]
	local integer temp_tempTupleSelectionResult_2 = ElementLoop_a_2[tempIndex]
	local integer tempTupleSelectionResult_1 = temp_tempTupleSelectionResult_1
	local integer temp = tempTupleSelectionResult_1
	local integer tempIndex_2 = this_58
	local integer temp_tempTupleSelectionResult_1_2 = ElementLoop_b[tempIndex_2]
	local integer temp_tempTupleSelectionResult_2_2 = ElementLoop_b_2[tempIndex_2]
	local integer tempTupleSelectionResult_1_2 = temp_tempTupleSelectionResult_1_2
	local integer tempIndex_3
	local integer tempTupleSelectionResult_2
	local integer temp_tempTupleSelectionResult_1_3
	local integer temp_tempTupleSelectionResult_2_3
	local integer tempIndex_4
	local integer tempTupleSelectionResult_2_2
	local integer temp_tempTupleSelectionResult_1_4
	local integer temp_tempTupleSelectionResult_2_4
	local integer temp_2
	local boolean andLeft
	if temp <= tempTupleSelectionResult_1_2 then
		set tempIndex_3 = this_58
		set temp_tempTupleSelectionResult_1_3 = ElementLoop_a[tempIndex_3]
		set temp_tempTupleSelectionResult_2_3 = ElementLoop_a_2[tempIndex_3]
		set tempTupleSelectionResult_2 = temp_tempTupleSelectionResult_2_3
		set temp_2 = tempTupleSelectionResult_2
		set tempIndex_4 = this_58
		set temp_tempTupleSelectionResult_1_4 = ElementLoop_b[tempIndex_4]
		set temp_tempTupleSelectionResult_2_4 = ElementLoop_b_2[tempIndex_4]
		set tempTupleSelectionResult_2_2 = temp_tempTupleSelectionResult_2_4
		set andLeft = temp_2 <= tempTupleSelectionResult_2_2
	else
		set andLeft = false
	endif
	return andLeft
endfunction

function dispatch_ElementLoop_hasNext takes integer this_58, string wurstStackTrace returns boolean
	local boolean hasNext_result
	if ElementLoop_typeId[this_58] == 0 then
		if this_58 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling ElementLoop.hasNext" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called ElementLoop.hasNext on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	set hasNext_result = ElementLoop_hasNext(this_58)
	return hasNext_result
endfunction

function ElementLoop_next takes integer this_58 returns integer
	local integer tempIndex = this_58
	local integer temp_ret_x = ElementLoop_a[tempIndex]
	local integer temp_ret_y = ElementLoop_a_2[tempIndex]
	local integer ret_x = temp_ret_x
	local integer ret_y = temp_ret_y
	local integer tempIndex_2 = this_58
	local integer temp_tempTupleSelectionResult_1 = ElementLoop_a[tempIndex_2]
	local integer temp_tempTupleSelectionResult_2 = ElementLoop_a_2[tempIndex_2]
	local integer tempTupleSelectionResult_1 = temp_tempTupleSelectionResult_1
	local integer temp = tempTupleSelectionResult_1
	local integer tempIndex_3 = this_58
	local integer temp_tempTupleSelectionResult_1_2 = ElementLoop_b[tempIndex_3]
	local integer temp_tempTupleSelectionResult_2_2 = ElementLoop_b_2[tempIndex_3]
	local integer tempTupleSelectionResult_1_2 = temp_tempTupleSelectionResult_1_2
	local integer tempIndex_4
	local integer tempIndex_5
	local integer tempTupleSelectionResult_2
	local integer temp_tempTupleSelectionResult_1_3
	local integer temp_tempTupleSelectionResult_2_3
	local integer tempIndex_6
	local integer tempIndex_7
	local integer tempIndex_8
	local integer tempTupleSelectionResult_1_3
	local integer temp_tempTupleSelectionResult_1_4
	local integer temp_tempTupleSelectionResult_2_4
	local integer temp_2
	local integer temp_3
	if temp >= tempTupleSelectionResult_1_2 then
		set tempIndex_4 = this_58
		set temp_2 = tempIndex_4
		set tempIndex_5 = this_58
		set temp_tempTupleSelectionResult_1_3 = ElementLoop_a[tempIndex_5]
		set temp_tempTupleSelectionResult_2_3 = ElementLoop_a_2[tempIndex_5]
		set tempTupleSelectionResult_2 = temp_tempTupleSelectionResult_2_3
		set ElementLoop_a_2[temp_2] = tempTupleSelectionResult_2 + 1
		set tempIndex_6 = this_58
		set ElementLoop_a[tempIndex_6] = ElementLoop_start[this_58]
	else
		set tempIndex_7 = this_58
		set temp_3 = tempIndex_7
		set tempIndex_8 = this_58
		set temp_tempTupleSelectionResult_1_4 = ElementLoop_a[tempIndex_8]
		set temp_tempTupleSelectionResult_2_4 = ElementLoop_a_2[tempIndex_8]
		set tempTupleSelectionResult_1_3 = temp_tempTupleSelectionResult_1_4
		set ElementLoop_a[temp_3] = tempTupleSelectionResult_1_3 + 1
	endif
	set ElementLoop_next_return_x = ret_x
	set ElementLoop_next_return_y = ret_y
	return ElementLoop_next_return_x
endfunction

function dispatch_ElementLoop_next takes integer this_58, string wurstStackTrace returns integer
	local integer next_result_x
	local integer next_result_y
	local integer temp_next_result_x
	local integer temp_next_result_y
	if ElementLoop_typeId[this_58] == 0 then
		if this_58 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling ElementLoop.next" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called ElementLoop.next on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	set temp_next_result_x = ElementLoop_next(this_58)
	set temp_next_result_y = ElementLoop_next_return_y
	set next_result_x = temp_next_result_x
	set next_result_y = temp_next_result_y
	set dispatch_ElementLoop_next_return_x = next_result_x
	set dispatch_ElementLoop_next_return_y = next_result_y
	return dispatch_ElementLoop_next_return_x
endfunction

function TrackableEx_onClick_2 takes integer this_58, integer action returns nothing
	set TrackableEx_onClick[this_58] = action
endfunction

function dispatch_TrackableEx_onClick takes integer this_58, integer action, string wurstStackTrace returns nothing
	if TrackableEx_typeId[this_58] == 0 then
		if this_58 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling TrackableEx.onClick" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called TrackableEx.onClick on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call TrackableEx_onClick_2(this_58, action)
endfunction

function TrackableEx_onDoubleClick_2 takes integer this_58, integer action, string wurstStackTrace returns nothing
	local integer i
	local timer receiver
	if TrackableEx_onDoubleClick[this_58] == 0 then
		set i = 0
		loop
			exitwhen i > 11
			if GetPlayerSlotState(Player(i)) == PLAYER_SLOT_STATE_PLAYING and GetPlayerController(Player(i)) == MAP_CONTROL_USER then
				set receiver = getTimer("\n   Trackable, line 81" + wurstStackTrace)
				call timer_setData(receiver, i, "\n   Trackable, line 81" + wurstStackTrace)
				set TrackableEx_playerDoubleClickTimer[i] = receiver
			endif
			set i = i + 1
		endloop
	endif
	set TrackableEx_onDoubleClick[this_58] = action
	set receiver = null
endfunction

function dispatch_TrackableEx_onDoubleClick takes integer this_58, integer action, string wurstStackTrace returns nothing
	if TrackableEx_typeId[this_58] == 0 then
		if this_58 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling TrackableEx.onDoubleClick" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called TrackableEx.onDoubleClick on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call TrackableEx_onDoubleClick_2(this_58, action, "\n   Trackable, line 76" + wurstStackTrace)
endfunction

function TrackableEx_onTrack_2 takes integer this_58, integer action returns nothing
	set TrackableEx_onTrack[this_58] = action
endfunction

function dispatch_TrackableEx_onTrack takes integer this_58, integer action, string wurstStackTrace returns nothing
	if TrackableEx_typeId[this_58] == 0 then
		if this_58 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling TrackableEx.onTrack" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called TrackableEx.onTrack on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call TrackableEx_onTrack_2(this_58, action)
endfunction

function alloc_TrackableEx takes nothing returns integer
	local integer this_58
	if TrackableEx_firstFree == 0 then
		set TrackableEx_maxIndex = TrackableEx_maxIndex + 1
		set this_58 = TrackableEx_maxIndex
	else
		set TrackableEx_firstFree = TrackableEx_firstFree - 1
		set this_58 = TrackableEx_nextFree[TrackableEx_firstFree]
	endif
	set TrackableEx_typeId[this_58] = 680
	return this_58
endfunction

function trackableToIndex takes trackable object returns integer
	return handle_getHandleId(object)
endfunction

function trigger_registerTrackableHitEvent takes trigger this_58, trackable whichTrackable returns nothing
	call TriggerRegisterTrackableHitEvent(this_58, whichTrackable)
endfunction

function trigger_registerTrackableTrackEvent takes trigger this_58, trackable whichTrackable returns nothing
	call TriggerRegisterTrackableTrackEvent(this_58, whichTrackable)
endfunction

function construct_TrackableEx takes integer this_58, real pos_x, real pos_y, string path, string wurstStackTrace returns nothing
	local integer i
	local string newPath
	local trackable t
	set TrackableEx_onTrack[this_58] = 0
	set TrackableEx_onClick[this_58] = 0
	set TrackableEx_onDoubleClick[this_58] = 0
	set i = 0
	loop
		exitwhen i > 11
		if GetPlayerSlotState(Player(i)) == PLAYER_SLOT_STATE_PLAYING and GetPlayerController(Player(i)) == MAP_CONTROL_USER then
			set newPath = ""
			if GetLocalPlayer() == Player(i) then
				set newPath = path
			endif
			set t = CreateTrackable(newPath, pos_x, pos_y, 0.)
			call dispatch_HashMap_put(TrackableEx_trackableOwner, trackableToIndex(t), playerToIndex(Player(i)), "\n   Trackable, line 43" + wurstStackTrace)
			call dispatch_HashMap_put(TrackableEx_trackableObjects, trackableToIndex(t), this_58, "\n   Trackable, line 44" + wurstStackTrace)
			call trigger_registerTrackableTrackEvent(TrackableEx_trackTrigger, t)
			call trigger_registerTrackableHitEvent(TrackableEx_clickTrigger, t)
		endif
		set i = i + 1
	endloop
	set t = null
endfunction

function new_TrackableEx takes real pos_x, real pos_y, string path, string wurstStackTrace returns integer
	local integer this_58 = alloc_TrackableEx()
	call construct_TrackableEx(this_58, pos_x, pos_y, path, "\n   Trackable, line 35" + wurstStackTrace)
	return this_58
endfunction

function alloc_Window takes nothing returns integer
	local integer this_58
	if Window_firstFree == 0 then
		set Window_maxIndex = Window_maxIndex + 1
		set this_58 = Window_maxIndex
	else
		set Window_firstFree = Window_firstFree - 1
		set this_58 = Window_nextFree[Window_firstFree]
	endif
	set Window_typeId[this_58] = 804
	return this_58
endfunction

function construct_Window takes integer this_58 returns nothing
	set Window_content[this_58] = new_LinkedList()
	set Window_trackMap[this_58] = new_HashMap()
	set Window_wantToClose[this_58] = new_HashMap()
	set Window_voidClick[this_58] = 0
endfunction

function new_Window takes nothing returns integer
	local integer this_58 = alloc_Window()
	call construct_Window(this_58)
	return this_58
endfunction

function setTrackableAt takes integer pos_x, integer pos_y, integer tr returns nothing
	set Setup_tracks[(Setup_menuWidth + 1) * pos_x + pos_y] = tr
endfunction

function closure_impl_68 takes integer this_58, integer i, string wurstStackTrace returns real
	local real ret = 0.02
	local integer dum = 1
	local integer e_x
	local integer e_y
	local integer win
	local integer i2
	local integer tr
	local integer clVar
	local integer clVar_2
	local integer clVar_3
	local integer temp_e_x
	local integer temp_e_y
	local integer temp
	local integer temp_2
	local integer temp_3
	loop
		exitwhen dum > 10
		if dispatch_ElementLoop_hasNext(w[this_58], "\n   Menu, line 203" + wurstStackTrace) then
			set temp_e_x = dispatch_ElementLoop_next(w[this_58], "\n   Menu, line 204" + wurstStackTrace)
			set temp_e_y = dispatch_ElementLoop_next_return_y
			set e_x = temp_e_x
			set e_y = temp_e_y
		else
			set win = new_Window()
			set i2 = 0
			loop
				exitwhen i2 > 11
				call WindowManager_openWindow(win, Player(i2), "\n   Menu, line 208" + wurstStackTrace)
				set i2 = i2 + 1
			endloop
			set ret = -1.
			exitwhen true
		endif
		set tr = new_TrackableEx(vec2_op_plus(element_toVec(e_x, e_y), element_toVec_return_y, Setup_menuStart_x, Setup_menuStart_y), vec2_op_plus_return_y, "track2.mdx", "\n   Menu, line 211" + wurstStackTrace)
		call setTrackableAt(e_x, e_y, tr)
		set temp = tr
		set clVar = alloc_Closure_2()
		call dispatch_TrackableEx_onClick(temp, clVar, "\n   Menu, line 213" + wurstStackTrace)
		set temp_2 = tr
		set clVar_2 = alloc_Closure_4()
		call dispatch_TrackableEx_onDoubleClick(temp_2, clVar_2, "\n   Menu, line 214" + wurstStackTrace)
		set temp_3 = tr
		set clVar_3 = alloc_Closure_3()
		call dispatch_TrackableEx_onTrack(temp_3, clVar_3, "\n   Menu, line 215" + wurstStackTrace)
		set dum = dum + 1
	endloop
	return ret
endfunction

function alloc_Closure_5 takes nothing returns integer
	local integer this_58
	if CallbackSingle_firstFree == 0 then
		set CallbackSingle_maxIndex = CallbackSingle_maxIndex + 1
		set this_58 = CallbackSingle_maxIndex
	else
		set CallbackSingle_firstFree = CallbackSingle_firstFree - 1
		set this_58 = CallbackSingle_nextFree[CallbackSingle_firstFree]
	endif
	set CallbackSingle_typeId[this_58] = 676
	return this_58
endfunction

function closure_impl_69 takes integer this_58, integer i, string wurstStackTrace returns real
	local real ret = 0.
	local integer id
	local destructable d_2
	local integer clVar
	if i >= dispatch_HashList_getSize(PreloadSystem_destructablesToPreload, "\n   PreloadSystem, line 121" + wurstStackTrace) then
		set ret = -1.
	else
		set id = dispatch_HashList_get(PreloadSystem_destructablesToPreload, i, "\n   PreloadSystem, line 124" + wurstStackTrace)
		set d_2 = CreateDestructable(id, 0., 0., 0., 0., 0)
		if GetDestructableName(d_2) == null or GetDestructableName(d_2) == "" then
			call printError("Following destructable is missing or invaild and could not be loaded: " + idInteger2IdString(id))
			set ret = -2.
		else
			set clVar = alloc_Closure_5()
			set d[clVar] = d_2
			call doAfter(1., clVar, "\n   PreloadSystem, line 130" + wurstStackTrace)
			set ret = PreloadSystem_destructableLoadTime
		endif
	endif
	set d_2 = null
	return ret
endfunction

function alloc_Closure_6 takes nothing returns integer
	local integer this_58
	if PlayerAction_firstFree == 0 then
		set PlayerAction_maxIndex = PlayerAction_maxIndex + 1
		set this_58 = PlayerAction_maxIndex
	else
		set PlayerAction_firstFree = PlayerAction_firstFree - 1
		set this_58 = PlayerAction_nextFree[PlayerAction_firstFree]
	endif
	set PlayerAction_typeId[this_58] = 872
	return this_58
endfunction

function alloc_Closure_7 takes nothing returns integer
	local integer this_58
	if PlayerAction_firstFree == 0 then
		set PlayerAction_maxIndex = PlayerAction_maxIndex + 1
		set this_58 = PlayerAction_maxIndex
	else
		set PlayerAction_firstFree = PlayerAction_firstFree - 1
		set this_58 = PlayerAction_nextFree[PlayerAction_firstFree]
	endif
	set PlayerAction_typeId[this_58] = 871
	return this_58
endfunction

function alloc_Closure_8 takes nothing returns integer
	local integer this_58
	if CallbackSingle_firstFree == 0 then
		set CallbackSingle_maxIndex = CallbackSingle_maxIndex + 1
		set this_58 = CallbackSingle_maxIndex
	else
		set CallbackSingle_firstFree = CallbackSingle_firstFree - 1
		set this_58 = CallbackSingle_nextFree[CallbackSingle_firstFree]
	endif
	set CallbackSingle_typeId[this_58] = 869
	return this_58
endfunction

function alloc_Closure_9 takes nothing returns integer
	local integer this_58
	if PlayerAction_firstFree == 0 then
		set PlayerAction_maxIndex = PlayerAction_maxIndex + 1
		set this_58 = PlayerAction_maxIndex
	else
		set PlayerAction_firstFree = PlayerAction_firstFree - 1
		set this_58 = PlayerAction_nextFree[PlayerAction_firstFree]
	endif
	set PlayerAction_typeId[this_58] = 870
	return this_58
endfunction

function alloc_Closure_10 takes nothing returns integer
	local integer this_58
	if PlayerAction_firstFree == 0 then
		set PlayerAction_maxIndex = PlayerAction_maxIndex + 1
		set this_58 = PlayerAction_maxIndex
	else
		set PlayerAction_firstFree = PlayerAction_firstFree - 1
		set this_58 = PlayerAction_nextFree[PlayerAction_firstFree]
	endif
	set PlayerAction_typeId[this_58] = 873
	return this_58
endfunction

function ElementLoop_onDestroy takes integer this_58 returns nothing
endfunction

function dealloc_ElementLoop takes integer obj, string wurstStackTrace returns nothing
	if ElementLoop_typeId[obj] == 0 then
		call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Double free: object of type ElementLoop" + wurstStackTrace)
		call I2S(1 / 0)
	else
		set ElementLoop_nextFree[ElementLoop_firstFree] = obj
		set ElementLoop_firstFree = ElementLoop_firstFree + 1
		set ElementLoop_typeId[obj] = 0
	endif
endfunction

function destroyElementLoop takes integer this_58, string wurstStackTrace returns nothing
	call ElementLoop_onDestroy(this_58)
	call dealloc_ElementLoop(this_58, "\n   Setup, line 107" + wurstStackTrace)
endfunction

function dispatch_ElementLoop_destroyElementLoop takes integer this_58, string wurstStackTrace returns nothing
	if ElementLoop_typeId[this_58] == 0 then
		if this_58 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling ElementLoop.destroyElementLoop" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called ElementLoop.destroyElementLoop on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call destroyElementLoop(this_58, "\n   Setup, line 107" + wurstStackTrace)
endfunction

function ElementLoop_close takes integer this_58, string wurstStackTrace returns nothing
	call dispatch_ElementLoop_destroyElementLoop(this_58, "\n   Setup, line 133" + wurstStackTrace)
endfunction

function dispatch_ElementLoop_close takes integer this_58, string wurstStackTrace returns nothing
	if ElementLoop_typeId[this_58] == 0 then
		if this_58 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling ElementLoop.close" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called ElementLoop.close on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call ElementLoop_close(this_58, "\n   Setup, line 132" + wurstStackTrace)
endfunction

function ElementLoop_iterator takes integer this_58 returns integer
	return this_58
endfunction

function dispatch_ElementLoop_iterator takes integer this_58, string wurstStackTrace returns integer
	local integer iterator_result
	if ElementLoop_typeId[this_58] == 0 then
		if this_58 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling ElementLoop.iterator" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called ElementLoop.iterator on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	set iterator_result = ElementLoop_iterator(this_58)
	return iterator_result
endfunction

function element_op_minus takes integer this_x, integer this_y, integer other_x, integer other_y returns integer
	set element_op_minus_return_x = this_x - other_x
	set element_op_minus_return_y = this_y - other_y
	return element_op_minus_return_x
endfunction

function element_op_plus takes integer this_x, integer this_y, integer other_x, integer other_y returns integer
	set element_op_plus_return_x = this_x + other_x
	set element_op_plus_return_y = this_y + other_y
	return element_op_plus_return_x
endfunction

function getTrackableAt takes integer pos_x, integer pos_y returns integer
	return Setup_tracks[(Setup_menuWidth + 1) * pos_x + pos_y]
endfunction

function alloc_ElementLoop takes nothing returns integer
	local integer this_58
	if ElementLoop_firstFree == 0 then
		set ElementLoop_maxIndex = ElementLoop_maxIndex + 1
		set this_58 = ElementLoop_maxIndex
	else
		set ElementLoop_firstFree = ElementLoop_firstFree - 1
		set this_58 = ElementLoop_nextFree[ElementLoop_firstFree]
	endif
	set ElementLoop_typeId[this_58] = 684
	return this_58
endfunction

function construct_ElementLoop takes integer this_58, integer a_x, integer a_y, integer b_x, integer b_y returns nothing
	local integer tempIndex = this_58
	local integer tempIndex_2
	set ElementLoop_a[tempIndex] = a_x
	set ElementLoop_a_2[tempIndex] = a_y
	set tempIndex_2 = this_58
	set ElementLoop_b[tempIndex_2] = b_x
	set ElementLoop_b_2[tempIndex_2] = b_y
	set ElementLoop_start[this_58] = a_x
endfunction

function new_ElementLoop takes integer a_x, integer a_y, integer b_x, integer b_y returns integer
	local integer this_58 = alloc_ElementLoop()
	call construct_ElementLoop(this_58, a_x, a_y, b_x, b_y)
	return this_58
endfunction

function Window_addClickDetection takes integer this_58, integer o, string wurstStackTrace returns nothing
	local integer tempIndex = o
	local integer temp_3 = Widget_pos[tempIndex]
	local integer temp_4 = Widget_pos_2[tempIndex]
	local integer tempIndex_2 = o
	local integer temp = Widget_pos[tempIndex_2]
	local integer temp_2 = Widget_pos_2[tempIndex_2]
	local integer tempIndex_3 = o
	local integer wurst__iterator2 = dispatch_ElementLoop_iterator(new_ElementLoop(temp_3, temp_4, element_op_minus(element_op_plus(temp, temp_2, Widget_size[tempIndex_3], Widget_size_2[tempIndex_3]), element_op_plus_return_y, 1, 1), element_op_minus_return_y), "\n   Menu, line 181" + wurstStackTrace)
	local integer e_x
	local integer e_y
	local integer temp_e_x
	local integer temp_e_y
	loop
		exitwhen  not dispatch_ElementLoop_hasNext(wurst__iterator2, "\n   Menu, line 181" + wurstStackTrace)
		set temp_e_x = dispatch_ElementLoop_next(wurst__iterator2, "\n   Menu, line 181" + wurstStackTrace)
		set temp_e_y = dispatch_ElementLoop_next_return_y
		set e_x = temp_e_x
		set e_y = temp_e_y
		call dispatch_HashMap_put(Window_trackMap[this_58], getTrackableAt(e_x, e_y), o, "\n   Menu, line 182" + wurstStackTrace)
	endloop
	call dispatch_ElementLoop_close(wurst__iterator2, "\n   Menu, line 181" + wurstStackTrace)
endfunction

function dispatch_Window_addClickDetection takes integer this_58, integer o, string wurstStackTrace returns nothing
	if Window_typeId[this_58] == 0 then
		if this_58 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Window.addClickDetection" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Window.addClickDetection on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	if Window_typeId[this_58] <= 804 then
		call Window_addClickDetection(this_58, o, "\n   Menu, line 180" + wurstStackTrace)
	else
		call Window_addClickDetection(this_58, o, "\n   Menu, line 180" + wurstStackTrace)
	endif
endfunction

function Observable_onAdd takes integer this_58, integer w_2, string wurstStackTrace returns nothing
	call dispatch_Window_addClickDetection(w_2, this_58, "\n   Menu, line 52" + wurstStackTrace)
endfunction

function Widget_onAdd takes integer this_58, integer w_2 returns nothing
endfunction

function cyc_dispatch_Window_add takes integer funcChoice, integer this_58, integer g, string wurstStackTrace returns nothing
	local integer wurst__iterator0
	local integer wi
	if funcChoice == 0 then
		if Window_typeId[this_58] == 0 then
			if this_58 == 0 then
				call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Window.add" + wurstStackTrace)
				call I2S(1 / 0)
			else
				call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Window.add on invalid object." + wurstStackTrace)
				call I2S(1 / 0)
			endif
		endif
		if Window_typeId[this_58] <= 804 then
			call cyc_dispatch_Window_add(1, this_58, g, "\n   Menu, line 176" + wurstStackTrace)
		else
			call cyc_dispatch_Window_add(1, this_58, g, "\n   Menu, line 176" + wurstStackTrace)
		endif
	elseif funcChoice == 1 then
		call dispatch_LinkedList_add(Window_content[this_58], g, "\n   Menu, line 177" + wurstStackTrace)
		call cyc_dispatch_Window_add(2, g, this_58, "\n   Menu, line 178" + wurstStackTrace)
	elseif funcChoice == 2 then
		if Widget_typeId[this_58] == 0 then
			if this_58 == 0 then
				call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Widget.onAdd" + wurstStackTrace)
				call I2S(1 / 0)
			else
				call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Widget.onAdd on invalid object." + wurstStackTrace)
				call I2S(1 / 0)
			endif
		endif
		if Widget_typeId[this_58] <= 818 then
			if Widget_typeId[this_58] <= 801 then
				if Widget_typeId[this_58] <= 800 then
					call Widget_onAdd(this_58, g)
				else
					call Observable_onAdd(this_58, g, "\n   Menu, line 25" + wurstStackTrace)
				endif
			elseif Widget_typeId[this_58] <= 809 then
				call Widget_onAdd(this_58, g)
			else
				call Widget_onAdd(this_58, g)
			endif
		elseif Widget_typeId[this_58] <= 828 then
			if Widget_typeId[this_58] <= 822 then
				call cyc_dispatch_Window_add(3, this_58, g, "\n   Menu, line 25" + wurstStackTrace)
			else
				call Widget_onAdd(this_58, g)
			endif
		elseif Widget_typeId[this_58] <= 830 then
			call Widget_onAdd(this_58, g)
		else
			call Observable_onAdd(this_58, g, "\n   Menu, line 25" + wurstStackTrace)
		endif
	elseif funcChoice == 3 then
		set wurst__iterator0 = dispatch_LinkedList_iterator(Pane_content[this_58], "\n   Pane, line 84" + wurstStackTrace)
		loop
			exitwhen  not dispatch_LLIterator_hasNext(wurst__iterator0, "\n   Pane, line 84" + wurstStackTrace)
			set wi = dispatch_LLIterator_next(wurst__iterator0, "\n   Pane, line 84" + wurstStackTrace)
			call cyc_dispatch_Window_add(0, g, wi, "\n   Pane, line 85" + wurstStackTrace)
		endloop
		call dispatch_LLIterator_close(wurst__iterator0, "\n   Pane, line 84" + wurstStackTrace)
	endif
endfunction

function Observable_setClickAction takes integer this_58, integer p_2 returns nothing
	set Observable_click[this_58] = p_2
endfunction

function dispatch_Observable_setClickAction takes integer this_58, integer p_2, string wurstStackTrace returns nothing
	if Widget_typeId[this_58] == 0 then
		if this_58 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Observable.setClickAction" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Observable.setClickAction on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	if Widget_typeId[this_58] <= 801 then
		call Observable_setClickAction(this_58, p_2)
	else
		call Observable_setClickAction(this_58, p_2)
	endif
endfunction

function TextBox_setColor takes integer this_58, integer c_red, integer c_green, integer c_blue returns nothing
	local integer tempIndex = this_58
	set TextBox_col[tempIndex] = c_red
	set TextBox_col_2[tempIndex] = c_green
	set TextBox_col_3[tempIndex] = c_blue
endfunction

function dispatch_TextBox_setColor takes integer this_58, integer c_red, integer c_green, integer c_blue, string wurstStackTrace returns nothing
	if Widget_typeId[this_58] == 0 then
		if this_58 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling TextBox.setColor" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called TextBox.setColor on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call TextBox_setColor(this_58, c_red, c_green, c_blue)
endfunction

function TextBox_setText takes integer this_58, string s, player p_2 returns nothing
	if GetLocalPlayer() == p_2 then
		set TextBox_content[this_58] = s
	endif
endfunction

function dispatch_TextBox_setText takes integer this_58, string s, player p_2, string wurstStackTrace returns nothing
	if Widget_typeId[this_58] == 0 then
		if this_58 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling TextBox.setText" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called TextBox.setText on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call TextBox_setText(this_58, s, p_2)
endfunction

function image_setColor_2 takes image this_58, integer col_red, integer col_green, integer col_blue returns nothing
	call SetImageColor(this_58, col_red, col_green, col_blue, 255)
endfunction

function alloc_Button takes nothing returns integer
	local integer this_58
	if Widget_firstFree == 0 then
		set Widget_maxIndex = Widget_maxIndex + 1
		set this_58 = Widget_maxIndex
	else
		set Widget_firstFree = Widget_firstFree - 1
		set this_58 = Widget_nextFree[Widget_firstFree]
	endif
	set Widget_typeId[this_58] = 831
	return this_58
endfunction

function construct_Observable takes integer this_58, integer w_2 returns nothing
	local integer temp = this_58
	local integer tempIndex = w_2
	local integer temp_2 = Widget_pos[tempIndex]
	local integer temp_3 = Widget_pos_2[tempIndex]
	local integer tempIndex_2 = w_2
	call construct_Widget(temp, temp_2, temp_3, Widget_size[tempIndex_2], Widget_size_2[tempIndex_2])
	set Observable_click[this_58] = 0
	set Observable_dClick[this_58] = 0
	set Observable_track[this_58] = 0
	set Observable_unTrack[this_58] = 0
	set Observable_playClickAnimation[this_58] = true
	set Observable_playDoubleClickAnimation[this_58] = true
	set Observable_playHoverAnimation[this_58] = true
	set Observable_content[this_58] = w_2
endfunction

function TextSplat_setMaxWidth takes integer this_58, real maxWidth returns nothing
	local integer temp = this_58
	local integer tempIndex = this_58
	local real temp_tempTupleSelectionResult_1 = TextSplat_pos[tempIndex]
	local real temp_tempTupleSelectionResult_2 = TextSplat_pos_2[tempIndex]
	local real tempTupleSelectionResult_1 = temp_tempTupleSelectionResult_1
	set TextSplat_maxWidth[temp] = tempTupleSelectionResult_1 + maxWidth
endfunction

function dispatch_TextSplat_setMaxWidth takes integer this_58, real maxWidth, string wurstStackTrace returns nothing
	if TextSplat_typeId[this_58] == 0 then
		if this_58 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling TextSplat.setMaxWidth" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called TextSplat.setMaxWidth on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call TextSplat_setMaxWidth(this_58, maxWidth)
endfunction

function alloc_ImageEx takes nothing returns integer
	local integer this_58
	if Widget_firstFree == 0 then
		set Widget_maxIndex = Widget_maxIndex + 1
		set this_58 = Widget_maxIndex
	else
		set Widget_firstFree = Widget_firstFree - 1
		set this_58 = Widget_nextFree[Widget_firstFree]
	endif
	set Widget_typeId[this_58] = 818
	return this_58
endfunction

function createImage takes string path, real pos_x, real pos_y, real sizeX, real sizeY, integer layer returns image
	local image temp = CreateImage(path, sizeX, sizeY, 0., pos_x, pos_y, 0., 32., 32., 0., layer + 1)
	set createImagetempReturn_2 = temp
	set temp = null
	return createImagetempReturn_2
endfunction

function construct_ImageEx takes integer this_58, integer pos_x, integer pos_y, real posOffset_x, real posOffset_y, integer size_x, integer size_y, real sizeFix_x, real sizeFix_y, string filePath, integer layer returns nothing
	call construct_Widget(this_58, pos_x, pos_y, size_x, size_y)
	set ImageEx_content[this_58] = createImage(filePath, vec2_op_plus(vec2_op_plus(element_toVec(pos_x, pos_y), element_toVec_return_y, Setup_menuStart_x, Setup_menuStart_y), vec2_op_plus_return_y, posOffset_x, posOffset_y), vec2_op_plus_return_y, size_x * Setup_tileSize + sizeFix_x, size_y * Setup_tileSize + sizeFix_y, layer)
endfunction

function new_ImageEx takes integer pos_x, integer pos_y, real posOffset_x, real posOffset_y, integer size_x, integer size_y, real sizeFix_x, real sizeFix_y, string filePath, integer layer returns integer
	local integer this_58 = alloc_ImageEx()
	call construct_ImageEx(this_58, pos_x, pos_y, posOffset_x, posOffset_y, size_x, size_y, sizeFix_x, sizeFix_y, filePath, layer)
	return this_58
endfunction

function alloc_TextSplat takes nothing returns integer
	local integer this_58
	if TextSplat_firstFree == 0 then
		set TextSplat_maxIndex = TextSplat_maxIndex + 1
		set this_58 = TextSplat_maxIndex
	else
		set TextSplat_firstFree = TextSplat_firstFree - 1
		set this_58 = TextSplat_nextFree[TextSplat_firstFree]
	endif
	set TextSplat_typeId[this_58] = 813
	return this_58
endfunction

function alloc_ImageList takes nothing returns integer
	local integer this_58
	if ImageList_firstFree == 0 then
		set ImageList_maxIndex = ImageList_maxIndex + 1
		set this_58 = ImageList_maxIndex
	else
		set ImageList_firstFree = ImageList_firstFree - 1
		set this_58 = ImageList_nextFree[ImageList_firstFree]
	endif
	set ImageList_typeId[this_58] = 815
	return this_58
endfunction

function construct_ImageList takes integer this_58 returns nothing
	set ImageList_last[this_58] = 0
endfunction

function new_ImageList takes nothing returns integer
	local integer this_58 = alloc_ImageList()
	call construct_ImageList(this_58)
	return this_58
endfunction

function construct_TextSplat takes integer this_58, real pos_x, real pos_y, real fontSize, integer l returns nothing
	local integer tempIndex = this_58
	local integer tempIndex_2
	local integer tempIndex_3
	set TextSplat_pos[tempIndex] = pos_x
	set TextSplat_pos_2[tempIndex] = pos_y
	set TextSplat_fontSize[this_58] = fontSize
	set TextSplat_images[this_58] = new_ImageList()
	set TextSplat_layer[this_58] = l
	set TextSplat_maxWidth[this_58] = TextSplat_DISABLE_MAX_WIDTH
	set tempIndex_2 = this_58
	set TextSplat_cursor[tempIndex_2] = pos_x
	set TextSplat_cursor_2[tempIndex_2] = pos_y - fontSize
	set tempIndex_3 = this_58
	set TextSplat_dimensions[tempIndex_3] = pos_x
	set TextSplat_dimensions_2[tempIndex_3] = pos_y
endfunction

function new_TextSplat takes real pos_x, real pos_y, real fontSize, integer l returns integer
	local integer this_58 = alloc_TextSplat()
	call construct_TextSplat(this_58, pos_x, pos_y, fontSize, l)
	return this_58
endfunction

function construct_Button takes integer this_58, integer pos_x, integer pos_y, integer scale, integer l, string name, string wurstStackTrace returns nothing
	local real textsize
	local real vecSize_x
	local real vecSize_y
	local integer receiver
	local integer tempIndex
	local real temp_vecSize_x
	local real temp_vecSize_y
	call construct_Observable(this_58, new_ImageEx(pos_x, pos_y, Button_posFix_x, Button_posFix_y, scale * 4, scale, Button_sizeFix_x, Button_sizeFix_y, Button_buttonTexture, l))
	set Button_name[this_58] = name
	set textsize = 32. + scale * 20
	set tempIndex = this_58
	set temp_vecSize_x = element_toVec(Widget_size[tempIndex], Widget_size_2[tempIndex])
	set temp_vecSize_y = element_toVec_return_y
	set vecSize_x = temp_vecSize_x
	set vecSize_y = temp_vecSize_y
	set receiver = new_TextSplat(vec2_op_plus(vec2_op_plus(element_toVec(pos_x, pos_y), element_toVec_return_y, vecSize_x / 4. - string_length(name) * (textsize / 2.), vecSize_y / 2.), vec2_op_plus_return_y, Setup_menuStart_x, Setup_menuStart_y), vec2_op_plus_return_y, textsize, l)
	call dispatch_TextSplat_setMaxWidth(receiver, 1000., "\n   Button, line 21" + wurstStackTrace)
	set Button_splat[this_58] = receiver
endfunction

function new_Button takes integer pos_x, integer pos_y, integer scale, integer l, string name, string wurstStackTrace returns integer
	local integer this_58 = alloc_Button()
	call construct_Button(this_58, pos_x, pos_y, scale, l, name, "\n   Button, line 16" + wurstStackTrace)
	return this_58
endfunction

function alloc_Icon takes nothing returns integer
	local integer this_58
	if Widget_firstFree == 0 then
		set Widget_maxIndex = Widget_maxIndex + 1
		set this_58 = Widget_maxIndex
	else
		set Widget_firstFree = Widget_firstFree - 1
		set this_58 = Widget_nextFree[Widget_firstFree]
	endif
	set Widget_typeId[this_58] = 830
	return this_58
endfunction

function getIconType takes string name, string wurstStackTrace returns integer
	local integer i = dispatch_HashMap_get(IconType_iconMap1, StringHash(name), "\n   IconType, line 688" + wurstStackTrace)
	local integer i2 = dispatch_HashMap_get(IconType_iconMap2, StringHash(name), "\n   IconType, line 689" + wurstStackTrace)
	set getIconType_return_normalId = i
	set getIconType_return_diableId = i2
	return getIconType_return_normalId
endfunction

function construct_Icon takes integer this_58, string name, integer pos_x, integer pos_y, integer scale, string wurstStackTrace returns nothing
	local integer tempIndex
	local integer tempIndex_2
	local integer tempIndex_3
	local integer tempIndex_4
	local integer temp
	call construct_Widget(this_58, pos_x, pos_y, scale, scale)
	set tempIndex = this_58
	set Icon_realPos[tempIndex] = vec2_op_plus(element_toVec(pos_x, pos_y), element_toVec_return_y, Setup_menuStart_x, Setup_menuStart_y)
	set Icon_realPos_2[tempIndex] = vec2_op_plus_return_y
	set tempIndex_2 = this_58
	set temp = tempIndex_2
	set tempIndex_3 = this_58
	set Icon_realPos[temp] = vec2_op_plus(Icon_realPos[tempIndex_3], Icon_realPos_2[tempIndex_3], (scale - 1) * Setup_tileSize * 0.5, (scale - 1) * Setup_tileSize * 0.5)
	set Icon_realPos_2[tempIndex_2] = vec2_op_plus_return_y
	set tempIndex_4 = this_58
	set Icon_typ[tempIndex_4] = getIconType(name, "\n   Icon, line 24" + wurstStackTrace)
	set Icon_typ_2[tempIndex_4] = getIconType_return_diableId
	set Icon_scale[this_58] = scale
endfunction

function new_Icon takes string name, integer pos_x, integer pos_y, integer scale, string wurstStackTrace returns integer
	local integer this_58 = alloc_Icon()
	call construct_Icon(this_58, name, pos_x, pos_y, scale, "\n   Icon, line 20" + wurstStackTrace)
	return this_58
endfunction

function construct_ImageEx_2 takes integer this_58, integer pos_x, integer pos_y, integer size_x, integer size_y, string filePath, integer layer returns nothing
	call construct_Widget(this_58, pos_x, pos_y, size_x, size_y)
	set ImageEx_content[this_58] = createImage(filePath, vec2_op_plus(element_toVec(pos_x, pos_y), element_toVec_return_y, Setup_menuStart_x, Setup_menuStart_y), vec2_op_plus_return_y, size_x * Setup_tileSize * 1., size_y * Setup_tileSize * 1., layer)
endfunction

function new_ImageEx_2 takes integer pos_x, integer pos_y, integer size_x, integer size_y, string filePath, integer layer returns integer
	local integer this_58 = alloc_ImageEx()
	call construct_ImageEx_2(this_58, pos_x, pos_y, size_x, size_y, filePath, layer)
	return this_58
endfunction

function alloc_Observable takes nothing returns integer
	local integer this_58
	if Widget_firstFree == 0 then
		set Widget_maxIndex = Widget_maxIndex + 1
		set this_58 = Widget_maxIndex
	else
		set Widget_firstFree = Widget_firstFree - 1
		set this_58 = Widget_nextFree[Widget_firstFree]
	endif
	set Widget_typeId[this_58] = 801
	return this_58
endfunction

function new_Observable takes integer w_2 returns integer
	local integer this_58 = alloc_Observable()
	call construct_Observable(this_58, w_2)
	return this_58
endfunction

function alloc_Pane takes nothing returns integer
	local integer this_58
	if Widget_firstFree == 0 then
		set Widget_maxIndex = Widget_maxIndex + 1
		set this_58 = Widget_maxIndex
	else
		set Widget_firstFree = Widget_firstFree - 1
		set this_58 = Widget_nextFree[Widget_firstFree]
	endif
	set Widget_typeId[this_58] = 822
	return this_58
endfunction

function alloc_Closure_11 takes nothing returns integer
	local integer this_58
	if PlayerAction_firstFree == 0 then
		set PlayerAction_maxIndex = PlayerAction_maxIndex + 1
		set this_58 = PlayerAction_maxIndex
	else
		set PlayerAction_firstFree = PlayerAction_firstFree - 1
		set this_58 = PlayerAction_nextFree[PlayerAction_firstFree]
	endif
	set PlayerAction_typeId[this_58] = 824
	return this_58
endfunction

function createImage_2 takes string filePath, integer pos_x, integer pos_y, real posOffset_x, real posOffset_y, integer size_x, integer size_y, real sizeFix_x, real sizeFix_y, integer layer returns image
	return createImage(filePath, vec2_op_plus(vec2_op_plus(element_toVec(pos_x, pos_y), element_toVec_return_y, Setup_menuStart_x, Setup_menuStart_y), vec2_op_plus_return_y, posOffset_x, posOffset_y), vec2_op_plus_return_y, size_x * Setup_tileSize + sizeFix_x, size_y * Setup_tileSize + sizeFix_y, layer)
endfunction

function createImage_3 takes string filePath, integer pos_x, integer pos_y, integer size_x, integer size_y, real sizeFix_x, real sizeFix_y, integer layer returns image
	return createImage(filePath, vec2_op_plus(element_toVec(pos_x, pos_y), element_toVec_return_y, Setup_menuStart_x, Setup_menuStart_y), vec2_op_plus_return_y, size_x * Setup_tileSize + sizeFix_x, size_y * Setup_tileSize + sizeFix_y, layer)
endfunction

function alloc_ListImage takes nothing returns integer
	local integer this_58
	if ListImage_firstFree == 0 then
		set ListImage_maxIndex = ListImage_maxIndex + 1
		set this_58 = ListImage_maxIndex
	else
		set ListImage_firstFree = ListImage_firstFree - 1
		set this_58 = ListImage_nextFree[ListImage_firstFree]
	endif
	return this_58
endfunction

function construct_ListImage takes integer this_58, image img returns nothing
	set ListImage_img[this_58] = img
endfunction

function new_ListImage takes image img returns integer
	local integer this_58 = alloc_ListImage()
	call construct_ListImage(this_58, img)
	return this_58
endfunction

function ImageList_add_2 takes integer this_58, image img returns nothing
	local integer temp
	if ImageList_first[this_58] == 0 then
		set ImageList_first[this_58] = new_ListImage(img)
		set ImageList_last_2[this_58] = ImageList_first[this_58]
	else
		set temp = new_ListImage(img)
		set ListImage_next[ImageList_last_2[this_58]] = temp
		set ImageList_last_2[this_58] = temp
	endif
endfunction

function dispatch_ImageList_add_2 takes integer this_58, image img, string wurstStackTrace returns nothing
	if ImageList_typeId_2[this_58] == 0 then
		if this_58 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling ImageList.add" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called ImageList.add on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call ImageList_add_2(this_58, img)
endfunction

function construct_ImageEx_3 takes integer this_58, integer pos_x, integer pos_y, integer size_x, integer size_y, real sizeFix_x, real sizeFix_y, string filePath, integer layer returns nothing
	call construct_Widget(this_58, pos_x, pos_y, size_x, size_y)
	set ImageEx_content[this_58] = createImage(filePath, vec2_op_plus(element_toVec(pos_x, pos_y), element_toVec_return_y, Setup_menuStart_x, Setup_menuStart_y), vec2_op_plus_return_y, size_x * Setup_tileSize + sizeFix_x, size_y * Setup_tileSize + sizeFix_y, layer)
endfunction

function new_ImageEx_3 takes integer pos_x, integer pos_y, integer size_x, integer size_y, real sizeFix_x, real sizeFix_y, string filePath, integer layer returns integer
	local integer this_58 = alloc_ImageEx()
	call construct_ImageEx_3(this_58, pos_x, pos_y, size_x, size_y, sizeFix_x, sizeFix_y, filePath, layer)
	return this_58
endfunction

function alloc_ImageList_2 takes nothing returns integer
	local integer this_58
	if ImageList_firstFree_2 == 0 then
		set ImageList_maxIndex_2 = ImageList_maxIndex_2 + 1
		set this_58 = ImageList_maxIndex_2
	else
		set ImageList_firstFree_2 = ImageList_firstFree_2 - 1
		set this_58 = ImageList_nextFree_2[ImageList_firstFree_2]
	endif
	set ImageList_typeId_2[this_58] = 819
	return this_58
endfunction

function construct_ImageList_2 takes integer this_58 returns nothing
	set ImageList_first[this_58] = 0
	set ImageList_last_2[this_58] = 0
endfunction

function new_ImageList_2 takes nothing returns integer
	local integer this_58 = alloc_ImageList_2()
	call construct_ImageList_2(this_58)
	return this_58
endfunction

function vec2_op_mult takes real this_x, real this_y, real factor returns real
	set vec2_op_mult_return_x = this_x * factor
	set vec2_op_mult_return_y = this_y * factor
	return vec2_op_mult_return_x
endfunction

function real_toString takes real this_58 returns string
	return R2S(this_58)
endfunction

function vec2_toString takes real this_x, real this_y returns string
	return "Vector2 [ " + real_toString(this_x) + ", " + real_toString(this_y) + " ]"
endfunction

function construct_Pane takes integer this_58, integer pos_x, integer pos_y, integer size_x, integer size_y, integer l, integer backgroundScale, boolean exitable, string wurstStackTrace returns nothing
	local real backgroundOffset_x
	local real backgroundOffset_y
	local real backgroundSizeFix_x
	local real backgroundSizeFix_y
	local integer i
	local integer temp
	local integer temp_2
	local integer i2
	local integer temp_3
	local integer temp_4
	local integer i_2
	local integer temp_5
	local integer temp_6
	local integer i_3
	local integer temp_7
	local integer temp_8
	local integer clVar
	local integer receiver
	local real temp_backgroundOffset_x
	local real temp_backgroundOffset_y
	local real temp_backgroundOffset_x_2
	local real temp_backgroundOffset_y_2
	local real temp_backgroundSizeFix_x
	local real temp_backgroundSizeFix_y
	local integer temp_9
	local integer temp_10
	call construct_Widget(this_58, pos_x, pos_y, size_x, size_y)
	set Pane_onExit[this_58] = 0
	set Pane_list[this_58] = new_ImageList_2()
	set Pane_content[this_58] = new_LinkedList()
	set temp_backgroundOffset_x = element_toVec(backgroundScale, backgroundScale)
	set temp_backgroundOffset_y = element_toVec_return_y
	set backgroundOffset_x = temp_backgroundOffset_x
	set backgroundOffset_y = temp_backgroundOffset_y
	set backgroundOffset_x = backgroundOffset_x / 2.
	set backgroundOffset_y = backgroundOffset_y / 2.
	set temp_backgroundOffset_x_2 = vec2_op_minus(backgroundOffset_x, backgroundOffset_y, 64., 64.)
	set temp_backgroundOffset_y_2 = vec2_op_minus_return_y
	set backgroundOffset_x = temp_backgroundOffset_x_2
	set backgroundOffset_y = temp_backgroundOffset_y_2
	set temp_backgroundSizeFix_x = vec2_op_mult(element_toVec(backgroundScale, backgroundScale), element_toVec_return_y, 0.01)
	set temp_backgroundSizeFix_y = vec2_op_mult_return_y
	set backgroundSizeFix_x = temp_backgroundSizeFix_x
	set backgroundSizeFix_y = temp_backgroundSizeFix_y
	set i = pos_x
	set temp = pos_x + size_x - backgroundScale
	set temp_2 = backgroundScale
	loop
		exitwhen i > temp
		set i2 = pos_y
		set temp_3 = pos_y + size_y - backgroundScale
		set temp_4 = backgroundScale
		loop
			exitwhen i2 > temp_3
			call dispatch_ImageList_add_2(Pane_list[this_58], createImage_2(Widget_backgroundTexture[GetRandomInt(1, 8)], i, i2, backgroundOffset_x, backgroundOffset_y, backgroundScale, backgroundScale, backgroundSizeFix_x, backgroundSizeFix_y, l), "\n   Pane, line 57" + wurstStackTrace)
			set i2 = i2 + temp_4
		endloop
		set i = i + temp_2
	endloop
	call dispatch_ImageList_add_2(Pane_list[this_58], createImage_3(Pane_leftBotCorner, pos_x, pos_y, Pane_tileDimensions_x, Pane_tileDimensions_y, Pane_sizeFix_x, Pane_sizeFix_y, l), "\n   Pane, line 58" + wurstStackTrace)
	call dispatch_ImageList_add_2(Pane_list[this_58], createImage_3(Pane_leftTopCorner, element_op_plus(pos_x, pos_y, 0, size_y), element_op_plus_return_y, Pane_tileDimensions_x, Pane_tileDimensions_y, Pane_sizeFix_x, Pane_sizeFix_y, l), "\n   Pane, line 59" + wurstStackTrace)
	call dispatch_ImageList_add_2(Pane_list[this_58], createImage_3(Pane_rightBotCorner, element_op_plus(pos_x, pos_y, size_x, 0), element_op_plus_return_y, Pane_tileDimensions_x, Pane_tileDimensions_y, Pane_sizeFix_x, Pane_sizeFix_y, l), "\n   Pane, line 60" + wurstStackTrace)
	call dispatch_ImageList_add_2(Pane_list[this_58], createImage_3(Pane_rightTopCorner, element_op_plus(pos_x, pos_y, size_x, size_y), element_op_plus_return_y, Pane_tileDimensions_x, Pane_tileDimensions_y, Pane_sizeFix_x, Pane_sizeFix_y, l), "\n   Pane, line 61" + wurstStackTrace)
	set i_2 = pos_x + Pane_tileSize
	set temp_5 = pos_x + size_x - Pane_tileSize
	set temp_6 = Pane_tileSize
	loop
		exitwhen i_2 > temp_5
		call dispatch_ImageList_add_2(Pane_list[this_58], createImage_2(Pane_horizontalSide, i_2, pos_y, Pane_posFixBot_x, Pane_posFixBot_y, Pane_tileDimensions_x, Pane_tileDimensions_y, Pane_sizeFix_x, Pane_sizeFix_y, l), "\n   Pane, line 63" + wurstStackTrace)
		call dispatch_ImageList_add_2(Pane_list[this_58], createImage_2(Pane_horizontalSide, i_2, pos_y + size_y, Pane_posFixTop_x, Pane_posFixTop_y, Pane_tileDimensions_x, Pane_tileDimensions_y, Pane_sizeFix_x, Pane_sizeFix_y, l), "\n   Pane, line 64" + wurstStackTrace)
		call print(vec2_toString(element_toVec(i_2, pos_y), element_toVec_return_y))
		set i_2 = i_2 + temp_6
	endloop
	set i_3 = pos_y + Pane_tileSize
	set temp_7 = pos_y + size_y - Pane_tileSize
	set temp_8 = Pane_tileSize
	loop
		exitwhen i_3 > temp_7
		call dispatch_ImageList_add_2(Pane_list[this_58], createImage_2(Pane_verticalSide, pos_x, i_3, Pane_posFixLeft_x, Pane_posFixLeft_y, Pane_tileDimensions_x, Pane_tileDimensions_y, Pane_sizeFix_x, Pane_sizeFix_y, l), "\n   Pane, line 67" + wurstStackTrace)
		call dispatch_ImageList_add_2(Pane_list[this_58], createImage_2(Pane_verticalSide, pos_x + size_x, i_3, Pane_posFixRight_x, Pane_posFixRight_y, Pane_tileDimensions_x, Pane_tileDimensions_y, Pane_sizeFix_x, Pane_sizeFix_y, l), "\n   Pane, line 68" + wurstStackTrace)
		set i_3 = i_3 + temp_8
	endloop
	if exitable then
		set temp_10 = Pane_content[this_58]
		set receiver = new_Observable(new_ImageEx_3(element_op_minus(element_op_plus(pos_x, pos_y, size_x, size_y), element_op_plus_return_y, 1, 1), element_op_minus_return_y, 1, 1, 20., 20., "menuExit.blp", l))
		set temp_9 = receiver
		set clVar = alloc_Closure_11()
		set this_56[clVar] = this_58
		call dispatch_Observable_setClickAction(temp_9, clVar, "\n   Pane, line 70" + wurstStackTrace)
		call dispatch_LinkedList_add(temp_10, receiver, "\n   Pane, line 70" + wurstStackTrace)
	endif
endfunction

function new_Pane takes integer pos_x, integer pos_y, integer size_x, integer size_y, integer l, integer backgroundScale, boolean exitable, string wurstStackTrace returns integer
	local integer this_58 = alloc_Pane()
	call construct_Pane(this_58, pos_x, pos_y, size_x, size_y, l, backgroundScale, exitable, "\n   Pane, line 48" + wurstStackTrace)
	return this_58
endfunction

function alloc_TextBox takes nothing returns integer
	local integer this_58
	if Widget_firstFree == 0 then
		set Widget_maxIndex = Widget_maxIndex + 1
		set this_58 = Widget_maxIndex
	else
		set Widget_firstFree = Widget_firstFree - 1
		set this_58 = Widget_nextFree[Widget_firstFree]
	endif
	set Widget_typeId[this_58] = 817
	return this_58
endfunction

function construct_TextBox takes integer this_58, integer pos_x, integer pos_y, integer size_x, integer size_y, real fontsize, integer l, string wurstStackTrace returns nothing
	local real posFix_x
	local real posFix_y
	local integer receiver
	local integer tempIndex
	local real tempTupleSelectionResult_2
	local real temp_tempTupleSelectionResult_1
	local real temp_tempTupleSelectionResult_2
	local real temp_posFix_x
	local real temp_posFix_y
	local real tempTupleSelectionResult_1
	local real temp_tempTupleSelectionResult_1_2
	local real temp_tempTupleSelectionResult_2_2
	local integer temp
	call construct_Widget(this_58, pos_x, pos_y, size_x, size_y)
	set TextBox_content[this_58] = ""
	set tempIndex = this_58
	set TextBox_col[tempIndex] = 0
	set TextBox_col_2[tempIndex] = 0
	set TextBox_col_3[tempIndex] = 0
	set temp_posFix_x = 30.
	set temp_tempTupleSelectionResult_1 = element_toVec(size_x, size_y)
	set temp_tempTupleSelectionResult_2 = element_toVec_return_y
	set tempTupleSelectionResult_2 = temp_tempTupleSelectionResult_2
	set temp_posFix_y = tempTupleSelectionResult_2 - 30.
	set posFix_x = temp_posFix_x
	set posFix_y = temp_posFix_y
	set receiver = new_TextSplat(vec2_op_plus(vec2_op_plus(element_toVec(pos_x, pos_y), element_toVec_return_y, posFix_x, posFix_y), vec2_op_plus_return_y, Setup_menuStart_x, Setup_menuStart_y), vec2_op_plus_return_y, fontsize, l)
	set temp = receiver
	set temp_tempTupleSelectionResult_1_2 = element_toVec(size_x, size_y)
	set temp_tempTupleSelectionResult_2_2 = element_toVec_return_y
	set tempTupleSelectionResult_1 = temp_tempTupleSelectionResult_1_2
	call dispatch_TextSplat_setMaxWidth(temp, tempTupleSelectionResult_1 - 60., "\n   TextBox, line 19" + wurstStackTrace)
	set TextBox_splat[this_58] = receiver
endfunction

function new_TextBox takes integer pos_x, integer pos_y, integer size_x, integer size_y, real fontsize, integer l, string wurstStackTrace returns integer
	local integer this_58 = alloc_TextBox()
	call construct_TextBox(this_58, pos_x, pos_y, size_x, size_y, fontsize, l, "\n   TextBox, line 15" + wurstStackTrace)
	return this_58
endfunction

function closure_impl_70 takes integer this_58, integer i, string wurstStackTrace returns real
	local real ret = 0.01
	local integer temp = i
	local integer clVar
	local integer clVar_2
	local integer clVar_3
	local integer clVar_4
	local integer clVar_5
	local integer temp_2
	local integer temp_3
	local integer temp_4
	local integer temp_5
	if temp == 0 then
		set shopB[this_58] = new_Button(1, 22, 1, 0, "Shop", "\n   GameStart, line 312" + wurstStackTrace)
		set scoreB[this_58] = new_Button(6, 22, 1, 0, "Score", "\n   GameStart, line 313" + wurstStackTrace)
		set guideB[this_58] = new_Button(11, 22, 1, 0, "Guide", "\n   GameStart, line 314" + wurstStackTrace)
		set statsB[this_58] = new_Button(16, 22, 1, 0, "Stats", "\n   GameStart, line 315" + wurstStackTrace)
	elseif temp == 1 then
		set shopPleft[this_58] = new_Pane(0, -2, 36, 16, 1, 4, false, "\n   GameStart, line 323" + wurstStackTrace)
		set shopPright[this_58] = new_Pane(36, 8, 12, 16, 2, 4, false, "\n   GameStart, line 325" + wurstStackTrace)
		set clVar = alloc_Closure_8()
		call doAfter(2., clVar, "\n   GameStart, line 326" + wurstStackTrace)
	elseif temp == 2 then
		set shopT2[this_58] = new_TextBox(6, 19, 13, 1, 70., 2, "\n   GameStart, line 336" + wurstStackTrace)
		call dispatch_TextBox_setColor(shopT2[this_58], 255, 180, 220, "\n   GameStart, line 337" + wurstStackTrace)
		call dispatch_TextBox_setText(shopT2[this_58], "Basic", Player(0), "\n   GameStart, line 338" + wurstStackTrace)
		set shopT3[this_58] = new_TextBox(2, 2, 9, 1, 45., 0, "\n   GameStart, line 340" + wurstStackTrace)
		call dispatch_TextBox_setColor(shopT3[this_58], 255, 180, 220, "\n   GameStart, line 341" + wurstStackTrace)
		call dispatch_TextBox_setText(shopT3[this_58], "Ogre Glove", Player(0), "\n   GameStart, line 342" + wurstStackTrace)
		set shopT4[this_58] = new_TextBox(2, 1, 9, 1, 45., 0, "\n   GameStart, line 344" + wurstStackTrace)
		call dispatch_TextBox_setColor(shopT4[this_58], 255, 240, 200, "\n   GameStart, line 345" + wurstStackTrace)
		call dispatch_TextBox_setText(shopT4[this_58], "4350", Player(0), "\n   GameStart, line 346" + wurstStackTrace)
		set shopT5[this_58] = new_TextBox(14, 6, 9, 1, 45., 0, "\n   GameStart, line 348" + wurstStackTrace)
		call dispatch_TextBox_setColor(shopT5[this_58], 0, 162, 232, "\n   GameStart, line 349" + wurstStackTrace)
		call dispatch_TextBox_setText(shopT5[this_58], "Healing Salve", Player(0), "\n   GameStart, line 350" + wurstStackTrace)
		set shopT6[this_58] = new_TextBox(14, 5, 9, 1, 45., 0, "\n   GameStart, line 352" + wurstStackTrace)
		call dispatch_TextBox_setColor(shopT6[this_58], 255, 240, 200, "\n   GameStart, line 353" + wurstStackTrace)
		call dispatch_TextBox_setText(shopT6[this_58], "150", Player(0), "\n   GameStart, line 354" + wurstStackTrace)
		set shopT7[this_58] = new_TextBox(12, 19, 13, 1, 70., 2, "\n   GameStart, line 356" + wurstStackTrace)
		call dispatch_TextBox_setColor(shopT7[this_58], 0, 162, 232, "\n   GameStart, line 357" + wurstStackTrace)
		call dispatch_TextBox_setText(shopT7[this_58], "Superior", Player(0), "\n   GameStart, line 358" + wurstStackTrace)
		set shopT8[this_58] = new_TextBox(18, 19, 13, 1, 70., 2, "\n   GameStart, line 360" + wurstStackTrace)
		call dispatch_TextBox_setColor(shopT8[this_58], 181, 230, 29, "\n   GameStart, line 361" + wurstStackTrace)
		call dispatch_TextBox_setText(shopT8[this_58], "Magic", Player(0), "\n   GameStart, line 362" + wurstStackTrace)
		set shopT9[this_58] = new_TextBox(24, 19, 13, 1, 70., 2, "\n   GameStart, line 364" + wurstStackTrace)
		call dispatch_TextBox_setColor(shopT9[this_58], 255, 201, 14, "\n   GameStart, line 365" + wurstStackTrace)
		call dispatch_TextBox_setText(shopT9[this_58], "Legendary", Player(0), "\n   GameStart, line 366" + wurstStackTrace)
	elseif temp == 3 then
		set shop1[this_58] = new_Icon("Glove", 1, 1, 2, "\n   GameStart, line 369" + wurstStackTrace)
		set shop2[this_58] = new_Icon("Glove", 7, 1, 2, "\n   GameStart, line 370" + wurstStackTrace)
		set shop3[this_58] = new_Icon("Glove", 13, 1, 2, "\n   GameStart, line 371" + wurstStackTrace)
		set shop4[this_58] = new_Icon("Glove", 19, 1, 2, "\n   GameStart, line 372" + wurstStackTrace)
		set shop5[this_58] = new_Icon("Glove", 25, 1, 2, "\n   GameStart, line 373" + wurstStackTrace)
		set shop6[this_58] = new_Icon("Glove", 31, 1, 2, "\n   GameStart, line 374" + wurstStackTrace)
		set buttonLayerShop01[this_58] = new_ImageEx_2(1, 1, 2, 2, "64x64LayerShopIcon.blp", 0)
		call image_setColor_2(ImageEx_content[buttonLayerShop01[this_58]], 255, 180, 220)
		set buttonLayerShop02[this_58] = new_ImageEx_2(7, 1, 2, 2, "64x64LayerShopIcon.blp", 0)
		call image_setColor_2(ImageEx_content[buttonLayerShop02[this_58]], 255, 180, 220)
		set buttonLayerShop03[this_58] = new_ImageEx_2(13, 1, 2, 2, "64x64LayerShopIcon.blp", 0)
		call image_setColor_2(ImageEx_content[buttonLayerShop03[this_58]], 255, 180, 220)
		set buttonLayerShop04[this_58] = new_ImageEx_2(19, 1, 2, 2, "64x64LayerShopIcon.blp", 0)
		call image_setColor_2(ImageEx_content[buttonLayerShop04[this_58]], 255, 180, 220)
		set buttonLayerShop05[this_58] = new_ImageEx_2(25, 1, 2, 2, "64x64LayerShopIcon.blp", 0)
		call image_setColor_2(ImageEx_content[buttonLayerShop05[this_58]], 255, 180, 220)
		set buttonLayerShop06[this_58] = new_ImageEx_2(31, 1, 2, 2, "64x64LayerShopIcon.blp", 0)
		call image_setColor_2(ImageEx_content[buttonLayerShop06[this_58]], 255, 180, 220)
		set shop7[this_58] = new_Icon("HealingSpray", 1, 5, 2, "\n   GameStart, line 393" + wurstStackTrace)
		set shop8[this_58] = new_Icon("HealingSpray", 7, 5, 2, "\n   GameStart, line 394" + wurstStackTrace)
		set shop9[this_58] = new_Icon("HealingSpray", 13, 5, 2, "\n   GameStart, line 395" + wurstStackTrace)
		set shop10[this_58] = new_Icon("HealingSpray", 19, 5, 2, "\n   GameStart, line 396" + wurstStackTrace)
		set shop11[this_58] = new_Icon("HealingSpray", 25, 5, 2, "\n   GameStart, line 397" + wurstStackTrace)
		set shop12[this_58] = new_Icon("HealingSpray", 31, 5, 2, "\n   GameStart, line 398" + wurstStackTrace)
		set buttonLayerShop07[this_58] = new_ImageEx_2(1, 5, 2, 2, "64x64LayerShopIcon.blp", 0)
		call image_setColor_2(ImageEx_content[buttonLayerShop07[this_58]], 0, 162, 232)
		set buttonLayerShop08[this_58] = new_ImageEx_2(7, 5, 2, 2, "64x64LayerShopIcon.blp", 0)
		call image_setColor_2(ImageEx_content[buttonLayerShop08[this_58]], 0, 162, 232)
		set buttonLayerShop09[this_58] = new_ImageEx_2(13, 5, 2, 2, "64x64LayerShopIcon.blp", 0)
		call image_setColor_2(ImageEx_content[buttonLayerShop09[this_58]], 0, 162, 232)
		set buttonLayerShop10[this_58] = new_ImageEx_2(19, 5, 2, 2, "64x64LayerShopIcon.blp", 0)
		call image_setColor_2(ImageEx_content[buttonLayerShop10[this_58]], 0, 162, 232)
		set buttonLayerShop11[this_58] = new_ImageEx_2(25, 5, 2, 2, "64x64LayerShopIcon.blp", 0)
		call image_setColor_2(ImageEx_content[buttonLayerShop11[this_58]], 0, 162, 232)
		set buttonLayerShop12[this_58] = new_ImageEx_2(31, 5, 2, 2, "64x64LayerShopIcon.blp", 0)
		call image_setColor_2(ImageEx_content[buttonLayerShop12[this_58]], 0, 162, 232)
		set shop13[this_58] = new_Icon("Impale", 1, 9, 2, "\n   GameStart, line 416" + wurstStackTrace)
		set shop14[this_58] = new_Icon("Impale", 7, 9, 2, "\n   GameStart, line 417" + wurstStackTrace)
		set shop15[this_58] = new_Icon("Impale", 13, 9, 2, "\n   GameStart, line 418" + wurstStackTrace)
		set shop16[this_58] = new_Icon("Impale", 19, 9, 2, "\n   GameStart, line 419" + wurstStackTrace)
		set shop17[this_58] = new_Icon("Impale", 25, 9, 2, "\n   GameStart, line 420" + wurstStackTrace)
		set shop18[this_58] = new_Icon("Impale", 31, 9, 2, "\n   GameStart, line 421" + wurstStackTrace)
		set buttonLayerShop13[this_58] = new_ImageEx_2(1, 9, 2, 2, "64x64LayerShopIcon.blp", 0)
		call image_setColor_2(ImageEx_content[buttonLayerShop13[this_58]], 181, 230, 29)
		set buttonLayerShop14[this_58] = new_ImageEx_2(7, 9, 2, 2, "64x64LayerShopIcon.blp", 0)
		call image_setColor_2(ImageEx_content[buttonLayerShop14[this_58]], 181, 230, 29)
		set buttonLayerShop15[this_58] = new_ImageEx_2(13, 9, 2, 2, "64x64LayerShopIcon.blp", 0)
		call image_setColor_2(ImageEx_content[buttonLayerShop15[this_58]], 181, 230, 29)
		set buttonLayerShop16[this_58] = new_ImageEx_2(19, 9, 2, 2, "64x64LayerShopIcon.blp", 0)
		call image_setColor_2(ImageEx_content[buttonLayerShop16[this_58]], 181, 230, 29)
		set buttonLayerShop17[this_58] = new_ImageEx_2(25, 9, 2, 2, "64x64LayerShopIcon.blp", 0)
		call image_setColor_2(ImageEx_content[buttonLayerShop17[this_58]], 181, 230, 29)
		set buttonLayerShop18[this_58] = new_ImageEx_2(31, 9, 2, 2, "64x64LayerShopIcon.blp", 0)
		call image_setColor_2(ImageEx_content[buttonLayerShop18[this_58]], 181, 230, 29)
		set shop19[this_58] = new_Icon("Bash", 1, 13, 2, "\n   GameStart, line 439" + wurstStackTrace)
		set shop20[this_58] = new_Icon("Bash", 7, 13, 2, "\n   GameStart, line 440" + wurstStackTrace)
		set shop21[this_58] = new_Icon("Bash", 13, 13, 2, "\n   GameStart, line 441" + wurstStackTrace)
		set shop22[this_58] = new_Icon("Bash", 19, 13, 2, "\n   GameStart, line 442" + wurstStackTrace)
		set shop23[this_58] = new_Icon("Bash", 25, 13, 2, "\n   GameStart, line 443" + wurstStackTrace)
		set shop24[this_58] = new_Icon("Bash", 31, 13, 2, "\n   GameStart, line 444" + wurstStackTrace)
		set buttonLayerShop19[this_58] = new_ImageEx_2(1, 13, 2, 2, "64x64LayerShopIcon.blp", 0)
		call image_setColor_2(ImageEx_content[buttonLayerShop19[this_58]], 255, 201, 14)
		set buttonLayerShop20[this_58] = new_ImageEx_2(7, 13, 2, 2, "64x64LayerShopIcon.blp", 0)
		call image_setColor_2(ImageEx_content[buttonLayerShop20[this_58]], 255, 201, 14)
		set buttonLayerShop21[this_58] = new_ImageEx_2(13, 13, 2, 2, "64x64LayerShopIcon.blp", 0)
		call image_setColor_2(ImageEx_content[buttonLayerShop21[this_58]], 255, 201, 14)
		set buttonLayerShop22[this_58] = new_ImageEx_2(19, 13, 2, 2, "64x64LayerShopIcon.blp", 0)
		call image_setColor_2(ImageEx_content[buttonLayerShop22[this_58]], 255, 201, 14)
		set buttonLayerShop23[this_58] = new_ImageEx_2(25, 13, 2, 2, "64x64LayerShopIcon.blp", 0)
		call image_setColor_2(ImageEx_content[buttonLayerShop23[this_58]], 255, 201, 14)
		set buttonLayerShop24[this_58] = new_ImageEx_2(31, 13, 2, 2, "64x64LayerShopIcon.blp", 0)
		call image_setColor_2(ImageEx_content[buttonLayerShop24[this_58]], 255, 201, 14)
	elseif temp == 4 then
		set shopOb[this_58] = new_Observable(shopB[this_58])
		set temp_2 = shopOb[this_58]
		set clVar_2 = alloc_Closure_9()
		call dispatch_Observable_setClickAction(temp_2, clVar_2, "\n   GameStart, line 509" + wurstStackTrace)
		set scoreOb[this_58] = new_Observable(scoreB[this_58])
		set temp_3 = scoreOb[this_58]
		set clVar_3 = alloc_Closure_7()
		call dispatch_Observable_setClickAction(temp_3, clVar_3, "\n   GameStart, line 515" + wurstStackTrace)
		set guideOb[this_58] = new_Observable(guideB[this_58])
		set temp_4 = guideOb[this_58]
		set clVar_4 = alloc_Closure_6()
		call dispatch_Observable_setClickAction(temp_4, clVar_4, "\n   GameStart, line 521" + wurstStackTrace)
		set statsOb[this_58] = new_Observable(statsB[this_58])
		set temp_5 = statsOb[this_58]
		set clVar_5 = alloc_Closure_10()
		call dispatch_Observable_setClickAction(temp_5, clVar_5, "\n   GameStart, line 527" + wurstStackTrace)
	elseif temp == 5 then
		call cyc_dispatch_Window_add(0, GameStart_shopWindow, shopOb[this_58], "\n   GameStart, line 533" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_shopWindow, scoreOb[this_58], "\n   GameStart, line 534" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_shopWindow, guideOb[this_58], "\n   GameStart, line 535" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_shopWindow, statsOb[this_58], "\n   GameStart, line 536" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_shopWindow, shopPright[this_58], "\n   GameStart, line 545" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_shopWindow, shopPleft[this_58], "\n   GameStart, line 547" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_shopWindow, shop1[this_58], "\n   GameStart, line 554" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_shopWindow, shop2[this_58], "\n   GameStart, line 555" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_shopWindow, shop3[this_58], "\n   GameStart, line 556" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_shopWindow, shop4[this_58], "\n   GameStart, line 557" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_shopWindow, shop5[this_58], "\n   GameStart, line 558" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_shopWindow, shop6[this_58], "\n   GameStart, line 559" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_shopWindow, shop7[this_58], "\n   GameStart, line 560" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_shopWindow, shop8[this_58], "\n   GameStart, line 561" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_shopWindow, shop9[this_58], "\n   GameStart, line 562" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_shopWindow, shop10[this_58], "\n   GameStart, line 563" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_shopWindow, shop11[this_58], "\n   GameStart, line 564" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_shopWindow, shop12[this_58], "\n   GameStart, line 565" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_shopWindow, shop13[this_58], "\n   GameStart, line 566" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_shopWindow, shop14[this_58], "\n   GameStart, line 567" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_shopWindow, shop15[this_58], "\n   GameStart, line 568" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_shopWindow, shop16[this_58], "\n   GameStart, line 569" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_shopWindow, shop17[this_58], "\n   GameStart, line 570" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_shopWindow, shop18[this_58], "\n   GameStart, line 571" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_shopWindow, shop19[this_58], "\n   GameStart, line 572" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_shopWindow, shop20[this_58], "\n   GameStart, line 573" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_shopWindow, shop21[this_58], "\n   GameStart, line 574" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_shopWindow, shop22[this_58], "\n   GameStart, line 575" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_shopWindow, shop23[this_58], "\n   GameStart, line 576" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_shopWindow, shop24[this_58], "\n   GameStart, line 577" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_shopWindow, shopT2[this_58], "\n   GameStart, line 616" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_shopWindow, shopT3[this_58], "\n   GameStart, line 617" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_shopWindow, shopT4[this_58], "\n   GameStart, line 618" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_shopWindow, shopT5[this_58], "\n   GameStart, line 619" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_shopWindow, shopT6[this_58], "\n   GameStart, line 620" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_shopWindow, shopT7[this_58], "\n   GameStart, line 621" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_shopWindow, shopT8[this_58], "\n   GameStart, line 622" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_shopWindow, shopT9[this_58], "\n   GameStart, line 623" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_scoreWindow, shopOb[this_58], "\n   GameStart, line 625" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_scoreWindow, scoreOb[this_58], "\n   GameStart, line 626" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_scoreWindow, guideOb[this_58], "\n   GameStart, line 627" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_scoreWindow, statsOb[this_58], "\n   GameStart, line 628" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_guideWindow, shopOb[this_58], "\n   GameStart, line 630" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_guideWindow, scoreOb[this_58], "\n   GameStart, line 631" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_guideWindow, guideOb[this_58], "\n   GameStart, line 632" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_guideWindow, statsOb[this_58], "\n   GameStart, line 633" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_statsWindow, shopOb[this_58], "\n   GameStart, line 635" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_statsWindow, scoreOb[this_58], "\n   GameStart, line 636" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_statsWindow, guideOb[this_58], "\n   GameStart, line 637" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_statsWindow, statsOb[this_58], "\n   GameStart, line 638" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_shopWindow, buttonLayerShop01[this_58], "\n   GameStart, line 640" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_shopWindow, buttonLayerShop02[this_58], "\n   GameStart, line 641" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_shopWindow, buttonLayerShop03[this_58], "\n   GameStart, line 642" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_shopWindow, buttonLayerShop04[this_58], "\n   GameStart, line 643" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_shopWindow, buttonLayerShop05[this_58], "\n   GameStart, line 644" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_shopWindow, buttonLayerShop06[this_58], "\n   GameStart, line 645" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_shopWindow, buttonLayerShop07[this_58], "\n   GameStart, line 646" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_shopWindow, buttonLayerShop08[this_58], "\n   GameStart, line 647" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_shopWindow, buttonLayerShop09[this_58], "\n   GameStart, line 648" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_shopWindow, buttonLayerShop10[this_58], "\n   GameStart, line 649" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_shopWindow, buttonLayerShop11[this_58], "\n   GameStart, line 650" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_shopWindow, buttonLayerShop12[this_58], "\n   GameStart, line 651" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_shopWindow, buttonLayerShop13[this_58], "\n   GameStart, line 652" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_shopWindow, buttonLayerShop14[this_58], "\n   GameStart, line 653" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_shopWindow, buttonLayerShop15[this_58], "\n   GameStart, line 654" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_shopWindow, buttonLayerShop16[this_58], "\n   GameStart, line 655" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_shopWindow, buttonLayerShop17[this_58], "\n   GameStart, line 656" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_shopWindow, buttonLayerShop18[this_58], "\n   GameStart, line 657" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_shopWindow, buttonLayerShop19[this_58], "\n   GameStart, line 658" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_shopWindow, buttonLayerShop20[this_58], "\n   GameStart, line 659" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_shopWindow, buttonLayerShop21[this_58], "\n   GameStart, line 660" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_shopWindow, buttonLayerShop22[this_58], "\n   GameStart, line 661" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_shopWindow, buttonLayerShop23[this_58], "\n   GameStart, line 662" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_shopWindow, buttonLayerShop24[this_58], "\n   GameStart, line 663" + wurstStackTrace)
	else
		set ret =  - 1.
	endif
	return ret
endfunction

function alloc_Closure_12 takes nothing returns integer
	local integer this_58
	if CallbackSingle_firstFree == 0 then
		set CallbackSingle_maxIndex = CallbackSingle_maxIndex + 1
		set this_58 = CallbackSingle_maxIndex
	else
		set CallbackSingle_firstFree = CallbackSingle_firstFree - 1
		set this_58 = CallbackSingle_nextFree[CallbackSingle_firstFree]
	endif
	set CallbackSingle_typeId[this_58] = 672
	return this_58
endfunction

function unit_getName takes unit this_58 returns string
	return GetUnitName(this_58)
endfunction

function closure_impl_71 takes integer this_58, integer i, string wurstStackTrace returns real
	local real ret = 0.
	local integer id
	local unit u_2
	local integer clVar
	if i >= dispatch_HashList_getSize(PreloadSystem_unitsToPreload, "\n   PreloadSystem, line 80" + wurstStackTrace) then
		call unit_remove(PreloadSystem_preloadDummy)
		set ret = -1.
	else
		set id = dispatch_HashList_get(PreloadSystem_unitsToPreload, i, "\n   PreloadSystem, line 84" + wurstStackTrace)
		set u_2 = CreateUnit(Basics_DUMMY_PLAYER, id, 0., 0., 0.)
		if unit_getName(u_2) == "" or unit_getName(u_2) == null then
			set ret = -2.
		else
			set clVar = alloc_Closure_12()
			set u[clVar] = u_2
			call doAfter(1., clVar, "\n   PreloadSystem, line 89" + wurstStackTrace)
			set ret = PreloadSystem_unitLoadTime
		endif
	endif
	set u_2 = null
	return ret
endfunction

function dispatch_PreloadAction_run takes integer this_58, integer i, string wurstStackTrace returns real
	local real run_result
	if PreloadAction_typeId[this_58] == 0 then
		if this_58 == 0 then
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling PreloadAction.run" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called PreloadAction.run on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
<<<<<<< HEAD
	if PreloadAction_typeId[this_57] <= 675 then
		if PreloadAction_typeId[this_57] <= 672 then
			if PreloadAction_typeId[this_57] <= 671 then
				set run_result = closure_impl_65(this_57, i, "\n   PreloadSystem, line 28" + wurstStackTrace)
			else
				set run_result = closure_impl_61(this_57, i, "\n   PreloadSystem, line 28" + wurstStackTrace)
			endif
		elseif PreloadAction_typeId[this_57] <= 674 then
			set run_result = closure_impl_67(this_57, i, "\n   PreloadSystem, line 28" + wurstStackTrace)
		else
			set run_result = closure_impl_64(this_57, i, "\n   PreloadSystem, line 28" + wurstStackTrace)
		endif
	elseif PreloadAction_typeId[this_57] <= 806 then
		if PreloadAction_typeId[this_57] <= 676 then
			set run_result = closure_impl_63(this_57, i, "\n   PreloadSystem, line 28" + wurstStackTrace)
		else
			set run_result = closure_impl_66(this_57, i, "\n   PreloadSystem, line 28" + wurstStackTrace)
		endif
	else
		set run_result = closure_impl_62(this_57, i, "\n   PreloadSystem, line 28" + wurstStackTrace)
=======
	if PreloadAction_typeId[this_58] <= 674 then
		if PreloadAction_typeId[this_58] <= 671 then
			if PreloadAction_typeId[this_58] <= 670 then
				set run_result = closure_impl_66(this_58, i, "\n   PreloadSystem, line 28" + wurstStackTrace)
			else
				set run_result = closure_impl_71(this_58, i, "\n   PreloadSystem, line 28" + wurstStackTrace)
			endif
		elseif PreloadAction_typeId[this_58] <= 673 then
			set run_result = closure_impl_67(this_58, i, "\n   PreloadSystem, line 28" + wurstStackTrace)
		else
			set run_result = closure_impl_65(this_58, i, "\n   PreloadSystem, line 28" + wurstStackTrace)
		endif
	elseif PreloadAction_typeId[this_58] <= 805 then
		if PreloadAction_typeId[this_58] <= 675 then
			set run_result = closure_impl_69(this_58, i, "\n   PreloadSystem, line 28" + wurstStackTrace)
		else
			set run_result = closure_impl_68(this_58, i, "\n   PreloadSystem, line 28" + wurstStackTrace)
		endif
	else
		set run_result = closure_impl_70(this_58, i, "\n   PreloadSystem, line 28" + wurstStackTrace)
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
	endif
	return run_result
endfunction

function preloadAction takes string name, integer i, string wurstStackTrace returns real
	return dispatch_PreloadAction_run(dispatch_HashMap_get(PreloadSystem_preloadActions, StringHash(name), "\n   PreloadSystem, line 34" + wurstStackTrace), i, "\n   PreloadSystem, line 34" + wurstStackTrace)
endfunction

function Preload_preload takes string wurstStackTrace returns nothing
	local real check
	call print("1")
	if Preload_initOrder[Preload_preloadStatus] == null then
		call ClearTextMessages()
		call print("Preload done in " + real_toString(Preload_progress) + " sec!")
<<<<<<< HEAD
		call dispatch_Event_callActions(Preload_preloadEnd, 0, "\n   GameStart, line 157" + wurstStackTrace)
		call timer_release(GetExpiredTimer(), "\n   GameStart, line 158" + wurstStackTrace)
		return
	endif
	call print("2")
	set check = preloadAction(Preload_initOrder[Preload_preloadStatus], Preload_loopCounter, "\n   GameStart, line 161" + wurstStackTrace)
=======
		call dispatch_Event_callActions(Preload_preloadEnd, 0, "\n   GameStart, line 159" + wurstStackTrace)
		call timer_release(GetExpiredTimer(), "\n   GameStart, line 160" + wurstStackTrace)
		return
	endif
	call print("2")
	set check = preloadAction(Preload_initOrder[Preload_preloadStatus], Preload_loopCounter, "\n   GameStart, line 163" + wurstStackTrace)
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
	call print("3")
	set Preload_loopCounter = Preload_loopCounter + 1
	call print("4")
	if check == -2. then
		call printError("An error while Preloading has ocurred")
		return
	elseif check == -1. then
		call print("5")
		set Preload_loopCounter = 0
		set Preload_preloadStatus = Preload_preloadStatus + 1
		call timer_start(GetExpiredTimer(), 0.05, ref_function_bridge_Preload_preload_2)
		set Preload_progress = Preload_progress + 0.05
	else
		call timer_start(GetExpiredTimer(), check, ref_function_bridge_Preload_preload_3)
		set Preload_progress = Preload_progress + check
	endif
	if Preload_showProgress then
		call ClearTextMessages()
		call print("Loading " + Preload_initOrder[Preload_preloadStatus] + ": " + real_toString(100. * (Preload_progress / Preload_maxProgress)) + "%")
	endif
endfunction

function bridge_Preload_preload takes nothing returns nothing
<<<<<<< HEAD
	call Preload_preload("\n   GameStart, line 150")
endfunction

function bridge_Preload_preload_2 takes nothing returns nothing
	call Preload_preload("\n   GameStart, line 172")
endfunction

function bridge_Preload_preload_3 takes nothing returns nothing
	call Preload_preload("\n   GameStart, line 175")
endfunction

function Unit_addKnock takes integer this_57, real x, real y, string wurstStackTrace returns nothing
	local integer tempIndex = this_57
=======
	call Preload_preload("\n   GameStart, line 177")
endfunction

function bridge_Preload_preload_2 takes nothing returns nothing
	call Preload_preload("\n   GameStart, line 152")
endfunction

function bridge_Preload_preload_3 takes nothing returns nothing
	call Preload_preload("\n   GameStart, line 174")
endfunction

function Unit_addKnock takes integer this_58, real x, real y, string wurstStackTrace returns nothing
	local integer tempIndex = this_58
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
	local integer tempIndex_2
	local integer tempIndex_3
	local integer temp
	set Unit_wallLoc[tempIndex] = 0.
	set Unit_wallLoc_2[tempIndex] = 0.
<<<<<<< HEAD
	set tempIndex_2 = this_57
	set temp = tempIndex_2
	set tempIndex_3 = this_57
	set Unit_knockSpeed[temp] = vec2_op_plus(Unit_knockSpeed[tempIndex_3], Unit_knockSpeed_2[tempIndex_3], x, y)
	set Unit_knockSpeed_2[tempIndex_2] = vec2_op_plus_return_y
	if  not Unit_hasKnockback[this_57] then
		set Unit_hasKnockback[this_57] = true
		call dispatch_LinkedList_add(UnitClass_knocklist, this_57, "\n   UnitClass, line 281" + wurstStackTrace)
	endif
	set Unit_lastCollision[this_57] = 0
endfunction

function dispatch_Unit_addKnock takes integer this_57, real x, real y, string wurstStackTrace returns nothing
	if Unit_typeId[this_57] == 0 then
		if this_57 == 0 then
=======
	set tempIndex_2 = this_58
	set temp = tempIndex_2
	set tempIndex_3 = this_58
	set Unit_knockSpeed[temp] = vec2_op_plus(Unit_knockSpeed[tempIndex_3], Unit_knockSpeed_2[tempIndex_3], x, y)
	set Unit_knockSpeed_2[tempIndex_2] = vec2_op_plus_return_y
	if  not Unit_hasKnockback[this_58] then
		set Unit_hasKnockback[this_58] = true
		call dispatch_LinkedList_add(UnitClass_knocklist, this_58, "\n   UnitClass, line 287" + wurstStackTrace)
	endif
	set Unit_lastCollision[this_58] = 0
endfunction

function dispatch_Unit_addKnock takes integer this_58, real x, real y, string wurstStackTrace returns nothing
	if Unit_typeId[this_58] == 0 then
		if this_58 == 0 then
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Unit.addKnock" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Unit.addKnock on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
<<<<<<< HEAD
	if Unit_typeId[this_57] <= 710 then
		call Unit_addKnock(this_57, x, y, "\n   UnitClass, line 276" + wurstStackTrace)
	else
		call Unit_addKnock(this_57, x, y, "\n   UnitClass, line 276" + wurstStackTrace)
=======
	if Unit_typeId[this_58] <= 709 then
		call Unit_addKnock(this_58, x, y, "\n   UnitClass, line 282" + wurstStackTrace)
	else
		call Unit_addKnock(this_58, x, y, "\n   UnitClass, line 282" + wurstStackTrace)
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
	endif
endfunction

function distanceBetweenCoords takes real x1, real y1, real x2, real y2 returns real
	return SquareRoot((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1))
endfunction

<<<<<<< HEAD
function item_getX takes item this_57 returns real
	return GetItemX(this_57)
endfunction

function item_getY takes item this_57 returns real
	return GetItemY(this_57)
endfunction

function item_getPos takes item this_57 returns real
	set item_getPos_return_x = item_getX(this_57)
	set item_getPos_return_y = item_getY(this_57)
=======
function item_getX takes item this_58 returns real
	return GetItemX(this_58)
endfunction

function item_getY takes item this_58 returns real
	return GetItemY(this_58)
endfunction

function item_getPos takes item this_58 returns real
	set item_getPos_return_x = item_getX(this_58)
	set item_getPos_return_y = item_getY(this_58)
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
	return item_getPos_return_x
endfunction

function isTerrainWalkable takes real x, real y returns boolean
	local real temp_Terrain_tempPos_x
	local real temp_Terrain_tempPos_y
	call MoveRectTo(Terrain_find, x, y)
	call EnumItemsInRect(Terrain_find, null, ref_function_hideItem)
	call SetItemPosition(Terrain_dItem, x, y)
	set temp_Terrain_tempPos_x = item_getPos(Terrain_dItem)
	set temp_Terrain_tempPos_y = item_getPos_return_y
	set Terrain_tempPos_x = temp_Terrain_tempPos_x
	set Terrain_tempPos_y = temp_Terrain_tempPos_y
	call SetItemVisible(Terrain_dItem, false)
	loop
		exitwhen  not (Terrain_hidMax > 0)
		set Terrain_hidMax = Terrain_hidMax - 1
		call SetItemVisible(Terrain_hid[Terrain_hidMax], true)
		set Terrain_hid[Terrain_hidMax] = null
	endloop
	return (Terrain_tempPos_x - x) * (Terrain_tempPos_x - x) + (Terrain_tempPos_y - y) * (Terrain_tempPos_y - y) <= Terrain_MAX_RANGE * Terrain_MAX_RANGE and ( not IsTerrainPathable(x, y, PATHING_TYPE_WALKABILITY))
endfunction

<<<<<<< HEAD
function Pull2_theSpell takes integer this_57, string wurstStackTrace returns nothing
=======
function Pull2_theSpell takes integer this_58, string wurstStackTrace returns nothing
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
	local real dist
	local real x
	local real y
	local integer tempIndex
	local integer tempIndex_2
	local integer temp
<<<<<<< HEAD
	set Pull2_i[this_57] = Pull2_i[this_57] - 1
	call SetLightningColor(Pull2_l[this_57], Pull2_i[this_57] * 1. / Pull2_imax[this_57], Pull2_i[this_57] * 1. / Pull2_imax[this_57], Pull2_i[this_57] * 1. / Pull2_imax[this_57], 1.)
	call MoveLightningEx(Pull2_l[this_57], true, unit_getX(Pull2_u[this_57]), unit_getY(Pull2_u[this_57]), 50., unit_getX(Pull2_ut[this_57]), unit_getY(Pull2_ut[this_57]), 50.)
	set dist = distanceBetweenCoords(unit_getX(Pull2_u[this_57]), unit_getY(Pull2_u[this_57]), unit_getX(Pull2_ut[this_57]), unit_getY(Pull2_ut[this_57]))
	if Pull2_i[this_57] <= 0 then
		call timer_release(Pull2_t[this_57], "\n   Pull2, line 59" + wurstStackTrace)
		call DestroyLightning(Pull2_l[this_57])
	elseif dist > 100. then
		set tempIndex = Pull2_uut[this_57]
		set temp = tempIndex
		set tempIndex_2 = Pull2_uut[this_57]
=======
	set Pull2_i[this_58] = Pull2_i[this_58] - 1
	call SetLightningColor(Pull2_l[this_58], Pull2_i[this_58] * 1. / Pull2_imax[this_58], Pull2_i[this_58] * 1. / Pull2_imax[this_58], Pull2_i[this_58] * 1. / Pull2_imax[this_58], 1.)
	call MoveLightningEx(Pull2_l[this_58], true, unit_getX(Pull2_u[this_58]), unit_getY(Pull2_u[this_58]), 50., unit_getX(Pull2_ut[this_58]), unit_getY(Pull2_ut[this_58]), 50.)
	set dist = distanceBetweenCoords(unit_getX(Pull2_u[this_58]), unit_getY(Pull2_u[this_58]), unit_getX(Pull2_ut[this_58]), unit_getY(Pull2_ut[this_58]))
	if Pull2_i[this_58] <= 0 then
		call timer_release(Pull2_t[this_58], "\n   Pull2, line 59" + wurstStackTrace)
		call DestroyLightning(Pull2_l[this_58])
	elseif dist > 100. then
		set tempIndex = Pull2_uut[this_58]
		set temp = tempIndex
		set tempIndex_2 = Pull2_uut[this_58]
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
		set Unit_knockSpeed[temp] = vec2_op_mult(Unit_knockSpeed[tempIndex_2], Unit_knockSpeed_2[tempIndex_2], 0.5)
		set Unit_knockSpeed_2[tempIndex] = vec2_op_mult_return_y
		set x = 0.
		set y = 0.
<<<<<<< HEAD
		if isTerrainWalkable(unit_getX(Pull2_ut[this_57]) + x, unit_getY(Pull2_ut[this_57]) + y) == true then
			call print(R2S(RAbsBJ(x) + RAbsBJ(y)))
			set Unit_lastKnocker[Pull2_uut[this_57]] = unit_getUserData(Pull2_u[this_57])
			call dispatch_Unit_addKnock(Pull2_uut[this_57], x, y, "\n   Pull2, line 69" + wurstStackTrace)
		else
			set Pull2_i[this_57] = 0
		endif
	else
		set Pull2_i[this_57] = 0
	endif
endfunction

function dispatch_Pull2_theSpell takes integer this_57, string wurstStackTrace returns nothing
	if Pull2_typeId[this_57] == 0 then
		if this_57 == 0 then
=======
		if isTerrainWalkable(unit_getX(Pull2_ut[this_58]) + x, unit_getY(Pull2_ut[this_58]) + y) == true then
			call print(R2S(RAbsBJ(x) + RAbsBJ(y)))
			set Unit_lastKnocker[Pull2_uut[this_58]] = unit_getUserData(Pull2_u[this_58])
			call dispatch_Unit_addKnock(Pull2_uut[this_58], x, y, "\n   Pull2, line 69" + wurstStackTrace)
		else
			set Pull2_i[this_58] = 0
		endif
	else
		set Pull2_i[this_58] = 0
	endif
endfunction

function dispatch_Pull2_theSpell takes integer this_58, string wurstStackTrace returns nothing
	if Pull2_typeId[this_58] == 0 then
		if this_58 == 0 then
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Pull2.theSpell" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Pull2.theSpell on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
<<<<<<< HEAD
	call Pull2_theSpell(this_57, "\n   Pull2, line 52" + wurstStackTrace)
=======
	call Pull2_theSpell(this_58, "\n   Pull2, line 52" + wurstStackTrace)
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
endfunction

function Pull2_blackHCall takes string wurstStackTrace returns nothing
	call dispatch_Pull2_theSpell(timer_getData(GetExpiredTimer(), "\n   Pull2, line 50" + wurstStackTrace), "\n   Pull2, line 50" + wurstStackTrace)
endfunction

function bridge_Pull2_blackHCall takes nothing returns nothing
	call Pull2_blackHCall("\n   Pull2, line 47")
endfunction

function getTerrainZ takes real x, real y returns real
	call MoveLocation(Terrain_tempLoc, x, y)
	return GetLocationZ(Terrain_tempLoc)
endfunction

<<<<<<< HEAD
function RockThrow_rockMove takes integer this_57, string wurstStackTrace returns nothing
=======
function RockThrow_rockMove takes integer this_58, string wurstStackTrace returns nothing
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
	local real terrainZ
	local group wurst__iterator0
	local unit u_2
	local integer rocky
<<<<<<< HEAD
	set RockThrow_i[this_57] = RockThrow_i[this_57] - 1
	set RockThrow_c[this_57] = RockThrow_c[this_57] + 1
	call SetUnitPosition(RockThrow_dummy[this_57], unit_getX(RockThrow_dummy[this_57]) + RockThrow_x[this_57], unit_getY(RockThrow_dummy[this_57]) + RockThrow_y[this_57])
	call SetUnitFacing(RockThrow_dummy[this_57], I2R(RockThrow_c[this_57]))
	set RockThrow_currentZ[this_57] = RockThrow_currentZ[this_57] + RockThrow_z[this_57]
	set terrainZ = getTerrainZ(unit_getX(RockThrow_dummy[this_57]), unit_getY(RockThrow_dummy[this_57]))
	call SetUnitFlyHeight(RockThrow_dummy[this_57], RockThrow_currentZ[this_57] - terrainZ, 0.)
	set RockThrow_z[this_57] = RockThrow_z[this_57] - RockThrow_grav[this_57]
	if RockThrow_i[this_57] <= 0 then
		set RockThrow_e[this_57] = AddSpecialEffect("Abilities\\Spells\\Orc\\WarStomp\\WarStompCaster.mdl", unit_getX(RockThrow_dummy[this_57]), unit_getY(RockThrow_dummy[this_57]))
		call effect_destr(RockThrow_e[this_57])
		set RockThrow_g[this_57] = CreateGroup()
		call GroupEnumUnitsInRange(RockThrow_g[this_57], unit_getX(RockThrow_dummy[this_57]), unit_getY(RockThrow_dummy[this_57]), RockThrow_range[this_57], null)
		set wurst__iterator0 = group_iterator(RockThrow_g[this_57])
		loop
			exitwhen  not group_hasNext(wurst__iterator0)
			set u_2 = group_next(wurst__iterator0)
			set RockThrow_x[this_57] = 1.
			set RockThrow_y[this_57] = 1.
			set rocky = GetUnitUserData(u_2)
			call dispatch_Unit_addKnock(rocky, RockThrow_x[this_57], RockThrow_y[this_57], "\n   RockThrow, line 91" + wurstStackTrace)
			set Unit_lastKnocker[rocky] = unit_getUserData(RockThrow_u[this_57])
		endloop
		call group_close(wurst__iterator0)
		call DestroyGroup(RockThrow_g[this_57])
		call RemoveUnit(RockThrow_dummy[this_57])
		call timer_release(RockThrow_t[this_57], "\n   RockThrow, line 95" + wurstStackTrace)
=======
	set RockThrow_i[this_58] = RockThrow_i[this_58] - 1
	set RockThrow_c[this_58] = RockThrow_c[this_58] + 1
	call SetUnitPosition(RockThrow_dummy[this_58], unit_getX(RockThrow_dummy[this_58]) + RockThrow_x[this_58], unit_getY(RockThrow_dummy[this_58]) + RockThrow_y[this_58])
	call SetUnitFacing(RockThrow_dummy[this_58], I2R(RockThrow_c[this_58]))
	set RockThrow_currentZ[this_58] = RockThrow_currentZ[this_58] + RockThrow_z[this_58]
	set terrainZ = getTerrainZ(unit_getX(RockThrow_dummy[this_58]), unit_getY(RockThrow_dummy[this_58]))
	call SetUnitFlyHeight(RockThrow_dummy[this_58], RockThrow_currentZ[this_58] - terrainZ, 0.)
	set RockThrow_z[this_58] = RockThrow_z[this_58] - RockThrow_grav[this_58]
	if RockThrow_i[this_58] <= 0 then
		set RockThrow_e[this_58] = AddSpecialEffect("Abilities\\Spells\\Orc\\WarStomp\\WarStompCaster.mdl", unit_getX(RockThrow_dummy[this_58]), unit_getY(RockThrow_dummy[this_58]))
		call effect_destr(RockThrow_e[this_58])
		set RockThrow_g[this_58] = CreateGroup()
		call GroupEnumUnitsInRange(RockThrow_g[this_58], unit_getX(RockThrow_dummy[this_58]), unit_getY(RockThrow_dummy[this_58]), RockThrow_range[this_58], null)
		set wurst__iterator0 = group_iterator(RockThrow_g[this_58])
		loop
			exitwhen  not group_hasNext(wurst__iterator0)
			set u_2 = group_next(wurst__iterator0)
			set RockThrow_x[this_58] = 1.
			set RockThrow_y[this_58] = 1.
			set rocky = GetUnitUserData(u_2)
			call dispatch_Unit_addKnock(rocky, RockThrow_x[this_58], RockThrow_y[this_58], "\n   RockThrow, line 91" + wurstStackTrace)
			set Unit_lastKnocker[rocky] = unit_getUserData(RockThrow_u[this_58])
		endloop
		call group_close(wurst__iterator0)
		call DestroyGroup(RockThrow_g[this_58])
		call RemoveUnit(RockThrow_dummy[this_58])
		call timer_release(RockThrow_t[this_58], "\n   RockThrow, line 95" + wurstStackTrace)
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
	endif
	set wurst__iterator0 = null
	set u_2 = null
endfunction

<<<<<<< HEAD
function dispatch_RockThrow_rockMove takes integer this_57, string wurstStackTrace returns nothing
	if RockThrow_typeId[this_57] == 0 then
		if this_57 == 0 then
=======
function dispatch_RockThrow_rockMove takes integer this_58, string wurstStackTrace returns nothing
	if RockThrow_typeId[this_58] == 0 then
		if this_58 == 0 then
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling RockThrow.rockMove" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called RockThrow.rockMove on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
<<<<<<< HEAD
	call RockThrow_rockMove(this_57, "\n   RockThrow, line 69" + wurstStackTrace)
=======
	call RockThrow_rockMove(this_58, "\n   RockThrow, line 69" + wurstStackTrace)
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
endfunction

function RockThrow_rockMoveCall takes string wurstStackTrace returns nothing
	local timer t = GetExpiredTimer()
	local integer i = timer_getData(t, "\n   RockThrow, line 64" + wurstStackTrace)
	local integer tempObject = i
	call dispatch_RockThrow_rockMove(tempObject, "\n   RockThrow, line 66" + wurstStackTrace)
	set t = null
endfunction

function bridge_RockThrow_rockMoveCall takes nothing returns nothing
	call RockThrow_rockMoveCall("\n   RockThrow, line 50")
endfunction

<<<<<<< HEAD
function SamplePointSpell_callback takes integer this_57 returns nothing
endfunction

function dispatch_SamplePointSpell_callback takes integer this_57, string wurstStackTrace returns nothing
	if SamplePointSpell_typeId[this_57] == 0 then
		if this_57 == 0 then
=======
function SamplePointSpell_callback takes integer this_58 returns nothing
endfunction

function dispatch_SamplePointSpell_callback takes integer this_58, string wurstStackTrace returns nothing
	if SamplePointSpell_typeId[this_58] == 0 then
		if this_58 == 0 then
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling SamplePointSpell.callback" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called SamplePointSpell.callback on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
<<<<<<< HEAD
	call SamplePointSpell_callback(this_57)
=======
	call SamplePointSpell_callback(this_58)
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
endfunction

function SamplePointSpell_callCallback takes string wurstStackTrace returns nothing
	call dispatch_SamplePointSpell_callback(timer_getData(GetExpiredTimer(), "\n   SpellTemplate, line 65" + wurstStackTrace), "\n   SpellTemplate, line 65" + wurstStackTrace)
endfunction

function bridge_SamplePointSpell_callCallback takes nothing returns nothing
	call SamplePointSpell_callCallback("\n   SpellTemplate, line 62")
endfunction

function Shield_onExpire takes string wurstStackTrace returns nothing
	call dispatch_Shield_destroyShield(timer_getData(GetExpiredTimer(), "\n   Shield, line 89" + wurstStackTrace), "\n   Shield, line 89" + wurstStackTrace)
endfunction

function bridge_Shield_onExpire takes nothing returns nothing
	call Shield_onExpire("\n   Shield, line 78")
endfunction

function Spell_timedDisableCastDummy takes string wurstStackTrace returns nothing
	local timer t = GetExpiredTimer()
	local integer s = timer_getData(t, "\n   Spell, line 169" + wurstStackTrace)
	call SetPlayerAbilityAvailable(Unit_owner[Spell_owner[s]], Spell_castDummy[s], false)
	call timer_release(t, "\n   Spell, line 171" + wurstStackTrace)
	set t = null
	set t = null
endfunction

function bridge_Spell_timedDisableCastDummy takes nothing returns nothing
	call Spell_timedDisableCastDummy("\n   Spell, line 178")
endfunction

<<<<<<< HEAD
function Stun_onDestroy takes integer this_57, string wurstStackTrace returns nothing
	call UnitRemoveAbility(Unit_u[Stun_u[this_57]], 1112560453)
	call timer_release(Stun_t[this_57], "\n   Stun, line 33" + wurstStackTrace)
=======
function Stun_onDestroy takes integer this_58, string wurstStackTrace returns nothing
	call UnitRemoveAbility(Unit_u[Stun_u[this_58]], 1112560453)
	call timer_release(Stun_t[this_58], "\n   Stun, line 33" + wurstStackTrace)
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
endfunction

function dealloc_Stun takes integer obj, string wurstStackTrace returns nothing
	if Stun_typeId[obj] == 0 then
		call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Double free: object of type Stun" + wurstStackTrace)
		call I2S(1 / 0)
	else
		set Stun_firstFree = Stun_firstFree + 1
		set Stun_typeId[obj] = 0
	endif
endfunction

<<<<<<< HEAD
function destroyStun takes integer this_57, string wurstStackTrace returns nothing
	call Stun_onDestroy(this_57, "\n   Stun, line 30" + wurstStackTrace)
	call dealloc_Stun(this_57, "\n   Stun, line 30" + wurstStackTrace)
endfunction

function dispatch_Stun_destroyStun takes integer this_57, string wurstStackTrace returns nothing
	if Stun_typeId[this_57] == 0 then
		if this_57 == 0 then
=======
function destroyStun takes integer this_58, string wurstStackTrace returns nothing
	call Stun_onDestroy(this_58, "\n   Stun, line 30" + wurstStackTrace)
	call dealloc_Stun(this_58, "\n   Stun, line 30" + wurstStackTrace)
endfunction

function dispatch_Stun_destroyStun takes integer this_58, string wurstStackTrace returns nothing
	if Stun_typeId[this_58] == 0 then
		if this_58 == 0 then
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Stun.destroyStun" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Stun.destroyStun on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
<<<<<<< HEAD
	call destroyStun(this_57, "\n   Stun, line 5" + wurstStackTrace)
=======
	call destroyStun(this_58, "\n   Stun, line 5" + wurstStackTrace)
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
endfunction

function Stun_destroyStun takes string wurstStackTrace returns nothing
	call dispatch_Stun_destroyStun(timer_getData(GetExpiredTimer(), "\n   Stun, line 28" + wurstStackTrace), "\n   Stun, line 28" + wurstStackTrace)
endfunction

function bridge_Stun_destroyStun takes nothing returns nothing
<<<<<<< HEAD
	call Stun_destroyStun("\n   Stun, line 17")
endfunction

function bridge_Stun_destroyStun_2 takes nothing returns nothing
	call Stun_destroyStun("\n   Stun, line 24")
endfunction

function Queue_getSize takes integer this_57 returns integer
	return Queue_size[this_57]
endfunction

function dispatch_Queue_getSize takes integer this_57, string wurstStackTrace returns integer
	local integer getSize_result
	if Queue_typeId[this_57] == 0 then
		if this_57 == 0 then
=======
	call Stun_destroyStun("\n   Stun, line 24")
endfunction

function bridge_Stun_destroyStun_2 takes nothing returns nothing
	call Stun_destroyStun("\n   Stun, line 17")
endfunction

function Queue_getSize takes integer this_58 returns integer
	return Queue_size[this_58]
endfunction

function dispatch_Queue_getSize takes integer this_58, string wurstStackTrace returns integer
	local integer getSize_result
	if Queue_typeId[this_58] == 0 then
		if this_58 == 0 then
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Queue.getSize" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Queue.getSize on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
<<<<<<< HEAD
	set getSize_result = Queue_getSize(this_57)
	return getSize_result
endfunction

function Spellcast_onDestroy takes integer this_57 returns nothing
=======
	set getSize_result = Queue_getSize(this_58)
	return getSize_result
endfunction

function Spellcast_onDestroy takes integer this_58 returns nothing
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
endfunction

function dealloc_Spellcast takes integer obj, string wurstStackTrace returns nothing
	if Spellcast_typeId[obj] == 0 then
		call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Double free: object of type Spellcast" + wurstStackTrace)
		call I2S(1 / 0)
	else
		set Spellcast_nextFree[Spellcast_firstFree] = obj
		set Spellcast_firstFree = Spellcast_firstFree + 1
		set Spellcast_typeId[obj] = 0
	endif
endfunction

<<<<<<< HEAD
function destroySpellcast takes integer this_57, string wurstStackTrace returns nothing
	call Spellcast_onDestroy(this_57)
	call dealloc_Spellcast(this_57, "\n   Spell, line 111" + wurstStackTrace)
endfunction

function dispatch_Spellcast_destroySpellcast takes integer this_57, string wurstStackTrace returns nothing
	if Spellcast_typeId[this_57] == 0 then
		if this_57 == 0 then
=======
function destroySpellcast takes integer this_58, string wurstStackTrace returns nothing
	call Spellcast_onDestroy(this_58)
	call dealloc_Spellcast(this_58, "\n   Spell, line 111" + wurstStackTrace)
endfunction

function dispatch_Spellcast_destroySpellcast takes integer this_58, string wurstStackTrace returns nothing
	if Spellcast_typeId[this_58] == 0 then
		if this_58 == 0 then
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Spellcast.destroySpellcast" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Spellcast.destroySpellcast on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
<<<<<<< HEAD
	call destroySpellcast(this_57, "\n   Spell, line 111" + wurstStackTrace)
endfunction

function SpellType_toOrderId takes integer this_57 returns integer
	local integer temp = this_57
=======
	call destroySpellcast(this_58, "\n   Spell, line 111" + wurstStackTrace)
endfunction

function SpellType_toOrderId takes integer this_58 returns integer
	local integer temp = this_58
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
	if temp == 0 then
		return Spell_qSpellId
	elseif temp == 1 then
		return Spell_wSpellId
	elseif temp == 2 then
		return Spell_eSpellId
	elseif temp == 3 then
		return Spell_rSpellId
	elseif temp == 4 then
		return Spell_dSpellId
	elseif temp == 5 then
		return Spell_fSpellId
	else
		return -1
	endif
endfunction

<<<<<<< HEAD
function Spell_disableCastDummyTimed takes integer this_57, string wurstStackTrace returns nothing
	local timer receiver = getTimer("\n   Spell, line 178" + wurstStackTrace)
	call timer_setData(receiver, this_57, "\n   Spell, line 178" + wurstStackTrace)
=======
function Spell_disableCastDummyTimed takes integer this_58, string wurstStackTrace returns nothing
	local timer receiver = getTimer("\n   Spell, line 178" + wurstStackTrace)
	call timer_setData(receiver, this_58, "\n   Spell, line 178" + wurstStackTrace)
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
	call timer_start(receiver, 0.0, ref_function_bridge_Spell_timedDisableCastDummy)
	set receiver = null
endfunction

<<<<<<< HEAD
function dispatch_Spell_disableCastDummyTimed takes integer this_57, string wurstStackTrace returns nothing
	if Spell_typeId[this_57] == 0 then
		if this_57 == 0 then
=======
function dispatch_Spell_disableCastDummyTimed takes integer this_58, string wurstStackTrace returns nothing
	if Spell_typeId[this_58] == 0 then
		if this_58 == 0 then
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Spell.disableCastDummyTimed" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Spell.disableCastDummyTimed on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
<<<<<<< HEAD
	if Spell_typeId[this_57] <= 838 then
		if Spell_typeId[this_57] <= 709 then
			call Spell_disableCastDummyTimed(this_57, "\n   Spell, line 177" + wurstStackTrace)
		else
			call Spell_disableCastDummyTimed(this_57, "\n   Spell, line 177" + wurstStackTrace)
		endif
	else
		call Spell_disableCastDummyTimed(this_57, "\n   Spell, line 177" + wurstStackTrace)
	endif
endfunction

function Spell_enableCastDummy takes integer this_57 returns nothing
	call SetPlayerAbilityAvailable(Unit_owner[Spell_owner[this_57]], Spell_castDummy[this_57], true)
endfunction

function dispatch_Spell_enableCastDummy takes integer this_57, string wurstStackTrace returns nothing
	if Spell_typeId[this_57] == 0 then
		if this_57 == 0 then
=======
	if Spell_typeId[this_58] <= 841 then
		if Spell_typeId[this_58] <= 708 then
			call Spell_disableCastDummyTimed(this_58, "\n   Spell, line 177" + wurstStackTrace)
		else
			call Spell_disableCastDummyTimed(this_58, "\n   Spell, line 177" + wurstStackTrace)
		endif
	else
		call Spell_disableCastDummyTimed(this_58, "\n   Spell, line 177" + wurstStackTrace)
	endif
endfunction

function Spell_enableCastDummy takes integer this_58 returns nothing
	call SetPlayerAbilityAvailable(Unit_owner[Spell_owner[this_58]], Spell_castDummy[this_58], true)
endfunction

function dispatch_Spell_enableCastDummy takes integer this_58, string wurstStackTrace returns nothing
	if Spell_typeId[this_58] == 0 then
		if this_58 == 0 then
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Spell.enableCastDummy" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Spell.enableCastDummy on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
<<<<<<< HEAD
	if Spell_typeId[this_57] <= 838 then
		if Spell_typeId[this_57] <= 709 then
			call Spell_enableCastDummy(this_57)
		else
			call Spell_enableCastDummy(this_57)
		endif
	else
		call Spell_enableCastDummy(this_57)
	endif
endfunction

function InstantSpell_forceCast takes integer this_57, integer sc, string wurstStackTrace returns nothing
	call dispatch_Spell_enableCastDummy(this_57, "\n   Spell, line 221" + wurstStackTrace)
	call IssueImmediateOrderById(Unit_u[Spell_owner[this_57]], SpellType_toOrderId(Spell_st[this_57]))
	call dispatch_Spell_disableCastDummyTimed(this_57, "\n   Spell, line 223" + wurstStackTrace)
endfunction

function PointOrUnitSpell_forceCast takes integer this_57, integer sc, string wurstStackTrace returns nothing
=======
	if Spell_typeId[this_58] <= 841 then
		if Spell_typeId[this_58] <= 708 then
			call Spell_enableCastDummy(this_58)
		else
			call Spell_enableCastDummy(this_58)
		endif
	else
		call Spell_enableCastDummy(this_58)
	endif
endfunction

function InstantSpell_forceCast takes integer this_58, integer sc, string wurstStackTrace returns nothing
	call dispatch_Spell_enableCastDummy(this_58, "\n   Spell, line 221" + wurstStackTrace)
	call IssueImmediateOrderById(Unit_u[Spell_owner[this_58]], SpellType_toOrderId(Spell_st[this_58]))
	call dispatch_Spell_disableCastDummyTimed(this_58, "\n   Spell, line 223" + wurstStackTrace)
endfunction

function PointOrUnitSpell_forceCast takes integer this_58, integer sc, string wurstStackTrace returns nothing
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
	local integer tempIndex
	local real tempTupleSelectionResult_1
	local real temp_tempTupleSelectionResult_1
	local real temp_tempTupleSelectionResult_2
	local integer tempIndex_2
	local real tempTupleSelectionResult_2
	local real temp_tempTupleSelectionResult_1_2
	local real temp_tempTupleSelectionResult_2_2
	local unit temp
	local integer temp_2
	local real temp_3
<<<<<<< HEAD
	call dispatch_Spell_enableCastDummy(this_57, "\n   Spell, line 279" + wurstStackTrace)
	if Spellcast_target[sc] == null then
		set temp = Unit_u[Spell_owner[this_57]]
		set temp_2 = SpellType_toOrderId(Spell_st[this_57])
=======
	call dispatch_Spell_enableCastDummy(this_58, "\n   Spell, line 279" + wurstStackTrace)
	if Spellcast_target[sc] == null then
		set temp = Unit_u[Spell_owner[this_58]]
		set temp_2 = SpellType_toOrderId(Spell_st[this_58])
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
		set tempIndex = sc
		set temp_tempTupleSelectionResult_1 = Spellcast_pos[tempIndex]
		set temp_tempTupleSelectionResult_2 = Spellcast_pos_2[tempIndex]
		set tempTupleSelectionResult_1 = temp_tempTupleSelectionResult_1
		set temp_3 = tempTupleSelectionResult_1
		set tempIndex_2 = sc
		set temp_tempTupleSelectionResult_1_2 = Spellcast_pos[tempIndex_2]
		set temp_tempTupleSelectionResult_2_2 = Spellcast_pos_2[tempIndex_2]
		set tempTupleSelectionResult_2 = temp_tempTupleSelectionResult_2_2
		call IssuePointOrderById(temp, temp_2, temp_3, tempTupleSelectionResult_2)
	else
<<<<<<< HEAD
		call IssueTargetOrderById(Unit_u[Spell_owner[this_57]], SpellType_toOrderId(Spell_st[this_57]), Spellcast_target[sc])
	endif
	call dispatch_Spell_disableCastDummyTimed(this_57, "\n   Spell, line 284" + wurstStackTrace)
	set temp = null
endfunction

function PointSpell_forceCast takes integer this_57, integer sc returns nothing
	local unit temp = Unit_u[Spell_owner[this_57]]
	local integer temp_2 = SpellType_toOrderId(Spell_st[this_57])
=======
		call IssueTargetOrderById(Unit_u[Spell_owner[this_58]], SpellType_toOrderId(Spell_st[this_58]), Spellcast_target[sc])
	endif
	call dispatch_Spell_disableCastDummyTimed(this_58, "\n   Spell, line 284" + wurstStackTrace)
	set temp = null
endfunction

function PointSpell_forceCast takes integer this_58, integer sc returns nothing
	local unit temp = Unit_u[Spell_owner[this_58]]
	local integer temp_2 = SpellType_toOrderId(Spell_st[this_58])
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
	local integer tempIndex = sc
	local real temp_tempTupleSelectionResult_1 = Spellcast_pos[tempIndex]
	local real temp_tempTupleSelectionResult_2 = Spellcast_pos_2[tempIndex]
	local real tempTupleSelectionResult_1 = temp_tempTupleSelectionResult_1
	local real temp_3 = tempTupleSelectionResult_1
	local integer tempIndex_2 = sc
	local real temp_tempTupleSelectionResult_1_2 = Spellcast_pos[tempIndex_2]
	local real temp_tempTupleSelectionResult_2_2 = Spellcast_pos_2[tempIndex_2]
	local real tempTupleSelectionResult_2 = temp_tempTupleSelectionResult_2_2
	call IssuePointOrderById(temp, temp_2, temp_3, tempTupleSelectionResult_2)
	set temp = null
endfunction

<<<<<<< HEAD
function UnitSpell_forceCast takes integer this_57, integer sc, string wurstStackTrace returns nothing
	call dispatch_Spell_enableCastDummy(this_57, "\n   Spell, line 258" + wurstStackTrace)
	call IssueTargetOrderById(Unit_u[Spell_owner[this_57]], SpellType_toOrderId(Spell_st[this_57]), Spellcast_target[sc])
	call dispatch_Spell_disableCastDummyTimed(this_57, "\n   Spell, line 260" + wurstStackTrace)
endfunction

function dispatch_Spell_forceCast takes integer this_57, integer sc, string wurstStackTrace returns nothing
	if Spell_typeId[this_57] == 0 then
		if this_57 == 0 then
=======
function UnitSpell_forceCast takes integer this_58, integer sc, string wurstStackTrace returns nothing
	call dispatch_Spell_enableCastDummy(this_58, "\n   Spell, line 258" + wurstStackTrace)
	call IssueTargetOrderById(Unit_u[Spell_owner[this_58]], SpellType_toOrderId(Spell_st[this_58]), Spellcast_target[sc])
	call dispatch_Spell_disableCastDummyTimed(this_58, "\n   Spell, line 260" + wurstStackTrace)
endfunction

function dispatch_Spell_forceCast takes integer this_58, integer sc, string wurstStackTrace returns nothing
	if Spell_typeId[this_58] == 0 then
		if this_58 == 0 then
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Spell.forceCast" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Spell.forceCast on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
<<<<<<< HEAD
	if Spell_typeId[this_57] <= 708 then
		if Spell_typeId[this_57] <= 707 then
			if Spell_typeId[this_57] <= 706 then
				call InstantSpell_forceCast(this_57, sc, "\n   Spell, line 197" + wurstStackTrace)
			else
				call PointSpell_forceCast(this_57, sc)
			endif
		else
			call UnitSpell_forceCast(this_57, sc, "\n   Spell, line 197" + wurstStackTrace)
		endif
	elseif Spell_typeId[this_57] <= 838 then
		if Spell_typeId[this_57] <= 709 then
			call PointOrUnitSpell_forceCast(this_57, sc, "\n   Spell, line 197" + wurstStackTrace)
		else
			call PointSpell_forceCast(this_57, sc)
		endif
	else
		call PointSpell_forceCast(this_57, sc)
	endif
endfunction

function Spellcast_forceC takes integer this_57, string wurstStackTrace returns nothing
	call dispatch_Spell_forceCast(Spellcast_spell[this_57], this_57, "\n   Spell, line 117" + wurstStackTrace)
endfunction

function dispatch_Spellcast_forceC takes integer this_57, string wurstStackTrace returns nothing
	if Spellcast_typeId[this_57] == 0 then
		if this_57 == 0 then
=======
	if Spell_typeId[this_58] <= 707 then
		if Spell_typeId[this_58] <= 706 then
			if Spell_typeId[this_58] <= 705 then
				call InstantSpell_forceCast(this_58, sc, "\n   Spell, line 197" + wurstStackTrace)
			else
				call PointSpell_forceCast(this_58, sc)
			endif
		else
			call UnitSpell_forceCast(this_58, sc, "\n   Spell, line 197" + wurstStackTrace)
		endif
	elseif Spell_typeId[this_58] <= 841 then
		if Spell_typeId[this_58] <= 708 then
			call PointOrUnitSpell_forceCast(this_58, sc, "\n   Spell, line 197" + wurstStackTrace)
		else
			call PointSpell_forceCast(this_58, sc)
		endif
	else
		call PointSpell_forceCast(this_58, sc)
	endif
endfunction

function Spellcast_forceC takes integer this_58, string wurstStackTrace returns nothing
	call dispatch_Spell_forceCast(Spellcast_spell[this_58], this_58, "\n   Spell, line 117" + wurstStackTrace)
endfunction

function dispatch_Spellcast_forceC takes integer this_58, string wurstStackTrace returns nothing
	if Spellcast_typeId[this_58] == 0 then
		if this_58 == 0 then
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Spellcast.forceC" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Spellcast.forceC on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
<<<<<<< HEAD
	call Spellcast_forceC(this_57, "\n   Spell, line 116" + wurstStackTrace)
endfunction

function Hero_nextOrder takes integer this_57, string wurstStackTrace returns nothing
	local integer sc
	if dispatch_Queue_getSize(Hero_castQueue[this_57], "\n   HeroClass, line 212" + wurstStackTrace) <= 0 then
		if Hero_mainOrder[this_57] != 0 and Hero_mainOrder[this_57] != Hero_lastOrdered[this_57] then
			set Hero_lastOrdered[this_57] = Hero_mainOrder[this_57]
			if dispatch_Order_issueToUnit(Hero_mainOrder[this_57], Unit_u[this_57], "\n   HeroClass, line 215" + wurstStackTrace) then
				call dispatch_Hero_setMainOrder(this_57, 0, "\n   HeroClass, line 216" + wurstStackTrace)
			endif
		endif
	else
		set sc = dispatch_Queue_dequeue(Hero_castQueue[this_57], "\n   HeroClass, line 218" + wurstStackTrace)
		call dispatch_Spellcast_forceC(sc, "\n   HeroClass, line 219" + wurstStackTrace)
		call dispatch_Spellcast_destroySpellcast(sc, "\n   HeroClass, line 220" + wurstStackTrace)
	endif
endfunction

function dispatch_Hero_nextOrder takes integer this_57, string wurstStackTrace returns nothing
	if Unit_typeId[this_57] == 0 then
		if this_57 == 0 then
=======
	call Spellcast_forceC(this_58, "\n   Spell, line 116" + wurstStackTrace)
endfunction

function Hero_nextOrder takes integer this_58, string wurstStackTrace returns nothing
	local integer sc
	if dispatch_Queue_getSize(Hero_castQueue[this_58], "\n   HeroClass, line 202" + wurstStackTrace) <= 0 then
		if Hero_mainOrder[this_58] != 0 and Hero_mainOrder[this_58] != Hero_lastOrdered[this_58] then
			set Hero_lastOrdered[this_58] = Hero_mainOrder[this_58]
			if dispatch_Order_issueToUnit(Hero_mainOrder[this_58], Unit_u[this_58], "\n   HeroClass, line 205" + wurstStackTrace) then
				call dispatch_Hero_setMainOrder(this_58, 0, "\n   HeroClass, line 206" + wurstStackTrace)
			endif
		endif
	else
		set sc = dispatch_Queue_dequeue(Hero_castQueue[this_58], "\n   HeroClass, line 208" + wurstStackTrace)
		call dispatch_Spellcast_forceC(sc, "\n   HeroClass, line 209" + wurstStackTrace)
		call dispatch_Spellcast_destroySpellcast(sc, "\n   HeroClass, line 210" + wurstStackTrace)
	endif
endfunction

function dispatch_Hero_nextOrder takes integer this_58, string wurstStackTrace returns nothing
	if Unit_typeId[this_58] == 0 then
		if this_58 == 0 then
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Hero.nextOrder" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Hero.nextOrder on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
<<<<<<< HEAD
	call Hero_nextOrder(this_57, "\n   HeroClass, line 211" + wurstStackTrace)
endfunction

function Hero_spellEnd takes integer this_57, string wurstStackTrace returns nothing
	set Hero_acceptOrders[this_57] = true
	call dispatch_Hero_nextOrder(this_57, "\n   HeroClass, line 209" + wurstStackTrace)
endfunction

function dispatch_Hero_spellEnd takes integer this_57, string wurstStackTrace returns nothing
	if Unit_typeId[this_57] == 0 then
		if this_57 == 0 then
=======
	call Hero_nextOrder(this_58, "\n   HeroClass, line 201" + wurstStackTrace)
endfunction

function Hero_spellEnd takes integer this_58, string wurstStackTrace returns nothing
	set Hero_acceptOrders[this_58] = true
	call dispatch_Hero_nextOrder(this_58, "\n   HeroClass, line 199" + wurstStackTrace)
endfunction

function dispatch_Hero_spellEnd takes integer this_58, string wurstStackTrace returns nothing
	if Unit_typeId[this_58] == 0 then
		if this_58 == 0 then
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Hero.spellEnd" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Hero.spellEnd on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
<<<<<<< HEAD
	call Hero_spellEnd(this_57, "\n   HeroClass, line 207" + wurstStackTrace)
endfunction

function TestSpell1_onDestroy takes integer this_57 returns nothing
=======
	call Hero_spellEnd(this_58, "\n   HeroClass, line 197" + wurstStackTrace)
endfunction

function TestSpell1_onDestroy takes integer this_58 returns nothing
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
endfunction

function dealloc_TestSpell1 takes integer obj, string wurstStackTrace returns nothing
	if TestSpell1_typeId[obj] == 0 then
		call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Double free: object of type TestSpell1" + wurstStackTrace)
		call I2S(1 / 0)
	else
		set TestSpell1_nextFree[TestSpell1_firstFree] = obj
		set TestSpell1_firstFree = TestSpell1_firstFree + 1
		set TestSpell1_typeId[obj] = 0
	endif
endfunction

<<<<<<< HEAD
function destroyTestSpell1 takes integer this_57, string wurstStackTrace returns nothing
	call TestSpell1_onDestroy(this_57)
	call dealloc_TestSpell1(this_57, "\n   SampleSpells, line 29" + wurstStackTrace)
endfunction

function dispatch_TestSpell1_destroyTestSpell1 takes integer this_57, string wurstStackTrace returns nothing
	if TestSpell1_typeId[this_57] == 0 then
		if this_57 == 0 then
=======
function destroyTestSpell1 takes integer this_58, string wurstStackTrace returns nothing
	call TestSpell1_onDestroy(this_58)
	call dealloc_TestSpell1(this_58, "\n   SampleSpells, line 29" + wurstStackTrace)
endfunction

function dispatch_TestSpell1_destroyTestSpell1 takes integer this_58, string wurstStackTrace returns nothing
	if TestSpell1_typeId[this_58] == 0 then
		if this_58 == 0 then
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling TestSpell1.destroyTestSpell1" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called TestSpell1.destroyTestSpell1 on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
<<<<<<< HEAD
	call destroyTestSpell1(this_57, "\n   SampleSpells, line 29" + wurstStackTrace)
endfunction

function TestSpell1_callback takes integer this_57, string wurstStackTrace returns nothing
	call ResetUnitAnimation(Unit_u[TestSpell1_caster[this_57]])
	call dispatch_Hero_spellEnd(TestSpell1_caster[this_57], "\n   SampleSpells, line 55" + wurstStackTrace)
	call dispatch_TestSpell1_destroyTestSpell1(this_57, "\n   SampleSpells, line 56" + wurstStackTrace)
endfunction

function dispatch_TestSpell1_callback takes integer this_57, string wurstStackTrace returns nothing
	if TestSpell1_typeId[this_57] == 0 then
		if this_57 == 0 then
=======
	call destroyTestSpell1(this_58, "\n   SampleSpells, line 29" + wurstStackTrace)
endfunction

function TestSpell1_callback takes integer this_58, string wurstStackTrace returns nothing
	call ResetUnitAnimation(Unit_u[TestSpell1_caster[this_58]])
	call dispatch_Hero_spellEnd(TestSpell1_caster[this_58], "\n   SampleSpells, line 55" + wurstStackTrace)
	call dispatch_TestSpell1_destroyTestSpell1(this_58, "\n   SampleSpells, line 56" + wurstStackTrace)
endfunction

function dispatch_TestSpell1_callback takes integer this_58, string wurstStackTrace returns nothing
	if TestSpell1_typeId[this_58] == 0 then
		if this_58 == 0 then
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling TestSpell1.callback" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called TestSpell1.callback on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
<<<<<<< HEAD
	call TestSpell1_callback(this_57, "\n   SampleSpells, line 53" + wurstStackTrace)
=======
	call TestSpell1_callback(this_58, "\n   SampleSpells, line 53" + wurstStackTrace)
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
endfunction

function TestSpell1_callCallback takes string wurstStackTrace returns nothing
	call dispatch_TestSpell1_callback(timer_getData(GetExpiredTimer(), "\n   SampleSpells, line 49" + wurstStackTrace), "\n   SampleSpells, line 49" + wurstStackTrace)
endfunction

function bridge_TestSpell1_callCallback takes nothing returns nothing
	call TestSpell1_callCallback("\n   SampleSpells, line 46")
endfunction

<<<<<<< HEAD
function TextTag_onDestroy takes integer this_57, string wurstStackTrace returns nothing
	local multiboarditem mbi
	local multiboarditem receiver
	call timer_release(TextTag_t[this_57], "\n   FloatingText, line 65" + wurstStackTrace)
	call DestroyTextTag(TextTag_tt[this_57])
	if TextTag_tType[this_57] == 0 then
	elseif TextTag_tType[this_57] == 1 then
	elseif TextTag_tType[this_57] == 2 then
=======
function TextTag_onDestroy takes integer this_58, string wurstStackTrace returns nothing
	local multiboarditem mbi
	local multiboarditem receiver
	call timer_release(TextTag_t[this_58], "\n   FloatingText, line 65" + wurstStackTrace)
	call DestroyTextTag(TextTag_tt[this_58])
	if TextTag_tType[this_58] == 0 then
	elseif TextTag_tType[this_58] == 1 then
	elseif TextTag_tType[this_58] == 2 then
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
	endif
	set InstanceBoard_count[ShowInstances_classId] = InstanceBoard_count[ShowInstances_classId] - 1
	set mbi = multiboard_getItem(InstanceBoard_mb, ShowInstances_classId, 1)
	set receiver = mbi
	call multiboarditem_setValue(receiver, int_toString(InstanceBoard_count[ShowInstances_classId]))
	call multiboarditem_release(receiver)
	set mbi = null
	set receiver = null
endfunction

function dealloc_TextTag takes integer obj, string wurstStackTrace returns nothing
	if TextTag_typeId[obj] == 0 then
		call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Double free: object of type TextTag" + wurstStackTrace)
		call I2S(1 / 0)
	else
		set TextTag_firstFree = TextTag_firstFree + 1
		set TextTag_typeId[obj] = 0
	endif
endfunction

<<<<<<< HEAD
function destroyTextTag takes integer this_57, string wurstStackTrace returns nothing
	call TextTag_onDestroy(this_57, "\n   FloatingText, line 64" + wurstStackTrace)
	call dealloc_TextTag(this_57, "\n   FloatingText, line 64" + wurstStackTrace)
endfunction

function dispatch_TextTag_destroyTextTag takes integer this_57, string wurstStackTrace returns nothing
	if TextTag_typeId[this_57] == 0 then
		if this_57 == 0 then
=======
function destroyTextTag takes integer this_58, string wurstStackTrace returns nothing
	call TextTag_onDestroy(this_58, "\n   FloatingText, line 64" + wurstStackTrace)
	call dealloc_TextTag(this_58, "\n   FloatingText, line 64" + wurstStackTrace)
endfunction

function dispatch_TextTag_destroyTextTag takes integer this_58, string wurstStackTrace returns nothing
	if TextTag_typeId[this_58] == 0 then
		if this_58 == 0 then
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling TextTag.destroyTextTag" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called TextTag.destroyTextTag on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
<<<<<<< HEAD
	call destroyTextTag(this_57, "\n   FloatingText, line 6" + wurstStackTrace)
=======
	call destroyTextTag(this_58, "\n   FloatingText, line 6" + wurstStackTrace)
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
endfunction

function TextTag_destroyTextTag takes string wurstStackTrace returns nothing
	call dispatch_TextTag_destroyTextTag(timer_getData(GetExpiredTimer(), "\n   FloatingText, line 62" + wurstStackTrace), "\n   FloatingText, line 62" + wurstStackTrace)
endfunction

function bridge_TextTag_destroyTextTag takes nothing returns nothing
<<<<<<< HEAD
	call TextTag_destroyTextTag("\n   FloatingText, line 56")
endfunction

function bridge_TextTag_destroyTextTag_2 takes nothing returns nothing
	call TextTag_destroyTextTag("\n   FloatingText, line 59")
endfunction

function bridge_TextTag_destroyTextTag_3 takes nothing returns nothing
	call TextTag_destroyTextTag("\n   FloatingText, line 53")
endfunction

function Unit_makeVunerable takes integer this_57 returns nothing
	set Unit_vunerableCount[this_57] = Unit_vunerableCount[this_57] - 1
	if Unit_vunerableCount[this_57] <= 0 then
		set Unit_vunerable[this_57] = true
		set Unit_vunerableCount[this_57] = 0
	endif
endfunction

function dispatch_Unit_makeVunerable takes integer this_57, string wurstStackTrace returns nothing
	if Unit_typeId[this_57] == 0 then
		if this_57 == 0 then
=======
	call TextTag_destroyTextTag("\n   FloatingText, line 59")
endfunction

function bridge_TextTag_destroyTextTag_2 takes nothing returns nothing
	call TextTag_destroyTextTag("\n   FloatingText, line 53")
endfunction

function bridge_TextTag_destroyTextTag_3 takes nothing returns nothing
	call TextTag_destroyTextTag("\n   FloatingText, line 56")
endfunction

function Unit_makeVunerable takes integer this_58 returns nothing
	set Unit_vunerableCount[this_58] = Unit_vunerableCount[this_58] - 1
	if Unit_vunerableCount[this_58] <= 0 then
		set Unit_vunerable[this_58] = true
		set Unit_vunerableCount[this_58] = 0
	endif
endfunction

function dispatch_Unit_makeVunerable takes integer this_58, string wurstStackTrace returns nothing
	if Unit_typeId[this_58] == 0 then
		if this_58 == 0 then
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Unit.makeVunerable" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Unit.makeVunerable on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
<<<<<<< HEAD
	if Unit_typeId[this_57] <= 710 then
		call Unit_makeVunerable(this_57)
	else
		call Unit_makeVunerable(this_57)
=======
	if Unit_typeId[this_58] <= 709 then
		call Unit_makeVunerable(this_58)
	else
		call Unit_makeVunerable(this_58)
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
	endif
endfunction

function Unit_callMakeVunerable takes string wurstStackTrace returns nothing
	local timer t = GetExpiredTimer()
<<<<<<< HEAD
	call dispatch_Unit_makeVunerable(timer_getData(t, "\n   UnitClass, line 425" + wurstStackTrace), "\n   UnitClass, line 425" + wurstStackTrace)
	call timer_release(t, "\n   UnitClass, line 426" + wurstStackTrace)
=======
	call dispatch_Unit_makeVunerable(timer_getData(t, "\n   UnitClass, line 431" + wurstStackTrace), "\n   UnitClass, line 431" + wurstStackTrace)
	call timer_release(t, "\n   UnitClass, line 432" + wurstStackTrace)
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
	set t = null
	set t = null
endfunction

function bridge_Unit_callMakeVunerable takes nothing returns nothing
<<<<<<< HEAD
	call Unit_callMakeVunerable("\n   UnitClass, line 421")
endfunction

function OnDamageData_onDestroy takes integer this_57 returns nothing
=======
	call Unit_callMakeVunerable("\n   UnitClass, line 427")
endfunction

function OnDamageData_onDestroy takes integer this_58 returns nothing
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
endfunction

function dealloc_OnDamageData takes integer obj, string wurstStackTrace returns nothing
	if OnDamageData_typeId[obj] == 0 then
		call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Double free: object of type OnDamageData" + wurstStackTrace)
		call I2S(1 / 0)
	else
		set OnDamageData_nextFree[OnDamageData_firstFree] = obj
		set OnDamageData_firstFree = OnDamageData_firstFree + 1
		set OnDamageData_typeId[obj] = 0
	endif
endfunction

<<<<<<< HEAD
function destroyOnDamageData takes integer this_57, string wurstStackTrace returns nothing
	call OnDamageData_onDestroy(this_57)
	call dealloc_OnDamageData(this_57, "\n   UnitEvents, line 31" + wurstStackTrace)
endfunction

function dispatch_OnDamageData_destroyOnDamageData takes integer this_57, string wurstStackTrace returns nothing
	if OnDamageData_typeId[this_57] == 0 then
		if this_57 == 0 then
=======
function destroyOnDamageData takes integer this_58, string wurstStackTrace returns nothing
	call OnDamageData_onDestroy(this_58)
	call dealloc_OnDamageData(this_58, "\n   UnitEvents, line 31" + wurstStackTrace)
endfunction

function dispatch_OnDamageData_destroyOnDamageData takes integer this_58, string wurstStackTrace returns nothing
	if OnDamageData_typeId[this_58] == 0 then
		if this_58 == 0 then
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling OnDamageData.destroyOnDamageData" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called OnDamageData.destroyOnDamageData on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
<<<<<<< HEAD
	call destroyOnDamageData(this_57, "\n   UnitEvents, line 31" + wurstStackTrace)
endfunction

function alloc_OnDamageData takes nothing returns integer
	local integer this_57
	if OnDamageData_firstFree == 0 then
		set OnDamageData_maxIndex = OnDamageData_maxIndex + 1
		set this_57 = OnDamageData_maxIndex
	else
		set OnDamageData_firstFree = OnDamageData_firstFree - 1
		set this_57 = OnDamageData_nextFree[OnDamageData_firstFree]
	endif
	set OnDamageData_typeId[this_57] = 788
	return this_57
endfunction

function construct_OnDamageData takes integer this_57 returns nothing
	set OnDamageData_stop[this_57] = false
endfunction

function new_OnDamageData takes nothing returns integer
	local integer this_57 = alloc_OnDamageData()
	call construct_OnDamageData(this_57)
	return this_57
endfunction

function OnDamageEvent_fire takes integer this_57, integer source, real dmg, string wurstStackTrace returns real
	local integer data = new_OnDamageData()
	local real finalDmg
	set OnDamageData_damage[data] = dmg
	call Event_callActions(this_57, data, "\n   UnitEvents, line 51" + wurstStackTrace)
=======
	call destroyOnDamageData(this_58, "\n   UnitEvents, line 31" + wurstStackTrace)
endfunction

function alloc_OnDamageData takes nothing returns integer
	local integer this_58
	if OnDamageData_firstFree == 0 then
		set OnDamageData_maxIndex = OnDamageData_maxIndex + 1
		set this_58 = OnDamageData_maxIndex
	else
		set OnDamageData_firstFree = OnDamageData_firstFree - 1
		set this_58 = OnDamageData_nextFree[OnDamageData_firstFree]
	endif
	set OnDamageData_typeId[this_58] = 787
	return this_58
endfunction

function construct_OnDamageData takes integer this_58 returns nothing
	set OnDamageData_stop[this_58] = false
endfunction

function new_OnDamageData takes nothing returns integer
	local integer this_58 = alloc_OnDamageData()
	call construct_OnDamageData(this_58)
	return this_58
endfunction

function OnDamageEvent_fire takes integer this_58, integer source, real dmg, string wurstStackTrace returns real
	local integer data = new_OnDamageData()
	local real finalDmg
	set OnDamageData_damage[data] = dmg
	call Event_callActions(this_58, data, "\n   UnitEvents, line 51" + wurstStackTrace)
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
	set finalDmg = OnDamageData_damage[data]
	call dispatch_OnDamageData_destroyOnDamageData(data, "\n   UnitEvents, line 53" + wurstStackTrace)
	return finalDmg
endfunction

<<<<<<< HEAD
function dispatch_OnDamageEvent_fire takes integer this_57, integer source, real dmg, string wurstStackTrace returns real
	local real fire_result
	if Event_typeId[this_57] == 0 then
		if this_57 == 0 then
=======
function dispatch_OnDamageEvent_fire takes integer this_58, integer source, real dmg, string wurstStackTrace returns real
	local real fire_result
	if Event_typeId[this_58] == 0 then
		if this_58 == 0 then
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling OnDamageEvent.fire" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called OnDamageEvent.fire on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
<<<<<<< HEAD
	set fire_result = OnDamageEvent_fire(this_57, source, dmg, "\n   UnitEvents, line 46" + wurstStackTrace)
	return fire_result
endfunction

function PreDamageData_onDestroy takes integer this_57 returns nothing
=======
	set fire_result = OnDamageEvent_fire(this_58, source, dmg, "\n   UnitEvents, line 46" + wurstStackTrace)
	return fire_result
endfunction

function PreDamageData_onDestroy takes integer this_58 returns nothing
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
endfunction

function dealloc_PreDamageData takes integer obj, string wurstStackTrace returns nothing
	if PreDamageData_typeId[obj] == 0 then
		call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Double free: object of type PreDamageData" + wurstStackTrace)
		call I2S(1 / 0)
	else
		set PreDamageData_nextFree[PreDamageData_firstFree] = obj
		set PreDamageData_firstFree = PreDamageData_firstFree + 1
		set PreDamageData_typeId[obj] = 0
	endif
endfunction

<<<<<<< HEAD
function destroyPreDamageData takes integer this_57, string wurstStackTrace returns nothing
	call PreDamageData_onDestroy(this_57)
	call dealloc_PreDamageData(this_57, "\n   UnitEvents, line 9" + wurstStackTrace)
endfunction

function dispatch_PreDamageData_destroyPreDamageData takes integer this_57, string wurstStackTrace returns nothing
	if PreDamageData_typeId[this_57] == 0 then
		if this_57 == 0 then
=======
function destroyPreDamageData takes integer this_58, string wurstStackTrace returns nothing
	call PreDamageData_onDestroy(this_58)
	call dealloc_PreDamageData(this_58, "\n   UnitEvents, line 9" + wurstStackTrace)
endfunction

function dispatch_PreDamageData_destroyPreDamageData takes integer this_58, string wurstStackTrace returns nothing
	if PreDamageData_typeId[this_58] == 0 then
		if this_58 == 0 then
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling PreDamageData.destroyPreDamageData" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called PreDamageData.destroyPreDamageData on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
<<<<<<< HEAD
	call destroyPreDamageData(this_57, "\n   UnitEvents, line 9" + wurstStackTrace)
endfunction

function alloc_PreDamageData takes nothing returns integer
	local integer this_57
	if PreDamageData_firstFree == 0 then
		set PreDamageData_maxIndex = PreDamageData_maxIndex + 1
		set this_57 = PreDamageData_maxIndex
	else
		set PreDamageData_firstFree = PreDamageData_firstFree - 1
		set this_57 = PreDamageData_nextFree[PreDamageData_firstFree]
	endif
	set PreDamageData_typeId[this_57] = 786
	return this_57
endfunction

function construct_PreDamageData takes integer this_57 returns nothing
endfunction

function new_PreDamageData takes nothing returns integer
	local integer this_57 = alloc_PreDamageData()
	call construct_PreDamageData(this_57)
	return this_57
endfunction

function PreDamageEvent_fire takes integer this_57, integer source, string wurstStackTrace returns nothing
	local integer data = new_PreDamageData()
	call Event_callActions(this_57, data, "\n   UnitEvents, line 26" + wurstStackTrace)
	call dispatch_PreDamageData_destroyPreDamageData(data, "\n   UnitEvents, line 27" + wurstStackTrace)
endfunction

function dispatch_PreDamageEvent_fire takes integer this_57, integer source, string wurstStackTrace returns nothing
	if Event_typeId[this_57] == 0 then
		if this_57 == 0 then
=======
	call destroyPreDamageData(this_58, "\n   UnitEvents, line 9" + wurstStackTrace)
endfunction

function alloc_PreDamageData takes nothing returns integer
	local integer this_58
	if PreDamageData_firstFree == 0 then
		set PreDamageData_maxIndex = PreDamageData_maxIndex + 1
		set this_58 = PreDamageData_maxIndex
	else
		set PreDamageData_firstFree = PreDamageData_firstFree - 1
		set this_58 = PreDamageData_nextFree[PreDamageData_firstFree]
	endif
	set PreDamageData_typeId[this_58] = 785
	return this_58
endfunction

function construct_PreDamageData takes integer this_58 returns nothing
endfunction

function new_PreDamageData takes nothing returns integer
	local integer this_58 = alloc_PreDamageData()
	call construct_PreDamageData(this_58)
	return this_58
endfunction

function PreDamageEvent_fire takes integer this_58, integer source, string wurstStackTrace returns nothing
	local integer data = new_PreDamageData()
	call Event_callActions(this_58, data, "\n   UnitEvents, line 26" + wurstStackTrace)
	call dispatch_PreDamageData_destroyPreDamageData(data, "\n   UnitEvents, line 27" + wurstStackTrace)
endfunction

function dispatch_PreDamageEvent_fire takes integer this_58, integer source, string wurstStackTrace returns nothing
	if Event_typeId[this_58] == 0 then
		if this_58 == 0 then
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling PreDamageEvent.fire" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called PreDamageEvent.fire on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
<<<<<<< HEAD
	call PreDamageEvent_fire(this_57, source, "\n   UnitEvents, line 22" + wurstStackTrace)
endfunction

function Unit_critTT takes integer this_57, real dmg returns nothing
endfunction

function dispatch_Unit_critTT takes integer this_57, real dmg, string wurstStackTrace returns nothing
	if Unit_typeId[this_57] == 0 then
		if this_57 == 0 then
=======
	call PreDamageEvent_fire(this_58, source, "\n   UnitEvents, line 22" + wurstStackTrace)
endfunction

function Unit_critTT takes integer this_58, real dmg returns nothing
endfunction

function dispatch_Unit_critTT takes integer this_58, real dmg, string wurstStackTrace returns nothing
	if Unit_typeId[this_58] == 0 then
		if this_58 == 0 then
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Unit.critTT" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Unit.critTT on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
<<<<<<< HEAD
	if Unit_typeId[this_57] <= 710 then
		call Unit_critTT(this_57, dmg)
	else
		call Unit_critTT(this_57, dmg)
	endif
endfunction

function Unit_absoluteTT takes integer this_57, real dmg returns nothing
endfunction

function dispatch_Unit_absoluteTT takes integer this_57, real dmg, string wurstStackTrace returns nothing
	if Unit_typeId[this_57] == 0 then
		if this_57 == 0 then
=======
	if Unit_typeId[this_58] <= 709 then
		call Unit_critTT(this_58, dmg)
	else
		call Unit_critTT(this_58, dmg)
	endif
endfunction

function Unit_absoluteTT takes integer this_58, real dmg returns nothing
endfunction

function dispatch_Unit_absoluteTT takes integer this_58, real dmg, string wurstStackTrace returns nothing
	if Unit_typeId[this_58] == 0 then
		if this_58 == 0 then
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Unit.absoluteTT" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Unit.absoluteTT on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
<<<<<<< HEAD
	if Unit_typeId[this_57] <= 710 then
		call Unit_absoluteTT(this_57, dmg)
	else
		call Unit_absoluteTT(this_57, dmg)
	endif
endfunction

function Unit_damageAbs takes integer this_57, integer source, real amount_51, string wurstStackTrace returns nothing
	if dispatch_Unit_dealDamage(this_57, amount_51, source, true, "\n   UnitClass, line 1112" + wurstStackTrace) then
		call dispatch_Unit_absoluteTT(this_57, amount_51, "\n   UnitClass, line 1113" + wurstStackTrace)
	endif
endfunction

function dispatch_Unit_damageAbs takes integer this_57, integer source, real amount_51, string wurstStackTrace returns nothing
	if Unit_typeId[this_57] == 0 then
		if this_57 == 0 then
=======
	if Unit_typeId[this_58] <= 709 then
		call Unit_absoluteTT(this_58, dmg)
	else
		call Unit_absoluteTT(this_58, dmg)
	endif
endfunction

function Unit_damageAbs takes integer this_58, integer source, real amount_51, string wurstStackTrace returns nothing
	if dispatch_Unit_dealDamage(this_58, amount_51, source, true, "\n   UnitClass, line 1118" + wurstStackTrace) then
		call dispatch_Unit_absoluteTT(this_58, amount_51, "\n   UnitClass, line 1119" + wurstStackTrace)
	endif
endfunction

function dispatch_Unit_damageAbs takes integer this_58, integer source, real amount_51, string wurstStackTrace returns nothing
	if Unit_typeId[this_58] == 0 then
		if this_58 == 0 then
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Unit.damageAbs" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Unit.damageAbs on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
<<<<<<< HEAD
	if Unit_typeId[this_57] <= 710 then
		call Unit_damageAbs(this_57, source, amount_51, "\n   UnitClass, line 1111" + wurstStackTrace)
	else
		call Unit_damageAbs(this_57, source, amount_51, "\n   UnitClass, line 1111" + wurstStackTrace)
	endif
endfunction

function Unit_dodgeTT takes integer this_57 returns nothing
endfunction

function dispatch_Unit_dodgeTT takes integer this_57, string wurstStackTrace returns nothing
	if Unit_typeId[this_57] == 0 then
		if this_57 == 0 then
=======
	if Unit_typeId[this_58] <= 709 then
		call Unit_damageAbs(this_58, source, amount_51, "\n   UnitClass, line 1117" + wurstStackTrace)
	else
		call Unit_damageAbs(this_58, source, amount_51, "\n   UnitClass, line 1117" + wurstStackTrace)
	endif
endfunction

function Unit_dodgeTT takes integer this_58 returns nothing
endfunction

function dispatch_Unit_dodgeTT takes integer this_58, string wurstStackTrace returns nothing
	if Unit_typeId[this_58] == 0 then
		if this_58 == 0 then
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Unit.dodgeTT" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Unit.dodgeTT on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
<<<<<<< HEAD
	if Unit_typeId[this_57] <= 710 then
		call Unit_dodgeTT(this_57)
	else
		call Unit_dodgeTT(this_57)
	endif
endfunction

function Unit_getArmor takes integer this_57, boolean withBonus returns real
	if withBonus then
		return (Unit_armor[this_57] + Unit_bonusArmor[this_57]) * (1. + Unit_bonusArmorPer[this_57] / 100.)
	else
		return Unit_armor[this_57]
	endif
endfunction

function dispatch_Unit_getArmor takes integer this_57, boolean withBonus, string wurstStackTrace returns real
	local real getArmor_result
	if Unit_typeId[this_57] == 0 then
		if this_57 == 0 then
=======
	if Unit_typeId[this_58] <= 709 then
		call Unit_dodgeTT(this_58)
	else
		call Unit_dodgeTT(this_58)
	endif
endfunction

function Unit_getArmor takes integer this_58, boolean withBonus returns real
	if withBonus then
		return (Unit_armor[this_58] + Unit_bonusArmor[this_58]) * (1. + Unit_bonusArmorPer[this_58] / 100.)
	else
		return Unit_armor[this_58]
	endif
endfunction

function dispatch_Unit_getArmor takes integer this_58, boolean withBonus, string wurstStackTrace returns real
	local real getArmor_result
	if Unit_typeId[this_58] == 0 then
		if this_58 == 0 then
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Unit.getArmor" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Unit.getArmor on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
<<<<<<< HEAD
	if Unit_typeId[this_57] <= 710 then
		set getArmor_result = Unit_getArmor(this_57, withBonus)
	else
		set getArmor_result = Unit_getArmor(this_57, withBonus)
=======
	if Unit_typeId[this_58] <= 709 then
		set getArmor_result = Unit_getArmor(this_58, withBonus)
	else
		set getArmor_result = Unit_getArmor(this_58, withBonus)
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
	endif
	return getArmor_result
endfunction

<<<<<<< HEAD
function Unit_getAttack takes integer this_57, boolean withBonus returns real
	if withBonus then
		return (Unit_attack[this_57] + Unit_bonusAttack[this_57]) * (1. + Unit_bonusAttackPer[this_57] / 100.)
	else
		return Unit_attack[this_57]
	endif
endfunction

function dispatch_Unit_getAttack takes integer this_57, boolean withBonus, string wurstStackTrace returns real
	local real getAttack_result
	if Unit_typeId[this_57] == 0 then
		if this_57 == 0 then
=======
function Unit_getAttack takes integer this_58, boolean withBonus returns real
	if withBonus then
		return (Unit_attack[this_58] + Unit_bonusAttack[this_58]) * (1. + Unit_bonusAttackPer[this_58] / 100.)
	else
		return Unit_attack[this_58]
	endif
endfunction

function dispatch_Unit_getAttack takes integer this_58, boolean withBonus, string wurstStackTrace returns real
	local real getAttack_result
	if Unit_typeId[this_58] == 0 then
		if this_58 == 0 then
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Unit.getAttack" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Unit.getAttack on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
<<<<<<< HEAD
	if Unit_typeId[this_57] <= 710 then
		set getAttack_result = Unit_getAttack(this_57, withBonus)
	else
		set getAttack_result = Unit_getAttack(this_57, withBonus)
=======
	if Unit_typeId[this_58] <= 709 then
		set getAttack_result = Unit_getAttack(this_58, withBonus)
	else
		set getAttack_result = Unit_getAttack(this_58, withBonus)
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
	endif
	return getAttack_result
endfunction

<<<<<<< HEAD
function Unit_getMaxHP takes integer this_57, boolean withBonus returns real
	if withBonus then
		return (Unit_life[this_57] + Unit_bonusLife[this_57]) * (1. + Unit_bonusLifePer[this_57] / 100.)
	else
		return Unit_life[this_57]
	endif
endfunction

function dispatch_Unit_getMaxHP takes integer this_57, boolean withBonus, string wurstStackTrace returns real
	local real getMaxHP_result
	if Unit_typeId[this_57] == 0 then
		if this_57 == 0 then
=======
function Unit_getMaxHP takes integer this_58, boolean withBonus returns real
	if withBonus then
		return (Unit_life[this_58] + Unit_bonusLife[this_58]) * (1. + Unit_bonusLifePer[this_58] / 100.)
	else
		return Unit_life[this_58]
	endif
endfunction

function dispatch_Unit_getMaxHP takes integer this_58, boolean withBonus, string wurstStackTrace returns real
	local real getMaxHP_result
	if Unit_typeId[this_58] == 0 then
		if this_58 == 0 then
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Unit.getMaxHP" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Unit.getMaxHP on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
<<<<<<< HEAD
	if Unit_typeId[this_57] <= 710 then
		set getMaxHP_result = Unit_getMaxHP(this_57, withBonus)
	else
		set getMaxHP_result = Unit_getMaxHP(this_57, withBonus)
=======
	if Unit_typeId[this_58] <= 709 then
		set getMaxHP_result = Unit_getMaxHP(this_58, withBonus)
	else
		set getMaxHP_result = Unit_getMaxHP(this_58, withBonus)
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
	endif
	return getMaxHP_result
endfunction

<<<<<<< HEAD
function Unit_causeHeal takes integer this_57, real amount_51, string wurstStackTrace returns real
	local real tHP = unit_getHP(Unit_u[this_57])
	local real currentAmount = amount_51
	if dispatch_Unit_getMaxHP(this_57, true, "\n   UnitClass, line 1248" + wurstStackTrace) - tHP < amount_51 then
		set currentAmount = dispatch_Unit_getMaxHP(this_57, true, "\n   UnitClass, line 1249" + wurstStackTrace) - tHP
	endif
	call unit_setHP(Unit_u[this_57], tHP + amount_51)
	return currentAmount
endfunction

function Hero_causeHeal takes integer this_57, real amount_51, string wurstStackTrace returns real
	call dispatch_Bar_update(Hero_hb[this_57], "\n   HeroClass, line 180" + wurstStackTrace)
	return Unit_causeHeal(this_57, amount_51, "\n   HeroClass, line 181" + wurstStackTrace)
endfunction

function dispatch_Unit_causeHeal takes integer this_57, real amount_51, string wurstStackTrace returns real
	local real causeHeal_result
	if Unit_typeId[this_57] == 0 then
		if this_57 == 0 then
=======
function Unit_causeHeal_2 takes integer this_58, real amount_51, string wurstStackTrace returns real
	local real tHP = unit_getHP(Unit_u[this_58])
	local real currentAmount = amount_51
	if dispatch_Unit_getMaxHP(this_58, true, "\n   UnitClass, line 1254" + wurstStackTrace) - tHP < amount_51 then
		set currentAmount = dispatch_Unit_getMaxHP(this_58, true, "\n   UnitClass, line 1255" + wurstStackTrace) - tHP
	endif
	call unit_setHP(Unit_u[this_58], tHP + amount_51)
	return currentAmount
endfunction

function Hero_causeHeal takes integer this_58, real amount_51, string wurstStackTrace returns real
	call dispatch_Bar_update(Hero_hb[this_58], "\n   HeroClass, line 170" + wurstStackTrace)
	return Unit_causeHeal_2(this_58, amount_51, "\n   HeroClass, line 171" + wurstStackTrace)
endfunction

function dispatch_Unit_causeHeal takes integer this_58, real amount_51, string wurstStackTrace returns real
	local real causeHeal_result
	if Unit_typeId[this_58] == 0 then
		if this_58 == 0 then
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Unit.causeHeal" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Unit.causeHeal on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
<<<<<<< HEAD
	if Unit_typeId[this_57] <= 710 then
		set causeHeal_result = Unit_causeHeal(this_57, amount_51, "\n   UnitClass, line 1245" + wurstStackTrace)
	else
		set causeHeal_result = Hero_causeHeal(this_57, amount_51, "\n   UnitClass, line 1245" + wurstStackTrace)
=======
	if Unit_typeId[this_58] <= 709 then
		set causeHeal_result = Unit_causeHeal_2(this_58, amount_51, "\n   UnitClass, line 1251" + wurstStackTrace)
	else
		set causeHeal_result = Hero_causeHeal(this_58, amount_51, "\n   UnitClass, line 1251" + wurstStackTrace)
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
	endif
	return causeHeal_result
endfunction

<<<<<<< HEAD
function Unit_healSystem takes integer this_57, real takenAmount, string wurstStackTrace returns nothing
	call dispatch_Unit_causeHeal(this_57, takenAmount, "\n   UnitClass, line 1280" + wurstStackTrace)
endfunction

function dispatch_Unit_healSystem takes integer this_57, real takenAmount, string wurstStackTrace returns nothing
	if Unit_typeId[this_57] == 0 then
		if this_57 == 0 then
=======
function Unit_healSystem takes integer this_58, real takenAmount, string wurstStackTrace returns nothing
	call dispatch_Unit_causeHeal(this_58, takenAmount, "\n   UnitClass, line 1286" + wurstStackTrace)
endfunction

function dispatch_Unit_healSystem takes integer this_58, real takenAmount, string wurstStackTrace returns nothing
	if Unit_typeId[this_58] == 0 then
		if this_58 == 0 then
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Unit.healSystem" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Unit.healSystem on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
<<<<<<< HEAD
	if Unit_typeId[this_57] <= 710 then
		call Unit_healSystem(this_57, takenAmount, "\n   UnitClass, line 1279" + wurstStackTrace)
	else
		call Unit_healSystem(this_57, takenAmount, "\n   UnitClass, line 1279" + wurstStackTrace)
	endif
endfunction

function Unit_missTT takes integer this_57 returns nothing
endfunction

function dispatch_Unit_missTT takes integer this_57, string wurstStackTrace returns nothing
	if Unit_typeId[this_57] == 0 then
		if this_57 == 0 then
=======
	if Unit_typeId[this_58] <= 709 then
		call Unit_healSystem(this_58, takenAmount, "\n   UnitClass, line 1285" + wurstStackTrace)
	else
		call Unit_healSystem(this_58, takenAmount, "\n   UnitClass, line 1285" + wurstStackTrace)
	endif
endfunction

function Unit_missTT takes integer this_58 returns nothing
endfunction

function dispatch_Unit_missTT takes integer this_58, string wurstStackTrace returns nothing
	if Unit_typeId[this_58] == 0 then
		if this_58 == 0 then
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Unit.missTT" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Unit.missTT on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
<<<<<<< HEAD
	if Unit_typeId[this_57] <= 710 then
		call Unit_missTT(this_57)
	else
		call Unit_missTT(this_57)
	endif
endfunction

function Unit_normalTT takes integer this_57, real dmg returns nothing
endfunction

function dispatch_Unit_normalTT takes integer this_57, real dmg, string wurstStackTrace returns nothing
	if Unit_typeId[this_57] == 0 then
		if this_57 == 0 then
=======
	if Unit_typeId[this_58] <= 709 then
		call Unit_missTT(this_58)
	else
		call Unit_missTT(this_58)
	endif
endfunction

function Unit_normalTT takes integer this_58, real dmg returns nothing
endfunction

function dispatch_Unit_normalTT takes integer this_58, real dmg, string wurstStackTrace returns nothing
	if Unit_typeId[this_58] == 0 then
		if this_58 == 0 then
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Unit.normalTT" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Unit.normalTT on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
<<<<<<< HEAD
	if Unit_typeId[this_57] <= 710 then
		call Unit_normalTT(this_57, dmg)
	else
		call Unit_normalTT(this_57, dmg)
	endif
endfunction

function Unit_damageAtk takes integer this_57, integer source, string wurstStackTrace returns nothing
=======
	if Unit_typeId[this_58] <= 709 then
		call Unit_normalTT(this_58, dmg)
	else
		call Unit_normalTT(this_58, dmg)
	endif
endfunction

function Unit_damageAtk takes integer this_58, integer source, string wurstStackTrace returns nothing
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
	local real rand = GetRandomReal(0., 100.)
	local real ev
	local real amount_51
	local boolean crit
	local real tempArmor
<<<<<<< HEAD
	if Unit_takeHitPre[this_57] != 0 then
		call dispatch_PreDamageEvent_fire(Unit_takeHitPre[this_57], source, "\n   UnitClass, line 1125" + wurstStackTrace)
	endif
	if Unit_causeHitPre[source] != 0 then
		call dispatch_PreDamageEvent_fire(Unit_causeHitPre[source], this_57, "\n   UnitClass, line 1127" + wurstStackTrace)
	endif
	if rand <= Unit_hitchance[source] then
		set rand = GetRandomReal(0., 100.)
		set ev = Unit_evade[this_57]
=======
	if Unit_takeHitPre[this_58] != 0 then
		call dispatch_PreDamageEvent_fire(Unit_takeHitPre[this_58], source, "\n   UnitClass, line 1131" + wurstStackTrace)
	endif
	if Unit_causeHitPre[source] != 0 then
		call dispatch_PreDamageEvent_fire(Unit_causeHitPre[source], this_58, "\n   UnitClass, line 1133" + wurstStackTrace)
	endif
	if rand <= Unit_hitchance[source] then
		set rand = GetRandomReal(0., 100.)
		set ev = Unit_evade[this_58]
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
		if Unit_hitchance[source] > 100. then
			set ev = ev - (Unit_hitchance[source] - 100.)
		endif
		if rand > ev then
			set rand = GetRandomReal(0., 100.)
<<<<<<< HEAD
			set amount_51 = dispatch_Unit_getAttack(source, true, "\n   UnitClass, line 1137" + wurstStackTrace) + GetRandomReal( - (dispatch_Unit_getAttack(source, true, "\n   UnitClass, line 1137" + wurstStackTrace) / 10.), dispatch_Unit_getAttack(source, true, "\n   UnitClass, line 1137" + wurstStackTrace) / 10.)
=======
			set amount_51 = dispatch_Unit_getAttack(source, true, "\n   UnitClass, line 1143" + wurstStackTrace) + GetRandomReal( - (dispatch_Unit_getAttack(source, true, "\n   UnitClass, line 1143" + wurstStackTrace) / 10.), dispatch_Unit_getAttack(source, true, "\n   UnitClass, line 1143" + wurstStackTrace) / 10.)
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
			set crit = false
			set rand = GetRandomReal(0., 100.)
			if rand <= Unit_critchance[source] then
				set amount_51 = amount_51 * (2. + Unit_critdamage[source] / 100.)
				set crit = true
			endif
			set amount_51 = amount_51 * (1. + Unit_bonusDamage[source])
<<<<<<< HEAD
			set tempArmor = dispatch_Unit_getArmor(this_57, true, "\n   UnitClass, line 1147" + wurstStackTrace)
=======
			set tempArmor = dispatch_Unit_getArmor(this_58, true, "\n   UnitClass, line 1153" + wurstStackTrace)
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
			if tempArmor < 0. then
				set amount_51 = amount_51 * (1. + (2. - Pow(0.94,  - tempArmor)))
			else
				set amount_51 = amount_51 * (1. - tempArmor * 0.04 / (1. + 0.04 * tempArmor))
			endif
<<<<<<< HEAD
			set amount_51 = amount_51 * (1. - Unit_normalReduction[this_57] / 100.)
			if Unit_takeHitOn[this_57] != 0 then
				set amount_51 = dispatch_OnDamageEvent_fire(Unit_takeHitOn[this_57], source, amount_51, "\n   UnitClass, line 1155" + wurstStackTrace)
			endif
			if Unit_causeHitOn[source] != 0 then
				set amount_51 = dispatch_OnDamageEvent_fire(Unit_causeHitOn[source], this_57, amount_51, "\n   UnitClass, line 1157" + wurstStackTrace)
			endif
			if crit then
				if Unit_takeCritHitOn[this_57] != 0 then
					set amount_51 = dispatch_OnDamageEvent_fire(Unit_takeCritHitOn[this_57], source, amount_51, "\n   UnitClass, line 1160" + wurstStackTrace)
				endif
				if Unit_causeCritHitOn[source] != 0 then
					set amount_51 = dispatch_OnDamageEvent_fire(Unit_causeCritHitOn[source], this_57, amount_51, "\n   UnitClass, line 1162" + wurstStackTrace)
				endif
			endif
			if dispatch_Unit_dealDamage(this_57, amount_51, source, true, "\n   UnitClass, line 1164" + wurstStackTrace) then
				if Unit_isHero[this_57] or Unit_isHero[source] then
					if crit then
						call dispatch_Unit_critTT(this_57, amount_51, "\n   UnitClass, line 1168" + wurstStackTrace)
					else
						call dispatch_Unit_normalTT(this_57, amount_51, "\n   UnitClass, line 1170" + wurstStackTrace)
					endif
				endif
			endif
			if amount_51 > 0. and Unit_lifesteal[this_57] > 0. then
				call dispatch_Unit_healSystem(source, Unit_lifesteal[this_57] / 100. * amount_51, "\n   UnitClass, line 1173" + wurstStackTrace)
			endif
			if amount_51 > 0. and Unit_normalDeflection[this_57] > 0. then
				call dispatch_Unit_damageAbs(source, this_57, amount_51 * (Unit_normalDeflection[this_57] / 100.), "\n   UnitClass, line 1176" + wurstStackTrace)
			endif
		else
			if Unit_isHero[this_57] or Unit_isHero[source] then
				call dispatch_Unit_dodgeTT(this_57, "\n   UnitClass, line 1180" + wurstStackTrace)
			endif
			if Unit_onDodge[this_57] != 0 then
				call dispatch_Unit2Event_fire(Unit_onDodge[this_57], source, this_57, "\n   UnitClass, line 1183" + wurstStackTrace)
			endif
		endif
	else
		if Unit_isHero[this_57] or Unit_isHero[source] then
			call dispatch_Unit_missTT(source, "\n   UnitClass, line 1187" + wurstStackTrace)
		endif
		if Unit_onMiss[source] != 0 then
			call dispatch_Unit2Event_fire(Unit_onMiss[source], source, this_57, "\n   UnitClass, line 1190" + wurstStackTrace)
=======
			set amount_51 = amount_51 * (1. - Unit_normalReduction[this_58] / 100.)
			if Unit_takeHitOn[this_58] != 0 then
				set amount_51 = dispatch_OnDamageEvent_fire(Unit_takeHitOn[this_58], source, amount_51, "\n   UnitClass, line 1161" + wurstStackTrace)
			endif
			if Unit_causeHitOn[source] != 0 then
				set amount_51 = dispatch_OnDamageEvent_fire(Unit_causeHitOn[source], this_58, amount_51, "\n   UnitClass, line 1163" + wurstStackTrace)
			endif
			if crit then
				if Unit_takeCritHitOn[this_58] != 0 then
					set amount_51 = dispatch_OnDamageEvent_fire(Unit_takeCritHitOn[this_58], source, amount_51, "\n   UnitClass, line 1166" + wurstStackTrace)
				endif
				if Unit_causeCritHitOn[source] != 0 then
					set amount_51 = dispatch_OnDamageEvent_fire(Unit_causeCritHitOn[source], this_58, amount_51, "\n   UnitClass, line 1168" + wurstStackTrace)
				endif
			endif
			if dispatch_Unit_dealDamage(this_58, amount_51, source, true, "\n   UnitClass, line 1170" + wurstStackTrace) then
				if Unit_isHero[this_58] or Unit_isHero[source] then
					if crit then
						call dispatch_Unit_critTT(this_58, amount_51, "\n   UnitClass, line 1174" + wurstStackTrace)
					else
						call dispatch_Unit_normalTT(this_58, amount_51, "\n   UnitClass, line 1176" + wurstStackTrace)
					endif
				endif
			endif
			if amount_51 > 0. and Unit_lifesteal[this_58] > 0. then
				call dispatch_Unit_healSystem(source, Unit_lifesteal[this_58] / 100. * amount_51, "\n   UnitClass, line 1179" + wurstStackTrace)
			endif
			if amount_51 > 0. and Unit_normalDeflection[this_58] > 0. then
				call dispatch_Unit_damageAbs(source, this_58, amount_51 * (Unit_normalDeflection[this_58] / 100.), "\n   UnitClass, line 1182" + wurstStackTrace)
			endif
		else
			if Unit_isHero[this_58] or Unit_isHero[source] then
				call dispatch_Unit_dodgeTT(this_58, "\n   UnitClass, line 1186" + wurstStackTrace)
			endif
			if Unit_onDodge[this_58] != 0 then
				call dispatch_Unit2Event_fire(Unit_onDodge[this_58], source, this_58, "\n   UnitClass, line 1189" + wurstStackTrace)
			endif
		endif
	else
		if Unit_isHero[this_58] or Unit_isHero[source] then
			call dispatch_Unit_missTT(source, "\n   UnitClass, line 1193" + wurstStackTrace)
		endif
		if Unit_onMiss[source] != 0 then
			call dispatch_Unit2Event_fire(Unit_onMiss[source], source, this_58, "\n   UnitClass, line 1196" + wurstStackTrace)
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
		endif
	endif
endfunction

<<<<<<< HEAD
function dispatch_Unit_damageAtk takes integer this_57, integer source, string wurstStackTrace returns nothing
	if Unit_typeId[this_57] == 0 then
		if this_57 == 0 then
=======
function dispatch_Unit_damageAtk takes integer this_58, integer source, string wurstStackTrace returns nothing
	if Unit_typeId[this_58] == 0 then
		if this_58 == 0 then
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Unit.damageAtk" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Unit.damageAtk on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
<<<<<<< HEAD
	if Unit_typeId[this_57] <= 710 then
		call Unit_damageAtk(this_57, source, "\n   UnitClass, line 1122" + wurstStackTrace)
	else
		call Unit_damageAtk(this_57, source, "\n   UnitClass, line 1122" + wurstStackTrace)
=======
	if Unit_typeId[this_58] <= 709 then
		call Unit_damageAtk(this_58, source, "\n   UnitClass, line 1128" + wurstStackTrace)
	else
		call Unit_damageAtk(this_58, source, "\n   UnitClass, line 1128" + wurstStackTrace)
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
	endif
endfunction

function Unit_tookDamage takes string wurstStackTrace returns nothing
	if GetEventDamage() == 1. then
<<<<<<< HEAD
		call dispatch_Unit_damageAtk(unit_getUserData(GetTriggerUnit()), unit_getUserData(GetEventDamageSource()), "\n   UnitClass, line 1082" + wurstStackTrace)
=======
		call dispatch_Unit_damageAtk(unit_getUserData(GetTriggerUnit()), unit_getUserData(GetEventDamageSource()), "\n   UnitClass, line 1088" + wurstStackTrace)
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
	endif
endfunction

function bridge_Unit_tookDamage takes nothing returns nothing
<<<<<<< HEAD
	call Unit_tookDamage("\n   UnitClass, line 138")
=======
	call Unit_tookDamage("\n   UnitClass, line 139")
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
endfunction

function vec2_dot takes real this_x, real this_y, real v_x, real v_y returns real
	return this_x * v_x + this_y * v_y
endfunction

function vec2_length takes real this_x, real this_y returns real
	return SquareRoot(this_x * this_x + this_y * this_y)
endfunction

<<<<<<< HEAD
function Unit_collision takes integer this_57, integer otherUnit returns nothing
=======
function Unit_collision takes integer this_58, integer otherUnit returns nothing
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
	local real pos1_x
	local real pos1_y
	local real pos2_x
	local real pos2_y
	local real delta_x
	local real delta_y
	local real deltaLen
	local real deltaNorm_x
	local real deltaNorm_y
	local real speed1central
	local real speed2central
	local real futurePos1_x
	local real futurePos1_y
	local real futurePos2_x
	local real futurePos2_y
	local real futureDelta_x
	local real futureDelta_y
	local real vel1central_x
	local real vel1central_y
	local real vel2central_x
	local real vel2central_y
	local real temp_pos1_x
	local real temp_pos1_y
	local real temp_pos2_x
	local real temp_pos2_y
	local real temp_delta_x
	local real temp_delta_y
	local real temp_deltaNorm_x
	local real temp_deltaNorm_y
	local real temp_deltaNorm_x_2
	local real temp_deltaNorm_y_2
	local integer tempIndex
	local integer tempIndex_2
	local integer tempIndex_3
	local real temp_futurePos1_x
	local real temp_futurePos1_y
	local integer tempIndex_4
	local real temp_futurePos2_x
	local real temp_futurePos2_y
	local real temp_futureDelta_x
	local real temp_futureDelta_y
	local real temp_vel1central_x
	local real temp_vel1central_y
	local real temp_vel2central_x
	local real temp_vel2central_y
	local integer tempIndex_5
	local integer tempIndex_6
	local integer tempIndex_7
	local integer tempIndex_8
	local real temp
	local real temp_2
	local real temp_3
	local real temp_4
	local integer temp_5
	local integer temp_6
<<<<<<< HEAD
	set Unit_lastCollision[this_57] = otherUnit
	set Unit_lastCollision[otherUnit] = this_57
	if  not IsUnitAlly(Unit_u[otherUnit], Unit_owner[this_57]) then
		set Unit_lastKnocker[otherUnit] = Unit_lastKnocker[this_57]
	endif
	set temp_pos1_x = unit_getPos(Unit_u[this_57])
=======
	set Unit_lastCollision[this_58] = otherUnit
	set Unit_lastCollision[otherUnit] = this_58
	if  not IsUnitAlly(Unit_u[otherUnit], Unit_owner[this_58]) then
		set Unit_lastKnocker[otherUnit] = Unit_lastKnocker[this_58]
	endif
	set temp_pos1_x = unit_getPos(Unit_u[this_58])
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
	set temp_pos1_y = unit_getPos_return_y
	set pos1_x = temp_pos1_x
	set pos1_y = temp_pos1_y
	set temp_pos2_x = unit_getPos(Unit_u[otherUnit])
	set temp_pos2_y = unit_getPos_return_y
	set pos2_x = temp_pos2_x
	set pos2_y = temp_pos2_y
	set temp_delta_x = vec2_op_minus(pos2_x, pos2_y, pos1_x, pos1_y)
	set temp_delta_y = vec2_op_minus_return_y
	set delta_x = temp_delta_x
	set delta_y = temp_delta_y
	set deltaLen = vec2_length(delta_x, delta_y)
	if deltaLen == 0. then
		set temp_deltaNorm_x = 0.
		set temp_deltaNorm_y = 1.
		set deltaNorm_x = temp_deltaNorm_x
		set deltaNorm_y = temp_deltaNorm_y
	else
		set temp_deltaNorm_x_2 = vec2_op_mult(delta_x, delta_y, 1. / deltaLen)
		set temp_deltaNorm_y_2 = vec2_op_mult_return_y
		set deltaNorm_x = temp_deltaNorm_x_2
		set deltaNorm_y = temp_deltaNorm_y_2
	endif
<<<<<<< HEAD
	set tempIndex = this_57
=======
	set tempIndex = this_58
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
	set speed1central = vec2_dot(Unit_knockSpeed[tempIndex], Unit_knockSpeed_2[tempIndex], deltaNorm_x, deltaNorm_y)
	set tempIndex_2 = otherUnit
	set speed2central = vec2_dot(Unit_knockSpeed[tempIndex_2], Unit_knockSpeed_2[tempIndex_2], deltaNorm_x, deltaNorm_y)
	set temp = pos1_x
	set temp_2 = pos1_y
<<<<<<< HEAD
	set tempIndex_3 = this_57
=======
	set tempIndex_3 = this_58
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
	set temp_futurePos1_x = vec2_op_plus(temp, temp_2, vec2_op_mult(Unit_knockSpeed[tempIndex_3], Unit_knockSpeed_2[tempIndex_3], 0.01), vec2_op_mult_return_y)
	set temp_futurePos1_y = vec2_op_plus_return_y
	set futurePos1_x = temp_futurePos1_x
	set futurePos1_y = temp_futurePos1_y
	set temp_3 = pos2_x
	set temp_4 = pos2_y
	set tempIndex_4 = otherUnit
	set temp_futurePos2_x = vec2_op_plus(temp_3, temp_4, vec2_op_mult(Unit_knockSpeed[tempIndex_4], Unit_knockSpeed_2[tempIndex_4], 0.01), vec2_op_mult_return_y)
	set temp_futurePos2_y = vec2_op_plus_return_y
	set futurePos2_x = temp_futurePos2_x
	set futurePos2_y = temp_futurePos2_y
	set temp_futureDelta_x = vec2_op_minus(futurePos2_x, futurePos2_y, futurePos1_x, futurePos1_y)
	set temp_futureDelta_y = vec2_op_minus_return_y
	set futureDelta_x = temp_futureDelta_x
	set futureDelta_y = temp_futureDelta_y
	if vec2_length(futureDelta_x, futureDelta_y) < deltaLen then
		set temp_vel1central_x = vec2_op_mult(deltaNorm_x, deltaNorm_y, speed1central)
		set temp_vel1central_y = vec2_op_mult_return_y
		set vel1central_x = temp_vel1central_x
		set vel1central_y = temp_vel1central_y
		set temp_vel2central_x = vec2_op_mult(deltaNorm_x, deltaNorm_y, speed2central)
		set temp_vel2central_y = vec2_op_mult_return_y
		set vel2central_x = temp_vel2central_x
		set vel2central_y = temp_vel2central_y
<<<<<<< HEAD
		set tempIndex_5 = this_57
		set temp_5 = tempIndex_5
		set tempIndex_6 = this_57
=======
		set tempIndex_5 = this_58
		set temp_5 = tempIndex_5
		set tempIndex_6 = this_58
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
		set Unit_knockSpeed[temp_5] = vec2_op_plus(Unit_knockSpeed[tempIndex_6], Unit_knockSpeed_2[tempIndex_6], vec2_op_mult(vec2_op_minus(vel2central_x, vel2central_y, vel1central_x, vel1central_y), vec2_op_minus_return_y, Unit_bounceFactor), vec2_op_mult_return_y)
		set Unit_knockSpeed_2[tempIndex_5] = vec2_op_plus_return_y
		set tempIndex_7 = otherUnit
		set temp_6 = tempIndex_7
		set tempIndex_8 = otherUnit
		set Unit_knockSpeed[temp_6] = vec2_op_plus(Unit_knockSpeed[tempIndex_8], Unit_knockSpeed_2[tempIndex_8], vec2_op_mult(vec2_op_minus(vel1central_x, vel1central_y, vel2central_x, vel2central_y), vec2_op_minus_return_y, Unit_bounceFactor), vec2_op_mult_return_y)
		set Unit_knockSpeed_2[tempIndex_7] = vec2_op_plus_return_y
	endif
endfunction

<<<<<<< HEAD
function dispatch_Unit_collision takes integer this_57, integer otherUnit, string wurstStackTrace returns nothing
	if Unit_typeId[this_57] == 0 then
		if this_57 == 0 then
=======
function dispatch_Unit_collision takes integer this_58, integer otherUnit, string wurstStackTrace returns nothing
	if Unit_typeId[this_58] == 0 then
		if this_58 == 0 then
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Unit.collision" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Unit.collision on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
<<<<<<< HEAD
	if Unit_typeId[this_57] <= 710 then
		call Unit_collision(this_57, otherUnit)
	else
		call Unit_collision(this_57, otherUnit)
=======
	if Unit_typeId[this_58] <= 709 then
		call Unit_collision(this_58, otherUnit)
	else
		call Unit_collision(this_58, otherUnit)
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
	endif
endfunction

function vec2_toVec3 takes real this_x, real this_y returns real
	set vec2_toVec3_return_x = this_x
	set vec2_toVec3_return_y = this_y
	set vec2_toVec3_return_z = 0.
	return vec2_toVec3_return_x
endfunction

function vec3_project takes real this_x, real this_y, real this_z, real direction_x, real direction_y, real direction_z, string wurstStackTrace returns real
	local real l = direction_x * direction_x + direction_y * direction_y + direction_z * direction_z
	if l == 0.0 then
		call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "vector.projectVector error: The length of the direction vector is 0.0!" + wurstStackTrace)
		call I2S(1 / 0)
		set vec3_project_return_x = 0.
		set vec3_project_return_y = 0.
		set vec3_project_return_z = 0.
		return vec3_project_return_x
	endif
	set l = (this_x * direction_x + this_y * direction_y + this_z * direction_z) / l
	set vec3_project_return_x = direction_x * l
	set vec3_project_return_y = direction_y * l
	set vec3_project_return_z = direction_z * l
	return vec3_project_return_x
endfunction

function vec3_toVec2 takes real this_x, real this_y, real this_z returns real
	set vec3_toVec2_return_x = this_x
	set vec3_toVec2_return_y = this_y
	return vec3_toVec2_return_x
endfunction

function getBounceVec takes real vel2_x, real vel2_y, real nor2_x, real nor2_y, string wurstStackTrace returns real
	local real temp_vel3_x = vec2_toVec3(vel2_x, vel2_y)
	local real temp_vel3_y = vec2_toVec3_return_y
	local real temp_vel3_z = vec2_toVec3_return_z
	local real vel3_x = temp_vel3_x
	local real vel3_y = temp_vel3_y
	local real vel3_z = temp_vel3_z
	local real temp_nor3_x = vec2_toVec3(nor2_x, nor2_y)
	local real temp_nor3_y = vec2_toVec3_return_y
	local real temp_nor3_z = vec2_toVec3_return_z
	local real nor3_x = temp_nor3_x
	local real nor3_y = temp_nor3_y
	local real nor3_z = temp_nor3_z
	local real temp_pv3_x = vec3_project(vel3_x, vel3_y, vel3_z, nor3_x, nor3_y, nor3_z, "\n   Helper, line 26" + wurstStackTrace)
	local real temp_pv3_y = vec3_project_return_y
	local real temp_pv3_z = vec3_project_return_z
	local real pv3_x = temp_pv3_x
	local real pv3_y = temp_pv3_y
	local real pv3_z = temp_pv3_z
	local real temp_pv2_x = vec3_toVec2(pv3_x, pv3_y, pv3_z)
	local real temp_pv2_y = vec3_toVec2_return_y
	local real pv2_x = temp_pv2_x
	local real pv2_y = temp_pv2_y
	local real temp_pv2_x_2 = vec2_op_mult(pv2_x, pv2_y,  - 2.)
	local real temp_pv2_y_2 = vec2_op_mult_return_y
	local real nvel2_x
	local real nvel2_y
	local real temp_nvel2_x
	local real temp_nvel2_y
	local real temp_nvel2_x_2
	local real temp_nvel2_y_2
	set pv2_x = temp_pv2_x_2
	set pv2_y = temp_pv2_y_2
	set temp_nvel2_x = vel2_x
	set temp_nvel2_y = vel2_y
	set nvel2_x = temp_nvel2_x
	set nvel2_y = temp_nvel2_y
	set temp_nvel2_x_2 = vec2_op_plus(nvel2_x, nvel2_y, pv2_x, pv2_y)
	set temp_nvel2_y_2 = vec2_op_plus_return_y
	set nvel2_x = temp_nvel2_x_2
	set nvel2_y = temp_nvel2_y_2
	set getBounceVec_return_x = nvel2_x
	set getBounceVec_return_y = nvel2_y
	return getBounceVec_return_x
endfunction

<<<<<<< HEAD
function real_asAngleRadians takes real this_57 returns real
	return this_57
=======
function real_asAngleRadians takes real this_58 returns real
	return this_58
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
endfunction

function angle_toVec takes real this_radians, real len returns real
	set angle_toVec_return_x = Cos(this_radians) * len
	set angle_toVec_return_y = Sin(this_radians) * len
	return angle_toVec_return_x
endfunction

function vec2_polarOffset takes real this_x, real this_y, real ang_radians, real dist returns real
	set vec2_polarOffset_return_x = vec2_op_plus(this_x, this_y, angle_toVec(ang_radians, dist), angle_toVec_return_y)
	set vec2_polarOffset_return_y = vec2_op_plus_return_y
	return vec2_polarOffset_return_x
endfunction

function vec2_setLength takes real this_x, real this_y, real length, string wurstStackTrace returns real
	local real l = SquareRoot(this_x * this_x + this_y * this_y)
	if l == 0.0 then
		call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "vector.setLength error: The length of the vector is 0.0!" + wurstStackTrace)
		call I2S(1 / 0)
		set vec2_setLength_return_x = 0.
		set vec2_setLength_return_y = 0.
		return vec2_setLength_return_x
	endif
	set l = length / l
	set vec2_setLength_return_x = this_x * l
	set vec2_setLength_return_y = this_y * l
	return vec2_setLength_return_x
endfunction

function getPathingNormal takes real pos_x, real pos_y, string wurstStackTrace returns real
	local integer numberOfTests = 60
	local real radius = 128.
	local real temp_addedVecs_x = 0.
	local real temp_addedVecs_y = 0.
	local real addedVecs_x = temp_addedVecs_x
	local real addedVecs_y = temp_addedVecs_y
	local integer i = 1
	local integer temp = numberOfTests
	local real direction_x
	local real direction_y
	local real testPoint_x
	local real testPoint_y
	local real temp_direction_x
	local real temp_direction_y
	local real temp_testPoint_x
	local real temp_testPoint_y
	local real temp_addedVecs_x_2
	local real temp_addedVecs_y_2
	loop
		exitwhen i > temp
		set temp_direction_x = vec2_polarOffset(0., 0., real_asAngleRadians(i * 2 * bj_PI / numberOfTests), radius)
		set temp_direction_y = vec2_polarOffset_return_y
		set direction_x = temp_direction_x
		set direction_y = temp_direction_y
		set temp_testPoint_x = vec2_op_plus(pos_x, pos_y, direction_x, direction_y)
		set temp_testPoint_y = vec2_op_plus_return_y
		set testPoint_x = temp_testPoint_x
		set testPoint_y = temp_testPoint_y
		if isTerrainWalkable(testPoint_x, testPoint_y) then
			set temp_addedVecs_x_2 = vec2_op_plus(addedVecs_x, addedVecs_y, direction_x, direction_y)
			set temp_addedVecs_y_2 = vec2_op_plus_return_y
			set addedVecs_x = temp_addedVecs_x_2
			set addedVecs_y = temp_addedVecs_y_2
		endif
		set i = i + 1
	endloop
	set getPathingNormal_return_x = vec2_op_mult(vec2_setLength(addedVecs_x, addedVecs_y, 1., "\n   Helper, line 21" + wurstStackTrace), vec2_setLength_return_y,  - 1.)
	set getPathingNormal_return_y = vec2_op_mult_return_y
	return getPathingNormal_return_x
endfunction

<<<<<<< HEAD
function group_enumUnitsInRange takes group this_57, real pos_x, real pos_y, real range, boolexpr filter returns nothing
	call GroupEnumUnitsInRange(this_57, pos_x, pos_y, range, filter)
endfunction

function unit_setPos takes unit this_57, real pos_x, real pos_y returns nothing
	call SetUnitPosition(this_57, pos_x, pos_y)
=======
function group_enumUnitsInRange takes group this_58, real pos_x, real pos_y, real range, boolexpr filter returns nothing
	call GroupEnumUnitsInRange(this_58, pos_x, pos_y, range, filter)
endfunction

function unit_setPos takes unit this_58, real pos_x, real pos_y returns nothing
	call SetUnitPosition(this_58, pos_x, pos_y)
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
endfunction

function vec2_lengthSquared takes real this_x, real this_y returns real
	return this_x * this_x + this_y * this_y
endfunction

<<<<<<< HEAD
function Unit_knockback takes integer this_57, string wurstStackTrace returns nothing
	local integer tempIndex = this_57
=======
function Unit_knockback takes integer this_58, string wurstStackTrace returns nothing
	local integer tempIndex = this_58
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
	local real pos_x
	local real pos_y
	local group g
	local integer u2
	local real pos2_x
	local real pos2_y
	local real speed
	local real nvel_x
	local real nvel_y
	local integer tempIndex_2
	local real temp_pos_x
	local real temp_pos_y
	local integer tempIndex_3
	local real tempTupleSelectionResult_1
	local real temp_tempTupleSelectionResult_1
	local real temp_tempTupleSelectionResult_2
	local integer tempIndex_4
	local real tempTupleSelectionResult_2
	local real temp_tempTupleSelectionResult_1_2
	local real temp_tempTupleSelectionResult_2_2
	local integer tempIndex_5
	local real temp_pos_x_2
	local real temp_pos_y_2
	local integer tempIndex_6
	local integer tempIndex_7
	local integer tempIndex_8
	local integer tempIndex_9
	local real temp_pos_x_3
	local real temp_pos_y_3
	local integer tempIndex_10
	local integer tempIndex_11
	local integer tempIndex_12
	local real temp_pos2_x
	local real temp_pos2_y
	local integer tempIndex_13
	local real temp_pos2_x_2
	local real temp_pos2_y_2
	local integer tempIndex_14
	local integer tempIndex_15
	local integer tempIndex_16
	local integer tempIndex_17
	local real temp_pos_x_4
	local real temp_pos_y_4
	local integer tempIndex_18
	local integer tempIndex_19
	local integer tempIndex_20
	local integer tempIndex_21
	local integer tempIndex_22
	local integer tempIndex_23
	local real temp_nvel_x
	local real temp_nvel_y
	local real temp_pos_x_5
	local real temp_pos_y_5
	local integer tempIndex_24
	local unit temp
	local real temp_2
	local boolean andLeft
	local real temp_3
	local real temp_4
	local real temp_5
	local real temp_6
	local integer temp_7
	local real temp_8
	local real temp_9
	local real temp_10
	local real temp_11
	local integer temp_12
	local real temp_13
	local real temp_14
	local real temp_15
	local real temp_16
	local integer temp_17
	local real temp_18
	local real temp_19
	local real temp_20
	local real temp_21
	local integer temp_22
	if vec2_lengthSquared(Unit_knockSpeed[tempIndex], Unit_knockSpeed_2[tempIndex]) <= 0.25 then
<<<<<<< HEAD
		call dispatch_LinkedList_remove(UnitClass_knocklist, this_57, "\n   UnitClass, line 166" + wurstStackTrace)
		set Unit_hasKnockback[this_57] = false
		set tempIndex_2 = this_57
		set Unit_knockSpeed[tempIndex_2] = 0.
		set Unit_knockSpeed_2[tempIndex_2] = 0.
	else
		set temp_pos_x = unit_getPos(Unit_u[this_57])
=======
		call dispatch_LinkedList_remove(UnitClass_knocklist, this_58, "\n   UnitClass, line 172" + wurstStackTrace)
		set Unit_hasKnockback[this_58] = false
		set tempIndex_2 = this_58
		set Unit_knockSpeed[tempIndex_2] = 0.
		set Unit_knockSpeed_2[tempIndex_2] = 0.
	else
		set temp_pos_x = unit_getPos(Unit_u[this_58])
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
		set temp_pos_y = unit_getPos_return_y
		set pos_x = temp_pos_x
		set pos_y = temp_pos_y
		if isTerrainWalkable(pos_x, pos_y) == true then
			set andLeft = true
		else
<<<<<<< HEAD
			set temp = Unit_u[this_57]
			set tempIndex_3 = this_57
=======
			set temp = Unit_u[this_58]
			set tempIndex_3 = this_58
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
			set temp_tempTupleSelectionResult_1 = Unit_wallLoc[tempIndex_3]
			set temp_tempTupleSelectionResult_2 = Unit_wallLoc_2[tempIndex_3]
			set tempTupleSelectionResult_1 = temp_tempTupleSelectionResult_1
			set temp_2 = tempTupleSelectionResult_1
<<<<<<< HEAD
			set tempIndex_4 = this_57
=======
			set tempIndex_4 = this_58
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
			set temp_tempTupleSelectionResult_1_2 = Unit_wallLoc[tempIndex_4]
			set temp_tempTupleSelectionResult_2_2 = Unit_wallLoc_2[tempIndex_4]
			set tempTupleSelectionResult_2 = temp_tempTupleSelectionResult_2_2
			set andLeft = IsUnitInRangeXY(temp, temp_2, tempTupleSelectionResult_2, 30.) == true
		endif
		if andLeft then
			set g = CreateGroup()
<<<<<<< HEAD
			set Filter_filterCheckUnit = Unit_u[this_57]
			call group_enumUnitsInRange(g, pos_x, pos_y, Unit_radius[this_57], Condition(ref_function_notUnit))
			if FirstOfGroup(g) == null then
				set temp_3 = pos_x
				set temp_4 = pos_y
				set tempIndex_5 = this_57
=======
			set Filter_filterCheckUnit = Unit_u[this_58]
			call group_enumUnitsInRange(g, pos_x, pos_y, Unit_radius[this_58], Condition(ref_function_notUnit))
			if FirstOfGroup(g) == null then
				set temp_3 = pos_x
				set temp_4 = pos_y
				set tempIndex_5 = this_58
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
				set temp_pos_x_2 = vec2_op_plus(temp_3, temp_4, Unit_knockSpeed[tempIndex_5], Unit_knockSpeed_2[tempIndex_5])
				set temp_pos_y_2 = vec2_op_plus_return_y
				set pos_x = temp_pos_x_2
				set pos_y = temp_pos_y_2
<<<<<<< HEAD
				call unit_setPos(Unit_u[this_57], pos_x, pos_y)
				set tempIndex_6 = this_57
				set temp_7 = tempIndex_6
				set tempIndex_7 = this_57
				set temp_5 = Unit_knockSpeed[tempIndex_7]
				set temp_6 = Unit_knockSpeed_2[tempIndex_7]
				set tempIndex_8 = this_57
				set Unit_knockSpeed[temp_7] = vec2_op_minus(temp_5, temp_6, vec2_op_mult(Unit_knockSpeed[tempIndex_8], Unit_knockSpeed_2[tempIndex_8], Unit_mass[this_57] / Unit_knockbackFactor), vec2_op_mult_return_y)
				set Unit_knockSpeed_2[tempIndex_6] = vec2_op_minus_return_y
			else
				set u2 = unit_getUserData(FirstOfGroup(g))
				if  not (u2 == Unit_lastCollision[this_57]) then
					call dispatch_Unit_collision(this_57, u2, "\n   UnitClass, line 182" + wurstStackTrace)
					set temp_8 = pos_x
					set temp_9 = pos_y
					set tempIndex_9 = this_57
=======
				call unit_setPos(Unit_u[this_58], pos_x, pos_y)
				set tempIndex_6 = this_58
				set temp_7 = tempIndex_6
				set tempIndex_7 = this_58
				set temp_5 = Unit_knockSpeed[tempIndex_7]
				set temp_6 = Unit_knockSpeed_2[tempIndex_7]
				set tempIndex_8 = this_58
				set Unit_knockSpeed[temp_7] = vec2_op_minus(temp_5, temp_6, vec2_op_mult(Unit_knockSpeed[tempIndex_8], Unit_knockSpeed_2[tempIndex_8], Unit_mass[this_58] / Unit_knockbackFactor), vec2_op_mult_return_y)
				set Unit_knockSpeed_2[tempIndex_6] = vec2_op_minus_return_y
			else
				set u2 = unit_getUserData(FirstOfGroup(g))
				if  not (u2 == Unit_lastCollision[this_58]) then
					call dispatch_Unit_collision(this_58, u2, "\n   UnitClass, line 188" + wurstStackTrace)
					set temp_8 = pos_x
					set temp_9 = pos_y
					set tempIndex_9 = this_58
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
					set temp_pos_x_3 = vec2_op_plus(temp_8, temp_9, Unit_knockSpeed[tempIndex_9], Unit_knockSpeed_2[tempIndex_9])
					set temp_pos_y_3 = vec2_op_plus_return_y
					set pos_x = temp_pos_x_3
					set pos_y = temp_pos_y_3
<<<<<<< HEAD
					call unit_setPos(Unit_u[this_57], pos_x, pos_y)
					set tempIndex_10 = this_57
					set temp_12 = tempIndex_10
					set tempIndex_11 = this_57
					set temp_10 = Unit_knockSpeed[tempIndex_11]
					set temp_11 = Unit_knockSpeed_2[tempIndex_11]
					set tempIndex_12 = this_57
					set Unit_knockSpeed[temp_12] = vec2_op_minus(temp_10, temp_11, vec2_op_mult(Unit_knockSpeed[tempIndex_12], Unit_knockSpeed_2[tempIndex_12], Unit_mass[this_57] / Unit_knockbackFactor), vec2_op_mult_return_y)
=======
					call unit_setPos(Unit_u[this_58], pos_x, pos_y)
					set tempIndex_10 = this_58
					set temp_12 = tempIndex_10
					set tempIndex_11 = this_58
					set temp_10 = Unit_knockSpeed[tempIndex_11]
					set temp_11 = Unit_knockSpeed_2[tempIndex_11]
					set tempIndex_12 = this_58
					set Unit_knockSpeed[temp_12] = vec2_op_minus(temp_10, temp_11, vec2_op_mult(Unit_knockSpeed[tempIndex_12], Unit_knockSpeed_2[tempIndex_12], Unit_mass[this_58] / Unit_knockbackFactor), vec2_op_mult_return_y)
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
					set Unit_knockSpeed_2[tempIndex_10] = vec2_op_minus_return_y
					set temp_pos2_x = unit_getPos(Unit_u[u2])
					set temp_pos2_y = unit_getPos_return_y
					set pos2_x = temp_pos2_x
					set pos2_y = temp_pos2_y
					set temp_13 = pos2_x
					set temp_14 = pos2_y
<<<<<<< HEAD
					set tempIndex_13 = this_57
=======
					set tempIndex_13 = this_58
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
					set temp_pos2_x_2 = vec2_op_plus(temp_13, temp_14, Unit_knockSpeed[tempIndex_13], Unit_knockSpeed_2[tempIndex_13])
					set temp_pos2_y_2 = vec2_op_plus_return_y
					set pos2_x = temp_pos2_x_2
					set pos2_y = temp_pos2_y_2
					call unit_setPos(Unit_u[u2], pos2_x, pos2_y)
					set tempIndex_14 = u2
					set temp_17 = tempIndex_14
					set tempIndex_15 = u2
					set temp_15 = Unit_knockSpeed[tempIndex_15]
					set temp_16 = Unit_knockSpeed_2[tempIndex_15]
					set tempIndex_16 = u2
<<<<<<< HEAD
					set Unit_knockSpeed[temp_17] = vec2_op_minus(temp_15, temp_16, vec2_op_mult(Unit_knockSpeed[tempIndex_16], Unit_knockSpeed_2[tempIndex_16], Unit_mass[this_57] / Unit_knockbackFactor), vec2_op_mult_return_y)
=======
					set Unit_knockSpeed[temp_17] = vec2_op_minus(temp_15, temp_16, vec2_op_mult(Unit_knockSpeed[tempIndex_16], Unit_knockSpeed_2[tempIndex_16], Unit_mass[this_58] / Unit_knockbackFactor), vec2_op_mult_return_y)
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
					set Unit_knockSpeed_2[tempIndex_14] = vec2_op_minus_return_y
				else
					set temp_18 = pos_x
					set temp_19 = pos_y
<<<<<<< HEAD
					set tempIndex_17 = this_57
=======
					set tempIndex_17 = this_58
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
					set temp_pos_x_4 = vec2_op_plus(temp_18, temp_19, Unit_knockSpeed[tempIndex_17], Unit_knockSpeed_2[tempIndex_17])
					set temp_pos_y_4 = vec2_op_plus_return_y
					set pos_x = temp_pos_x_4
					set pos_y = temp_pos_y_4
<<<<<<< HEAD
					call unit_setPos(Unit_u[this_57], pos_x, pos_y)
					set tempIndex_18 = this_57
					set temp_22 = tempIndex_18
					set tempIndex_19 = this_57
					set temp_20 = Unit_knockSpeed[tempIndex_19]
					set temp_21 = Unit_knockSpeed_2[tempIndex_19]
					set tempIndex_20 = this_57
					set Unit_knockSpeed[temp_22] = vec2_op_minus(temp_20, temp_21, vec2_op_mult(Unit_knockSpeed[tempIndex_20], Unit_knockSpeed_2[tempIndex_20], Unit_mass[this_57] / Unit_knockbackFactor), vec2_op_mult_return_y)
=======
					call unit_setPos(Unit_u[this_58], pos_x, pos_y)
					set tempIndex_18 = this_58
					set temp_22 = tempIndex_18
					set tempIndex_19 = this_58
					set temp_20 = Unit_knockSpeed[tempIndex_19]
					set temp_21 = Unit_knockSpeed_2[tempIndex_19]
					set tempIndex_20 = this_58
					set Unit_knockSpeed[temp_22] = vec2_op_minus(temp_20, temp_21, vec2_op_mult(Unit_knockSpeed[tempIndex_20], Unit_knockSpeed_2[tempIndex_20], Unit_mass[this_58] / Unit_knockbackFactor), vec2_op_mult_return_y)
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
					set Unit_knockSpeed_2[tempIndex_18] = vec2_op_minus_return_y
				endif
			endif
			call DestroyGroup(g)
			set g = null
		else
<<<<<<< HEAD
			set tempIndex_21 = this_57
			set Unit_wallLoc[tempIndex_21] = pos_x
			set Unit_wallLoc_2[tempIndex_21] = pos_y
			set tempIndex_22 = this_57
			set speed = vec2_length(Unit_knockSpeed[tempIndex_22], Unit_knockSpeed_2[tempIndex_22])
			call dispatch_Unit_damageAbs(this_57, Unit_lastKnocker[this_57], unit_getState(Unit_u[this_57], UNIT_STATE_MAX_LIFE) * (speed / 200.), "\n   UnitClass, line 200" + wurstStackTrace)
			set tempIndex_23 = this_57
			set temp_nvel_x = getBounceVec(Unit_knockSpeed[tempIndex_23], Unit_knockSpeed_2[tempIndex_23], getPathingNormal(pos_x, pos_y, "\n   UnitClass, line 201" + wurstStackTrace), getPathingNormal_return_y, "\n   UnitClass, line 201" + wurstStackTrace)
=======
			set tempIndex_21 = this_58
			set Unit_wallLoc[tempIndex_21] = pos_x
			set Unit_wallLoc_2[tempIndex_21] = pos_y
			set tempIndex_22 = this_58
			set speed = vec2_length(Unit_knockSpeed[tempIndex_22], Unit_knockSpeed_2[tempIndex_22])
			call dispatch_Unit_damageAbs(this_58, Unit_lastKnocker[this_58], unit_getState(Unit_u[this_58], UNIT_STATE_MAX_LIFE) * (speed / 200.), "\n   UnitClass, line 206" + wurstStackTrace)
			set tempIndex_23 = this_58
			set temp_nvel_x = getBounceVec(Unit_knockSpeed[tempIndex_23], Unit_knockSpeed_2[tempIndex_23], getPathingNormal(pos_x, pos_y, "\n   UnitClass, line 207" + wurstStackTrace), getPathingNormal_return_y, "\n   UnitClass, line 207" + wurstStackTrace)
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
			set temp_nvel_y = getBounceVec_return_y
			set nvel_x = temp_nvel_x
			set nvel_y = temp_nvel_y
			set temp_pos_x_5 = vec2_op_plus(pos_x, pos_y, nvel_x, nvel_y)
			set temp_pos_y_5 = vec2_op_plus_return_y
			set pos_x = temp_pos_x_5
			set pos_y = temp_pos_y_5
<<<<<<< HEAD
			call unit_setPos(Unit_u[this_57], pos_x, pos_y)
			set tempIndex_24 = this_57
			set Unit_knockSpeed[tempIndex_24] = vec2_op_minus(nvel_x, nvel_y, vec2_op_mult(nvel_x, nvel_y, Unit_mass[this_57] / Unit_knockbackFactor), vec2_op_mult_return_y)
			set Unit_knockSpeed_2[tempIndex_24] = vec2_op_minus_return_y
			set Unit_lastCollision[this_57] = 0
=======
			call unit_setPos(Unit_u[this_58], pos_x, pos_y)
			set tempIndex_24 = this_58
			set Unit_knockSpeed[tempIndex_24] = vec2_op_minus(nvel_x, nvel_y, vec2_op_mult(nvel_x, nvel_y, Unit_mass[this_58] / Unit_knockbackFactor), vec2_op_mult_return_y)
			set Unit_knockSpeed_2[tempIndex_24] = vec2_op_minus_return_y
			set Unit_lastCollision[this_58] = 0
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
		endif
	endif
	set g = null
	set temp = null
endfunction

<<<<<<< HEAD
function dispatch_Unit_knockback takes integer this_57, string wurstStackTrace returns nothing
	if Unit_typeId[this_57] == 0 then
		if this_57 == 0 then
=======
function dispatch_Unit_knockback takes integer this_58, string wurstStackTrace returns nothing
	if Unit_typeId[this_58] == 0 then
		if this_58 == 0 then
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Unit.knockback" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Unit.knockback on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
<<<<<<< HEAD
	if Unit_typeId[this_57] <= 710 then
		call Unit_knockback(this_57, "\n   UnitClass, line 164" + wurstStackTrace)
	else
		call Unit_knockback(this_57, "\n   UnitClass, line 164" + wurstStackTrace)
=======
	if Unit_typeId[this_58] <= 709 then
		call Unit_knockback(this_58, "\n   UnitClass, line 170" + wurstStackTrace)
	else
		call Unit_knockback(this_58, "\n   UnitClass, line 170" + wurstStackTrace)
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
	endif
endfunction

function callKnockback takes string wurstStackTrace returns nothing
	local integer wurst__iterator0 = dispatch_LinkedList_iterator(UnitClass_knocklist, "\n   UnitClass, line 22" + wurstStackTrace)
	local integer obj
	loop
		exitwhen  not dispatch_LLIterator_hasNext(wurst__iterator0, "\n   UnitClass, line 22" + wurstStackTrace)
		set obj = dispatch_LLIterator_next(wurst__iterator0, "\n   UnitClass, line 22" + wurstStackTrace)
		call dispatch_Unit_knockback(obj, "\n   UnitClass, line 23" + wurstStackTrace)
	endloop
	call dispatch_LLIterator_close(wurst__iterator0, "\n   UnitClass, line 22" + wurstStackTrace)
endfunction

function bridge_callKnockback takes nothing returns nothing
<<<<<<< HEAD
	call callKnockback("\n   GameStart, line 90")
endfunction

function Unit_manaTT takes integer this_57, real dmg returns nothing
endfunction

function dispatch_Unit_manaTT takes integer this_57, real dmg, string wurstStackTrace returns nothing
	if Unit_typeId[this_57] == 0 then
		if this_57 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Unit.manaTT" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Unit.manaTT on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	if Unit_typeId[this_57] <= 710 then
		call Unit_manaTT(this_57, dmg)
	else
		call Unit_manaTT(this_57, dmg)
	endif
endfunction

function camTest takes string wurstStackTrace returns nothing
	call dispatch_Unit_manaTT(UnitClass_last, 1., "\n   GameStart, line 761" + wurstStackTrace)
	call dispatch_Unit_dodgeTT(UnitClass_last, "\n   GameStart, line 762" + wurstStackTrace)
	call dispatch_Unit_goldTT(UnitClass_last, 1., Player(0), "\n   GameStart, line 763" + wurstStackTrace)
	call dispatch_Unit_normalTT(UnitClass_last, 1., "\n   GameStart, line 764" + wurstStackTrace)
endfunction

function bridge_camTest takes nothing returns nothing
	call camTest("\n   GameStart, line 93")
endfunction

function Missle_onDestroy_2 takes integer this_57, string wurstStackTrace returns nothing
	call dispatch_Fx_destroyFx(Missle_missle[this_57], "\n   RamisHomingMissle, line 65" + wurstStackTrace)
	call timer_release(Missle_t_2[this_57], "\n   RamisHomingMissle, line 66" + wurstStackTrace)
	call timer_release(Missle_destroyTimer[this_57], "\n   RamisHomingMissle, line 67" + wurstStackTrace)
endfunction

function dealloc_Missle_2 takes integer obj, string wurstStackTrace returns nothing
	if Missle_typeId_2[obj] == 0 then
		call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Double free: object of type Missle" + wurstStackTrace)
		call I2S(1 / 0)
	else
		set Missle_nextFree_2[Missle_firstFree_2] = obj
		set Missle_firstFree_2 = Missle_firstFree_2 + 1
		set Missle_typeId_2[obj] = 0
	endif
endfunction

function destroyMissle_2 takes integer this_57, string wurstStackTrace returns nothing
	call Missle_onDestroy_2(this_57, "\n   RamisHomingMissle, line 64" + wurstStackTrace)
	call dealloc_Missle_2(this_57, "\n   RamisHomingMissle, line 64" + wurstStackTrace)
endfunction

function dispatch_Missle_destroyMissle_2 takes integer this_57, string wurstStackTrace returns nothing
	if Missle_typeId_2[this_57] == 0 then
		if this_57 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Missle.destroyMissle" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Missle.destroyMissle on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call destroyMissle_2(this_57, "\n   RamisHomingMissle, line 9" + wurstStackTrace)
endfunction

function Unit_addKnock_2 takes integer this_57, real momentum_x, real momentum_y, string wurstStackTrace returns nothing
	call dispatch_Unit_addKnock(this_57, momentum_x, momentum_y, "\n   UnitClass, line 274" + wurstStackTrace)
endfunction

function dispatch_Unit_addKnock_2 takes integer this_57, real momentum_x, real momentum_y, string wurstStackTrace returns nothing
	if Unit_typeId[this_57] == 0 then
		if this_57 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Unit.addKnock" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Unit.addKnock on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	if Unit_typeId[this_57] <= 710 then
		call Unit_addKnock_2(this_57, momentum_x, momentum_y, "\n   UnitClass, line 273" + wurstStackTrace)
	else
		call Unit_addKnock_2(this_57, momentum_x, momentum_y, "\n   UnitClass, line 273" + wurstStackTrace)
	endif
endfunction

function group_enumUnitsInRange_2 takes group this_57, real pos_x, real pos_y, real range returns nothing
	call GroupEnumUnitsInRange(this_57, pos_x, pos_y, range, null)
endfunction

function vec2_angleTo takes real this_x, real this_y, real v_x, real v_y returns real
	return real_asAngleRadians(Atan2(v_y - this_y, v_x - this_x))
endfunction

function Missle_move_2 takes integer this_57, string wurstStackTrace returns nothing
	local integer tempIndex = this_57
	local integer temp = tempIndex
	local integer tempIndex_2 = this_57
	local real posmissle_x
	local real posmissle_y
	local real speedtemp_x
	local real speedtemp_y
	local boolean wasHit
	local group wurst__iterator0
	local group receiver
	local unit u_2
	local unit u_3
	local real temp_posmissle_x
	local real temp_posmissle_y
	local real temp_speedtemp_x
	local real temp_speedtemp_y
	local integer tempIndex_3
	local integer tempIndex_4
	local integer tempIndex_5
	local integer tempIndex_6
	local integer temp_2
	local real temp_3
	local real temp_4
	local integer temp_5
	local real temp_6
	local real temp_7
	local group temp_8
	set Missle_speed[temp] = vec2_op_mult(Missle_speed[tempIndex_2], Missle_speed_2[tempIndex_2], Missle_speedLost)
	set Missle_speed_2[tempIndex] = vec2_op_mult_return_y
	set temp_posmissle_x = dispatch_Fx_getPos2(Missle_missle[this_57], "\n   RamisHomingMissle, line 43" + wurstStackTrace)
	set temp_posmissle_y = dispatch_Fx_getPos2_return_y
	set posmissle_x = temp_posmissle_x
	set posmissle_y = temp_posmissle_y
	if ( not Missle_canHitCaster[this_57]) and vec2_distToVec(posmissle_x, posmissle_y, unit_getPos(Unit_u[Missle_owner[this_57]]), unit_getPos_return_y) > Missle_missleRadius then
		set Missle_canHitCaster[this_57] = true
	endif
	set temp_speedtemp_x = vec2_polarOffset(0., 0., vec2_angleTo(posmissle_x, posmissle_y, unit_getPos(Unit_u[Missle_target[this_57]]), unit_getPos_return_y), Missle_speedAccel)
	set temp_speedtemp_y = vec2_polarOffset_return_y
	set speedtemp_x = temp_speedtemp_x
	set speedtemp_y = temp_speedtemp_y
	set tempIndex_3 = this_57
	set temp_2 = tempIndex_3
	set tempIndex_4 = this_57
	set Missle_speed[temp_2] = vec2_op_plus(Missle_speed[tempIndex_4], Missle_speed_2[tempIndex_4], speedtemp_x, speedtemp_y)
	set Missle_speed_2[tempIndex_3] = vec2_op_plus_return_y
	set temp_5 = Missle_missle[this_57]
	set temp_3 = posmissle_x
	set temp_4 = posmissle_y
	set tempIndex_5 = this_57
	call dispatch_Fx_setXY(temp_5, vec2_op_plus(temp_3, temp_4, Missle_speed[tempIndex_5], Missle_speed_2[tempIndex_5]), vec2_op_plus_return_y, "\n   RamisHomingMissle, line 48" + wurstStackTrace)
	set wasHit = false
	set temp_8 = TempGroups_ENUM_GROUP
	set temp_6 = posmissle_x
	set temp_7 = posmissle_y
	set tempIndex_6 = this_57
	call group_enumUnitsInRange_2(temp_8, vec2_op_plus(temp_6, temp_7, Missle_speed[tempIndex_6], Missle_speed_2[tempIndex_6]), vec2_op_plus_return_y, Missle_missleRadius)
	if Missle_canHitCaster[this_57] and IsUnitInGroup(Unit_u[Missle_owner[this_57]], TempGroups_ENUM_GROUP) then
		set receiver = TempGroups_ENUM_GROUP
		call group_enumUnitsInRange_2(receiver, unit_getPos(Unit_u[Missle_owner[this_57]]), unit_getPos_return_y, Missle_knockbackRange)
		set wurst__iterator0 = receiver
		loop
			exitwhen  not group_hasNext(wurst__iterator0)
			set u_2 = group_next(wurst__iterator0)
			if u_2 != Unit_u[Missle_owner[this_57]] then
				call dispatch_Unit_addKnock_2(unit_getUserData(u_2), angle_toVec(vec2_angleTo(unit_getPos(Unit_u[Missle_owner[this_57]]), unit_getPos_return_y, unit_getPos(u_2), unit_getPos_return_y), (1. - vec2_distToVec(unit_getPos(Unit_u[Missle_owner[this_57]]), unit_getPos_return_y, unit_getPos(u_2), unit_getPos_return_y) / Missle_knockbackRange) * Missle_knockback), angle_toVec_return_y, "\n   RamisHomingMissle, line 54" + wurstStackTrace)
			endif
		endloop
		call dispatch_Missle_destroyMissle_2(this_57, "\n   RamisHomingMissle, line 55" + wurstStackTrace)
		set wurst__iterator0 = null
		set receiver = null
		set u_2 = null
		set u_3 = null
		set temp_8 = null
		return
	endif
	loop
		exitwhen  not group_hasNext(TempGroups_ENUM_GROUP)
		set u_3 = group_next(TempGroups_ENUM_GROUP)
		if Unit_u[Missle_owner[this_57]] != u_3 then
			call dispatch_Unit_addKnock_2(unit_getUserData(u_3), angle_toVec(vec2_angleTo(posmissle_x, posmissle_y, unit_getPos(u_3), unit_getPos_return_y), Missle_knockback), angle_toVec_return_y, "\n   RamisHomingMissle, line 59" + wurstStackTrace)
			set wasHit = true
		endif
	endloop
	if wasHit then
		call dispatch_Missle_destroyMissle_2(this_57, "\n   RamisHomingMissle, line 62" + wurstStackTrace)
	endif
	set wurst__iterator0 = null
	set receiver = null
	set u_2 = null
	set u_3 = null
	set temp_8 = null
endfunction

function dispatch_Missle_move_2 takes integer this_57, string wurstStackTrace returns nothing
	if Missle_typeId_2[this_57] == 0 then
		if this_57 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Missle.move" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Missle.move on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call Missle_move_2(this_57, "\n   RamisHomingMissle, line 41" + wurstStackTrace)
endfunction

function closure_impl_68 takes string wurstStackTrace returns nothing
	call dispatch_Missle_move_2(timer_getData(GetExpiredTimer(), "\n   RamisHomingMissle, line 35" + wurstStackTrace), "\n   RamisHomingMissle, line 35" + wurstStackTrace)
endfunction

function bridge_closure_impl takes nothing returns nothing
	call closure_impl_68("\n   RamisHomingMissle, line 35")
endfunction

function angle_op_minus takes real this_radians, real other_radians returns real
	return this_radians - other_radians
endfunction

function angle_op_plus takes real this_radians, real other_radians returns real
	return this_radians + other_radians
endfunction

function alloc_Conductor takes nothing returns integer
	local integer this_57
	if Conductor_firstFree == 0 then
		set Conductor_maxIndex = Conductor_maxIndex + 1
		set this_57 = Conductor_maxIndex
	else
		set Conductor_firstFree = Conductor_firstFree - 1
		set this_57 = Conductor_nextFree[Conductor_firstFree]
	endif
	set Conductor_typeId[this_57] = 853
	return this_57
endfunction

function alloc_Fx takes nothing returns integer
	local integer this_57
	if Fx_firstFree == 0 then
		set Fx_maxIndex = Fx_maxIndex + 1
		set this_57 = Fx_maxIndex
	else
		set Fx_firstFree = Fx_firstFree - 1
		set this_57 = Fx_nextFree[Fx_firstFree]
	endif
	set Fx_typeId[this_57] = 25
	return this_57
=======
	call callKnockback("\n   GameStart, line 89")
endfunction

function Unit_manaTT takes integer this_58, real dmg returns nothing
endfunction

function dispatch_Unit_manaTT takes integer this_58, real dmg, string wurstStackTrace returns nothing
	if Unit_typeId[this_58] == 0 then
		if this_58 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Unit.manaTT" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Unit.manaTT on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	if Unit_typeId[this_58] <= 709 then
		call Unit_manaTT(this_58, dmg)
	else
		call Unit_manaTT(this_58, dmg)
	endif
endfunction

function camTest takes string wurstStackTrace returns nothing
	call dispatch_Unit_manaTT(UnitClass_last, 1., "\n   GameStart, line 700" + wurstStackTrace)
	call dispatch_Unit_dodgeTT(UnitClass_last, "\n   GameStart, line 701" + wurstStackTrace)
	call dispatch_Unit_goldTT(UnitClass_last, 1., Player(0), "\n   GameStart, line 702" + wurstStackTrace)
	call dispatch_Unit_normalTT(UnitClass_last, 1., "\n   GameStart, line 703" + wurstStackTrace)
endfunction

function bridge_camTest takes nothing returns nothing
	call camTest("\n   GameStart, line 92")
endfunction

function alloc_Closure_13 takes nothing returns integer
	local integer this_58
	if Action_firstFree == 0 then
		set Action_maxIndex = Action_maxIndex + 1
		set this_58 = Action_maxIndex
	else
		set Action_firstFree = Action_firstFree - 1
		set this_58 = Action_nextFree[Action_firstFree]
	endif
	set Action_typeId[this_58] = 838
	return this_58
endfunction

function createLightning takes string typ, real pos1_x, real pos1_y, real pos1_z, real pos2_x, real pos2_y, real pos2_z returns lightning
	return AddLightningEx(typ, true, pos1_x, pos1_y, pos1_z, pos2_x, pos2_y, pos2_z)
endfunction

function unit_setScale takes unit this_58, real scale returns nothing
	call SetUnitScale(this_58, scale, scale, scale)
endfunction

function Fx_setScale takes integer this_58, real value returns nothing
	call unit_setScale(Fx_dummy[this_58], value)
endfunction

function dispatch_Fx_setScale takes integer this_58, real value, string wurstStackTrace returns nothing
	if Fx_typeId[this_58] == 0 then
		if this_58 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Fx.setScale" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Fx.setScale on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call Fx_setScale(this_58, value)
endfunction

function Unit_getMiddle takes integer this_58 returns real
	set Unit_getMiddle_return_x = unit_getX(Unit_u[this_58])
	set Unit_getMiddle_return_y = unit_getY(Unit_u[this_58])
	set Unit_getMiddle_return_z = Unit_height[this_58] / 2.
	return Unit_getMiddle_return_x
endfunction

function dispatch_Unit_getMiddle takes integer this_58, string wurstStackTrace returns real
	local real getMiddle_result_x
	local real getMiddle_result_y
	local real getMiddle_result_z
	local real temp_getMiddle_result_x
	local real temp_getMiddle_result_y
	local real temp_getMiddle_result_z
	local real temp_getMiddle_result_x_2
	local real temp_getMiddle_result_y_2
	local real temp_getMiddle_result_z_2
	if Unit_typeId[this_58] == 0 then
		if this_58 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Unit.getMiddle" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Unit.getMiddle on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	if Unit_typeId[this_58] <= 709 then
		set temp_getMiddle_result_x = Unit_getMiddle(this_58)
		set temp_getMiddle_result_y = Unit_getMiddle_return_y
		set temp_getMiddle_result_z = Unit_getMiddle_return_z
		set getMiddle_result_x = temp_getMiddle_result_x
		set getMiddle_result_y = temp_getMiddle_result_y
		set getMiddle_result_z = temp_getMiddle_result_z
	else
		set temp_getMiddle_result_x_2 = Unit_getMiddle(this_58)
		set temp_getMiddle_result_y_2 = Unit_getMiddle_return_y
		set temp_getMiddle_result_z_2 = Unit_getMiddle_return_z
		set getMiddle_result_x = temp_getMiddle_result_x_2
		set getMiddle_result_y = temp_getMiddle_result_y_2
		set getMiddle_result_z = temp_getMiddle_result_z_2
	endif
	set dispatch_Unit_getMiddle_return_x = getMiddle_result_x
	set dispatch_Unit_getMiddle_return_y = getMiddle_result_y
	set dispatch_Unit_getMiddle_return_z = getMiddle_result_z
	return dispatch_Unit_getMiddle_return_x
endfunction

function Event_addAction takes integer this_58, integer a returns integer
	set Action_ev[a] = this_58
	if Event_first[this_58] == 0 then
		set Event_first[this_58] = a
		set Event_last[this_58] = a
		set Action_next[a] = 0
		set Action_prev[a] = 0
	else
		set Action_prev[Event_first[this_58]] = a
		set Action_next[a] = Event_first[this_58]
		set Event_first[this_58] = a
	endif
	return a
endfunction

function dispatch_Event_addAction takes integer this_58, integer a, string wurstStackTrace returns integer
	local integer addAction_result
	if Event_typeId[this_58] == 0 then
		if this_58 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Event.addAction" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Event.addAction on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	if Event_typeId[this_58] <= 788 then
		if Event_typeId[this_58] <= 786 then
			if Event_typeId[this_58] <= 681 then
				set addAction_result = Event_addAction(this_58, a)
			else
				set addAction_result = Event_addAction(this_58, a)
			endif
		else
			set addAction_result = Event_addAction(this_58, a)
		endif
	elseif Event_typeId[this_58] <= 791 then
		set addAction_result = Event_addAction(this_58, a)
	else
		set addAction_result = Event_addAction(this_58, a)
	endif
	return addAction_result
endfunction

function alloc_Unit2Event takes nothing returns integer
	local integer this_58
	if Event_firstFree == 0 then
		set Event_maxIndex = Event_maxIndex + 1
		set this_58 = Event_maxIndex
	else
		set Event_firstFree = Event_firstFree - 1
		set this_58 = Event_nextFree[Event_firstFree]
	endif
	set Event_typeId[this_58] = 793
	return this_58
endfunction

function construct_Event takes integer this_58 returns nothing
	set Event_first[this_58] = 0
	set Event_last[this_58] = 0
	set Event_checkData[this_58] = false
endfunction

function construct_Unit2Event takes integer this_58 returns nothing
	call construct_Event(this_58)
endfunction

function new_Unit2Event takes nothing returns integer
	local integer this_58 = alloc_Unit2Event()
	call construct_Unit2Event(this_58)
	return this_58
endfunction

function Unit_registerDeath takes integer this_58, integer action, string wurstStackTrace returns integer
	if Unit_onDeath[this_58] == 0 then
		set Unit_onDeath[this_58] = new_Unit2Event()
	endif
	return dispatch_Event_addAction(Unit_onDeath[this_58], action, "\n   UnitClass, line 1398" + wurstStackTrace)
endfunction

function dispatch_Unit_registerDeath takes integer this_58, integer action, string wurstStackTrace returns integer
	local integer registerDeath_result
	if Unit_typeId[this_58] == 0 then
		if this_58 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Unit.registerDeath" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Unit.registerDeath on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	if Unit_typeId[this_58] <= 709 then
		set registerDeath_result = Unit_registerDeath(this_58, action, "\n   UnitClass, line 1395" + wurstStackTrace)
	else
		set registerDeath_result = Unit_registerDeath(this_58, action, "\n   UnitClass, line 1395" + wurstStackTrace)
	endif
	return registerDeath_result
endfunction

function group_addUnit takes group this_58, unit u_2 returns nothing
	call GroupAddUnit(this_58, u_2)
endfunction

function alloc_Fx takes nothing returns integer
	local integer this_58
	if Fx_firstFree == 0 then
		set Fx_maxIndex = Fx_maxIndex + 1
		set this_58 = Fx_maxIndex
	else
		set Fx_firstFree = Fx_firstFree - 1
		set this_58 = Fx_nextFree[Fx_firstFree]
	endif
	set Fx_typeId[this_58] = 24
	return this_58
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
endfunction

function angle_degrees takes real this_radians returns real
	return this_radians * Maths_RADTODEG
endfunction

function createUnit takes player p_2, integer unitId, real pos_x, real pos_y, real facing_radians returns unit
	return CreateUnit(p_2, unitId, pos_x, pos_y, angle_degrees(facing_radians))
endfunction

function createDummy takes real pos_x, real pos_y, player owner, real facing_radians returns unit
	local unit u_2 = createUnit(owner, Basics_DUMMY_UNIT_ID, pos_x, pos_y, facing_radians)
	local unit receiver = u_2
	local unit receiver_2
	local unit receiver_3
	local unit receiver_4
	call unit_setXY(receiver, pos_x, pos_y)
	set receiver_2 = receiver
	call unit_addAbility(receiver_2, Basics_HEIGHT_ENABLER)
	set receiver_3 = receiver_2
	call unit_removeAbility(receiver_3, Basics_HEIGHT_ENABLER)
	set receiver_4 = receiver_3
	call unit_addAbility(receiver_4, Basics_LOCUST_ID)
	set createDummytempReturn = u_2
	set u_2 = null
	set receiver = null
	set receiver_2 = null
	set receiver_3 = null
	set receiver_4 = null
	return createDummytempReturn
endfunction

function ArrayQueue_units_get takes integer index1, integer index2, string wurstStackTrace returns unit
	local unit returnVal
	if index2 < 0 or index2 >= 6 then
		call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Index out of Bounds" + wurstStackTrace)
		call I2S(1 / 0)
	elseif index2 <= 2 then
		if index2 <= 1 then
			if index2 <= 0 then
				set returnVal = ArrayQueue_units_0[index1]
			else
				set returnVal = ArrayQueue_units_1[index1]
			endif
		else
			set returnVal = ArrayQueue_units_2[index1]
		endif
	elseif index2 <= 4 then
		if index2 <= 3 then
			set returnVal = ArrayQueue_units_3[index1]
		else
			set returnVal = ArrayQueue_units_4[index1]
		endif
	else
		set returnVal = ArrayQueue_units_5[index1]
	endif
	set ArrayQueue_units_gettempReturn = returnVal
	set returnVal = null
	return ArrayQueue_units_gettempReturn
endfunction

<<<<<<< HEAD
function ArrayQueue_dequeue takes integer this_57, string wurstStackTrace returns unit
	if ArrayQueue_size[this_57] > 0 then
		set ArrayQueue_size[this_57] = ArrayQueue_size[this_57] - 1
		set ArrayQueue_fp[this_57] = ModuloInteger(ArrayQueue_fp[this_57] + 1, NewDummyRecycler_SAVED_UNITS_PER_ANGLE)
		return ArrayQueue_units_get(this_57, ArrayQueue_fp[this_57], "\n   NewDummyRecycler, line 55" + wurstStackTrace)
=======
function ArrayQueue_dequeue takes integer this_58, string wurstStackTrace returns unit
	if ArrayQueue_size[this_58] > 0 then
		set ArrayQueue_size[this_58] = ArrayQueue_size[this_58] - 1
		set ArrayQueue_fp[this_58] = ModuloInteger(ArrayQueue_fp[this_58] + 1, NewDummyRecycler_SAVED_UNITS_PER_ANGLE)
		return ArrayQueue_units_get(this_58, ArrayQueue_fp[this_58], "\n   NewDummyRecycler, line 55" + wurstStackTrace)
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
	else
		call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Queue empty" + wurstStackTrace)
		call I2S(1 / 0)
		return null
	endif
endfunction

<<<<<<< HEAD
function dispatch_ArrayQueue_dequeue takes integer this_57, string wurstStackTrace returns unit
	local unit dequeue_result
	if ArrayQueue_typeId[this_57] == 0 then
		if this_57 == 0 then
=======
function dispatch_ArrayQueue_dequeue takes integer this_58, string wurstStackTrace returns unit
	local unit dequeue_result
	if ArrayQueue_typeId[this_58] == 0 then
		if this_58 == 0 then
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling ArrayQueue.dequeue" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called ArrayQueue.dequeue on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
<<<<<<< HEAD
	set dequeue_result = ArrayQueue_dequeue(this_57, "\n   NewDummyRecycler, line 51" + wurstStackTrace)
=======
	set dequeue_result = ArrayQueue_dequeue(this_58, "\n   NewDummyRecycler, line 51" + wurstStackTrace)
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
	set dispatch_ArrayQueue_dequeuetempReturn = dequeue_result
	set dequeue_result = null
	return dispatch_ArrayQueue_dequeuetempReturn
endfunction

<<<<<<< HEAD
function unit_unpause takes unit this_57 returns nothing
	call PauseUnit(this_57, false)
=======
function unit_unpause takes unit this_58 returns nothing
	call PauseUnit(this_58, false)
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
endfunction

function DummyRecycler_get takes real pos_x, real pos_y, real a_radians, string wurstStackTrace returns unit
	local integer angleIndex = real_toInt(ModuloReal(angle_degrees(a_radians), 360.)) / NewDummyRecycler_DIFFERENT_ANGLES
	local unit receiver
	local unit receiver_2
	if ArrayQueue_size[DummyRecycler_angleQueues[angleIndex]] > 0 then
		set receiver = dispatch_ArrayQueue_dequeue(DummyRecycler_angleQueues[angleIndex], "\n   NewDummyRecycler, line 15" + wurstStackTrace)
		call unit_setXY(receiver, pos_x, pos_y)
		set receiver_2 = receiver
		call unit_unpause(receiver_2)
		set DummyRecycler_gettempReturn = receiver_2
		set receiver = null
		set receiver_2 = null
		return DummyRecycler_gettempReturn
	else
		set receiver = null
		set receiver_2 = null
		return createDummy(pos_x, pos_y, Basics_DUMMY_PLAYER, a_radians)
	endif
endfunction

<<<<<<< HEAD
function Fx_setFx takes integer this_57, string newpath returns nothing
	if Fx_fx[this_57] != null then
		call effect_destr(Fx_fx[this_57])
	endif
	if newpath == "" then
		set Fx_fx[this_57] = null
	else
		set Fx_fx[this_57] = unit_addEffect(Fx_dummy[this_57], newpath, "origin")
	endif
endfunction

function dispatch_Fx_setFx takes integer this_57, string newpath, string wurstStackTrace returns nothing
	if Fx_typeId[this_57] == 0 then
		if this_57 == 0 then
=======
function Fx_setFx takes integer this_58, string newpath returns nothing
	if Fx_fx[this_58] != null then
		call effect_destr(Fx_fx[this_58])
	endif
	if newpath == "" then
		set Fx_fx[this_58] = null
	else
		set Fx_fx[this_58] = unit_addEffect(Fx_dummy[this_58], newpath, "origin")
	endif
endfunction

function dispatch_Fx_setFx takes integer this_58, string newpath, string wurstStackTrace returns nothing
	if Fx_typeId[this_58] == 0 then
		if this_58 == 0 then
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Fx.setFx" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Fx.setFx on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
<<<<<<< HEAD
	call Fx_setFx(this_57, newpath)
endfunction

function unit_setFlyHeight takes unit this_57, real height, real rate returns nothing
	call SetUnitFlyHeight(this_57, height, rate)
endfunction

function Fx_setZ takes integer this_57, real z returns nothing
	call unit_setFlyHeight(Fx_dummy[this_57], z, 0.)
endfunction

function dispatch_Fx_setZ takes integer this_57, real z, string wurstStackTrace returns nothing
	if Fx_typeId[this_57] == 0 then
		if this_57 == 0 then
=======
	call Fx_setFx(this_58, newpath)
endfunction

function unit_setFlyHeight takes unit this_58, real height, real rate returns nothing
	call SetUnitFlyHeight(this_58, height, rate)
endfunction

function Fx_setZ takes integer this_58, real z returns nothing
	call unit_setFlyHeight(Fx_dummy[this_58], z, 0.)
endfunction

function dispatch_Fx_setZ takes integer this_58, real z, string wurstStackTrace returns nothing
	if Fx_typeId[this_58] == 0 then
		if this_58 == 0 then
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Fx.setZ" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Fx.setZ on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
<<<<<<< HEAD
	call Fx_setZ(this_57, z)
endfunction

function construct_Fx takes integer this_57, real pos_x, real pos_y, real pos_z, real facing_radians, string fxpath, string wurstStackTrace returns nothing
	set Fx_dummy[this_57] = null
	set Fx_fx[this_57] = null
	set Fx_dummy[this_57] = DummyRecycler_get(vec3_toVec2(pos_x, pos_y, pos_z), vec3_toVec2_return_y, facing_radians, "\n   Fx, line 44" + wurstStackTrace)
	call dispatch_Fx_setZ(this_57, pos_z, "\n   Fx, line 45" + wurstStackTrace)
	call dispatch_Fx_setFx(this_57, fxpath, "\n   Fx, line 46" + wurstStackTrace)
endfunction

function new_Fx takes real pos_x, real pos_y, real pos_z, real facing_radians, string fxpath, string wurstStackTrace returns integer
	local integer this_57 = alloc_Fx()
	call construct_Fx(this_57, pos_x, pos_y, pos_z, facing_radians, fxpath, "\n   Fx, line 43" + wurstStackTrace)
	return this_57
=======
	call Fx_setZ(this_58, z)
endfunction

function construct_Fx takes integer this_58, real pos_x, real pos_y, real pos_z, real facing_radians, string fxpath, string wurstStackTrace returns nothing
	set Fx_dummy[this_58] = null
	set Fx_fx[this_58] = null
	set Fx_dummy[this_58] = DummyRecycler_get(vec3_toVec2(pos_x, pos_y, pos_z), vec3_toVec2_return_y, facing_radians, "\n   Fx, line 44" + wurstStackTrace)
	call dispatch_Fx_setZ(this_58, pos_z, "\n   Fx, line 45" + wurstStackTrace)
	call dispatch_Fx_setFx(this_58, fxpath, "\n   Fx, line 46" + wurstStackTrace)
endfunction

function new_Fx takes real pos_x, real pos_y, real pos_z, real facing_radians, string fxpath, string wurstStackTrace returns integer
	local integer this_58 = alloc_Fx()
	call construct_Fx(this_58, pos_x, pos_y, pos_z, facing_radians, fxpath, "\n   Fx, line 43" + wurstStackTrace)
	return this_58
endfunction

function ControlPoint_enter takes integer this_58, integer u_2, string wurstStackTrace returns nothing
	local integer data
	local integer clVar
	local integer tempIndex
	local string temp
	local real temp_2
	local real temp_3
	local real temp_4
	local integer temp_5
	local integer temp_6
	local integer temp_7
	call group_addUnit(ControlPoint_inRange[this_58], Unit_u[u_2])
	set data = dispatch_HashMap_get(ControlPoint_captureData, u_2, "\n   ControlPoint, line 93" + wurstStackTrace)
	if Unit_team[u_2] != ControlPoint_owner[this_58] then
		set temp_5 = data
		set temp = Lightning_FORKED_LIGHTNING
		set temp_2 = dispatch_Unit_getMiddle(u_2, "\n   ControlPoint, line 95" + wurstStackTrace)
		set temp_3 = dispatch_Unit_getMiddle_return_y
		set temp_4 = dispatch_Unit_getMiddle_return_z
		set tempIndex = this_58
		set CaptureData_l1[temp_5] = createLightning(temp, temp_2, temp_3, temp_4, ControlPoint_pos3[tempIndex], ControlPoint_pos3_2[tempIndex], ControlPoint_pos3_3[tempIndex])
		set CaptureData_fx[data] = new_Fx(dispatch_Unit_getMiddle(u_2, "\n   ControlPoint, line 96" + wurstStackTrace), dispatch_Unit_getMiddle_return_y, dispatch_Unit_getMiddle_return_z, real_asAngleDegrees(0.), "Abilities\\Spells\\Orc\\Bloodlust\\BloodlustTarget.mdl", "\n   ControlPoint, line 96" + wurstStackTrace)
		call dispatch_Fx_setScale(CaptureData_fx[data], 3., "\n   ControlPoint, line 97" + wurstStackTrace)
	endif
	set temp_7 = data
	set temp_6 = u_2
	set clVar = alloc_Closure_13()
	set this_57[clVar] = this_58
	set CaptureData_onDeath[temp_7] = dispatch_Unit_registerDeath(temp_6, clVar, "\n   ControlPoint, line 98" + wurstStackTrace)
endfunction

function dispatch_ControlPoint_enter takes integer this_58, integer u_2, string wurstStackTrace returns nothing
	if ControlPoint_typeId[this_58] == 0 then
		if this_58 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling ControlPoint.enter" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called ControlPoint.enter on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call ControlPoint_enter(this_58, u_2, "\n   ControlPoint, line 91" + wurstStackTrace)
endfunction

function ControlPoint_getRadius takes integer this_58, real ang_radians returns real
	return ControlPoint_maxDistance * Sin(60. * Maths_DEGTORAD) / Sin((120. - ModuloReal(angle_degrees(ang_radians) + 30., 60.)) * Maths_DEGTORAD)
endfunction

function dispatch_ControlPoint_getRadius takes integer this_58, real ang_radians, string wurstStackTrace returns real
	local real getRadius_result
	if ControlPoint_typeId[this_58] == 0 then
		if this_58 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling ControlPoint.getRadius" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called ControlPoint.getRadius on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	set getRadius_result = ControlPoint_getRadius(this_58, ang_radians)
	return getRadius_result
endfunction

function group_contains takes group this_58, unit u_2 returns boolean
	return IsUnitInGroup(u_2, this_58)
endfunction

function group_enumUnitsInRange_2 takes group this_58, real pos_x, real pos_y, real range returns nothing
	call GroupEnumUnitsInRange(this_58, pos_x, pos_y, range, null)
endfunction

function vec2_angleTo takes real this_x, real this_y, real v_x, real v_y returns real
	return real_asAngleRadians(Atan2(v_y - this_y, v_x - this_x))
endfunction

function ControlPoint_inRangeCheck takes integer this_58, string wurstStackTrace returns nothing
	local group receiver = TempGroups_ENUM_GROUP
	local group temp = receiver
	local integer tempIndex = this_58
	local group wurst__iterator0
	local unit u_2
	local integer tempIndex_2
	local integer tempIndex_3
	local integer temp_2
	local real temp_3
	local real temp_4
	local real temp_5
	local boolean andLeft
	call group_enumUnitsInRange_2(temp, ControlPoint_pos2[tempIndex], ControlPoint_pos2_2[tempIndex], ControlPoint_maxDistance)
	set wurst__iterator0 = group_iterator(receiver)
	loop
		exitwhen  not group_hasNext(wurst__iterator0)
		set u_2 = group_next(wurst__iterator0)
		if unit_getUserData(u_2) != 0 and unit_getAbilityLevel(u_2, 1684365668) == 0 and ( not group_contains(ControlPoint_inRange[this_58], u_2)) then
			set temp_2 = this_58
			set tempIndex_2 = this_58
			set temp_5 = dispatch_ControlPoint_getRadius(temp_2, vec2_angleTo(ControlPoint_pos2[tempIndex_2], ControlPoint_pos2_2[tempIndex_2], unit_getPos(u_2), unit_getPos_return_y), "\n   ControlPoint, line 88" + wurstStackTrace)
			set temp_3 = unit_getPos(u_2)
			set temp_4 = unit_getPos_return_y
			set tempIndex_3 = this_58
			set andLeft = temp_5 >= vec2_distToVec(temp_3, temp_4, ControlPoint_pos2[tempIndex_3], ControlPoint_pos2_2[tempIndex_3])
		else
			set andLeft = false
		endif
		if andLeft then
			call dispatch_ControlPoint_enter(this_58, unit_getUserData(u_2), "\n   ControlPoint, line 89" + wurstStackTrace)
		endif
	endloop
	call group_close(wurst__iterator0)
	set wurst__iterator0 = null
	set receiver = null
	set u_2 = null
	set temp = null
endfunction

function dispatch_ControlPoint_inRangeCheck takes integer this_58, string wurstStackTrace returns nothing
	if ControlPoint_typeId[this_58] == 0 then
		if this_58 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling ControlPoint.inRangeCheck" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called ControlPoint.inRangeCheck on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call ControlPoint_inRangeCheck(this_58, "\n   ControlPoint, line 86" + wurstStackTrace)
endfunction

function closure_impl_72 takes string wurstStackTrace returns nothing
	call dispatch_ControlPoint_inRangeCheck(timer_getData(GetExpiredTimer(), "\n   ControlPoint, line 78" + wurstStackTrace), "\n   ControlPoint, line 78" + wurstStackTrace)
endfunction

function bridge_closure_impl takes nothing returns nothing
	call closure_impl_72("\n   ControlPoint, line 78")
endfunction

function angle_op_minus takes real this_radians, real other_radians returns real
	return this_radians - other_radians
endfunction

function angle_op_plus takes real this_radians, real other_radians returns real
	return this_radians + other_radians
endfunction

function alloc_Conductor takes nothing returns integer
	local integer this_58
	if Conductor_firstFree == 0 then
		set Conductor_maxIndex = Conductor_maxIndex + 1
		set this_58 = Conductor_maxIndex
	else
		set Conductor_firstFree = Conductor_firstFree - 1
		set this_58 = Conductor_nextFree[Conductor_firstFree]
	endif
	set Conductor_typeId[this_58] = 856
	return this_58
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
endfunction

function vec2_withZ takes real this_x, real this_y, real z returns real
	set vec2_withZ_return_x = this_x
	set vec2_withZ_return_y = this_y
	set vec2_withZ_return_z = z
	return vec2_withZ_return_x
endfunction

<<<<<<< HEAD
function construct_Conductor takes integer this_57, unit caster, unit source, integer typ, real ang_radians, integer lvl, string wurstStackTrace returns nothing
=======
function construct_Conductor takes integer this_58, unit caster, unit source, integer typ, real ang_radians, integer lvl, string wurstStackTrace returns nothing
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
	local real pos_x
	local real pos_y
	local timer receiver
	local timer receiver_2
	local real temp_pos_x
	local real temp_pos_y
	local integer tempIndex
<<<<<<< HEAD
	set Conductor_distance[this_57] = Conductor_range
	call print("created")
	set Conductor_owner[this_57] = caster
	set Conductor_lvl[this_57] = lvl
=======
	set Conductor_distance[this_58] = Conductor_range
	call print("created")
	set Conductor_owner[this_58] = caster
	set Conductor_lvl[this_58] = lvl
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
	set temp_pos_x = unit_getPos(source)
	set temp_pos_y = unit_getPos_return_y
	set pos_x = temp_pos_x
	set pos_y = temp_pos_y
<<<<<<< HEAD
	set Conductor_dummy[this_57] = new_Fx(vec2_withZ(vec2_polarOffset(pos_x, pos_y, ang_radians, 50. + Conductor_missleRadius + 10.), vec2_polarOffset_return_y, Conductor_missleHeight), vec2_withZ_return_y, vec2_withZ_return_z, ang_radians, "Abilities\\Weapons\\FireBallMissile\\FireBallMissile.mdl", "\n   Conductor, line 56" + wurstStackTrace)
	set tempIndex = this_57
	set Conductor_speed[tempIndex] = vec2_polarOffset(0., 0., ang_radians, Conductor_missleSpeed)
	set Conductor_speed_2[tempIndex] = vec2_polarOffset_return_y
	set Conductor_typ[this_57] = typ
	set receiver = getTimer("\n   Conductor, line 59" + wurstStackTrace)
	call timer_setData(receiver, this_57, "\n   Conductor, line 59" + wurstStackTrace)
	set receiver_2 = receiver
	call timer_startPeriodic(receiver_2, Basics_ANIMATION_PERIOD, ref_function_bridge_closure_impl_2)
	set Conductor_t[this_57] = receiver_2
=======
	set Conductor_dummy[this_58] = new_Fx(vec2_withZ(vec2_polarOffset(pos_x, pos_y, ang_radians, 50. + Conductor_missleRadius + 10.), vec2_polarOffset_return_y, Conductor_missleHeight), vec2_withZ_return_y, vec2_withZ_return_z, ang_radians, "Abilities\\Weapons\\FireBallMissile\\FireBallMissile.mdl", "\n   Conductor, line 56" + wurstStackTrace)
	set tempIndex = this_58
	set Conductor_speed[tempIndex] = vec2_polarOffset(0., 0., ang_radians, Conductor_missleSpeed)
	set Conductor_speed_2[tempIndex] = vec2_polarOffset_return_y
	set Conductor_typ[this_58] = typ
	set receiver = getTimer("\n   Conductor, line 59" + wurstStackTrace)
	call timer_setData(receiver, this_58, "\n   Conductor, line 59" + wurstStackTrace)
	set receiver_2 = receiver
	call timer_startPeriodic(receiver_2, Basics_ANIMATION_PERIOD, ref_function_bridge_closure_impl_4)
	set Conductor_t[this_58] = receiver_2
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
	set receiver = null
	set receiver_2 = null
endfunction

function new_Conductor takes unit caster, unit source, integer typ, real ang_radians, integer lvl, string wurstStackTrace returns integer
<<<<<<< HEAD
	local integer this_57 = alloc_Conductor()
	call construct_Conductor(this_57, caster, source, typ, ang_radians, lvl, "\n   Conductor, line 51" + wurstStackTrace)
	return this_57
endfunction

function real_asAngleDegrees takes real this_57 returns real
	return this_57 * Maths_DEGTORAD
endfunction

function Conductor_createNewMissles takes integer this_57, unit u_2, string wurstStackTrace returns nothing
	local integer temp = Conductor_typ[this_57]
=======
	local integer this_58 = alloc_Conductor()
	call construct_Conductor(this_58, caster, source, typ, ang_radians, lvl, "\n   Conductor, line 51" + wurstStackTrace)
	return this_58
endfunction

function Conductor_createNewMissles takes integer this_58, unit u_2, string wurstStackTrace returns nothing
	local integer temp = Conductor_typ[this_58]
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
	local real alpha_radians
	local real alpha_radians_2
	local real alpha_radians_3
	local real alpha_radians_4
	local integer i
	local real alpha_radians_5
	local integer i_2
	if temp == 1 then
<<<<<<< HEAD
		call new_Conductor(Conductor_owner[this_57], u_2, 0, vec2_angleTo(dispatch_Fx_getPos2(Conductor_dummy[this_57], "\n   Conductor, line 103" + wurstStackTrace), dispatch_Fx_getPos2_return_y, unit_getPos(u_2), unit_getPos_return_y), Conductor_lvl[this_57], "\n   Conductor, line 103" + wurstStackTrace)
	elseif temp == 2 then
		set alpha_radians = vec2_angleTo(dispatch_Fx_getPos2(Conductor_dummy[this_57], "\n   Conductor, line 105" + wurstStackTrace), dispatch_Fx_getPos2_return_y, unit_getPos(u_2), unit_getPos_return_y)
		call new_Conductor(Conductor_owner[this_57], u_2, 0, angle_op_plus(alpha_radians, real_asAngleDegrees(45.)), Conductor_lvl[this_57], "\n   Conductor, line 106" + wurstStackTrace)
		call new_Conductor(Conductor_owner[this_57], u_2, 0, angle_op_minus(alpha_radians, real_asAngleDegrees(315.)), Conductor_lvl[this_57], "\n   Conductor, line 107" + wurstStackTrace)
	elseif temp == 3 then
		set alpha_radians_2 = vec2_angleTo(dispatch_Fx_getPos2(Conductor_dummy[this_57], "\n   Conductor, line 109" + wurstStackTrace), dispatch_Fx_getPos2_return_y, unit_getPos(u_2), unit_getPos_return_y)
		call new_Conductor(Conductor_owner[this_57], u_2, 0, alpha_radians_2, Conductor_lvl[this_57], "\n   Conductor, line 110" + wurstStackTrace)
		call new_Conductor(Conductor_owner[this_57], u_2, 0, angle_op_plus(alpha_radians_2, real_asAngleDegrees(45.)), Conductor_lvl[this_57], "\n   Conductor, line 111" + wurstStackTrace)
		call new_Conductor(Conductor_owner[this_57], u_2, 0, angle_op_minus(alpha_radians_2, real_asAngleDegrees(315.)), Conductor_lvl[this_57], "\n   Conductor, line 112" + wurstStackTrace)
	elseif temp == 4 then
		set alpha_radians_3 = vec2_angleTo(dispatch_Fx_getPos2(Conductor_dummy[this_57], "\n   Conductor, line 114" + wurstStackTrace), dispatch_Fx_getPos2_return_y, unit_getPos(u_2), unit_getPos_return_y)
		call new_Conductor(Conductor_owner[this_57], u_2, 3, alpha_radians_3, Conductor_lvl[this_57], "\n   Conductor, line 115" + wurstStackTrace)
		call new_Conductor(Conductor_owner[this_57], u_2, 3, angle_op_plus(alpha_radians_3, real_asAngleDegrees(45.)), Conductor_lvl[this_57], "\n   Conductor, line 116" + wurstStackTrace)
		call new_Conductor(Conductor_owner[this_57], u_2, 3, angle_op_plus(alpha_radians_3, real_asAngleDegrees(315.)), Conductor_lvl[this_57], "\n   Conductor, line 117" + wurstStackTrace)
	elseif temp == 6 then
		set alpha_radians_4 = vec2_angleTo(dispatch_Fx_getPos2(Conductor_dummy[this_57], "\n   Conductor, line 119" + wurstStackTrace), dispatch_Fx_getPos2_return_y, unit_getPos(u_2), unit_getPos_return_y)
		set i = 1
		loop
			exitwhen i > 6
			call new_Conductor(Conductor_owner[this_57], u_2, 5, angle_op_plus(alpha_radians_4, real_asAngleDegrees(i * 60.)), Conductor_lvl[this_57], "\n   Conductor, line 121" + wurstStackTrace)
			set i = i + 1
		endloop
	elseif temp == 5 then
		set alpha_radians_5 = vec2_angleTo(dispatch_Fx_getPos2(Conductor_dummy[this_57], "\n   Conductor, line 123" + wurstStackTrace), dispatch_Fx_getPos2_return_y, unit_getPos(u_2), unit_getPos_return_y)
		set i_2 = 1
		loop
			exitwhen i_2 > 6
			call new_Conductor(Conductor_owner[this_57], u_2, 0, angle_op_plus(alpha_radians_5, real_asAngleDegrees(i_2 * 60.)), Conductor_lvl[this_57], "\n   Conductor, line 125" + wurstStackTrace)
=======
		call new_Conductor(Conductor_owner[this_58], u_2, 0, vec2_angleTo(dispatch_Fx_getPos2(Conductor_dummy[this_58], "\n   Conductor, line 103" + wurstStackTrace), dispatch_Fx_getPos2_return_y, unit_getPos(u_2), unit_getPos_return_y), Conductor_lvl[this_58], "\n   Conductor, line 103" + wurstStackTrace)
	elseif temp == 2 then
		set alpha_radians = vec2_angleTo(dispatch_Fx_getPos2(Conductor_dummy[this_58], "\n   Conductor, line 105" + wurstStackTrace), dispatch_Fx_getPos2_return_y, unit_getPos(u_2), unit_getPos_return_y)
		call new_Conductor(Conductor_owner[this_58], u_2, 0, angle_op_plus(alpha_radians, real_asAngleDegrees(45.)), Conductor_lvl[this_58], "\n   Conductor, line 106" + wurstStackTrace)
		call new_Conductor(Conductor_owner[this_58], u_2, 0, angle_op_minus(alpha_radians, real_asAngleDegrees(315.)), Conductor_lvl[this_58], "\n   Conductor, line 107" + wurstStackTrace)
	elseif temp == 3 then
		set alpha_radians_2 = vec2_angleTo(dispatch_Fx_getPos2(Conductor_dummy[this_58], "\n   Conductor, line 109" + wurstStackTrace), dispatch_Fx_getPos2_return_y, unit_getPos(u_2), unit_getPos_return_y)
		call new_Conductor(Conductor_owner[this_58], u_2, 0, alpha_radians_2, Conductor_lvl[this_58], "\n   Conductor, line 110" + wurstStackTrace)
		call new_Conductor(Conductor_owner[this_58], u_2, 0, angle_op_plus(alpha_radians_2, real_asAngleDegrees(45.)), Conductor_lvl[this_58], "\n   Conductor, line 111" + wurstStackTrace)
		call new_Conductor(Conductor_owner[this_58], u_2, 0, angle_op_minus(alpha_radians_2, real_asAngleDegrees(315.)), Conductor_lvl[this_58], "\n   Conductor, line 112" + wurstStackTrace)
	elseif temp == 4 then
		set alpha_radians_3 = vec2_angleTo(dispatch_Fx_getPos2(Conductor_dummy[this_58], "\n   Conductor, line 114" + wurstStackTrace), dispatch_Fx_getPos2_return_y, unit_getPos(u_2), unit_getPos_return_y)
		call new_Conductor(Conductor_owner[this_58], u_2, 3, alpha_radians_3, Conductor_lvl[this_58], "\n   Conductor, line 115" + wurstStackTrace)
		call new_Conductor(Conductor_owner[this_58], u_2, 3, angle_op_plus(alpha_radians_3, real_asAngleDegrees(45.)), Conductor_lvl[this_58], "\n   Conductor, line 116" + wurstStackTrace)
		call new_Conductor(Conductor_owner[this_58], u_2, 3, angle_op_plus(alpha_radians_3, real_asAngleDegrees(315.)), Conductor_lvl[this_58], "\n   Conductor, line 117" + wurstStackTrace)
	elseif temp == 6 then
		set alpha_radians_4 = vec2_angleTo(dispatch_Fx_getPos2(Conductor_dummy[this_58], "\n   Conductor, line 119" + wurstStackTrace), dispatch_Fx_getPos2_return_y, unit_getPos(u_2), unit_getPos_return_y)
		set i = 1
		loop
			exitwhen i > 6
			call new_Conductor(Conductor_owner[this_58], u_2, 5, angle_op_plus(alpha_radians_4, real_asAngleDegrees(i * 60.)), Conductor_lvl[this_58], "\n   Conductor, line 121" + wurstStackTrace)
			set i = i + 1
		endloop
	elseif temp == 5 then
		set alpha_radians_5 = vec2_angleTo(dispatch_Fx_getPos2(Conductor_dummy[this_58], "\n   Conductor, line 123" + wurstStackTrace), dispatch_Fx_getPos2_return_y, unit_getPos(u_2), unit_getPos_return_y)
		set i_2 = 1
		loop
			exitwhen i_2 > 6
			call new_Conductor(Conductor_owner[this_58], u_2, 0, angle_op_plus(alpha_radians_5, real_asAngleDegrees(i_2 * 60.)), Conductor_lvl[this_58], "\n   Conductor, line 125" + wurstStackTrace)
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
			set i_2 = i_2 + 1
		endloop
	endif
endfunction

<<<<<<< HEAD
function dispatch_Conductor_createNewMissles takes integer this_57, unit u_2, string wurstStackTrace returns nothing
	if Conductor_typeId[this_57] == 0 then
		if this_57 == 0 then
=======
function dispatch_Conductor_createNewMissles takes integer this_58, unit u_2, string wurstStackTrace returns nothing
	if Conductor_typeId[this_58] == 0 then
		if this_58 == 0 then
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Conductor.createNewMissles" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Conductor.createNewMissles on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
<<<<<<< HEAD
	call Conductor_createNewMissles(this_57, u_2, "\n   Conductor, line 100" + wurstStackTrace)
endfunction

function Conductor_onDestroy takes integer this_57, string wurstStackTrace returns nothing
	call dispatch_Fx_destroyFx(Conductor_dummy[this_57], "\n   Conductor, line 129" + wurstStackTrace)
	call timer_release(Conductor_t[this_57], "\n   Conductor, line 130" + wurstStackTrace)
=======
	call Conductor_createNewMissles(this_58, u_2, "\n   Conductor, line 100" + wurstStackTrace)
endfunction

function Conductor_onDestroy takes integer this_58, string wurstStackTrace returns nothing
	call dispatch_Fx_destroyFx(Conductor_dummy[this_58], "\n   Conductor, line 129" + wurstStackTrace)
	call timer_release(Conductor_t[this_58], "\n   Conductor, line 130" + wurstStackTrace)
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
endfunction

function dealloc_Conductor takes integer obj, string wurstStackTrace returns nothing
	if Conductor_typeId[obj] == 0 then
		call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Double free: object of type Conductor" + wurstStackTrace)
		call I2S(1 / 0)
	else
		set Conductor_nextFree[Conductor_firstFree] = obj
		set Conductor_firstFree = Conductor_firstFree + 1
		set Conductor_typeId[obj] = 0
	endif
endfunction

<<<<<<< HEAD
function destroyConductor takes integer this_57, string wurstStackTrace returns nothing
	call Conductor_onDestroy(this_57, "\n   Conductor, line 128" + wurstStackTrace)
	call dealloc_Conductor(this_57, "\n   Conductor, line 128" + wurstStackTrace)
endfunction

function dispatch_Conductor_destroyConductor takes integer this_57, string wurstStackTrace returns nothing
	if Conductor_typeId[this_57] == 0 then
		if this_57 == 0 then
=======
function destroyConductor takes integer this_58, string wurstStackTrace returns nothing
	call Conductor_onDestroy(this_58, "\n   Conductor, line 128" + wurstStackTrace)
	call dealloc_Conductor(this_58, "\n   Conductor, line 128" + wurstStackTrace)
endfunction

function dispatch_Conductor_destroyConductor takes integer this_58, string wurstStackTrace returns nothing
	if Conductor_typeId[this_58] == 0 then
		if this_58 == 0 then
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Conductor.destroyConductor" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Conductor.destroyConductor on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
<<<<<<< HEAD
	call destroyConductor(this_57, "\n   Conductor, line 35" + wurstStackTrace)
endfunction

function player_isEnemyOf takes player this_57, player p_2 returns boolean
	return IsPlayerEnemy(this_57, p_2)
endfunction

function unit_damageTarget takes unit this_57, unit target, real amount_51 returns nothing
	call UnitDamageTarget(this_57, target, amount_51, false, false, ATTACK_TYPE_NORMAL, DAMAGE_TYPE_UNIVERSAL, WEAPON_TYPE_WHOKNOWS)
endfunction

function unit_getOwner takes unit this_57 returns player
	return GetOwningPlayer(this_57)
endfunction

function Conductor_move takes integer this_57, string wurstStackTrace returns nothing
	local integer temp_3 = Conductor_dummy[this_57]
	local real temp = dispatch_Fx_getPos2(Conductor_dummy[this_57], "\n   Conductor, line 86" + wurstStackTrace)
	local real temp_2 = dispatch_Fx_getPos2_return_y
	local integer tempIndex = this_57
	local group wurst__iterator0
	local unit u_2
	call dispatch_Fx_setXY(temp_3, vec2_op_plus(temp, temp_2, Conductor_speed[tempIndex], Conductor_speed_2[tempIndex]), vec2_op_plus_return_y, "\n   Conductor, line 86" + wurstStackTrace)
	call group_enumUnitsInRange_2(TempGroups_ENUM_GROUP, dispatch_Fx_getPos2(Conductor_dummy[this_57], "\n   Conductor, line 87" + wurstStackTrace), dispatch_Fx_getPos2_return_y, Conductor_missleRadius)
=======
	call destroyConductor(this_58, "\n   Conductor, line 35" + wurstStackTrace)
endfunction

function player_isEnemyOf takes player this_58, player p_2 returns boolean
	return IsPlayerEnemy(this_58, p_2)
endfunction

function unit_damageTarget takes unit this_58, unit target, real amount_51 returns nothing
	call UnitDamageTarget(this_58, target, amount_51, false, false, ATTACK_TYPE_NORMAL, DAMAGE_TYPE_UNIVERSAL, WEAPON_TYPE_WHOKNOWS)
endfunction

function unit_getOwner takes unit this_58 returns player
	return GetOwningPlayer(this_58)
endfunction

function Conductor_move takes integer this_58, string wurstStackTrace returns nothing
	local integer temp_3 = Conductor_dummy[this_58]
	local real temp = dispatch_Fx_getPos2(Conductor_dummy[this_58], "\n   Conductor, line 86" + wurstStackTrace)
	local real temp_2 = dispatch_Fx_getPos2_return_y
	local integer tempIndex = this_58
	local group wurst__iterator0
	local unit u_2
	call dispatch_Fx_setXY(temp_3, vec2_op_plus(temp, temp_2, Conductor_speed[tempIndex], Conductor_speed_2[tempIndex]), vec2_op_plus_return_y, "\n   Conductor, line 86" + wurstStackTrace)
	call group_enumUnitsInRange_2(TempGroups_ENUM_GROUP, dispatch_Fx_getPos2(Conductor_dummy[this_58], "\n   Conductor, line 87" + wurstStackTrace), dispatch_Fx_getPos2_return_y, Conductor_missleRadius)
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
	set wurst__iterator0 = group_iterator(TempGroups_ENUM_GROUP)
	loop
		exitwhen  not group_hasNext(wurst__iterator0)
		set u_2 = group_next(wurst__iterator0)
<<<<<<< HEAD
		if player_isEnemyOf(unit_getOwner(u_2), unit_getOwner(Conductor_owner[this_57])) then
			call unit_damageTarget(Conductor_owner[this_57], u_2, Conductor_baseDamage + Conductor_bonusDamage * Pow(Conductor_lvl[this_57] - 1., Conductor_lvlFactor))
			call dispatch_Conductor_createNewMissles(this_57, u_2, "\n   Conductor, line 91" + wurstStackTrace)
			call dispatch_Conductor_destroyConductor(this_57, "\n   Conductor, line 92" + wurstStackTrace)
=======
		if player_isEnemyOf(unit_getOwner(u_2), unit_getOwner(Conductor_owner[this_58])) then
			call unit_damageTarget(Conductor_owner[this_58], u_2, Conductor_baseDamage + Conductor_bonusDamage * Pow(Conductor_lvl[this_58] - 1., Conductor_lvlFactor))
			call dispatch_Conductor_createNewMissles(this_58, u_2, "\n   Conductor, line 91" + wurstStackTrace)
			call dispatch_Conductor_destroyConductor(this_58, "\n   Conductor, line 92" + wurstStackTrace)
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
			call print("hit")
			call group_close(wurst__iterator0)
			set wurst__iterator0 = null
			set u_2 = null
			return
		endif
	endloop
	call group_close(wurst__iterator0)
<<<<<<< HEAD
	set Conductor_distance[this_57] = Conductor_distance[this_57] - Conductor_missleSpeed
	if Conductor_distance[this_57] <= 0. then
		call print("meep")
		call dispatch_Conductor_destroyConductor(this_57, "\n   Conductor, line 98" + wurstStackTrace)
=======
	set Conductor_distance[this_58] = Conductor_distance[this_58] - Conductor_missleSpeed
	if Conductor_distance[this_58] <= 0. then
		call print("meep")
		call dispatch_Conductor_destroyConductor(this_58, "\n   Conductor, line 98" + wurstStackTrace)
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
	endif
	set wurst__iterator0 = null
	set u_2 = null
endfunction

<<<<<<< HEAD
function dispatch_Conductor_move takes integer this_57, string wurstStackTrace returns nothing
	if Conductor_typeId[this_57] == 0 then
		if this_57 == 0 then
=======
function dispatch_Conductor_move takes integer this_58, string wurstStackTrace returns nothing
	if Conductor_typeId[this_58] == 0 then
		if this_58 == 0 then
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Conductor.move" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Conductor.move on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
<<<<<<< HEAD
	call Conductor_move(this_57, "\n   Conductor, line 85" + wurstStackTrace)
endfunction

function closure_impl_69 takes string wurstStackTrace returns nothing
	call dispatch_Conductor_move(timer_getData(GetExpiredTimer(), "\n   Conductor, line 61" + wurstStackTrace), "\n   Conductor, line 61" + wurstStackTrace)
endfunction

function bridge_closure_impl_2 takes nothing returns nothing
	call closure_impl_69("\n   Conductor, line 59")
endfunction

function closure_impl_70 takes string wurstStackTrace returns nothing
	call dispatch_Conductor_move(timer_getData(GetExpiredTimer(), "\n   Conductor, line 83" + wurstStackTrace), "\n   Conductor, line 83" + wurstStackTrace)
endfunction

function bridge_closure_impl_3 takes nothing returns nothing
	call closure_impl_70("\n   Conductor, line 81")
endfunction

function closure_impl_71 takes string wurstStackTrace returns nothing
	set TrackableEx_playerClickBefore[timer_getData(GetExpiredTimer(), "\n   Trackable, line 60" + wurstStackTrace)] = false
endfunction

function bridge_closure_impl_4 takes nothing returns nothing
	call closure_impl_71("\n   Trackable, line 59")
endfunction

function unit_getFacingAngle takes unit this_57 returns real
	return real_asAngleDegrees(GetUnitFacing(this_57))
endfunction

function closure_impl_72 takes string wurstStackTrace returns nothing
	local integer wurst__iterator0 = dispatch_LinkedList_iterator(Hero_toMove, "\n   HeroClass, line 23" + wurstStackTrace)
	local integer h
	loop
		exitwhen  not dispatch_LLIterator_hasNext(wurst__iterator0, "\n   HeroClass, line 23" + wurstStackTrace)
		set h = dispatch_LLIterator_next(wurst__iterator0, "\n   HeroClass, line 23" + wurstStackTrace)
		call unit_setXY(Unit_u[h], vec2_polarOffset(unit_getPos(Unit_u[h]), unit_getPos_return_y, unit_getFacingAngle(Unit_u[h]), 0.5), vec2_polarOffset_return_y)
	endloop
	call dispatch_LLIterator_close(wurst__iterator0, "\n   HeroClass, line 23" + wurstStackTrace)
endfunction

function bridge_closure_impl_5 takes nothing returns nothing
	call closure_impl_72("\n   HeroClass, line 22")
endfunction

function closure_impl_73 takes string wurstStackTrace returns nothing
	call dispatch_Missle_destroyMissle_2(timer_getData(GetExpiredTimer(), "\n   RamisHomingMissle, line 39" + wurstStackTrace), "\n   RamisHomingMissle, line 39" + wurstStackTrace)
endfunction

function bridge_closure_impl_6 takes nothing returns nothing
	call closure_impl_73("\n   RamisHomingMissle, line 36")
=======
	call Conductor_move(this_58, "\n   Conductor, line 85" + wurstStackTrace)
endfunction

function closure_impl_73 takes string wurstStackTrace returns nothing
	call dispatch_Conductor_move(timer_getData(GetExpiredTimer(), "\n   Conductor, line 83" + wurstStackTrace), "\n   Conductor, line 83" + wurstStackTrace)
endfunction

function bridge_closure_impl_2 takes nothing returns nothing
	call closure_impl_73("\n   Conductor, line 81")
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
endfunction

function booleanFromIndex takes integer index returns boolean
	return index > 0
endfunction

<<<<<<< HEAD
function Stack_peek takes integer this_57 returns integer
	return SEntry_elem_2[Stack_top[this_57]]
endfunction

function dispatch_Stack_peek takes integer this_57, string wurstStackTrace returns integer
	local integer peek_result
	if Stack_typeId[this_57] == 0 then
		if this_57 == 0 then
=======
function Stack_peek takes integer this_58 returns integer
	return SEntry_elem_2[Stack_top[this_58]]
endfunction

function dispatch_Stack_peek takes integer this_58, string wurstStackTrace returns integer
	local integer peek_result
	if Stack_typeId[this_58] == 0 then
		if this_58 == 0 then
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Stack.peek" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Stack.peek on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
<<<<<<< HEAD
	set peek_result = Stack_peek(this_57)
	return peek_result
endfunction

function Stack_pop takes integer this_57 returns integer
	local integer val = Stack_top[this_57]
	set Stack_top[this_57] = SEntry_prev[Stack_top[this_57]]
	set Stack_size[this_57] = Stack_size[this_57] - 1
	return SEntry_elem_2[val]
endfunction

function dispatch_Stack_pop takes integer this_57, string wurstStackTrace returns integer
	local integer pop_result
	if Stack_typeId[this_57] == 0 then
		if this_57 == 0 then
=======
	set peek_result = Stack_peek(this_58)
	return peek_result
endfunction

function Stack_pop takes integer this_58 returns integer
	local integer val = Stack_top[this_58]
	set Stack_top[this_58] = SEntry_prev[Stack_top[this_58]]
	set Stack_size[this_58] = Stack_size[this_58] - 1
	return SEntry_elem_2[val]
endfunction

function dispatch_Stack_pop takes integer this_58, string wurstStackTrace returns integer
	local integer pop_result
	if Stack_typeId[this_58] == 0 then
		if this_58 == 0 then
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Stack.pop" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Stack.pop on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
<<<<<<< HEAD
	set pop_result = Stack_pop(this_57)
	return pop_result
endfunction

function Icon_hideDirect takes integer this_57, player p_2, string wurstStackTrace returns nothing
	local destructable d_2 = Icon_structs_get(this_57, player_getId(p_2), "\n   Icon, line 28" + wurstStackTrace)
	if d_2 != null then
		call RemoveDestructable(d_2)
		call Icon_structs_set(this_57, player_getId(p_2), null, "\n   Icon, line 31" + wurstStackTrace)
=======
	set pop_result = Stack_pop(this_58)
	return pop_result
endfunction

function Icon_hideDirect takes integer this_58, player p_2, string wurstStackTrace returns nothing
	local destructable d_2 = Icon_structs_get(this_58, player_getId(p_2), "\n   Icon, line 28" + wurstStackTrace)
	if d_2 != null then
		call RemoveDestructable(d_2)
		call Icon_structs_set(this_58, player_getId(p_2), null, "\n   Icon, line 31" + wurstStackTrace)
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
	endif
	set d_2 = null
endfunction

<<<<<<< HEAD
function image_hide takes image this_57, player p_2 returns nothing
	if GetLocalPlayer() == p_2 then
		call SetImageRenderAlways(this_57, false)
	endif
endfunction

function ImageEx_hideDirect takes integer this_57, player p_2 returns nothing
	call image_hide(ImageEx_content[this_57], p_2)
endfunction

function Model_hideDirect takes integer this_57, player p_2 returns nothing
	local unit temp = Model_u[this_57]
	local integer tempIndex = this_57
=======
function image_hide takes image this_58, player p_2 returns nothing
	if GetLocalPlayer() == p_2 then
		call SetImageRenderAlways(this_58, false)
	endif
endfunction

function ImageEx_hideDirect takes integer this_58, player p_2 returns nothing
	call image_hide(ImageEx_content[this_58], p_2)
endfunction

function Model_hideDirect takes integer this_58, player p_2 returns nothing
	local unit temp = Model_u[this_58]
	local integer tempIndex = this_58
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
	call unit_setVertexColor(temp, color_withAlpha(Model_col[tempIndex], Model_col_2[tempIndex], Model_col_3[tempIndex], 0), color_withAlpha_return_green, color_withAlpha_return_blue, color_withAlpha_return_alpha)
	set temp = null
endfunction

<<<<<<< HEAD
function TextBox_hideDirect takes integer this_57, player p_2, string wurstStackTrace returns nothing
	call dispatch_TextSplat_clear(TextBox_splat[this_57], p_2, "\n   TextBox, line 37" + wurstStackTrace)
endfunction

function alloc_Closure_14 takes nothing returns integer
	local integer this_57
	if CallbackSingle_firstFree == 0 then
		set CallbackSingle_maxIndex = CallbackSingle_maxIndex + 1
		set this_57 = CallbackSingle_maxIndex
	else
		set CallbackSingle_firstFree = CallbackSingle_firstFree - 1
		set this_57 = CallbackSingle_nextFree[CallbackSingle_firstFree]
	endif
	set CallbackSingle_typeId[this_57] = 812
	return this_57
endfunction

function Tooltip_hideDirect takes integer this_57, player p_2, string wurstStackTrace returns nothing
=======
function TextBox_hideDirect takes integer this_58, player p_2, string wurstStackTrace returns nothing
	call dispatch_TextSplat_clear(TextBox_splat[this_58], p_2, "\n   TextBox, line 37" + wurstStackTrace)
endfunction

function alloc_Closure_14 takes nothing returns integer
	local integer this_58
	if CallbackSingle_firstFree == 0 then
		set CallbackSingle_maxIndex = CallbackSingle_maxIndex + 1
		set this_58 = CallbackSingle_maxIndex
	else
		set CallbackSingle_firstFree = CallbackSingle_firstFree - 1
		set this_58 = CallbackSingle_nextFree[CallbackSingle_firstFree]
	endif
	set CallbackSingle_typeId[this_58] = 811
	return this_58
endfunction

function Tooltip_hideDirect takes integer this_58, player p_2, string wurstStackTrace returns nothing
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
	local integer clVar
	if GetLocalPlayer() == p_2 then
		call EnablePreSelect(false, false)
	endif
	set clVar = alloc_Closure_14()
	set p[clVar] = p_2
<<<<<<< HEAD
	call doAfter(0.15, clVar, "\n   ToolTip, line 30" + wurstStackTrace)
endfunction

function image_hide_2 takes image this_57 returns nothing
	call SetImageRenderAlways(this_57, false)
endfunction

function cyc_cyc_cyc_dispatch_Widget_hideDirect takes integer funcChoice, integer funcChoice_2, integer funcChoice_3, integer this_57, player p_2, string wurstStackTrace returns nothing
=======
	call doAfter(0.15, clVar, "\n   ToolTip, line 29" + wurstStackTrace)
endfunction

function image_hide_2 takes image this_58 returns nothing
	call SetImageRenderAlways(this_58, false)
endfunction

function cyc_cyc_dispatch_Widget_hideDirect takes integer funcChoice, integer funcChoice_2, integer this_58, player p_2, string wurstStackTrace returns nothing
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
	local integer wurst__iterator3
	local image img
	local integer wurst__iterator4
	local integer w_2
	if funcChoice == 0 then
		if funcChoice_2 == 0 then
<<<<<<< HEAD
			if funcChoice_3 == 0 then
				if Widget_typeId[this_57] == 0 then
					if this_57 == 0 then
						call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Widget.hideDirect" + wurstStackTrace)
						call I2S(1 / 0)
					else
						call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Widget.hideDirect on invalid object." + wurstStackTrace)
						call I2S(1 / 0)
					endif
				endif
				if Widget_typeId[this_57] <= 819 then
					if Widget_typeId[this_57] <= 810 then
						if Widget_typeId[this_57] <= 802 then
							call cyc_cyc_cyc_dispatch_Widget_hideDirect(0, 0, 1, this_57, p_2, "\n   Menu, line 29" + wurstStackTrace)
						else
							call Tooltip_hideDirect(this_57, p_2, "\n   Menu, line 29" + wurstStackTrace)
						endif
					elseif Widget_typeId[this_57] <= 818 then
						call TextBox_hideDirect(this_57, p_2, "\n   Menu, line 29" + wurstStackTrace)
					else
						call ImageEx_hideDirect(this_57, p_2)
					endif
				elseif Widget_typeId[this_57] <= 829 then
					if Widget_typeId[this_57] <= 823 then
						call cyc_cyc_cyc_dispatch_Widget_hideDirect(0, 1, this_57, 0, p_2, "\n   Menu, line 29" + wurstStackTrace)
					else
						call Model_hideDirect(this_57, p_2)
					endif
				elseif Widget_typeId[this_57] <= 831 then
					call Icon_hideDirect(this_57, p_2, "\n   Menu, line 29" + wurstStackTrace)
				else
					call cyc_cyc_cyc_dispatch_Widget_hideDirect(1, this_57, 0, 0, p_2, "\n   Menu, line 29" + wurstStackTrace)
				endif
			elseif funcChoice_3 == 1 then
				call cyc_cyc_cyc_dispatch_Widget_hideDirect(0, 0, 0, Observable_content[this_57], p_2, "\n   Menu, line 58" + wurstStackTrace)
			endif
		elseif funcChoice_2 == 1 then
			if GetLocalPlayer() == p_2 then
				set wurst__iterator3 = dispatch_ImageList_iterator(Pane_list[funcChoice_3], "\n   Pane, line 97" + wurstStackTrace)
				loop
					exitwhen  not dispatch_ImageIterator_hasNext(wurst__iterator3, "\n   Pane, line 97" + wurstStackTrace)
					set img = dispatch_ImageIterator_next(wurst__iterator3, "\n   Pane, line 97" + wurstStackTrace)
					call image_hide_2(img)
				endloop
				call dispatch_ImageIterator_close(wurst__iterator3, "\n   Pane, line 97" + wurstStackTrace)
				set wurst__iterator4 = dispatch_LinkedList_iterator(Pane_content[funcChoice_3], "\n   Pane, line 99" + wurstStackTrace)
				loop
					exitwhen  not dispatch_LLIterator_hasNext(wurst__iterator4, "\n   Pane, line 99" + wurstStackTrace)
					set w_2 = dispatch_LLIterator_next(wurst__iterator4, "\n   Pane, line 99" + wurstStackTrace)
					call cyc_cyc_cyc_dispatch_Widget_hideDirect(0, 0, 0, w_2, p_2, "\n   Pane, line 100" + wurstStackTrace)
				endloop
				call dispatch_LLIterator_close(wurst__iterator4, "\n   Pane, line 99" + wurstStackTrace)
			endif
		endif
	elseif funcChoice == 1 then
		call dispatch_TextSplat_clear(Button_splat[funcChoice_2], p_2, "\n   Button, line 29" + wurstStackTrace)
		call cyc_cyc_cyc_dispatch_Widget_hideDirect(0, 0, 1, funcChoice_2, p_2, "\n   Button, line 30" + wurstStackTrace)
=======
			if Widget_typeId[this_58] == 0 then
				if this_58 == 0 then
					call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Widget.hideDirect" + wurstStackTrace)
					call I2S(1 / 0)
				else
					call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Widget.hideDirect on invalid object." + wurstStackTrace)
					call I2S(1 / 0)
				endif
			endif
			if Widget_typeId[this_58] <= 818 then
				if Widget_typeId[this_58] <= 809 then
					if Widget_typeId[this_58] <= 801 then
						call cyc_cyc_dispatch_Widget_hideDirect(0, 2, this_58, p_2, "\n   Menu, line 29" + wurstStackTrace)
					else
						call Tooltip_hideDirect(this_58, p_2, "\n   Menu, line 29" + wurstStackTrace)
					endif
				elseif Widget_typeId[this_58] <= 817 then
					call TextBox_hideDirect(this_58, p_2, "\n   Menu, line 29" + wurstStackTrace)
				else
					call ImageEx_hideDirect(this_58, p_2)
				endif
			elseif Widget_typeId[this_58] <= 828 then
				if Widget_typeId[this_58] <= 822 then
					call cyc_cyc_dispatch_Widget_hideDirect(1, this_58, 0, p_2, "\n   Menu, line 29" + wurstStackTrace)
				else
					call Model_hideDirect(this_58, p_2)
				endif
			elseif Widget_typeId[this_58] <= 830 then
				call Icon_hideDirect(this_58, p_2, "\n   Menu, line 29" + wurstStackTrace)
			else
				call cyc_cyc_dispatch_Widget_hideDirect(0, 1, this_58, p_2, "\n   Menu, line 29" + wurstStackTrace)
			endif
		elseif funcChoice_2 == 1 then
			call dispatch_TextSplat_clear(Button_splat[this_58], p_2, "\n   Button, line 29" + wurstStackTrace)
			call cyc_cyc_dispatch_Widget_hideDirect(0, 2, this_58, p_2, "\n   Button, line 30" + wurstStackTrace)
		elseif funcChoice_2 == 2 then
			call cyc_cyc_dispatch_Widget_hideDirect(0, 0, Observable_content[this_58], p_2, "\n   Menu, line 58" + wurstStackTrace)
		endif
	elseif funcChoice == 1 then
		if GetLocalPlayer() == p_2 then
			set wurst__iterator3 = dispatch_ImageList_iterator(Pane_list[funcChoice_2], "\n   Pane, line 96" + wurstStackTrace)
			loop
				exitwhen  not dispatch_ImageIterator_hasNext(wurst__iterator3, "\n   Pane, line 96" + wurstStackTrace)
				set img = dispatch_ImageIterator_next(wurst__iterator3, "\n   Pane, line 96" + wurstStackTrace)
				call image_hide_2(img)
			endloop
			call dispatch_ImageIterator_close(wurst__iterator3, "\n   Pane, line 96" + wurstStackTrace)
			set wurst__iterator4 = dispatch_LinkedList_iterator(Pane_content[funcChoice_2], "\n   Pane, line 98" + wurstStackTrace)
			loop
				exitwhen  not dispatch_LLIterator_hasNext(wurst__iterator4, "\n   Pane, line 98" + wurstStackTrace)
				set w_2 = dispatch_LLIterator_next(wurst__iterator4, "\n   Pane, line 98" + wurstStackTrace)
				call cyc_cyc_dispatch_Widget_hideDirect(0, 0, w_2, p_2, "\n   Pane, line 99" + wurstStackTrace)
			endloop
			call dispatch_LLIterator_close(wurst__iterator4, "\n   Pane, line 98" + wurstStackTrace)
		endif
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
	endif
	set img = null
endfunction

<<<<<<< HEAD
function Window_hideContent takes integer this_57, player p_2, string wurstStackTrace returns nothing
	local integer wurst__iterator1 = dispatch_LinkedList_iterator(Window_content[this_57], "\n   Menu, line 173" + wurstStackTrace)
=======
function Window_hideContent takes integer this_58, player p_2, string wurstStackTrace returns nothing
	local integer wurst__iterator1 = dispatch_LinkedList_iterator(Window_content[this_58], "\n   Menu, line 173" + wurstStackTrace)
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
	local integer g
	loop
		exitwhen  not dispatch_LLIterator_hasNext(wurst__iterator1, "\n   Menu, line 173" + wurstStackTrace)
		set g = dispatch_LLIterator_next(wurst__iterator1, "\n   Menu, line 173" + wurstStackTrace)
<<<<<<< HEAD
		call cyc_cyc_cyc_dispatch_Widget_hideDirect(0, 0, 0, g, p_2, "\n   Menu, line 174" + wurstStackTrace)
=======
		call cyc_cyc_dispatch_Widget_hideDirect(0, 0, g, p_2, "\n   Menu, line 174" + wurstStackTrace)
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
	endloop
	call dispatch_LLIterator_close(wurst__iterator1, "\n   Menu, line 173" + wurstStackTrace)
endfunction

<<<<<<< HEAD
function dispatch_Window_hideContent takes integer this_57, player p_2, string wurstStackTrace returns nothing
	if Window_typeId[this_57] == 0 then
		if this_57 == 0 then
=======
function dispatch_Window_hideContent takes integer this_58, player p_2, string wurstStackTrace returns nothing
	if Window_typeId[this_58] == 0 then
		if this_58 == 0 then
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Window.hideContent" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Window.hideContent on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
<<<<<<< HEAD
	if Window_typeId[this_57] <= 805 then
		call Window_hideContent(this_57, p_2, "\n   Menu, line 172" + wurstStackTrace)
	else
		call Window_hideContent(this_57, p_2, "\n   Menu, line 172" + wurstStackTrace)
=======
	if Window_typeId[this_58] <= 804 then
		call Window_hideContent(this_58, p_2, "\n   Menu, line 172" + wurstStackTrace)
	else
		call Window_hideContent(this_58, p_2, "\n   Menu, line 172" + wurstStackTrace)
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
	endif
endfunction

function WindowManager_closeTopWindow takes player p_2, string wurstStackTrace returns nothing
	call dispatch_Window_hideContent(dispatch_Stack_pop(WindowManager_currentWindow[GetPlayerId(p_2)], "\n   Menu, line 130" + wurstStackTrace), p_2, "\n   Menu, line 130" + wurstStackTrace)
	loop
		exitwhen  not true
		if booleanFromIndex(dispatch_HashMap_get(Window_wantToClose[dispatch_Stack_peek(WindowManager_currentWindow[GetPlayerId(p_2)], "\n   Menu, line 132" + wurstStackTrace)], playerToIndex(p_2), "\n   Menu, line 132" + wurstStackTrace)) then
			call dispatch_Window_hideContent(dispatch_Stack_pop(WindowManager_currentWindow[GetPlayerId(p_2)], "\n   Menu, line 133" + wurstStackTrace), p_2, "\n   Menu, line 133" + wurstStackTrace)
		else
			exitwhen true
		endif
	endloop
endfunction

<<<<<<< HEAD
function closure_impl_74 takes integer this_57, player p_2, string wurstStackTrace returns nothing
	call WindowManager_closeTopWindow(p_2, "\n   GameStart, line 795" + wurstStackTrace)
endfunction

function player_getName takes player this_57 returns string
	return GetPlayerName(this_57)
endfunction

function closure_impl_75 takes integer this_57, player p_2, string wurstStackTrace returns nothing
	call print("Spieler " + player_getName(p_2) + " geht in den Shop")
	call WindowManager_closeTopWindow(p_2, "\n   GameStart, line 570" + wurstStackTrace)
	call WindowManager_openWindow(GameStart_shopWindow, p_2, "\n   GameStart, line 571" + wurstStackTrace)
endfunction

function closure_impl_76 takes integer this_57, player p_2, string wurstStackTrace returns nothing
	call WindowManager_closeTopWindow(p_2, "\n   GameStart, line 804" + wurstStackTrace)
endfunction

function closure_impl_77 takes integer this_57, player p_2, string wurstStackTrace returns nothing
	call print("Spieler " + player_getName(p_2) + " geht in den Score")
	call WindowManager_closeTopWindow(p_2, "\n   GameStart, line 576" + wurstStackTrace)
	call WindowManager_openWindow(GameStart_scoreWindow, p_2, "\n   GameStart, line 577" + wurstStackTrace)
endfunction

function closure_impl_78 takes integer this_57, player p_2, string wurstStackTrace returns nothing
	call print("Spieler " + player_getName(p_2) + " geht in den Guide")
	call WindowManager_closeTopWindow(p_2, "\n   GameStart, line 582" + wurstStackTrace)
	call WindowManager_openWindow(GameStart_guideWindow, p_2, "\n   GameStart, line 583" + wurstStackTrace)
endfunction

function closure_impl_79 takes integer this_57, player p_2, string wurstStackTrace returns nothing
	call print("Spieler " + player_getName(p_2) + " geht in die Stats")
	call WindowManager_closeTopWindow(p_2, "\n   GameStart, line 588" + wurstStackTrace)
	call WindowManager_openWindow(GameStart_statsWindow, p_2, "\n   GameStart, line 589" + wurstStackTrace)
endfunction

function dispatch_Pane_hideDirect takes integer this_57, player p_2, string wurstStackTrace returns nothing
	if Widget_typeId[this_57] == 0 then
		if this_57 == 0 then
=======
function player_getName takes player this_58 returns string
	return GetPlayerName(this_58)
endfunction

function closure_impl_74 takes integer this_58, player p_2, string wurstStackTrace returns nothing
	call print("Spieler " + player_getName(p_2) + " geht in den Score")
	call WindowManager_closeTopWindow(p_2, "\n   GameStart, line 517" + wurstStackTrace)
	call WindowManager_openWindow(GameStart_scoreWindow, p_2, "\n   GameStart, line 518" + wurstStackTrace)
endfunction

function closure_impl_75 takes integer this_58, player p_2, string wurstStackTrace returns nothing
	call WindowManager_closeTopWindow(p_2, "\n   GameStart, line 734" + wurstStackTrace)
endfunction

function closure_impl_76 takes integer this_58, player p_2, string wurstStackTrace returns nothing
	call print("Spieler " + player_getName(p_2) + " geht in die Stats")
	call WindowManager_closeTopWindow(p_2, "\n   GameStart, line 529" + wurstStackTrace)
	call WindowManager_openWindow(GameStart_statsWindow, p_2, "\n   GameStart, line 530" + wurstStackTrace)
endfunction

function closure_impl_77 takes integer this_58, player p_2, string wurstStackTrace returns nothing
	call print("Spieler " + player_getName(p_2) + " geht in den Shop")
	call WindowManager_closeTopWindow(p_2, "\n   GameStart, line 511" + wurstStackTrace)
	call WindowManager_openWindow(GameStart_shopWindow, p_2, "\n   GameStart, line 512" + wurstStackTrace)
endfunction

function closure_impl_78 takes integer this_58, player p_2, string wurstStackTrace returns nothing
	call WindowManager_closeTopWindow(p_2, "\n   GameStart, line 743" + wurstStackTrace)
endfunction

function closure_impl_79 takes integer this_58, player p_2, string wurstStackTrace returns nothing
	call print("Spieler " + player_getName(p_2) + " geht in den Guide")
	call WindowManager_closeTopWindow(p_2, "\n   GameStart, line 523" + wurstStackTrace)
	call WindowManager_openWindow(GameStart_guideWindow, p_2, "\n   GameStart, line 524" + wurstStackTrace)
endfunction

function dispatch_Pane_hideDirect takes integer this_58, player p_2, string wurstStackTrace returns nothing
	if Widget_typeId[this_58] == 0 then
		if this_58 == 0 then
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Pane.hideDirect" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Pane.hideDirect on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
<<<<<<< HEAD
	call cyc_cyc_cyc_dispatch_Widget_hideDirect(0, 1, this_57, 0, p_2, "\n   Pane, line 95" + wurstStackTrace)
endfunction

function cyc_cyc_dispatch_PlayerAction_run takes integer funcChoice, integer funcChoice_2, integer this_57, player p_2, string wurstStackTrace returns nothing
	if funcChoice == 0 then
		if funcChoice_2 == 0 then
			if PlayerAction_typeId[this_57] == 0 then
				if this_57 == 0 then
=======
	call cyc_cyc_dispatch_Widget_hideDirect(1, this_58, 0, p_2, "\n   Pane, line 94" + wurstStackTrace)
endfunction

function cyc_cyc_dispatch_PlayerAction_run takes integer funcChoice, integer funcChoice_2, integer this_58, player p_2, string wurstStackTrace returns nothing
	if funcChoice == 0 then
		if funcChoice_2 == 0 then
			if PlayerAction_typeId[this_58] == 0 then
				if this_58 == 0 then
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
					call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling PlayerAction.run" + wurstStackTrace)
					call I2S(1 / 0)
				else
					call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called PlayerAction.run on invalid object." + wurstStackTrace)
					call I2S(1 / 0)
				endif
			endif
<<<<<<< HEAD
			if PlayerAction_typeId[this_57] <= 865 then
				if PlayerAction_typeId[this_57] <= 825 then
					if PlayerAction_typeId[this_57] <= 824 then
						call cyc_cyc_dispatch_PlayerAction_run(1, this_57, 0, p_2, "\n   Menu, line 117" + wurstStackTrace)
					else
						call cyc_cyc_dispatch_PlayerAction_run(0, 1, this_57, p_2, "\n   Menu, line 117" + wurstStackTrace)
					endif
				elseif PlayerAction_typeId[this_57] <= 864 then
					call closure_impl_75(this_57, p_2, "\n   Menu, line 117" + wurstStackTrace)
				else
					call closure_impl_77(this_57, p_2, "\n   Menu, line 117" + wurstStackTrace)
				endif
			elseif PlayerAction_typeId[this_57] <= 867 then
				if PlayerAction_typeId[this_57] <= 866 then
					call closure_impl_78(this_57, p_2, "\n   Menu, line 117" + wurstStackTrace)
				else
					call closure_impl_79(this_57, p_2, "\n   Menu, line 117" + wurstStackTrace)
				endif
			elseif PlayerAction_typeId[this_57] <= 868 then
				call closure_impl_74(this_57, p_2, "\n   Menu, line 117" + wurstStackTrace)
			else
				call closure_impl_76(this_57, p_2, "\n   Menu, line 117" + wurstStackTrace)
			endif
		elseif funcChoice_2 == 1 then
			call dispatch_Pane_hideDirect(this_56[this_57], p_2, "\n   Pane, line 72" + wurstStackTrace)
			if Pane_onExit[this_56[this_57]] != 0 then
				call cyc_cyc_dispatch_PlayerAction_run(0, 0, Pane_onExit[this_56[this_57]], p_2, "\n   Pane, line 74" + wurstStackTrace)
			endif
		endif
	elseif funcChoice == 1 then
		call dispatch_Pane_hideDirect(this_55[funcChoice_2], p_2, "\n   Pane, line 44" + wurstStackTrace)
		if Pane_onExit[this_55[funcChoice_2]] != 0 then
			call cyc_cyc_dispatch_PlayerAction_run(0, 0, Pane_onExit[this_55[funcChoice_2]], p_2, "\n   Pane, line 46" + wurstStackTrace)
=======
			if PlayerAction_typeId[this_58] <= 871 then
				if PlayerAction_typeId[this_58] <= 824 then
					if PlayerAction_typeId[this_58] <= 823 then
						call cyc_cyc_dispatch_PlayerAction_run(0, 1, this_58, p_2, "\n   Menu, line 117" + wurstStackTrace)
					else
						call cyc_cyc_dispatch_PlayerAction_run(1, this_58, 0, p_2, "\n   Menu, line 117" + wurstStackTrace)
					endif
				elseif PlayerAction_typeId[this_58] <= 870 then
					call closure_impl_77(this_58, p_2, "\n   Menu, line 117" + wurstStackTrace)
				else
					call closure_impl_74(this_58, p_2, "\n   Menu, line 117" + wurstStackTrace)
				endif
			elseif PlayerAction_typeId[this_58] <= 873 then
				if PlayerAction_typeId[this_58] <= 872 then
					call closure_impl_79(this_58, p_2, "\n   Menu, line 117" + wurstStackTrace)
				else
					call closure_impl_76(this_58, p_2, "\n   Menu, line 117" + wurstStackTrace)
				endif
			elseif PlayerAction_typeId[this_58] <= 874 then
				call closure_impl_75(this_58, p_2, "\n   Menu, line 117" + wurstStackTrace)
			else
				call closure_impl_78(this_58, p_2, "\n   Menu, line 117" + wurstStackTrace)
			endif
		elseif funcChoice_2 == 1 then
			call dispatch_Pane_hideDirect(this_55[this_58], p_2, "\n   Pane, line 43" + wurstStackTrace)
			if Pane_onExit[this_55[this_58]] != 0 then
				call cyc_cyc_dispatch_PlayerAction_run(0, 0, Pane_onExit[this_55[this_58]], p_2, "\n   Pane, line 45" + wurstStackTrace)
			endif
		endif
	elseif funcChoice == 1 then
		call dispatch_Pane_hideDirect(this_56[funcChoice_2], p_2, "\n   Pane, line 71" + wurstStackTrace)
		if Pane_onExit[this_56[funcChoice_2]] != 0 then
			call cyc_cyc_dispatch_PlayerAction_run(0, 0, Pane_onExit[this_56[funcChoice_2]], p_2, "\n   Pane, line 73" + wurstStackTrace)
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
		endif
	endif
endfunction

<<<<<<< HEAD
function Icon_clickAnimation takes integer this_57, player p_2, string wurstStackTrace returns nothing
	local destructable d_2
	if GetLocalPlayer() == p_2 then
		set d_2 = Icon_structs_get(this_57, player_getId(p_2), "\n   Icon, line 69" + wurstStackTrace)
=======
function Icon_clickAnimation takes integer this_58, player p_2, string wurstStackTrace returns nothing
	local destructable d_2
	if GetLocalPlayer() == p_2 then
		set d_2 = Icon_structs_get(this_58, player_getId(p_2), "\n   Icon, line 69" + wurstStackTrace)
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
		call SetDestructableAnimationSpeed(d_2, Icon_animationSpeedHit)
		call SetDestructableAnimation(d_2, "morph alternate")
		call QueueDestructableAnimation(d_2, "morph")
	endif
	set d_2 = null
endfunction

<<<<<<< HEAD
function Widget_clickAnimation takes integer this_57, player p_2 returns nothing
endfunction

function dispatch_Widget_clickAnimation takes integer this_57, player p_2, string wurstStackTrace returns nothing
	if Widget_typeId[this_57] == 0 then
		if this_57 == 0 then
=======
function Widget_clickAnimation takes integer this_58, player p_2 returns nothing
endfunction

function dispatch_Widget_clickAnimation takes integer this_58, player p_2, string wurstStackTrace returns nothing
	if Widget_typeId[this_58] == 0 then
		if this_58 == 0 then
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Widget.clickAnimation" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Widget.clickAnimation on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
<<<<<<< HEAD
	if Widget_typeId[this_57] <= 823 then
		if Widget_typeId[this_57] <= 810 then
			if Widget_typeId[this_57] <= 802 then
				call Widget_clickAnimation(this_57, p_2)
			else
				call Widget_clickAnimation(this_57, p_2)
			endif
		elseif Widget_typeId[this_57] <= 819 then
			call Widget_clickAnimation(this_57, p_2)
		else
			call Widget_clickAnimation(this_57, p_2)
		endif
	elseif Widget_typeId[this_57] <= 831 then
		if Widget_typeId[this_57] <= 829 then
			call Widget_clickAnimation(this_57, p_2)
		else
			call Icon_clickAnimation(this_57, p_2, "\n   Menu, line 35" + wurstStackTrace)
		endif
	else
		call Widget_clickAnimation(this_57, p_2)
	endif
endfunction

function Observable_onClick takes integer this_57, player p_2, string wurstStackTrace returns nothing
	if Observable_click[this_57] != 0 then
		call cyc_cyc_dispatch_PlayerAction_run(0, 0, Observable_click[this_57], p_2, "\n   Menu, line 89" + wurstStackTrace)
	endif
	if Observable_playClickAnimation[this_57] then
		call dispatch_Widget_clickAnimation(Observable_content[this_57], p_2, "\n   Menu, line 91" + wurstStackTrace)
	endif
endfunction

function dispatch_Observable_onClick takes integer this_57, player p_2, string wurstStackTrace returns nothing
	if Widget_typeId[this_57] == 0 then
		if this_57 == 0 then
=======
	if Widget_typeId[this_58] <= 822 then
		if Widget_typeId[this_58] <= 809 then
			if Widget_typeId[this_58] <= 801 then
				call Widget_clickAnimation(this_58, p_2)
			else
				call Widget_clickAnimation(this_58, p_2)
			endif
		elseif Widget_typeId[this_58] <= 818 then
			call Widget_clickAnimation(this_58, p_2)
		else
			call Widget_clickAnimation(this_58, p_2)
		endif
	elseif Widget_typeId[this_58] <= 830 then
		if Widget_typeId[this_58] <= 828 then
			call Widget_clickAnimation(this_58, p_2)
		else
			call Icon_clickAnimation(this_58, p_2, "\n   Menu, line 35" + wurstStackTrace)
		endif
	else
		call Widget_clickAnimation(this_58, p_2)
	endif
endfunction

function Observable_onClick takes integer this_58, player p_2, string wurstStackTrace returns nothing
	if Observable_click[this_58] != 0 then
		call cyc_cyc_dispatch_PlayerAction_run(0, 0, Observable_click[this_58], p_2, "\n   Menu, line 89" + wurstStackTrace)
	endif
	if Observable_playClickAnimation[this_58] then
		call dispatch_Widget_clickAnimation(Observable_content[this_58], p_2, "\n   Menu, line 91" + wurstStackTrace)
	endif
endfunction

function dispatch_Observable_onClick takes integer this_58, player p_2, string wurstStackTrace returns nothing
	if Widget_typeId[this_58] == 0 then
		if this_58 == 0 then
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Observable.onClick" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Observable.onClick on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
<<<<<<< HEAD
	if Widget_typeId[this_57] <= 802 then
		call Observable_onClick(this_57, p_2, "\n   Menu, line 87" + wurstStackTrace)
	else
		call Observable_onClick(this_57, p_2, "\n   Menu, line 87" + wurstStackTrace)
	endif
endfunction

function Window_getObservableAt takes integer this_57, integer tr, string wurstStackTrace returns integer
	return dispatch_HashMap_get(Window_trackMap[this_57], tr, "\n   Menu, line 185" + wurstStackTrace)
endfunction

function dispatch_Window_getObservableAt takes integer this_57, integer tr, string wurstStackTrace returns integer
	local integer getObservableAt_result
	if Window_typeId[this_57] == 0 then
		if this_57 == 0 then
=======
	if Widget_typeId[this_58] <= 801 then
		call Observable_onClick(this_58, p_2, "\n   Menu, line 87" + wurstStackTrace)
	else
		call Observable_onClick(this_58, p_2, "\n   Menu, line 87" + wurstStackTrace)
	endif
endfunction

function Window_getObservableAt takes integer this_58, integer tr, string wurstStackTrace returns integer
	return dispatch_HashMap_get(Window_trackMap[this_58], tr, "\n   Menu, line 185" + wurstStackTrace)
endfunction

function dispatch_Window_getObservableAt takes integer this_58, integer tr, string wurstStackTrace returns integer
	local integer getObservableAt_result
	if Window_typeId[this_58] == 0 then
		if this_58 == 0 then
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Window.getObservableAt" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Window.getObservableAt on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
<<<<<<< HEAD
	if Window_typeId[this_57] <= 805 then
		set getObservableAt_result = Window_getObservableAt(this_57, tr, "\n   Menu, line 184" + wurstStackTrace)
	else
		set getObservableAt_result = Window_getObservableAt(this_57, tr, "\n   Menu, line 184" + wurstStackTrace)
=======
	if Window_typeId[this_58] <= 804 then
		set getObservableAt_result = Window_getObservableAt(this_58, tr, "\n   Menu, line 184" + wurstStackTrace)
	else
		set getObservableAt_result = Window_getObservableAt(this_58, tr, "\n   Menu, line 184" + wurstStackTrace)
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
	endif
	return getObservableAt_result
endfunction

<<<<<<< HEAD
function Window_voidClick_2 takes integer this_57, player p_2, string wurstStackTrace returns nothing
	if Window_voidClick[this_57] != 0 then
		call cyc_cyc_dispatch_PlayerAction_run(0, 0, Window_voidClick[this_57], p_2, "\n   Menu, line 189" + wurstStackTrace)
	endif
endfunction

function dispatch_Window_voidClick takes integer this_57, player p_2, string wurstStackTrace returns nothing
	if Window_typeId[this_57] == 0 then
		if this_57 == 0 then
=======
function Window_voidClick_2 takes integer this_58, player p_2, string wurstStackTrace returns nothing
	if Window_voidClick[this_58] != 0 then
		call cyc_cyc_dispatch_PlayerAction_run(0, 0, Window_voidClick[this_58], p_2, "\n   Menu, line 189" + wurstStackTrace)
	endif
endfunction

function dispatch_Window_voidClick takes integer this_58, player p_2, string wurstStackTrace returns nothing
	if Window_typeId[this_58] == 0 then
		if this_58 == 0 then
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Window.voidClick" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Window.voidClick on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
<<<<<<< HEAD
	if Window_typeId[this_57] <= 805 then
		call Window_voidClick_2(this_57, p_2, "\n   Menu, line 187" + wurstStackTrace)
	else
		call Window_voidClick_2(this_57, p_2, "\n   Menu, line 187" + wurstStackTrace)
=======
	if Window_typeId[this_58] <= 804 then
		call Window_voidClick_2(this_58, p_2, "\n   Menu, line 187" + wurstStackTrace)
	else
		call Window_voidClick_2(this_58, p_2, "\n   Menu, line 187" + wurstStackTrace)
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
	endif
endfunction

function WindowManager_trackableHit takes integer tr, player p_2, string wurstStackTrace returns nothing
	local integer t = dispatch_Window_getObservableAt(dispatch_Stack_peek(WindowManager_currentWindow[GetPlayerId(p_2)], "\n   Menu, line 141" + wurstStackTrace), tr, "\n   Menu, line 141" + wurstStackTrace)
	if t != 0 then
		call dispatch_Observable_onClick(t, p_2, "\n   Menu, line 143" + wurstStackTrace)
	else
		call dispatch_Window_voidClick(dispatch_Stack_peek(WindowManager_currentWindow[GetPlayerId(p_2)], "\n   Menu, line 145" + wurstStackTrace), p_2, "\n   Menu, line 145" + wurstStackTrace)
	endif
endfunction

<<<<<<< HEAD
function closure_impl_80 takes integer this_57, integer track, player p_2, string wurstStackTrace returns nothing
	call WindowManager_trackableHit(track, p_2, "\n   Menu, line 213" + wurstStackTrace)
endfunction

function Observable_onDoubleClick takes integer this_57, player p_2, string wurstStackTrace returns nothing
	if Observable_dClick[this_57] != 0 then
		call cyc_cyc_dispatch_PlayerAction_run(0, 0, Observable_dClick[this_57], p_2, "\n   Menu, line 95" + wurstStackTrace)
	endif
	if ( not Observable_playClickAnimation[this_57]) and Observable_playDoubleClickAnimation[this_57] then
		call dispatch_Widget_clickAnimation(Observable_content[this_57], p_2, "\n   Menu, line 97" + wurstStackTrace)
	endif
endfunction

function dispatch_Observable_onDoubleClick takes integer this_57, player p_2, string wurstStackTrace returns nothing
	if Widget_typeId[this_57] == 0 then
		if this_57 == 0 then
=======
function closure_impl_80 takes integer this_58, integer track, player p_2, string wurstStackTrace returns nothing
	call WindowManager_trackableHit(track, p_2, "\n   Menu, line 213" + wurstStackTrace)
endfunction

function Observable_onDoubleClick takes integer this_58, player p_2, string wurstStackTrace returns nothing
	if Observable_dClick[this_58] != 0 then
		call cyc_cyc_dispatch_PlayerAction_run(0, 0, Observable_dClick[this_58], p_2, "\n   Menu, line 95" + wurstStackTrace)
	endif
	if ( not Observable_playClickAnimation[this_58]) and Observable_playDoubleClickAnimation[this_58] then
		call dispatch_Widget_clickAnimation(Observable_content[this_58], p_2, "\n   Menu, line 97" + wurstStackTrace)
	endif
endfunction

function dispatch_Observable_onDoubleClick takes integer this_58, player p_2, string wurstStackTrace returns nothing
	if Widget_typeId[this_58] == 0 then
		if this_58 == 0 then
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Observable.onDoubleClick" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Observable.onDoubleClick on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
<<<<<<< HEAD
	if Widget_typeId[this_57] <= 802 then
		call Observable_onDoubleClick(this_57, p_2, "\n   Menu, line 93" + wurstStackTrace)
	else
		call Observable_onDoubleClick(this_57, p_2, "\n   Menu, line 93" + wurstStackTrace)
=======
	if Widget_typeId[this_58] <= 801 then
		call Observable_onDoubleClick(this_58, p_2, "\n   Menu, line 93" + wurstStackTrace)
	else
		call Observable_onDoubleClick(this_58, p_2, "\n   Menu, line 93" + wurstStackTrace)
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
	endif
endfunction

function WindowManager_trackableDoubleHit takes integer tr, player p_2, string wurstStackTrace returns nothing
	local integer t = dispatch_Window_getObservableAt(dispatch_Stack_peek(WindowManager_currentWindow[GetPlayerId(p_2)], "\n   Menu, line 148" + wurstStackTrace), tr, "\n   Menu, line 148" + wurstStackTrace)
	if t != 0 then
		call dispatch_Observable_onDoubleClick(t, p_2, "\n   Menu, line 150" + wurstStackTrace)
	endif
endfunction

<<<<<<< HEAD
function closure_impl_81 takes integer this_57, integer track, player p_2, string wurstStackTrace returns nothing
	call WindowManager_trackableDoubleHit(track, p_2, "\n   Menu, line 214" + wurstStackTrace)
endfunction

function Button_trackAnimation takes integer this_57, player p_2 returns nothing
endfunction

function Icon_trackAnimation takes integer this_57, player p_2, string wurstStackTrace returns nothing
	local destructable d_2
	if GetLocalPlayer() == p_2 then
		set d_2 = Icon_structs_get(this_57, player_getId(p_2), "\n   Icon, line 76" + wurstStackTrace)
=======
function closure_impl_81 takes integer this_58, integer track, player p_2, string wurstStackTrace returns nothing
	call WindowManager_trackableDoubleHit(track, p_2, "\n   Menu, line 214" + wurstStackTrace)
endfunction

function Button_trackAnimation takes integer this_58, player p_2 returns nothing
endfunction

function Icon_trackAnimation takes integer this_58, player p_2, string wurstStackTrace returns nothing
	local destructable d_2
	if GetLocalPlayer() == p_2 then
		set d_2 = Icon_structs_get(this_58, player_getId(p_2), "\n   Icon, line 76" + wurstStackTrace)
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
		call SetDestructableAnimationSpeed(d_2, Icon_animationSpeedHover)
		call SetDestructableAnimation(d_2, "morph")
	endif
	set d_2 = null
endfunction

<<<<<<< HEAD
function Widget_trackAnimation takes integer this_57, player p_2 returns nothing
endfunction

function dispatch_Widget_trackAnimation takes integer this_57, player p_2, string wurstStackTrace returns nothing
	if Widget_typeId[this_57] == 0 then
		if this_57 == 0 then
=======
function Widget_trackAnimation takes integer this_58, player p_2 returns nothing
endfunction

function dispatch_Widget_trackAnimation takes integer this_58, player p_2, string wurstStackTrace returns nothing
	if Widget_typeId[this_58] == 0 then
		if this_58 == 0 then
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Widget.trackAnimation" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Widget.trackAnimation on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
<<<<<<< HEAD
	if Widget_typeId[this_57] <= 823 then
		if Widget_typeId[this_57] <= 810 then
			if Widget_typeId[this_57] <= 802 then
				call Widget_trackAnimation(this_57, p_2)
			else
				call Widget_trackAnimation(this_57, p_2)
			endif
		elseif Widget_typeId[this_57] <= 819 then
			call Widget_trackAnimation(this_57, p_2)
		else
			call Widget_trackAnimation(this_57, p_2)
		endif
	elseif Widget_typeId[this_57] <= 831 then
		if Widget_typeId[this_57] <= 829 then
			call Widget_trackAnimation(this_57, p_2)
		else
			call Icon_trackAnimation(this_57, p_2, "\n   Menu, line 37" + wurstStackTrace)
		endif
	else
		call Button_trackAnimation(this_57, p_2)
	endif
endfunction

function Observable_onTrack takes integer this_57, player p_2, string wurstStackTrace returns nothing
	if Observable_track[this_57] != 0 then
		call cyc_cyc_dispatch_PlayerAction_run(0, 0, Observable_track[this_57], p_2, "\n   Menu, line 101" + wurstStackTrace)
	endif
	if Observable_playHoverAnimation[this_57] then
		call dispatch_Widget_trackAnimation(Observable_content[this_57], p_2, "\n   Menu, line 103" + wurstStackTrace)
	endif
endfunction

function dispatch_Observable_onTrack takes integer this_57, player p_2, string wurstStackTrace returns nothing
	if Widget_typeId[this_57] == 0 then
		if this_57 == 0 then
=======
	if Widget_typeId[this_58] <= 822 then
		if Widget_typeId[this_58] <= 809 then
			if Widget_typeId[this_58] <= 801 then
				call Widget_trackAnimation(this_58, p_2)
			else
				call Widget_trackAnimation(this_58, p_2)
			endif
		elseif Widget_typeId[this_58] <= 818 then
			call Widget_trackAnimation(this_58, p_2)
		else
			call Widget_trackAnimation(this_58, p_2)
		endif
	elseif Widget_typeId[this_58] <= 830 then
		if Widget_typeId[this_58] <= 828 then
			call Widget_trackAnimation(this_58, p_2)
		else
			call Icon_trackAnimation(this_58, p_2, "\n   Menu, line 37" + wurstStackTrace)
		endif
	else
		call Button_trackAnimation(this_58, p_2)
	endif
endfunction

function Observable_onTrack takes integer this_58, player p_2, string wurstStackTrace returns nothing
	if Observable_track[this_58] != 0 then
		call cyc_cyc_dispatch_PlayerAction_run(0, 0, Observable_track[this_58], p_2, "\n   Menu, line 101" + wurstStackTrace)
	endif
	if Observable_playHoverAnimation[this_58] then
		call dispatch_Widget_trackAnimation(Observable_content[this_58], p_2, "\n   Menu, line 103" + wurstStackTrace)
	endif
endfunction

function dispatch_Observable_onTrack takes integer this_58, player p_2, string wurstStackTrace returns nothing
	if Widget_typeId[this_58] == 0 then
		if this_58 == 0 then
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Observable.onTrack" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Observable.onTrack on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
<<<<<<< HEAD
	if Widget_typeId[this_57] <= 802 then
		call Observable_onTrack(this_57, p_2, "\n   Menu, line 99" + wurstStackTrace)
	else
		call Observable_onTrack(this_57, p_2, "\n   Menu, line 99" + wurstStackTrace)
	endif
endfunction

function Icon_untrackAnimation takes integer this_57, player p_2, string wurstStackTrace returns nothing
	local destructable d_2
	if GetLocalPlayer() == p_2 then
		set d_2 = Icon_structs_get(this_57, player_getId(p_2), "\n   Icon, line 82" + wurstStackTrace)
=======
	if Widget_typeId[this_58] <= 801 then
		call Observable_onTrack(this_58, p_2, "\n   Menu, line 99" + wurstStackTrace)
	else
		call Observable_onTrack(this_58, p_2, "\n   Menu, line 99" + wurstStackTrace)
	endif
endfunction

function Icon_untrackAnimation takes integer this_58, player p_2, string wurstStackTrace returns nothing
	local destructable d_2
	if GetLocalPlayer() == p_2 then
		set d_2 = Icon_structs_get(this_58, player_getId(p_2), "\n   Icon, line 82" + wurstStackTrace)
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
		call SetDestructableAnimationSpeed(d_2, Icon_animationSpeedHover)
		call SetDestructableAnimation(d_2, "morph alternate")
	endif
	set d_2 = null
endfunction

<<<<<<< HEAD
function Widget_untrackAnimation takes integer this_57, player p_2 returns nothing
endfunction

function dispatch_Widget_untrackAnimation takes integer this_57, player p_2, string wurstStackTrace returns nothing
	if Widget_typeId[this_57] == 0 then
		if this_57 == 0 then
=======
function Widget_untrackAnimation takes integer this_58, player p_2 returns nothing
endfunction

function dispatch_Widget_untrackAnimation takes integer this_58, player p_2, string wurstStackTrace returns nothing
	if Widget_typeId[this_58] == 0 then
		if this_58 == 0 then
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Widget.untrackAnimation" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Widget.untrackAnimation on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
<<<<<<< HEAD
	if Widget_typeId[this_57] <= 823 then
		if Widget_typeId[this_57] <= 810 then
			if Widget_typeId[this_57] <= 802 then
				call Widget_untrackAnimation(this_57, p_2)
			else
				call Widget_untrackAnimation(this_57, p_2)
			endif
		elseif Widget_typeId[this_57] <= 819 then
			call Widget_untrackAnimation(this_57, p_2)
		else
			call Widget_untrackAnimation(this_57, p_2)
		endif
	elseif Widget_typeId[this_57] <= 831 then
		if Widget_typeId[this_57] <= 829 then
			call Widget_untrackAnimation(this_57, p_2)
		else
			call Icon_untrackAnimation(this_57, p_2, "\n   Menu, line 39" + wurstStackTrace)
		endif
	else
		call Widget_untrackAnimation(this_57, p_2)
	endif
endfunction

function Observable_onUnTrack takes integer this_57, player p_2, string wurstStackTrace returns nothing
	if Observable_unTrack[this_57] != 0 then
		call cyc_cyc_dispatch_PlayerAction_run(0, 0, Observable_unTrack[this_57], p_2, "\n   Menu, line 107" + wurstStackTrace)
	endif
	if Observable_playHoverAnimation[this_57] then
		call dispatch_Widget_untrackAnimation(Observable_content[this_57], p_2, "\n   Menu, line 109" + wurstStackTrace)
	endif
endfunction

function dispatch_Observable_onUnTrack takes integer this_57, player p_2, string wurstStackTrace returns nothing
	if Widget_typeId[this_57] == 0 then
		if this_57 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Observable.onUnTrack" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Observable.onUnTrack on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	if Widget_typeId[this_57] <= 802 then
		call Observable_onUnTrack(this_57, p_2, "\n   Menu, line 105" + wurstStackTrace)
	else
		call Observable_onUnTrack(this_57, p_2, "\n   Menu, line 105" + wurstStackTrace)
	endif
endfunction

function WindowManager_trackableTrack takes integer tr, player p_2, string wurstStackTrace returns nothing
	local integer ob = dispatch_Window_getObservableAt(dispatch_Stack_peek(WindowManager_currentWindow[GetPlayerId(p_2)], "\n   Menu, line 153" + wurstStackTrace), tr, "\n   Menu, line 153" + wurstStackTrace)
	local integer curr = WindowManager_currentObservable[GetPlayerId(p_2)]
	if ob != curr then
		if ob != 0 then
			call dispatch_Observable_onTrack(ob, p_2, "\n   Menu, line 157" + wurstStackTrace)
		endif
		if curr != 0 then
			call dispatch_Observable_onUnTrack(curr, p_2, "\n   Menu, line 159" + wurstStackTrace)
		endif
		set WindowManager_currentObservable[GetPlayerId(p_2)] = ob
	endif
endfunction

function closure_impl_82 takes integer this_57, integer track, player p_2, string wurstStackTrace returns nothing
	call WindowManager_trackableTrack(track, p_2, "\n   Menu, line 215" + wurstStackTrace)
endfunction

function dispatch_TrackableAction_run takes integer this_57, integer clickedTrackable, player clickingPlayer, string wurstStackTrace returns nothing
	if TrackableAction_typeId[this_57] == 0 then
		if this_57 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling TrackableAction.run" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called TrackableAction.run on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	if TrackableAction_typeId[this_57] <= 808 then
		if TrackableAction_typeId[this_57] <= 807 then
			call closure_impl_80(this_57, clickedTrackable, clickingPlayer, "\n   Trackable, line 19" + wurstStackTrace)
		else
			call closure_impl_81(this_57, clickedTrackable, clickingPlayer, "\n   Trackable, line 19" + wurstStackTrace)
		endif
	else
		call closure_impl_82(this_57, clickedTrackable, clickingPlayer, "\n   Trackable, line 19" + wurstStackTrace)
	endif
endfunction

function TrackableEx_clickHandler takes integer this_57, player p_2, string wurstStackTrace returns nothing
	if TrackableEx_onDoubleClick[this_57] != 0 then
		if TrackableEx_playerClickBefore[player_getId(p_2)] then
			call dispatch_TrackableAction_run(TrackableEx_onDoubleClick[this_57], this_57, p_2, "\n   Trackable, line 55" + wurstStackTrace)
			set TrackableEx_playerClickBefore[player_getId(p_2)] = false
			call timer_pause(TrackableEx_playerDoubleClickTimer[player_getId(p_2)])
		else
			call timer_start(TrackableEx_playerDoubleClickTimer[player_getId(p_2)], TrackableEx_doubleClickSpeed, ref_function_bridge_closure_impl)
			set TrackableEx_playerClickBefore[player_getId(p_2)] = true
			call dispatch_TrackableAction_run(TrackableEx_onClick[this_57], this_57, p_2, "\n   Trackable, line 63" + wurstStackTrace)
		endif
	elseif TrackableEx_onClick[this_57] != 0 then
		call dispatch_TrackableAction_run(TrackableEx_onClick[this_57], this_57, p_2, "\n   Trackable, line 66" + wurstStackTrace)
	endif
endfunction

function dispatch_TrackableEx_clickHandler takes integer this_57, player p_2, string wurstStackTrace returns nothing
	if TrackableEx_typeId[this_57] == 0 then
		if this_57 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling TrackableEx.clickHandler" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called TrackableEx.clickHandler on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call TrackableEx_clickHandler(this_57, p_2, "\n   Trackable, line 52" + wurstStackTrace)
endfunction

function hashtable_loadPlayerHandle takes hashtable this_57, integer parentKey, integer childKey returns player
	return LoadPlayerHandle(this_57, parentKey, childKey)
endfunction

function Table_loadPlayer takes integer this_57, integer parentKey returns player
	return hashtable_loadPlayerHandle(Table_ht, this_57, parentKey)
endfunction

function dispatch_Table_loadPlayer takes integer this_57, integer parentKey, string wurstStackTrace returns player
	local player loadPlayer_result
	if Table_typeId[this_57] == 0 then
		if this_57 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Table.loadPlayer" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Table.loadPlayer on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	set loadPlayer_result = Table_loadPlayer(this_57, parentKey)
	set dispatch_Table_loadPlayertempReturn = loadPlayer_result
	set loadPlayer_result = null
	return dispatch_Table_loadPlayertempReturn
endfunction

function hashtable_saveFogStateHandle takes hashtable this_57, integer parentKey, integer childKey, fogstate value returns nothing
	call SaveFogStateHandle(this_57, parentKey, childKey, value)
endfunction

function Table_saveFogState takes integer this_57, integer parentKey, fogstate value returns nothing
	call hashtable_saveFogStateHandle(Table_ht, this_57, parentKey, value)
endfunction

function dispatch_Table_saveFogState takes integer this_57, integer parentKey, fogstate value, string wurstStackTrace returns nothing
	if Table_typeId[this_57] == 0 then
		if this_57 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Table.saveFogState" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Table.saveFogState on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call Table_saveFogState(this_57, parentKey, value)
endfunction

function playerFromIndex takes integer index, string wurstStackTrace returns player
	call dispatch_Table_saveFogState(TypeCasting_typecastdata, 0, ConvertFogState(index), "\n   TypeCasting, line 9" + wurstStackTrace)
	return dispatch_Table_loadPlayer(TypeCasting_typecastdata, 0, "\n   TypeCasting, line 10" + wurstStackTrace)
endfunction

function closure_impl_83 takes string wurstStackTrace returns nothing
	call dispatch_TrackableEx_clickHandler(dispatch_HashMap_get(TrackableEx_trackableObjects, trackableToIndex(GetTriggeringTrackable()), "\n   Trackable, line 29" + wurstStackTrace), playerFromIndex(dispatch_HashMap_get(TrackableEx_trackableOwner, trackableToIndex(GetTriggeringTrackable()), "\n   Trackable, line 29" + wurstStackTrace), "\n   Trackable, line 29" + wurstStackTrace), "\n   Trackable, line 29" + wurstStackTrace)
endfunction

function bridge_closure_impl_7 takes nothing returns nothing
	call closure_impl_83("\n   Trackable, line 29")
endfunction

function TrackableEx_trackHandler takes integer this_57, player p_2, string wurstStackTrace returns nothing
	if TrackableEx_onTrack[this_57] != 0 then
		call dispatch_TrackableAction_run(TrackableEx_onTrack[this_57], this_57, p_2, "\n   Trackable, line 50" + wurstStackTrace)
	endif
endfunction

function dispatch_TrackableEx_trackHandler takes integer this_57, player p_2, string wurstStackTrace returns nothing
	if TrackableEx_typeId[this_57] == 0 then
		if this_57 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling TrackableEx.trackHandler" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called TrackableEx.trackHandler on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call TrackableEx_trackHandler(this_57, p_2, "\n   Trackable, line 48" + wurstStackTrace)
endfunction

function closure_impl_84 takes string wurstStackTrace returns nothing
	call dispatch_TrackableEx_trackHandler(dispatch_HashMap_get(TrackableEx_trackableObjects, trackableToIndex(GetTriggeringTrackable()), "\n   Trackable, line 28" + wurstStackTrace), playerFromIndex(dispatch_HashMap_get(TrackableEx_trackableOwner, trackableToIndex(GetTriggeringTrackable()), "\n   Trackable, line 28" + wurstStackTrace), "\n   Trackable, line 28" + wurstStackTrace), "\n   Trackable, line 28" + wurstStackTrace)
endfunction

function bridge_closure_impl_8 takes nothing returns nothing
	call closure_impl_84("\n   Trackable, line 28")
endfunction

function hashtable_loadEffectHandle takes hashtable this_57, integer parentKey, integer childKey returns effect
	return LoadEffectHandle(this_57, parentKey, childKey)
endfunction

function Table_loadEffect takes integer this_57, integer parentKey returns effect
	return hashtable_loadEffectHandle(Table_ht, this_57, parentKey)
endfunction

function dispatch_Table_loadEffect takes integer this_57, integer parentKey, string wurstStackTrace returns effect
	local effect loadEffect_result
	if Table_typeId[this_57] == 0 then
		if this_57 == 0 then
=======
	if Widget_typeId[this_58] <= 822 then
		if Widget_typeId[this_58] <= 809 then
			if Widget_typeId[this_58] <= 801 then
				call Widget_untrackAnimation(this_58, p_2)
			else
				call Widget_untrackAnimation(this_58, p_2)
			endif
		elseif Widget_typeId[this_58] <= 818 then
			call Widget_untrackAnimation(this_58, p_2)
		else
			call Widget_untrackAnimation(this_58, p_2)
		endif
	elseif Widget_typeId[this_58] <= 830 then
		if Widget_typeId[this_58] <= 828 then
			call Widget_untrackAnimation(this_58, p_2)
		else
			call Icon_untrackAnimation(this_58, p_2, "\n   Menu, line 39" + wurstStackTrace)
		endif
	else
		call Widget_untrackAnimation(this_58, p_2)
	endif
endfunction

function Observable_onUnTrack takes integer this_58, player p_2, string wurstStackTrace returns nothing
	if Observable_unTrack[this_58] != 0 then
		call cyc_cyc_dispatch_PlayerAction_run(0, 0, Observable_unTrack[this_58], p_2, "\n   Menu, line 107" + wurstStackTrace)
	endif
	if Observable_playHoverAnimation[this_58] then
		call dispatch_Widget_untrackAnimation(Observable_content[this_58], p_2, "\n   Menu, line 109" + wurstStackTrace)
	endif
endfunction

function dispatch_Observable_onUnTrack takes integer this_58, player p_2, string wurstStackTrace returns nothing
	if Widget_typeId[this_58] == 0 then
		if this_58 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Observable.onUnTrack" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Observable.onUnTrack on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	if Widget_typeId[this_58] <= 801 then
		call Observable_onUnTrack(this_58, p_2, "\n   Menu, line 105" + wurstStackTrace)
	else
		call Observable_onUnTrack(this_58, p_2, "\n   Menu, line 105" + wurstStackTrace)
	endif
endfunction

function WindowManager_trackableTrack takes integer tr, player p_2, string wurstStackTrace returns nothing
	local integer ob = dispatch_Window_getObservableAt(dispatch_Stack_peek(WindowManager_currentWindow[GetPlayerId(p_2)], "\n   Menu, line 153" + wurstStackTrace), tr, "\n   Menu, line 153" + wurstStackTrace)
	local integer curr = WindowManager_currentObservable[GetPlayerId(p_2)]
	if ob != curr then
		if ob != 0 then
			call dispatch_Observable_onTrack(ob, p_2, "\n   Menu, line 157" + wurstStackTrace)
		endif
		if curr != 0 then
			call dispatch_Observable_onUnTrack(curr, p_2, "\n   Menu, line 159" + wurstStackTrace)
		endif
		set WindowManager_currentObservable[GetPlayerId(p_2)] = ob
	endif
endfunction

function closure_impl_82 takes integer this_58, integer track, player p_2, string wurstStackTrace returns nothing
	call WindowManager_trackableTrack(track, p_2, "\n   Menu, line 215" + wurstStackTrace)
endfunction

function dispatch_TrackableAction_run takes integer this_58, integer clickedTrackable, player clickingPlayer, string wurstStackTrace returns nothing
	if TrackableAction_typeId[this_58] == 0 then
		if this_58 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling TrackableAction.run" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called TrackableAction.run on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	if TrackableAction_typeId[this_58] <= 807 then
		if TrackableAction_typeId[this_58] <= 806 then
			call closure_impl_80(this_58, clickedTrackable, clickingPlayer, "\n   Trackable, line 19" + wurstStackTrace)
		else
			call closure_impl_81(this_58, clickedTrackable, clickingPlayer, "\n   Trackable, line 19" + wurstStackTrace)
		endif
	else
		call closure_impl_82(this_58, clickedTrackable, clickingPlayer, "\n   Trackable, line 19" + wurstStackTrace)
	endif
endfunction

function TrackableEx_clickHandler takes integer this_58, player p_2, string wurstStackTrace returns nothing
	if TrackableEx_onDoubleClick[this_58] != 0 then
		if TrackableEx_playerClickBefore[player_getId(p_2)] then
			call dispatch_TrackableAction_run(TrackableEx_onDoubleClick[this_58], this_58, p_2, "\n   Trackable, line 55" + wurstStackTrace)
			set TrackableEx_playerClickBefore[player_getId(p_2)] = false
			call timer_pause(TrackableEx_playerDoubleClickTimer[player_getId(p_2)])
		else
			call timer_start(TrackableEx_playerDoubleClickTimer[player_getId(p_2)], TrackableEx_doubleClickSpeed, ref_function_bridge_closure_impl)
			set TrackableEx_playerClickBefore[player_getId(p_2)] = true
			call dispatch_TrackableAction_run(TrackableEx_onClick[this_58], this_58, p_2, "\n   Trackable, line 63" + wurstStackTrace)
		endif
	elseif TrackableEx_onClick[this_58] != 0 then
		call dispatch_TrackableAction_run(TrackableEx_onClick[this_58], this_58, p_2, "\n   Trackable, line 66" + wurstStackTrace)
	endif
endfunction

function dispatch_TrackableEx_clickHandler takes integer this_58, player p_2, string wurstStackTrace returns nothing
	if TrackableEx_typeId[this_58] == 0 then
		if this_58 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling TrackableEx.clickHandler" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called TrackableEx.clickHandler on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call TrackableEx_clickHandler(this_58, p_2, "\n   Trackable, line 52" + wurstStackTrace)
endfunction

function hashtable_loadPlayerHandle takes hashtable this_58, integer parentKey, integer childKey returns player
	return LoadPlayerHandle(this_58, parentKey, childKey)
endfunction

function Table_loadPlayer takes integer this_58, integer parentKey returns player
	return hashtable_loadPlayerHandle(Table_ht, this_58, parentKey)
endfunction

function dispatch_Table_loadPlayer takes integer this_58, integer parentKey, string wurstStackTrace returns player
	local player loadPlayer_result
	if Table_typeId[this_58] == 0 then
		if this_58 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Table.loadPlayer" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Table.loadPlayer on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	set loadPlayer_result = Table_loadPlayer(this_58, parentKey)
	set dispatch_Table_loadPlayertempReturn = loadPlayer_result
	set loadPlayer_result = null
	return dispatch_Table_loadPlayertempReturn
endfunction

function hashtable_saveFogStateHandle takes hashtable this_58, integer parentKey, integer childKey, fogstate value returns nothing
	call SaveFogStateHandle(this_58, parentKey, childKey, value)
endfunction

function Table_saveFogState takes integer this_58, integer parentKey, fogstate value returns nothing
	call hashtable_saveFogStateHandle(Table_ht, this_58, parentKey, value)
endfunction

function dispatch_Table_saveFogState takes integer this_58, integer parentKey, fogstate value, string wurstStackTrace returns nothing
	if Table_typeId[this_58] == 0 then
		if this_58 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Table.saveFogState" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Table.saveFogState on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call Table_saveFogState(this_58, parentKey, value)
endfunction

function playerFromIndex takes integer index, string wurstStackTrace returns player
	call dispatch_Table_saveFogState(TypeCasting_typecastdata, 0, ConvertFogState(index), "\n   TypeCasting, line 9" + wurstStackTrace)
	return dispatch_Table_loadPlayer(TypeCasting_typecastdata, 0, "\n   TypeCasting, line 10" + wurstStackTrace)
endfunction

function closure_impl_83 takes string wurstStackTrace returns nothing
	call dispatch_TrackableEx_clickHandler(dispatch_HashMap_get(TrackableEx_trackableObjects, trackableToIndex(GetTriggeringTrackable()), "\n   Trackable, line 29" + wurstStackTrace), playerFromIndex(dispatch_HashMap_get(TrackableEx_trackableOwner, trackableToIndex(GetTriggeringTrackable()), "\n   Trackable, line 29" + wurstStackTrace), "\n   Trackable, line 29" + wurstStackTrace), "\n   Trackable, line 29" + wurstStackTrace)
endfunction

function bridge_closure_impl_3 takes nothing returns nothing
	call closure_impl_83("\n   Trackable, line 29")
endfunction

function closure_impl_84 takes string wurstStackTrace returns nothing
	call dispatch_Conductor_move(timer_getData(GetExpiredTimer(), "\n   Conductor, line 61" + wurstStackTrace), "\n   Conductor, line 61" + wurstStackTrace)
endfunction

function bridge_closure_impl_4 takes nothing returns nothing
	call closure_impl_84("\n   Conductor, line 59")
endfunction

function Missle_onDestroy_2 takes integer this_58, string wurstStackTrace returns nothing
	call dispatch_Fx_destroyFx(Missle_missle[this_58], "\n   RamisHomingMissle, line 65" + wurstStackTrace)
	call timer_release(Missle_t_2[this_58], "\n   RamisHomingMissle, line 66" + wurstStackTrace)
	call timer_release(Missle_destroyTimer[this_58], "\n   RamisHomingMissle, line 67" + wurstStackTrace)
endfunction

function dealloc_Missle_2 takes integer obj, string wurstStackTrace returns nothing
	if Missle_typeId_2[obj] == 0 then
		call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Double free: object of type Missle" + wurstStackTrace)
		call I2S(1 / 0)
	else
		set Missle_nextFree_2[Missle_firstFree_2] = obj
		set Missle_firstFree_2 = Missle_firstFree_2 + 1
		set Missle_typeId_2[obj] = 0
	endif
endfunction

function destroyMissle_2 takes integer this_58, string wurstStackTrace returns nothing
	call Missle_onDestroy_2(this_58, "\n   RamisHomingMissle, line 64" + wurstStackTrace)
	call dealloc_Missle_2(this_58, "\n   RamisHomingMissle, line 64" + wurstStackTrace)
endfunction

function dispatch_Missle_destroyMissle_2 takes integer this_58, string wurstStackTrace returns nothing
	if Missle_typeId_2[this_58] == 0 then
		if this_58 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Missle.destroyMissle" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Missle.destroyMissle on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call destroyMissle_2(this_58, "\n   RamisHomingMissle, line 9" + wurstStackTrace)
endfunction

function closure_impl_85 takes string wurstStackTrace returns nothing
	call dispatch_Missle_destroyMissle_2(timer_getData(GetExpiredTimer(), "\n   RamisHomingMissle, line 39" + wurstStackTrace), "\n   RamisHomingMissle, line 39" + wurstStackTrace)
endfunction

function bridge_closure_impl_5 takes nothing returns nothing
	call closure_impl_85("\n   RamisHomingMissle, line 36")
endfunction

function unit_getFacingAngle takes unit this_58 returns real
	return real_asAngleDegrees(GetUnitFacing(this_58))
endfunction

function closure_impl_86 takes string wurstStackTrace returns nothing
	local integer wurst__iterator0 = dispatch_LinkedList_iterator(Hero_toMove, "\n   HeroClass, line 23" + wurstStackTrace)
	local integer h
	loop
		exitwhen  not dispatch_LLIterator_hasNext(wurst__iterator0, "\n   HeroClass, line 23" + wurstStackTrace)
		set h = dispatch_LLIterator_next(wurst__iterator0, "\n   HeroClass, line 23" + wurstStackTrace)
		call unit_setXY(Unit_u[h], vec2_polarOffset(unit_getPos(Unit_u[h]), unit_getPos_return_y, unit_getFacingAngle(Unit_u[h]), 0.5), vec2_polarOffset_return_y)
	endloop
	call dispatch_LLIterator_close(wurst__iterator0, "\n   HeroClass, line 23" + wurstStackTrace)
endfunction

function bridge_closure_impl_6 takes nothing returns nothing
	call closure_impl_86("\n   HeroClass, line 22")
endfunction

function closure_impl_87 takes string wurstStackTrace returns nothing
	set TrackableEx_playerClickBefore[timer_getData(GetExpiredTimer(), "\n   Trackable, line 60" + wurstStackTrace)] = false
endfunction

function bridge_closure_impl_7 takes nothing returns nothing
	call closure_impl_87("\n   Trackable, line 59")
endfunction

function Unit_addKnock_2 takes integer this_58, real momentum_x, real momentum_y, string wurstStackTrace returns nothing
	call dispatch_Unit_addKnock(this_58, momentum_x, momentum_y, "\n   UnitClass, line 280" + wurstStackTrace)
endfunction

function dispatch_Unit_addKnock_2 takes integer this_58, real momentum_x, real momentum_y, string wurstStackTrace returns nothing
	if Unit_typeId[this_58] == 0 then
		if this_58 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Unit.addKnock" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Unit.addKnock on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	if Unit_typeId[this_58] <= 709 then
		call Unit_addKnock_2(this_58, momentum_x, momentum_y, "\n   UnitClass, line 279" + wurstStackTrace)
	else
		call Unit_addKnock_2(this_58, momentum_x, momentum_y, "\n   UnitClass, line 279" + wurstStackTrace)
	endif
endfunction

function Missle_move_2 takes integer this_58, string wurstStackTrace returns nothing
	local integer tempIndex = this_58
	local integer temp = tempIndex
	local integer tempIndex_2 = this_58
	local real posmissle_x
	local real posmissle_y
	local real speedtemp_x
	local real speedtemp_y
	local boolean wasHit
	local group wurst__iterator0
	local group receiver
	local unit u_2
	local unit u_3
	local real temp_posmissle_x
	local real temp_posmissle_y
	local real temp_speedtemp_x
	local real temp_speedtemp_y
	local integer tempIndex_3
	local integer tempIndex_4
	local integer tempIndex_5
	local integer tempIndex_6
	local integer temp_2
	local real temp_3
	local real temp_4
	local integer temp_5
	local real temp_6
	local real temp_7
	local group temp_8
	set Missle_speed[temp] = vec2_op_mult(Missle_speed[tempIndex_2], Missle_speed_2[tempIndex_2], Missle_speedLost)
	set Missle_speed_2[tempIndex] = vec2_op_mult_return_y
	set temp_posmissle_x = dispatch_Fx_getPos2(Missle_missle[this_58], "\n   RamisHomingMissle, line 43" + wurstStackTrace)
	set temp_posmissle_y = dispatch_Fx_getPos2_return_y
	set posmissle_x = temp_posmissle_x
	set posmissle_y = temp_posmissle_y
	if ( not Missle_canHitCaster[this_58]) and vec2_distToVec(posmissle_x, posmissle_y, unit_getPos(Unit_u[Missle_owner[this_58]]), unit_getPos_return_y) > Missle_missleRadius then
		set Missle_canHitCaster[this_58] = true
	endif
	set temp_speedtemp_x = vec2_polarOffset(0., 0., vec2_angleTo(posmissle_x, posmissle_y, unit_getPos(Unit_u[Missle_target[this_58]]), unit_getPos_return_y), Missle_speedAccel)
	set temp_speedtemp_y = vec2_polarOffset_return_y
	set speedtemp_x = temp_speedtemp_x
	set speedtemp_y = temp_speedtemp_y
	set tempIndex_3 = this_58
	set temp_2 = tempIndex_3
	set tempIndex_4 = this_58
	set Missle_speed[temp_2] = vec2_op_plus(Missle_speed[tempIndex_4], Missle_speed_2[tempIndex_4], speedtemp_x, speedtemp_y)
	set Missle_speed_2[tempIndex_3] = vec2_op_plus_return_y
	set temp_5 = Missle_missle[this_58]
	set temp_3 = posmissle_x
	set temp_4 = posmissle_y
	set tempIndex_5 = this_58
	call dispatch_Fx_setXY(temp_5, vec2_op_plus(temp_3, temp_4, Missle_speed[tempIndex_5], Missle_speed_2[tempIndex_5]), vec2_op_plus_return_y, "\n   RamisHomingMissle, line 48" + wurstStackTrace)
	set wasHit = false
	set temp_8 = TempGroups_ENUM_GROUP
	set temp_6 = posmissle_x
	set temp_7 = posmissle_y
	set tempIndex_6 = this_58
	call group_enumUnitsInRange_2(temp_8, vec2_op_plus(temp_6, temp_7, Missle_speed[tempIndex_6], Missle_speed_2[tempIndex_6]), vec2_op_plus_return_y, Missle_missleRadius)
	if Missle_canHitCaster[this_58] and IsUnitInGroup(Unit_u[Missle_owner[this_58]], TempGroups_ENUM_GROUP) then
		set receiver = TempGroups_ENUM_GROUP
		call group_enumUnitsInRange_2(receiver, unit_getPos(Unit_u[Missle_owner[this_58]]), unit_getPos_return_y, Missle_knockbackRange)
		set wurst__iterator0 = receiver
		loop
			exitwhen  not group_hasNext(wurst__iterator0)
			set u_2 = group_next(wurst__iterator0)
			if u_2 != Unit_u[Missle_owner[this_58]] then
				call dispatch_Unit_addKnock_2(unit_getUserData(u_2), angle_toVec(vec2_angleTo(unit_getPos(Unit_u[Missle_owner[this_58]]), unit_getPos_return_y, unit_getPos(u_2), unit_getPos_return_y), (1. - vec2_distToVec(unit_getPos(Unit_u[Missle_owner[this_58]]), unit_getPos_return_y, unit_getPos(u_2), unit_getPos_return_y) / Missle_knockbackRange) * Missle_knockback), angle_toVec_return_y, "\n   RamisHomingMissle, line 54" + wurstStackTrace)
			endif
		endloop
		call dispatch_Missle_destroyMissle_2(this_58, "\n   RamisHomingMissle, line 55" + wurstStackTrace)
		set wurst__iterator0 = null
		set receiver = null
		set u_2 = null
		set u_3 = null
		set temp_8 = null
		return
	endif
	loop
		exitwhen  not group_hasNext(TempGroups_ENUM_GROUP)
		set u_3 = group_next(TempGroups_ENUM_GROUP)
		if Unit_u[Missle_owner[this_58]] != u_3 then
			call dispatch_Unit_addKnock_2(unit_getUserData(u_3), angle_toVec(vec2_angleTo(posmissle_x, posmissle_y, unit_getPos(u_3), unit_getPos_return_y), Missle_knockback), angle_toVec_return_y, "\n   RamisHomingMissle, line 59" + wurstStackTrace)
			set wasHit = true
		endif
	endloop
	if wasHit then
		call dispatch_Missle_destroyMissle_2(this_58, "\n   RamisHomingMissle, line 62" + wurstStackTrace)
	endif
	set wurst__iterator0 = null
	set receiver = null
	set u_2 = null
	set u_3 = null
	set temp_8 = null
endfunction

function dispatch_Missle_move_2 takes integer this_58, string wurstStackTrace returns nothing
	if Missle_typeId_2[this_58] == 0 then
		if this_58 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Missle.move" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Missle.move on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call Missle_move_2(this_58, "\n   RamisHomingMissle, line 41" + wurstStackTrace)
endfunction

function closure_impl_88 takes string wurstStackTrace returns nothing
	call dispatch_Missle_move_2(timer_getData(GetExpiredTimer(), "\n   RamisHomingMissle, line 35" + wurstStackTrace), "\n   RamisHomingMissle, line 35" + wurstStackTrace)
endfunction

function bridge_closure_impl_8 takes nothing returns nothing
	call closure_impl_88("\n   RamisHomingMissle, line 35")
endfunction

function TrackableEx_trackHandler takes integer this_58, player p_2, string wurstStackTrace returns nothing
	if TrackableEx_onTrack[this_58] != 0 then
		call dispatch_TrackableAction_run(TrackableEx_onTrack[this_58], this_58, p_2, "\n   Trackable, line 50" + wurstStackTrace)
	endif
endfunction

function dispatch_TrackableEx_trackHandler takes integer this_58, player p_2, string wurstStackTrace returns nothing
	if TrackableEx_typeId[this_58] == 0 then
		if this_58 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling TrackableEx.trackHandler" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called TrackableEx.trackHandler on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call TrackableEx_trackHandler(this_58, p_2, "\n   Trackable, line 48" + wurstStackTrace)
endfunction

function closure_impl_89 takes string wurstStackTrace returns nothing
	call dispatch_TrackableEx_trackHandler(dispatch_HashMap_get(TrackableEx_trackableObjects, trackableToIndex(GetTriggeringTrackable()), "\n   Trackable, line 28" + wurstStackTrace), playerFromIndex(dispatch_HashMap_get(TrackableEx_trackableOwner, trackableToIndex(GetTriggeringTrackable()), "\n   Trackable, line 28" + wurstStackTrace), "\n   Trackable, line 28" + wurstStackTrace), "\n   Trackable, line 28" + wurstStackTrace)
endfunction

function bridge_closure_impl_9 takes nothing returns nothing
	call closure_impl_89("\n   Trackable, line 28")
endfunction

function Unit_damageSystem takes integer this_58, real amount_51, string wurstStackTrace returns nothing
	call dispatch_Unit_dealDamage(this_58, amount_51, Unit_lastHeroDamager[this_58], false, "\n   UnitClass, line 1122" + wurstStackTrace)
endfunction

function dispatch_Unit_damageSystem takes integer this_58, real amount_51, string wurstStackTrace returns nothing
	if Unit_typeId[this_58] == 0 then
		if this_58 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Unit.damageSystem" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Unit.damageSystem on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	if Unit_typeId[this_58] <= 709 then
		call Unit_damageSystem(this_58, amount_51, "\n   UnitClass, line 1121" + wurstStackTrace)
	else
		call Unit_damageSystem(this_58, amount_51, "\n   UnitClass, line 1121" + wurstStackTrace)
	endif
endfunction

function lightning_setPos takes lightning this_58, real pos1_x, real pos1_y, real pos1_z, real pos2_x, real pos2_y, real pos2_z returns nothing
	call MoveLightningEx(this_58, true, pos1_x, pos1_y, pos1_z, pos2_x, pos2_y, pos2_z)
endfunction

function ControlPoint_inRangeActions takes integer this_58, string wurstStackTrace returns nothing
	local group wurst__iterator1 = group_iterator(ControlPoint_inRange[this_58])
	local unit temp
	local integer u_2
	local integer data
	local integer tempIndex
	local integer tempIndex_2
	local integer tempIndex_3
	local real temp_2
	local real temp_3
	local real temp_4
	local real temp_5
	local integer temp_6
	local real temp_7
	local lightning temp_8
	local real temp_9
	local real temp_10
	local real temp_11
	loop
		exitwhen  not group_hasNext(wurst__iterator1)
		set temp = group_next(wurst__iterator1)
		set u_2 = unit_getUserData(temp)
		set temp_2 = unit_getPos(temp)
		set temp_3 = unit_getPos_return_y
		set tempIndex = this_58
		set temp_7 = vec2_distToVec(temp_2, temp_3, ControlPoint_pos2[tempIndex], ControlPoint_pos2_2[tempIndex])
		set temp_6 = this_58
		set temp_4 = unit_getPos(temp)
		set temp_5 = unit_getPos_return_y
		set tempIndex_2 = this_58
		if temp_7 < dispatch_ControlPoint_getRadius(temp_6, vec2_angleTo(temp_4, temp_5, ControlPoint_pos2[tempIndex_2], ControlPoint_pos2_2[tempIndex_2]), "\n   ControlPoint, line 114" + wurstStackTrace) then
			set data = dispatch_HashMap_get(ControlPoint_captureData, u_2, "\n   ControlPoint, line 115" + wurstStackTrace)
			if ControlPoint_owner[this_58] == Unit_team[u_2] then
				call dispatch_Unit_healSystem(u_2, 1., "\n   ControlPoint, line 117" + wurstStackTrace)
			else
				set temp_8 = CaptureData_l1[data]
				set temp_9 = dispatch_Unit_getMiddle(u_2, "\n   ControlPoint, line 119" + wurstStackTrace)
				set temp_10 = dispatch_Unit_getMiddle_return_y
				set temp_11 = dispatch_Unit_getMiddle_return_z
				set tempIndex_3 = this_58
				call lightning_setPos(temp_8, temp_9, temp_10, temp_11, ControlPoint_pos3[tempIndex_3], ControlPoint_pos3_2[tempIndex_3], ControlPoint_pos3_3[tempIndex_3])
				call dispatch_Fx_setXY(CaptureData_fx[data], unit_getPos(temp), unit_getPos_return_y, "\n   ControlPoint, line 120" + wurstStackTrace)
				call dispatch_Unit_damageSystem(u_2, 1., "\n   ControlPoint, line 121" + wurstStackTrace)
			endif
		else
			call dispatch_ControlPoint_leave(this_58, u_2, "\n   ControlPoint, line 123" + wurstStackTrace)
		endif
	endloop
	call group_close(wurst__iterator1)
	set wurst__iterator1 = null
	set temp = null
	set temp_8 = null
endfunction

function dispatch_ControlPoint_inRangeActions takes integer this_58, string wurstStackTrace returns nothing
	if ControlPoint_typeId[this_58] == 0 then
		if this_58 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling ControlPoint.inRangeActions" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called ControlPoint.inRangeActions on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call ControlPoint_inRangeActions(this_58, "\n   ControlPoint, line 111" + wurstStackTrace)
endfunction

function closure_impl_90 takes string wurstStackTrace returns nothing
	call dispatch_ControlPoint_inRangeActions(timer_getData(GetExpiredTimer(), "\n   ControlPoint, line 79" + wurstStackTrace), "\n   ControlPoint, line 79" + wurstStackTrace)
endfunction

function bridge_closure_impl_10 takes nothing returns nothing
	call closure_impl_90("\n   ControlPoint, line 79")
endfunction

function hashtable_loadEffectHandle takes hashtable this_58, integer parentKey, integer childKey returns effect
	return LoadEffectHandle(this_58, parentKey, childKey)
endfunction

function Table_loadEffect takes integer this_58, integer parentKey returns effect
	return hashtable_loadEffectHandle(Table_ht, this_58, parentKey)
endfunction

function dispatch_Table_loadEffect takes integer this_58, integer parentKey, string wurstStackTrace returns effect
	local effect loadEffect_result
	if Table_typeId[this_58] == 0 then
		if this_58 == 0 then
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Table.loadEffect" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Table.loadEffect on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
<<<<<<< HEAD
	set loadEffect_result = Table_loadEffect(this_57, parentKey)
=======
	set loadEffect_result = Table_loadEffect(this_58, parentKey)
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
	set dispatch_Table_loadEffecttempReturn = loadEffect_result
	set loadEffect_result = null
	return dispatch_Table_loadEffecttempReturn
endfunction

function destroyTimedEffect takes string wurstStackTrace returns nothing
	call effect_destr(dispatch_Table_loadEffect(TimedEffect_effectData, GetHandleId(GetExpiredTimer()), "\n   TimedEffect, line 11" + wurstStackTrace))
endfunction

function bridge_destroyTimedEffect takes nothing returns nothing
	call destroyTimedEffect("\n   TimedEffect, line 8")
endfunction

function destroyTimedFx takes string wurstStackTrace returns nothing
	local timer t = GetExpiredTimer()
	call dispatch_Fx_destroyFx(timer_getData(t, "\n   TimedEffect, line 20" + wurstStackTrace), "\n   TimedEffect, line 20" + wurstStackTrace)
	call timer_release(t, "\n   TimedEffect, line 21" + wurstStackTrace)
	set t = null
endfunction

function bridge_destroyTimedFx takes nothing returns nothing
	call destroyTimedFx("\n   TimedEffect, line 15")
endfunction

<<<<<<< HEAD
function dispatch_OnCast_run takes integer this_57, unit caster, integer lvl returns nothing
endfunction

function construct_Conductor_2 takes integer this_57, unit caster, real target_x, real target_y, integer lvl, string wurstStackTrace returns nothing
=======
function dispatch_OnCast_run takes integer this_58, unit caster, integer lvl returns nothing
endfunction

function construct_Conductor_2 takes integer this_58, unit caster, real target_x, real target_y, integer lvl, string wurstStackTrace returns nothing
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
	local real pos_x
	local real pos_y
	local real ang_radians
	local timer receiver
	local timer receiver_2
	local real temp_pos_x
	local real temp_pos_y
	local integer tempIndex
<<<<<<< HEAD
	set Conductor_distance[this_57] = Conductor_range
	call print("created")
	set Conductor_owner[this_57] = caster
	set Conductor_lvl[this_57] = lvl
=======
	set Conductor_distance[this_58] = Conductor_range
	call print("created")
	set Conductor_owner[this_58] = caster
	set Conductor_lvl[this_58] = lvl
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
	set temp_pos_x = unit_getPos(caster)
	set temp_pos_y = unit_getPos_return_y
	set pos_x = temp_pos_x
	set pos_y = temp_pos_y
	set ang_radians = vec2_angleTo(pos_x, pos_y, target_x, target_y)
<<<<<<< HEAD
	set Conductor_dummy[this_57] = new_Fx(vec2_withZ(pos_x, pos_y, Conductor_missleHeight), vec2_withZ_return_y, vec2_withZ_return_z, ang_radians, "Abilities\\Weapons\\FireBallMissile\\FireBallMissile.mdl", "\n   Conductor, line 69" + wurstStackTrace)
	set tempIndex = this_57
	set Conductor_speed[tempIndex] = vec2_polarOffset(0., 0., ang_radians, Conductor_missleSpeed)
	set Conductor_speed_2[tempIndex] = vec2_polarOffset_return_y
	if lvl < 3 then
		set Conductor_typ[this_57] = 1
	elseif lvl < 6 then
		set Conductor_typ[this_57] = 2
	elseif lvl < 9 then
		set Conductor_typ[this_57] = 3
	elseif lvl < 10 then
		set Conductor_typ[this_57] = 4
	else
		set Conductor_typ[this_57] = 6
	endif
	set receiver = getTimer("\n   Conductor, line 81" + wurstStackTrace)
	call timer_setData(receiver, this_57, "\n   Conductor, line 81" + wurstStackTrace)
	set receiver_2 = receiver
	call timer_startPeriodic(receiver_2, Basics_ANIMATION_PERIOD, ref_function_bridge_closure_impl_3)
	set Conductor_t[this_57] = receiver_2
=======
	set Conductor_dummy[this_58] = new_Fx(vec2_withZ(pos_x, pos_y, Conductor_missleHeight), vec2_withZ_return_y, vec2_withZ_return_z, ang_radians, "Abilities\\Weapons\\FireBallMissile\\FireBallMissile.mdl", "\n   Conductor, line 69" + wurstStackTrace)
	set tempIndex = this_58
	set Conductor_speed[tempIndex] = vec2_polarOffset(0., 0., ang_radians, Conductor_missleSpeed)
	set Conductor_speed_2[tempIndex] = vec2_polarOffset_return_y
	if lvl < 3 then
		set Conductor_typ[this_58] = 1
	elseif lvl < 6 then
		set Conductor_typ[this_58] = 2
	elseif lvl < 9 then
		set Conductor_typ[this_58] = 3
	elseif lvl < 10 then
		set Conductor_typ[this_58] = 4
	else
		set Conductor_typ[this_58] = 6
	endif
	set receiver = getTimer("\n   Conductor, line 81" + wurstStackTrace)
	call timer_setData(receiver, this_58, "\n   Conductor, line 81" + wurstStackTrace)
	set receiver_2 = receiver
	call timer_startPeriodic(receiver_2, Basics_ANIMATION_PERIOD, ref_function_bridge_closure_impl_5)
	set Conductor_t[this_58] = receiver_2
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
	set receiver = null
	set receiver_2 = null
endfunction

function new_Conductor_2 takes unit caster, real target_x, real target_y, integer lvl, string wurstStackTrace returns integer
<<<<<<< HEAD
	local integer this_57 = alloc_Conductor()
	call construct_Conductor_2(this_57, caster, target_x, target_y, lvl, "\n   Conductor, line 63" + wurstStackTrace)
	return this_57
endfunction

function closure_impl_85 takes integer this_57, unit u_2, integer lvl, real pos_x, real pos_y, string wurstStackTrace returns integer
	return new_Conductor_2(u_2, pos_x, pos_y, lvl, "\n   Conductor, line 24" + wurstStackTrace)
endfunction

function dispatch_OnPointCast_run takes integer this_57, unit caster, integer lvl, real pos_x, real pos_y, string wurstStackTrace returns nothing
	if Cast_typeId[this_57] == 0 then
		if this_57 == 0 then
=======
	local integer this_58 = alloc_Conductor()
	call construct_Conductor_2(this_58, caster, target_x, target_y, lvl, "\n   Conductor, line 63" + wurstStackTrace)
	return this_58
endfunction

function closure_impl_91 takes integer this_58, unit u_2, integer lvl, real pos_x, real pos_y, string wurstStackTrace returns integer
	return new_Conductor_2(u_2, pos_x, pos_y, lvl, "\n   Conductor, line 24" + wurstStackTrace)
endfunction

function dispatch_OnPointCast_run takes integer this_58, unit caster, integer lvl, real pos_x, real pos_y, string wurstStackTrace returns nothing
	if Cast_typeId[this_58] == 0 then
		if this_58 == 0 then
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling OnPointCast.run" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called OnPointCast.run on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
<<<<<<< HEAD
	call closure_impl_85(this_57, caster, lvl, pos_x, pos_y, "\n   ClosureEvents, line 65" + wurstStackTrace)
endfunction

function alloc_Missle takes nothing returns integer
	local integer this_57
	if Missle_firstFree_2 == 0 then
		set Missle_maxIndex_2 = Missle_maxIndex_2 + 1
		set this_57 = Missle_maxIndex_2
	else
		set Missle_firstFree_2 = Missle_firstFree_2 - 1
		set this_57 = Missle_nextFree_2[Missle_firstFree_2]
	endif
	set Missle_typeId_2[this_57] = 854
	return this_57
endfunction

function construct_Missle takes integer this_57, integer owner, integer target, string wurstStackTrace returns nothing
=======
	call closure_impl_91(this_58, caster, lvl, pos_x, pos_y, "\n   ClosureEvents, line 65" + wurstStackTrace)
endfunction

function alloc_Missle takes nothing returns integer
	local integer this_58
	if Missle_firstFree_2 == 0 then
		set Missle_maxIndex_2 = Missle_maxIndex_2 + 1
		set this_58 = Missle_maxIndex_2
	else
		set Missle_firstFree_2 = Missle_firstFree_2 - 1
		set this_58 = Missle_nextFree_2[Missle_firstFree_2]
	endif
	set Missle_typeId_2[this_58] = 857
	return this_58
endfunction

function construct_Missle takes integer this_58, integer owner, integer target, string wurstStackTrace returns nothing
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
	local real pos_x
	local real pos_y
	local real posT_x
	local real posT_y
	local timer receiver
	local timer receiver_2
	local timer receiver_3
	local timer receiver_4
	local real temp_pos_x
	local real temp_pos_y
	local real temp_posT_x
	local real temp_posT_y
	local integer tempIndex
<<<<<<< HEAD
	set Missle_canHitCaster[this_57] = false
	set Missle_owner[this_57] = owner
	set Missle_target[this_57] = target
=======
	set Missle_canHitCaster[this_58] = false
	set Missle_owner[this_58] = owner
	set Missle_target[this_58] = target
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
	set temp_pos_x = unit_getPos(Unit_u[owner])
	set temp_pos_y = unit_getPos_return_y
	set pos_x = temp_pos_x
	set pos_y = temp_pos_y
	set temp_posT_x = unit_getPos(Unit_u[target])
	set temp_posT_y = unit_getPos_return_y
	set posT_x = temp_posT_x
	set posT_y = temp_posT_y
<<<<<<< HEAD
	set tempIndex = this_57
	set Missle_speed[tempIndex] = vec2_polarOffset(0., 0., vec2_angleTo(pos_x, pos_y, posT_x, posT_y), Missle_missleStartSpeed)
	set Missle_speed_2[tempIndex] = vec2_polarOffset_return_y
	set Missle_missle[this_57] = new_Fx(vec2_withZ(pos_x, pos_y, 70.), vec2_withZ_return_y, vec2_withZ_return_z, vec2_angleTo(pos_x, pos_y, posT_x, posT_y), "Abilities\\Weapons\\LordofFlameMissile\\LordofFlameMissile.mdl", "\n   RamisHomingMissle, line 34" + wurstStackTrace)
	set receiver = getTimer("\n   RamisHomingMissle, line 35" + wurstStackTrace)
	call timer_setData(receiver, this_57, "\n   RamisHomingMissle, line 35" + wurstStackTrace)
	set receiver_2 = receiver
	call timer_startPeriodic(receiver_2, 0.03, ref_function_bridge_closure_impl_4)
	set Missle_t_2[this_57] = receiver_2
	set receiver_3 = getTimer("\n   RamisHomingMissle, line 36" + wurstStackTrace)
	call timer_setData(receiver_3, this_57, "\n   RamisHomingMissle, line 36" + wurstStackTrace)
	set receiver_4 = receiver_3
	call timer_start(receiver_4, 10., ref_function_bridge_closure_impl_5)
	set Missle_destroyTimer[this_57] = receiver_4
=======
	set tempIndex = this_58
	set Missle_speed[tempIndex] = vec2_polarOffset(0., 0., vec2_angleTo(pos_x, pos_y, posT_x, posT_y), Missle_missleStartSpeed)
	set Missle_speed_2[tempIndex] = vec2_polarOffset_return_y
	set Missle_missle[this_58] = new_Fx(vec2_withZ(pos_x, pos_y, 70.), vec2_withZ_return_y, vec2_withZ_return_z, vec2_angleTo(pos_x, pos_y, posT_x, posT_y), "Abilities\\Weapons\\LordofFlameMissile\\LordofFlameMissile.mdl", "\n   RamisHomingMissle, line 34" + wurstStackTrace)
	set receiver = getTimer("\n   RamisHomingMissle, line 35" + wurstStackTrace)
	call timer_setData(receiver, this_58, "\n   RamisHomingMissle, line 35" + wurstStackTrace)
	set receiver_2 = receiver
	call timer_startPeriodic(receiver_2, 0.03, ref_function_bridge_closure_impl_6)
	set Missle_t_2[this_58] = receiver_2
	set receiver_3 = getTimer("\n   RamisHomingMissle, line 36" + wurstStackTrace)
	call timer_setData(receiver_3, this_58, "\n   RamisHomingMissle, line 36" + wurstStackTrace)
	set receiver_4 = receiver_3
	call timer_start(receiver_4, 10., ref_function_bridge_closure_impl_7)
	set Missle_destroyTimer[this_58] = receiver_4
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
	set receiver = null
	set receiver_2 = null
	set receiver_3 = null
	set receiver_4 = null
endfunction

function new_Missle takes integer owner, integer target, string wurstStackTrace returns integer
<<<<<<< HEAD
	local integer this_57 = alloc_Missle()
	call construct_Missle(this_57, owner, target, "\n   RamisHomingMissle, line 27" + wurstStackTrace)
	return this_57
endfunction

function closure_impl_86 takes integer this_57, unit caster, integer level, unit target, string wurstStackTrace returns integer
	return new_Missle(unit_getUserData(caster), unit_getUserData(target), "\n   RamisHomingMissle, line 71" + wurstStackTrace)
endfunction

function dispatch_OnUnitCast_run takes integer this_57, unit caster, integer lvl, unit target, string wurstStackTrace returns nothing
	if Cast_typeId[this_57] == 0 then
		if this_57 == 0 then
=======
	local integer this_58 = alloc_Missle()
	call construct_Missle(this_58, owner, target, "\n   RamisHomingMissle, line 27" + wurstStackTrace)
	return this_58
endfunction

function closure_impl_92 takes integer this_58, unit caster, integer level, unit target, string wurstStackTrace returns integer
	return new_Missle(unit_getUserData(caster), unit_getUserData(target), "\n   RamisHomingMissle, line 71" + wurstStackTrace)
endfunction

function dispatch_OnUnitCast_run takes integer this_58, unit caster, integer lvl, unit target, string wurstStackTrace returns nothing
	if Cast_typeId[this_58] == 0 then
		if this_58 == 0 then
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling OnUnitCast.run" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called OnUnitCast.run on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
<<<<<<< HEAD
	call closure_impl_86(this_57, caster, lvl, target, "\n   ClosureEvents, line 70" + wurstStackTrace)
=======
	call closure_impl_92(this_58, caster, lvl, target, "\n   ClosureEvents, line 70" + wurstStackTrace)
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
endfunction

function handleCasts takes string wurstStackTrace returns nothing
	local unit caster = GetTriggerUnit()
	local integer lvl = GetUnitAbilityLevel(caster, GetSpellAbilityId())
	local integer c = dispatch_HashMap_get(Cast_casts, GetSpellAbilityId(), "\n   ClosureEvents, line 76" + wurstStackTrace)
	local integer instanceOfTemp
	local integer instanceOfTemp_2
	if c != 0 then
<<<<<<< HEAD
		if Cast_typeId[c] == 847 then
			call dispatch_OnCast_run(c, caster, lvl)
		endif
		set instanceOfTemp = Cast_typeId[c]
		if instanceOfTemp == 848 or instanceOfTemp == 852 then
			call dispatch_OnPointCast_run(c, caster, lvl, GetSpellTargetX(), GetSpellTargetY(), "\n   ClosureEvents, line 81" + wurstStackTrace)
		endif
		set instanceOfTemp_2 = Cast_typeId[c]
		if instanceOfTemp_2 == 849 or instanceOfTemp_2 == 855 then
=======
		if Cast_typeId[c] == 850 then
			call dispatch_OnCast_run(c, caster, lvl)
		endif
		set instanceOfTemp = Cast_typeId[c]
		if instanceOfTemp == 851 or instanceOfTemp == 855 then
			call dispatch_OnPointCast_run(c, caster, lvl, GetSpellTargetX(), GetSpellTargetY(), "\n   ClosureEvents, line 81" + wurstStackTrace)
		endif
		set instanceOfTemp_2 = Cast_typeId[c]
		if instanceOfTemp_2 == 852 or instanceOfTemp_2 == 858 then
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
			call dispatch_OnUnitCast_run(c, caster, lvl, GetSpellTargetUnit(), "\n   ClosureEvents, line 83" + wurstStackTrace)
		endif
	endif
	set caster = null
endfunction

function bridge_handleCasts takes nothing returns nothing
	call handleCasts("\n   ClosureEvents, line 9")
endfunction

function playAnimation takes string wurstStackTrace returns nothing
	local integer h = timer_getData(GetExpiredTimer(), "\n   CaptureAnimation, line 28" + wurstStackTrace)
	call SetUnitAnimationByIndex(Unit_u[h], Hero_animationIndex[h])
endfunction

function bridge_playAnimation takes nothing returns nothing
	call playAnimation("\n   CaptureAnimation, line 12")
endfunction

function resetCam takes string wurstStackTrace returns nothing
	local timer t = GetExpiredTimer()
	call CameraClearNoiseForPlayer(Player(timer_getData(t, "\n   Camera, line 86" + wurstStackTrace)))
	call timer_release(t, "\n   Camera, line 87" + wurstStackTrace)
	set t = null
endfunction

function bridge_resetCam takes nothing returns nothing
	call resetCam("\n   Camera, line 80")
endfunction

function bridge_resetCam_2 takes nothing returns nothing
	call resetCam("\n   Camera, line 71")
endfunction

function bridge_resetCam_3 takes nothing returns nothing
	call resetCam("\n   Camera, line 66")
endfunction

function alloc_Closure_15 takes nothing returns integer
<<<<<<< HEAD
	local integer this_57
	if PlayerAction_firstFree == 0 then
		set PlayerAction_maxIndex = PlayerAction_maxIndex + 1
		set this_57 = PlayerAction_maxIndex
	else
		set PlayerAction_firstFree = PlayerAction_firstFree - 1
		set this_57 = PlayerAction_nextFree[PlayerAction_firstFree]
	endif
	set PlayerAction_typeId[this_57] = 868
	return this_57
endfunction

function alloc_Closure_16 takes nothing returns integer
	local integer this_57
	if PlayerAction_firstFree == 0 then
		set PlayerAction_maxIndex = PlayerAction_maxIndex + 1
		set this_57 = PlayerAction_maxIndex
	else
		set PlayerAction_firstFree = PlayerAction_firstFree - 1
		set this_57 = PlayerAction_nextFree[PlayerAction_firstFree]
	endif
	set PlayerAction_typeId[this_57] = 869
	return this_57
endfunction

function Bar_enable takes integer this_57, string wurstStackTrace returns nothing
	call texttag_setVisibility(Bar_tt[this_57], true)
	set Bar_check[this_57] = true
	call dispatch_Bar_update(this_57, "\n   HeroBar, line 52" + wurstStackTrace)
endfunction

function dispatch_Bar_enable takes integer this_57, string wurstStackTrace returns nothing
	if Bar_typeId[this_57] == 0 then
		if this_57 == 0 then
=======
	local integer this_58
	if PlayerAction_firstFree == 0 then
		set PlayerAction_maxIndex = PlayerAction_maxIndex + 1
		set this_58 = PlayerAction_maxIndex
	else
		set PlayerAction_firstFree = PlayerAction_firstFree - 1
		set this_58 = PlayerAction_nextFree[PlayerAction_firstFree]
	endif
	set PlayerAction_typeId[this_58] = 874
	return this_58
endfunction

function alloc_Closure_16 takes nothing returns integer
	local integer this_58
	if PlayerAction_firstFree == 0 then
		set PlayerAction_maxIndex = PlayerAction_maxIndex + 1
		set this_58 = PlayerAction_maxIndex
	else
		set PlayerAction_firstFree = PlayerAction_firstFree - 1
		set this_58 = PlayerAction_nextFree[PlayerAction_firstFree]
	endif
	set PlayerAction_typeId[this_58] = 875
	return this_58
endfunction

function Bar_enable takes integer this_58, string wurstStackTrace returns nothing
	call texttag_setVisibility(Bar_tt[this_58], true)
	set Bar_check[this_58] = true
	call dispatch_Bar_update(this_58, "\n   HeroBar, line 52" + wurstStackTrace)
endfunction

function dispatch_Bar_enable takes integer this_58, string wurstStackTrace returns nothing
	if Bar_typeId[this_58] == 0 then
		if this_58 == 0 then
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Bar.enable" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Bar.enable on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
<<<<<<< HEAD
	call Bar_enable(this_57, "\n   HeroBar, line 49" + wurstStackTrace)
endfunction

function Hero_revive takes integer this_57, real pos_x, real pos_y, string wurstStackTrace returns nothing
	local integer i
	call ReviveHero(Unit_u[this_57], pos_x, pos_y, true)
	call dispatch_Bar_enable(Hero_hb[this_57], "\n   HeroClass, line 93" + wurstStackTrace)
	call unit_removeAbility(Unit_u[this_57], 1684365668)
	set Unit_isDead[this_57] = false
	set i = 0
	loop
		exitwhen i > 11
		call dispatch_Table_saveReal(Unit_playerDamage[this_57], i, 0., "\n   HeroClass, line 97" + wurstStackTrace)
=======
	call Bar_enable(this_58, "\n   HeroBar, line 49" + wurstStackTrace)
endfunction

function Hero_revive takes integer this_58, real pos_x, real pos_y, string wurstStackTrace returns nothing
	local integer i
	call ReviveHero(Unit_u[this_58], pos_x, pos_y, true)
	call dispatch_Bar_enable(Hero_hb[this_58], "\n   HeroClass, line 83" + wurstStackTrace)
	call unit_removeAbility(Unit_u[this_58], 1684365668)
	set Unit_isDead[this_58] = false
	set i = 0
	loop
		exitwhen i > 11
		call dispatch_Table_saveReal(Unit_playerDamage[this_58], i, 0., "\n   HeroClass, line 87" + wurstStackTrace)
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
		set i = i + 1
	endloop
endfunction

<<<<<<< HEAD
function dispatch_Hero_revive takes integer this_57, real pos_x, real pos_y, string wurstStackTrace returns nothing
	if Unit_typeId[this_57] == 0 then
		if this_57 == 0 then
=======
function dispatch_Hero_revive takes integer this_58, real pos_x, real pos_y, string wurstStackTrace returns nothing
	if Unit_typeId[this_58] == 0 then
		if this_58 == 0 then
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Hero.revive" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Hero.revive on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
<<<<<<< HEAD
	call Hero_revive(this_57, pos_x, pos_y, "\n   HeroClass, line 91" + wurstStackTrace)
endfunction

function dispatch_Icon_showDirect takes integer this_57, player p_2, string wurstStackTrace returns nothing
	if Widget_typeId[this_57] == 0 then
		if this_57 == 0 then
=======
	call Hero_revive(this_58, pos_x, pos_y, "\n   HeroClass, line 81" + wurstStackTrace)
endfunction

function dispatch_Icon_showDirect takes integer this_58, player p_2, string wurstStackTrace returns nothing
	if Widget_typeId[this_58] == 0 then
		if this_58 == 0 then
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Icon.showDirect" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Icon.showDirect on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
<<<<<<< HEAD
	call Icon_showDirect(this_57, p_2, "\n   Icon, line 33" + wurstStackTrace)
endfunction

function Shield_getRemainingTime takes integer this_57 returns real
	return TimerGetRemaining(Shield_t[this_57])
endfunction

function dispatch_Shield_getRemainingTime takes integer this_57, string wurstStackTrace returns real
	local real getRemainingTime_result
	if Shield_typeId[this_57] == 0 then
		if this_57 == 0 then
=======
	call Icon_showDirect(this_58, p_2, "\n   Icon, line 33" + wurstStackTrace)
endfunction

function Shield_getRemainingTime takes integer this_58 returns real
	return TimerGetRemaining(Shield_t[this_58])
endfunction

function dispatch_Shield_getRemainingTime takes integer this_58, string wurstStackTrace returns real
	local real getRemainingTime_result
	if Shield_typeId[this_58] == 0 then
		if this_58 == 0 then
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Shield.getRemainingTime" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Shield.getRemainingTime on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
<<<<<<< HEAD
	set getRemainingTime_result = Shield_getRemainingTime(this_57)
	return getRemainingTime_result
endfunction

function ShieldList_add takes integer this_57, integer s, string wurstStackTrace returns nothing
	local real time
	local integer pos
	local integer buffer
	set ShieldList_shieldSum[this_57] = ShieldList_shieldSum[this_57] + Shield_amount[s]
	if ShieldList_first[this_57] == 0 then
		set ShieldList_first[this_57] = s
		set ShieldList_last[this_57] = s
	else
		set time = dispatch_Shield_getRemainingTime(s, "\n   Shield, line 43" + wurstStackTrace)
		set pos = ShieldList_first[this_57]
		loop
			exitwhen  not (pos != 0)
			if dispatch_Shield_getRemainingTime(ShieldList_first[this_57], "\n   Shield, line 46" + wurstStackTrace) > time then
=======
	set getRemainingTime_result = Shield_getRemainingTime(this_58)
	return getRemainingTime_result
endfunction

function ShieldList_add takes integer this_58, integer s, string wurstStackTrace returns nothing
	local real time
	local integer pos
	local integer buffer
	set ShieldList_shieldSum[this_58] = ShieldList_shieldSum[this_58] + Shield_amount[s]
	if ShieldList_first[this_58] == 0 then
		set ShieldList_first[this_58] = s
		set ShieldList_last[this_58] = s
	else
		set time = dispatch_Shield_getRemainingTime(s, "\n   Shield, line 43" + wurstStackTrace)
		set pos = ShieldList_first[this_58]
		loop
			exitwhen  not (pos != 0)
			if dispatch_Shield_getRemainingTime(ShieldList_first[this_58], "\n   Shield, line 46" + wurstStackTrace) > time then
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
				set buffer = Shield_prev[pos]
				set Shield_prev[pos] = s
				set Shield_next[buffer] = s
				set Shield_prev[s] = buffer
				set Shield_next[s] = pos
				exitwhen true
			else
				set pos = Shield_next[pos]
			endif
		endloop
	endif
endfunction

<<<<<<< HEAD
function dispatch_ShieldList_add takes integer this_57, integer s, string wurstStackTrace returns nothing
	if ShieldList_typeId[this_57] == 0 then
		if this_57 == 0 then
=======
function dispatch_ShieldList_add takes integer this_58, integer s, string wurstStackTrace returns nothing
	if ShieldList_typeId[this_58] == 0 then
		if this_58 == 0 then
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling ShieldList.add" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called ShieldList.add on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
<<<<<<< HEAD
	call ShieldList_add(this_57, s, "\n   Shield, line 37" + wurstStackTrace)
endfunction

function alloc_Shield takes nothing returns integer
	local integer this_57
	if Shield_firstFree == 0 then
		set Shield_maxIndex = Shield_maxIndex + 1
		set this_57 = Shield_maxIndex
	else
		set Shield_firstFree = Shield_firstFree - 1
		set this_57 = Shield_nextFree[Shield_firstFree]
	endif
	set Shield_typeId[this_57] = 693
	return this_57
endfunction

function construct_Shield takes integer this_57, integer u_2, real amount_51, real time, integer referingList, string wurstStackTrace returns nothing
	set Shield_t[this_57] = getTimer("\n   Shield, line 68" + wurstStackTrace)
	set Shield_shieldDestroyed[this_57] = 0
	set Shield_target[this_57] = u_2
	set Shield_amount[this_57] = amount_51
	set Shield_referingList[this_57] = referingList
	call timer_setData(Shield_t[this_57], this_57, "\n   Shield, line 77" + wurstStackTrace)
	call timer_start(Shield_t[this_57], time, ref_function_bridge_Shield_onExpire)
endfunction

function new_Shield takes integer u_2, real amount_51, real time, integer referingList, string wurstStackTrace returns integer
	local integer this_57 = alloc_Shield()
	call construct_Shield(this_57, u_2, amount_51, time, referingList, "\n   Shield, line 73" + wurstStackTrace)
	return this_57
endfunction

function Unit_addShield takes integer this_57, real amount_51, real duration, string wurstStackTrace returns integer
	local integer s = new_Shield(this_57, amount_51, duration, Unit_shieldList[this_57], "\n   UnitClass, line 430" + wurstStackTrace)
	call dispatch_ShieldList_add(Unit_shieldList[this_57], s, "\n   UnitClass, line 431" + wurstStackTrace)
	return s
endfunction

function dispatch_Unit_addShield takes integer this_57, real amount_51, real duration, string wurstStackTrace returns integer
	local integer addShield_result
	if Unit_typeId[this_57] == 0 then
		if this_57 == 0 then
=======
	call ShieldList_add(this_58, s, "\n   Shield, line 37" + wurstStackTrace)
endfunction

function alloc_Shield takes nothing returns integer
	local integer this_58
	if Shield_firstFree == 0 then
		set Shield_maxIndex = Shield_maxIndex + 1
		set this_58 = Shield_maxIndex
	else
		set Shield_firstFree = Shield_firstFree - 1
		set this_58 = Shield_nextFree[Shield_firstFree]
	endif
	set Shield_typeId[this_58] = 692
	return this_58
endfunction

function construct_Shield takes integer this_58, integer u_2, real amount_51, real time, integer referingList, string wurstStackTrace returns nothing
	set Shield_t[this_58] = getTimer("\n   Shield, line 68" + wurstStackTrace)
	set Shield_shieldDestroyed[this_58] = 0
	set Shield_target[this_58] = u_2
	set Shield_amount[this_58] = amount_51
	set Shield_referingList[this_58] = referingList
	call timer_setData(Shield_t[this_58], this_58, "\n   Shield, line 77" + wurstStackTrace)
	call timer_start(Shield_t[this_58], time, ref_function_bridge_Shield_onExpire)
endfunction

function new_Shield takes integer u_2, real amount_51, real time, integer referingList, string wurstStackTrace returns integer
	local integer this_58 = alloc_Shield()
	call construct_Shield(this_58, u_2, amount_51, time, referingList, "\n   Shield, line 73" + wurstStackTrace)
	return this_58
endfunction

function Unit_addShield takes integer this_58, real amount_51, real duration, string wurstStackTrace returns integer
	local integer s = new_Shield(this_58, amount_51, duration, Unit_shieldList[this_58], "\n   UnitClass, line 436" + wurstStackTrace)
	call dispatch_ShieldList_add(Unit_shieldList[this_58], s, "\n   UnitClass, line 437" + wurstStackTrace)
	return s
endfunction

function dispatch_Unit_addShield takes integer this_58, real amount_51, real duration, string wurstStackTrace returns integer
	local integer addShield_result
	if Unit_typeId[this_58] == 0 then
		if this_58 == 0 then
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Unit.addShield" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Unit.addShield on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
<<<<<<< HEAD
	if Unit_typeId[this_57] <= 710 then
		set addShield_result = Unit_addShield(this_57, amount_51, duration, "\n   UnitClass, line 429" + wurstStackTrace)
	else
		set addShield_result = Unit_addShield(this_57, amount_51, duration, "\n   UnitClass, line 429" + wurstStackTrace)
=======
	if Unit_typeId[this_58] <= 709 then
		set addShield_result = Unit_addShield(this_58, amount_51, duration, "\n   UnitClass, line 435" + wurstStackTrace)
	else
		set addShield_result = Unit_addShield(this_58, amount_51, duration, "\n   UnitClass, line 435" + wurstStackTrace)
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
	endif
	return addShield_result
endfunction

function alloc_Closure_17 takes nothing returns integer
<<<<<<< HEAD
	local integer this_57
	if Bonus_firstFree == 0 then
		set Bonus_maxIndex = Bonus_maxIndex + 1
		set this_57 = Bonus_maxIndex
	else
		set Bonus_firstFree = Bonus_firstFree - 1
		set this_57 = Bonus_nextFree[Bonus_firstFree]
	endif
	set Bonus_typeId[this_57] = 746
	return this_57
endfunction

function Unit_bonusLife_2 takes integer this_57, real amount_51, string wurstStackTrace returns integer
	local integer clVar
	set Unit_bonusLife[this_57] = Unit_bonusLife[this_57] + amount_51
	call dispatch_Unit_updateLife(this_57, "\n   UnitClass, line 755" + wurstStackTrace)
	set clVar = alloc_Closure_17()
	set this_37[clVar] = this_57
=======
	local integer this_58
	if Bonus_firstFree == 0 then
		set Bonus_maxIndex = Bonus_maxIndex + 1
		set this_58 = Bonus_maxIndex
	else
		set Bonus_firstFree = Bonus_firstFree - 1
		set this_58 = Bonus_nextFree[Bonus_firstFree]
	endif
	set Bonus_typeId[this_58] = 745
	return this_58
endfunction

function Unit_bonusLife_2 takes integer this_58, real amount_51, string wurstStackTrace returns integer
	local integer clVar
	set Unit_bonusLife[this_58] = Unit_bonusLife[this_58] + amount_51
	call dispatch_Unit_updateLife(this_58, "\n   UnitClass, line 761" + wurstStackTrace)
	set clVar = alloc_Closure_17()
	set this_37[clVar] = this_58
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
	set amount_35[clVar] = amount_51
	return clVar
endfunction

<<<<<<< HEAD
function dispatch_Unit_bonusLife takes integer this_57, real amount_51, string wurstStackTrace returns integer
	local integer bonusLife_result
	if Unit_typeId[this_57] == 0 then
		if this_57 == 0 then
=======
function dispatch_Unit_bonusLife takes integer this_58, real amount_51, string wurstStackTrace returns integer
	local integer bonusLife_result
	if Unit_typeId[this_58] == 0 then
		if this_58 == 0 then
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Unit.bonusLife" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Unit.bonusLife on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
<<<<<<< HEAD
	if Unit_typeId[this_57] <= 710 then
		set bonusLife_result = Unit_bonusLife_2(this_57, amount_51, "\n   UnitClass, line 753" + wurstStackTrace)
	else
		set bonusLife_result = Unit_bonusLife_2(this_57, amount_51, "\n   UnitClass, line 753" + wurstStackTrace)
=======
	if Unit_typeId[this_58] <= 709 then
		set bonusLife_result = Unit_bonusLife_2(this_58, amount_51, "\n   UnitClass, line 759" + wurstStackTrace)
	else
		set bonusLife_result = Unit_bonusLife_2(this_58, amount_51, "\n   UnitClass, line 759" + wurstStackTrace)
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
	endif
	return bonusLife_result
endfunction

<<<<<<< HEAD
function Window_onVoidClick takes integer this_57, integer a returns nothing
	set Window_voidClick[this_57] = a
endfunction

function dispatch_Window_onVoidClick takes integer this_57, integer a, string wurstStackTrace returns nothing
	if Window_typeId[this_57] == 0 then
		if this_57 == 0 then
=======
function Window_onVoidClick takes integer this_58, integer a returns nothing
	set Window_voidClick[this_58] = a
endfunction

function dispatch_Window_onVoidClick takes integer this_58, integer a, string wurstStackTrace returns nothing
	if Window_typeId[this_58] == 0 then
		if this_58 == 0 then
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Window.onVoidClick" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Window.onVoidClick on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
<<<<<<< HEAD
	if Window_typeId[this_57] <= 805 then
		call Window_onVoidClick(this_57, a)
	else
		call Window_onVoidClick(this_57, a)
=======
	if Window_typeId[this_58] <= 804 then
		call Window_onVoidClick(this_58, a)
	else
		call Window_onVoidClick(this_58, a)
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
	endif
endfunction

function setCallLimit takes string wurstStackTrace returns nothing
	local string chatString = GetEventPlayerChatString()
	local string cuttet
	local string temp
	local integer w_2
	local integer receiver
	local integer receiver_2
	local integer clVar
	local integer w_3
	local integer receiver_3
	local integer receiver_4
	local integer clVar_2
	local integer temp_2
	local integer temp_3
	local integer temp_4
	local integer temp_5
	if SubString(chatString, 0, 1) == "a" then
		set cuttet = SubString(chatString, 1, 5)
		call SetUnitAnimationByIndex(Unit_u[UnitClass_last], S2I(cuttet))
	endif
	set temp = chatString
	if temp == "w1" then
<<<<<<< HEAD
		call WindowManager_openWindow(GameStart_shopWindow, Player(0), "\n   GameStart, line 787" + wurstStackTrace)
=======
		call WindowManager_openWindow(GameStart_shopWindow, Player(0), "\n   GameStart, line 726" + wurstStackTrace)
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
	elseif temp == "w2" then
		set w_2 = new_Window()
		set receiver_2 = w_2
		set temp_2 = receiver_2
<<<<<<< HEAD
		set receiver = new_Icon("RingDesCrigges", 10, 5, 2, "\n   GameStart, line 793" + wurstStackTrace)
		call dispatch_Icon_showDirect(receiver, Player(0), "\n   GameStart, line 793" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, temp_2, new_Observable(receiver), "\n   GameStart, line 791" + wurstStackTrace)
		call WindowManager_openWindow(receiver_2, Player(0), "\n   GameStart, line 790" + wurstStackTrace)
		set temp_3 = w_2
		set clVar = alloc_Closure_15()
		call dispatch_Window_onVoidClick(temp_3, clVar, "\n   GameStart, line 795" + wurstStackTrace)
=======
		set receiver = new_Icon("RingDesCrigges", 10, 5, 2, "\n   GameStart, line 732" + wurstStackTrace)
		call dispatch_Icon_showDirect(receiver, Player(0), "\n   GameStart, line 732" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, temp_2, new_Observable(receiver), "\n   GameStart, line 730" + wurstStackTrace)
		call WindowManager_openWindow(receiver_2, Player(0), "\n   GameStart, line 729" + wurstStackTrace)
		set temp_3 = w_2
		set clVar = alloc_Closure_15()
		call dispatch_Window_onVoidClick(temp_3, clVar, "\n   GameStart, line 734" + wurstStackTrace)
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
	elseif temp == "w3" then
		set w_3 = new_Window()
		set receiver_4 = w_3
		set temp_4 = receiver_4
<<<<<<< HEAD
		set receiver_3 = new_Icon("RingDesCrigges", 15, 5, 2, "\n   GameStart, line 802" + wurstStackTrace)
		call dispatch_Icon_showDirect(receiver_3, Player(0), "\n   GameStart, line 802" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, temp_4, new_Observable(receiver_3), "\n   GameStart, line 800" + wurstStackTrace)
		call WindowManager_openWindow(receiver_4, Player(0), "\n   GameStart, line 799" + wurstStackTrace)
		set temp_5 = w_3
		set clVar_2 = alloc_Closure_16()
		call dispatch_Window_onVoidClick(temp_5, clVar_2, "\n   GameStart, line 804" + wurstStackTrace)
=======
		set receiver_3 = new_Icon("RingDesCrigges", 15, 5, 2, "\n   GameStart, line 741" + wurstStackTrace)
		call dispatch_Icon_showDirect(receiver_3, Player(0), "\n   GameStart, line 741" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, temp_4, new_Observable(receiver_3), "\n   GameStart, line 739" + wurstStackTrace)
		call WindowManager_openWindow(receiver_4, Player(0), "\n   GameStart, line 738" + wurstStackTrace)
		set temp_5 = w_3
		set clVar_2 = alloc_Closure_16()
		call dispatch_Window_onVoidClick(temp_5, clVar_2, "\n   GameStart, line 743" + wurstStackTrace)
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
	elseif temp == "hideF" then
	elseif temp == "dis" then
	elseif temp == "en" then
	elseif temp == "click" then
	elseif temp == "dclick" then
	elseif temp == "hoover" then
	elseif temp == "unhoover" then
	elseif temp == "size+" then
	elseif temp == "size-" then
	elseif temp == "drag t t" then
		call EnableDragSelect(true, true)
	elseif temp == "drag t f" then
		call EnableDragSelect(true, false)
	elseif temp == "drag f t" then
		call EnableDragSelect(false, true)
	elseif temp == "drag f f" then
		call EnableDragSelect(false, false)
	elseif temp == "pre t t" then
		call EnablePreSelect(true, true)
	elseif temp == "pre t f" then
		call EnablePreSelect(true, false)
	elseif temp == "pre f t" then
		call EnablePreSelect(false, true)
	elseif temp == "pre f f" then
		call EnablePreSelect(false, false)
	elseif temp == "sel t t" then
		call EnableSelect(true, true)
	elseif temp == "sel t f" then
		call EnableSelect(true, false)
	elseif temp == "sel f t" then
		call EnableSelect(false, true)
	elseif temp == "sel f f" then
		call EnableSelect(false, false)
	elseif temp == "last" then
		call SelectUnitForPlayerSingle(Unit_u[UnitClass_last], Player(0))
	elseif temp == "hp+" then
<<<<<<< HEAD
		call dispatch_Unit_bonusLife(UnitClass_last, 10., "\n   GameStart, line 857" + wurstStackTrace)
	elseif temp == "hp++" then
		call dispatch_Unit_bonusLife(UnitClass_last, 100., "\n   GameStart, line 859" + wurstStackTrace)
	elseif temp == "hp+++" then
		call dispatch_Unit_bonusLife(UnitClass_last, 1000., "\n   GameStart, line 861" + wurstStackTrace)
	elseif temp == "hp-" then
		call dispatch_Unit_bonusLife(UnitClass_last, -10., "\n   GameStart, line 863" + wurstStackTrace)
	elseif temp == "hp--" then
		call dispatch_Unit_bonusLife(UnitClass_last, -100., "\n   GameStart, line 865" + wurstStackTrace)
	elseif temp == "hp---" then
		call dispatch_Unit_bonusLife(UnitClass_last, -1000., "\n   GameStart, line 867" + wurstStackTrace)
	elseif temp == "rev" then
		call dispatch_Hero_revive(UnitClass_last, 100., 100., "\n   GameStart, line 869" + wurstStackTrace)
	elseif temp == "shield1" then
		call dispatch_Unit_addShield(UnitClass_last, 10., 10., "\n   GameStart, line 871" + wurstStackTrace)
	elseif temp == "shield2" then
		call dispatch_Unit_addShield(UnitClass_last, 100., 10., "\n   GameStart, line 873" + wurstStackTrace)
	elseif temp == "shield3" then
		call dispatch_Unit_addShield(UnitClass_last, 1000., 10., "\n   GameStart, line 875" + wurstStackTrace)
=======
		call dispatch_Unit_bonusLife(UnitClass_last, 10., "\n   GameStart, line 796" + wurstStackTrace)
	elseif temp == "hp++" then
		call dispatch_Unit_bonusLife(UnitClass_last, 100., "\n   GameStart, line 798" + wurstStackTrace)
	elseif temp == "hp+++" then
		call dispatch_Unit_bonusLife(UnitClass_last, 1000., "\n   GameStart, line 800" + wurstStackTrace)
	elseif temp == "hp-" then
		call dispatch_Unit_bonusLife(UnitClass_last, -10., "\n   GameStart, line 802" + wurstStackTrace)
	elseif temp == "hp--" then
		call dispatch_Unit_bonusLife(UnitClass_last, -100., "\n   GameStart, line 804" + wurstStackTrace)
	elseif temp == "hp---" then
		call dispatch_Unit_bonusLife(UnitClass_last, -1000., "\n   GameStart, line 806" + wurstStackTrace)
	elseif temp == "rev" then
		call dispatch_Hero_revive(UnitClass_last, 100., 100., "\n   GameStart, line 808" + wurstStackTrace)
	elseif temp == "shield1" then
		call dispatch_Unit_addShield(UnitClass_last, 10., 10., "\n   GameStart, line 810" + wurstStackTrace)
	elseif temp == "shield2" then
		call dispatch_Unit_addShield(UnitClass_last, 100., 10., "\n   GameStart, line 812" + wurstStackTrace)
	elseif temp == "shield3" then
		call dispatch_Unit_addShield(UnitClass_last, 1000., 10., "\n   GameStart, line 814" + wurstStackTrace)
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
	elseif temp == "canMove f" then
		set Hero_acceptOrders[UnitClass_last] = false
	elseif temp == "canMove t" then
		set Hero_acceptOrders[UnitClass_last] = true
	elseif temp == "swap" then
		call SetPlayerAbilityAvailable(Player(0), 1094269238, false)
		call SetPlayerAbilityAvailable(Player(0), 1094269241, true)
	elseif temp == "bswap" then
		call SetPlayerAbilityAvailable(Player(0), 1094269238, true)
		call SetPlayerAbilityAvailable(Player(0), 1094269241, false)
	elseif temp == "slot" then
		call SetPlayerAbilityAvailable(Player(0), 1935896434, false)
	elseif temp == "key" then
		call print(int_toString(GetLocalizedHotkey("ESC")))
	elseif temp == "abi" then
		call print(int_toString(GetUnitAbilityLevel(Unit_u[UnitClass_last], 1935896434)))
		call SetUnitAbilityLevel(Unit_u[UnitClass_last], 1935896434, 2)
		call print(int_toString(GetUnitAbilityLevel(Unit_u[UnitClass_last], 1935896434)))
	elseif temp == "cast" then
		call IssueInstantPointOrder(Unit_u[UnitClass_last], "ancestralspirit", 0., 0., null)
	endif
endfunction

function bridge_setCallLimit takes nothing returns nothing
	call setCallLimit("\n   GameStart, line 53")
endfunction

function alloc_Pull2 takes nothing returns integer
<<<<<<< HEAD
	local integer this_57
	if Pull2_firstFree == 0 then
		set Pull2_maxIndex = Pull2_maxIndex + 1
		set this_57 = Pull2_maxIndex
	else
		set Pull2_firstFree = Pull2_firstFree - 1
		set this_57 = Pull2_nextFree[Pull2_firstFree]
	endif
	set Pull2_typeId[this_57] = 843
	return this_57
endfunction

function construct_Pull2 takes integer this_57, unit u_2, unit ut, string wurstStackTrace returns nothing
	set Pull2_u[this_57] = u_2
	set Pull2_ut[this_57] = ut
	set Pull2_uut[this_57] = GetUnitUserData(ut)
	set Pull2_i[this_57] = R2I(distanceBetweenCoords(unit_getX(u_2), unit_getY(u_2), unit_getX(ut), unit_getY(ut)) / 20.)
	set Pull2_imax[this_57] = Pull2_i[this_57]
	set Pull2_l[this_57] = AddLightningEx("LEAS", true, unit_getX(u_2), unit_getY(u_2), 50., unit_getX(ut), unit_getY(ut), 50.)
	set Pull2_t[this_57] = getTimer("\n   Pull2, line 45" + wurstStackTrace)
	call timer_setData(Pull2_t[this_57], this_57, "\n   Pull2, line 46" + wurstStackTrace)
	call timer_startPeriodic(Pull2_t[this_57], 0.03, ref_function_bridge_Pull2_blackHCall)
endfunction

function new_Pull2 takes unit u_2, unit ut, string wurstStackTrace returns integer
	local integer this_57 = alloc_Pull2()
	call construct_Pull2(this_57, u_2, ut, "\n   Pull2, line 35" + wurstStackTrace)
	return this_57
=======
	local integer this_58
	if Pull2_firstFree == 0 then
		set Pull2_maxIndex = Pull2_maxIndex + 1
		set this_58 = Pull2_maxIndex
	else
		set Pull2_firstFree = Pull2_firstFree - 1
		set this_58 = Pull2_nextFree[Pull2_firstFree]
	endif
	set Pull2_typeId[this_58] = 846
	return this_58
endfunction

function construct_Pull2 takes integer this_58, unit u_2, unit ut, string wurstStackTrace returns nothing
	set Pull2_u[this_58] = u_2
	set Pull2_ut[this_58] = ut
	set Pull2_uut[this_58] = GetUnitUserData(ut)
	set Pull2_i[this_58] = R2I(distanceBetweenCoords(unit_getX(u_2), unit_getY(u_2), unit_getX(ut), unit_getY(ut)) / 20.)
	set Pull2_imax[this_58] = Pull2_i[this_58]
	set Pull2_l[this_58] = AddLightningEx("LEAS", true, unit_getX(u_2), unit_getY(u_2), 50., unit_getX(ut), unit_getY(ut), 50.)
	set Pull2_t[this_58] = getTimer("\n   Pull2, line 45" + wurstStackTrace)
	call timer_setData(Pull2_t[this_58], this_58, "\n   Pull2, line 46" + wurstStackTrace)
	call timer_startPeriodic(Pull2_t[this_58], 0.03, ref_function_bridge_Pull2_blackHCall)
endfunction

function new_Pull2 takes unit u_2, unit ut, string wurstStackTrace returns integer
	local integer this_58 = alloc_Pull2()
	call construct_Pull2(this_58, u_2, ut, "\n   Pull2, line 35" + wurstStackTrace)
	return this_58
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
endfunction

function spellStart takes string wurstStackTrace returns nothing
	call new_Pull2(GetTriggerUnit(), GetSpellTargetUnit(), "\n   Pull2, line 21" + wurstStackTrace)
endfunction

function bridge_spellStart takes nothing returns nothing
	call spellStart("\n   Pull2, line 10")
endfunction

function callback takes nothing returns nothing
	call LeaderboardSetItemValue(HandleCounter_board, 0, getHandleCount())
	call LeaderboardSetItemValue(HandleCounter_board, 1, getTime())
endfunction

<<<<<<< HEAD
function closure_impl_87 takes nothing returns nothing
	set GameTimer_currentTime = GameTimer_currentTime + Basics_ANIMATION_PERIOD
endfunction

function multiboard_display takes multiboard this_57, boolean show returns nothing
	call MultiboardDisplay(this_57, show)
endfunction

function multiboard_setColumnCount takes multiboard this_57, integer count returns nothing
	call MultiboardSetColumnCount(this_57, count)
endfunction

function multiboard_setItemsStyle takes multiboard this_57, boolean showValues, boolean showIcons returns nothing
	call MultiboardSetItemsStyle(this_57, showValues, showIcons)
endfunction

function multiboard_setItemsWidth takes multiboard this_57, real width returns nothing
	call MultiboardSetItemsWidth(this_57, width)
endfunction

function multiboard_setRowCount takes multiboard this_57, integer count returns nothing
	call MultiboardSetRowCount(this_57, count)
endfunction

function multiboard_setTitle takes multiboard this_57, string label returns nothing
	call MultiboardSetTitleText(this_57, label)
=======
function closure_impl_93 takes nothing returns nothing
	set GameTimer_currentTime = GameTimer_currentTime + Basics_ANIMATION_PERIOD
endfunction

function multiboard_display takes multiboard this_58, boolean show returns nothing
	call MultiboardDisplay(this_58, show)
endfunction

function multiboard_setColumnCount takes multiboard this_58, integer count returns nothing
	call MultiboardSetColumnCount(this_58, count)
endfunction

function multiboard_setItemsStyle takes multiboard this_58, boolean showValues, boolean showIcons returns nothing
	call MultiboardSetItemsStyle(this_58, showValues, showIcons)
endfunction

function multiboard_setItemsWidth takes multiboard this_58, real width returns nothing
	call MultiboardSetItemsWidth(this_58, width)
endfunction

function multiboard_setRowCount takes multiboard this_58, integer count returns nothing
	call MultiboardSetRowCount(this_58, count)
endfunction

function multiboard_setTitle takes multiboard this_58, string label returns nothing
	call MultiboardSetTitleText(this_58, label)
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
endfunction

function createMultiboard takes nothing returns nothing
	local multiboarditem mbi
	local integer i
	local integer temp
	local string s
	set InstanceBoard_mb = CreateMultiboard()
	call multiboard_setColumnCount(InstanceBoard_mb, 2)
	call multiboard_setRowCount(InstanceBoard_mb, InstanceBoard_classes + 1)
	call multiboard_setItemsStyle(InstanceBoard_mb, true, false)
	call multiboard_setItemsWidth(InstanceBoard_mb, 0.10)
	call multiboard_setTitle(InstanceBoard_mb, "Instance Board")
	set mbi = multiboard_getItem(InstanceBoard_mb, 0, 0)
	call multiboarditem_setValue(mbi, "ClassName")
	set mbi = multiboard_getItem(InstanceBoard_mb, 0, 1)
	call multiboarditem_setValue(mbi, "Instance count")
	set i = 1
	set temp = InstanceBoard_classes
	loop
		exitwhen i > temp
		set s = InstanceBoard_nameOfClass[i]
		if s != null then
			set mbi = multiboard_getItem(InstanceBoard_mb, i, 0)
			call multiboarditem_setValue(mbi, s)
			set mbi = multiboard_getItem(InstanceBoard_mb, i, 1)
			call multiboarditem_setValue(mbi, int_toString(InstanceBoard_count[i]))
		endif
		set i = i + 1
	endloop
	call multiboard_display(InstanceBoard_mb, true)
	set mbi = null
endfunction

<<<<<<< HEAD
function group_destr takes group this_57 returns nothing
	call DestroyGroup(this_57)
=======
function group_destr takes group this_58 returns nothing
	call DestroyGroup(this_58)
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
endfunction

function finishPreload takes nothing returns nothing
	local group wurst__iterator0
	local unit u_2
	call RemoveUnit(PreloadHandler_dum)
	set wurst__iterator0 = group_iterator(PreloadHandler_dumg)
	loop
		exitwhen  not group_hasNext(wurst__iterator0)
		set u_2 = group_next(wurst__iterator0)
		call unit_remove(u_2)
	endloop
	call group_close(wurst__iterator0)
	call group_destr(PreloadHandler_dumg)
	if GetExpiredTimer() != null then
		call DestroyTimer(GetExpiredTimer())
	endif
	set wurst__iterator0 = null
	set u_2 = null
endfunction

function hideItem takes nothing returns nothing
	if IsItemVisible(GetEnumItem()) then
		set Terrain_hid[Terrain_hidMax] = GetEnumItem()
		call SetItemVisible(Terrain_hid[Terrain_hidMax], false)
		set Terrain_hidMax = Terrain_hidMax + 1
	endif
endfunction

function notUnit takes nothing returns boolean
	return ( not IsUnitType(GetFilterUnit(), UNIT_TYPE_UNDEAD)) and Filter_filterCheckUnit != GetFilterUnit()
endfunction

function createImage_4 takes string path, real pos_x, real pos_y, real sizeX, real sizeY returns image
	local image temp = CreateImage(path, sizeX, sizeY, 0., pos_x, pos_y, 0., 0., 0., 0., 1)
	set createImagetempReturn = temp
	set temp = null
	return createImagetempReturn
endfunction

function onEsc takes nothing returns nothing
	call print("onEsc")
	call image_show_2(createImage_4("ecke.blp", 1010., 10., 10, 10))
endfunction

function spellCondition takes nothing returns boolean
	if GetSpellAbilityId() == 1096115059 then
		return true
	else
		return false
	endif
endfunction

function switchDebug takes nothing returns nothing
	local player p_2 = GetTriggerPlayer()
	local integer id = player_getId(p_2)
	if PrintingHelper_wantDebug[id] then
		set PrintingHelper_wantDebug[id] = false
		call DisplayTimedTextToPlayer(p_2, 0., 0., 20., "|cff9C9C9CDEBUG-View|r |cffB55208deactivated")
	else
		set PrintingHelper_wantDebug[id] = true
		call DisplayTimedTextToPlayer(p_2, 0., 0., 20., "|cff9C9C9CDEBUG-View|r |cff3AAD42activated")
	endif
	set p_2 = null
endfunction

function updateTime takes nothing returns nothing
	set HandleCounter_seconds = HandleCounter_seconds + 1
endfunction

function initGlobals takes nothing returns nothing
	set gg_cam_Camera_001 = null
	set gg_trg_Unbezeichneter_Ausl__ser_003 = null
	set gg_unit_Obla_0003 = null
<<<<<<< HEAD
=======
	set gg_unit_hpea_0006 = null
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
	set Table_firstFree = 0
	set Table_maxIndex = 0
	set LinkedList_firstFree = 0
	set LinkedList_maxIndex = 0
	set LLEntry_firstFree = 0
	set LLEntry_maxIndex = 0
	set LLIterator_firstFree = 0
	set LLIterator_maxIndex = 0
<<<<<<< HEAD
=======
	set W3UDefinition_firstFree = 0
	set W3UDefinition_maxIndex = 0
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
	set ArrayQueue_firstFree = 0
	set ArrayQueue_maxIndex = 0
	set DelayNode_firstFree = 0
	set DelayNode_maxIndex = 0
	set Fx_firstFree = 0
	set Fx_maxIndex = 0
	set DebugFile_firstFree = 0
	set DebugFile_maxIndex = 0
	set OrderStringFactory_firstFree = 0
	set OrderStringFactory_maxIndex = 0
	set AbilityDefinition_firstFree = 0
	set AbilityDefinition_maxIndex = 0
	set HashMap_firstFree = 0
	set HashMap_maxIndex = 0
	set HashList_firstFree = 0
	set HashList_maxIndex = 0
	set CallbackSingle_firstFree = 0
	set CallbackSingle_maxIndex = 0
	set CallbackCounted_firstFree = 0
	set PreloadAction_firstFree = 0
	set PreloadAction_maxIndex = 0
	set Ability_firstFree = 0
	set Ability_maxIndex = 0
	set TrackableAction_firstFree = 0
	set TrackableAction_maxIndex = 0
	set TrackableEx_firstFree = 0
	set TrackableEx_maxIndex = 0
	set Event_firstFree = 0
	set Event_maxIndex = 0
	set Action_firstFree = 0
	set Action_maxIndex = 0
	set ElementLoop_firstFree = 0
	set ElementLoop_maxIndex = 0
	set Dot_firstFree = 0
	set Buff_firstFree = 0
	set TextTag_firstFree = 0
<<<<<<< HEAD
	set Shield_firstFree = 0
	set Shield_maxIndex = 0
=======
	set ShieldList_firstFree = 0
	set ShieldList_maxIndex = 0
	set Shield_firstFree = 0
	set Shield_maxIndex = 0
	set Bar_firstFree = 0
	set Bar_maxIndex = 0
	set Queue_firstFree = 0
	set Queue_maxIndex = 0
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
	set SEntry_firstFree = 0
	set SEntry_maxIndex = 0
	set Order_firstFree = 0
	set Order_maxIndex = 0
	set ObjId_firstFree = 0
	set ObjId_maxIndex = 0
	set SpellSetup_firstFree = 0
	set SpellSetup_maxIndex = 0
	set Spellcast_firstFree = 0
	set Spellcast_maxIndex = 0
<<<<<<< HEAD
=======
	set Unit_firstFree = 0
	set Unit_maxIndex = 0
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
	set Bonus_firstFree = 0
	set Bonus_maxIndex = 0
	set Stun_firstFree = 0
	set StringList_firstFree = 0
	set StringList_maxIndex = 0
<<<<<<< HEAD
=======
	set StringIterator_firstFree_2 = 0
	set StringIterator_maxIndex_2 = 0
	set UnitType_firstFree = 0
	set UnitType_maxIndex = 0
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
	set PreDamageData_firstFree = 0
	set PreDamageData_maxIndex = 0
	set OnDamageData_firstFree = 0
	set OnDamageData_maxIndex = 0
	set Units_firstFree = 0
	set Units_maxIndex = 0
	set AreaMarker_firstFree = 0
	set Stack_firstFree = 0
	set Stack_maxIndex = 0
	set SEntry_firstFree_2 = 0
	set SEntry_maxIndex_2 = 0
	set Widget_firstFree = 0
	set Widget_maxIndex = 0
	set PlayerAction_firstFree = 0
	set PlayerAction_maxIndex = 0
	set Window_firstFree = 0
	set Window_maxIndex = 0
	set TextSplat_firstFree = 0
	set TextSplat_maxIndex = 0
	set ImageListEntry_firstFree = 0
	set ImageListEntry_maxIndex = 0
	set ImageList_firstFree = 0
	set ImageList_maxIndex = 0
	set ImageList_firstFree_2 = 0
	set ImageList_maxIndex_2 = 0
	set ListImage_firstFree = 0
	set ListImage_maxIndex = 0
	set ImageIterator_firstFree = 0
	set ImageIterator_maxIndex = 0
	set FreeNode_firstFree = 0
	set FreeNode_maxIndex = 0
<<<<<<< HEAD
=======
	set CaptureData_firstFree = 0
	set CaptureData_maxIndex = 0
	set ControlPoint_firstFree = 0
	set ControlPoint_maxIndex = 0
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
	set SamplePointSpell_firstFree = 0
	set SamplePointSpell_maxIndex = 0
	set TestSpell1_firstFree = 0
	set TestSpell1_maxIndex = 0
	set Pull2_firstFree = 0
	set Pull2_maxIndex = 0
	set Missle_firstFree = 0
	set Cast_firstFree = 0
	set Cast_maxIndex = 0
	set Conductor_firstFree = 0
	set Conductor_maxIndex = 0
	set Missle_firstFree_2 = 0
	set Missle_maxIndex_2 = 0
	set Player_firstFree = 0
	set Player_maxIndex = 0
	set CustomBar_firstFree = 0
	set ref_function_DelayedSuspendDecayStopAnimEnum = function DelayedSuspendDecayStopAnimEnum
	set ref_function_DelayedSuspendDecayStopAnimEnum_2 = function DelayedSuspendDecayStopAnimEnum
	set ref_function_DelayedSuspendDecayFleshEnum = function DelayedSuspendDecayFleshEnum
	set ref_function_DelayedSuspendDecayBoneEnum = function DelayedSuspendDecayBoneEnum
	set ref_function_DelayedSuspendDecayStopAnimEnum_3 = function DelayedSuspendDecayStopAnimEnum
	set ref_function_DelayedSuspendDecay = function DelayedSuspendDecay
	set ref_function_MakeUnitsPassiveForPlayerEnum = function MakeUnitsPassiveForPlayerEnum
	set ref_function_TriggerActionUnitRescuedBJ = function TriggerActionUnitRescuedBJ
	set ref_function_MeleeDoDefeatEnum = function MeleeDoDefeatEnum
	set ref_function_MeleeDoVictoryEnum = function MeleeDoVictoryEnum
	set ref_function_MeleeCrippledPlayerTimeout = function MeleeCrippledPlayerTimeout
	set ref_function_MeleeDoDrawEnum = function MeleeDoDrawEnum
	set ref_function_MeleeDoDefeatEnum_2 = function MeleeDoDefeatEnum
	set ref_function_MeleeDoVictoryEnum_2 = function MeleeDoVictoryEnum
	set ref_function_SetDNCSoundsDawn = function SetDNCSoundsDawn
	set ref_function_SetDNCSoundsDusk = function SetDNCSoundsDusk
	set ref_function_SetDNCSoundsDay = function SetDNCSoundsDay
	set ref_function_SetDNCSoundsNight = function SetDNCSoundsNight
	set ref_function_IssueHauntOrderAtLocBJFilter = function IssueHauntOrderAtLocBJFilter
	set ref_function_EnumDestructablesInCircleBJFilter = function EnumDestructablesInCircleBJFilter
	set ref_function_GetUnitsInRectOfPlayerFilter = function GetUnitsInRectOfPlayerFilter
	set ref_function_GetUnitsOfTypeIdAllFilter = function GetUnitsOfTypeIdAllFilter
	set ref_function_GetUnitsOfPlayerAndTypeIdFilter = function GetUnitsOfPlayerAndTypeIdFilter
	set ref_function_MeleeTrainedUnitIsHeroBJFilter = function MeleeTrainedUnitIsHeroBJFilter
	set ref_function_LivingPlayerUnitsOfTypeIdFilter = function LivingPlayerUnitsOfTypeIdFilter
	set ref_function_QueuedTriggerDoneBJ = function QueuedTriggerDoneBJ
	set ref_function_UpdateEachStockBuildingEnum = function UpdateEachStockBuildingEnum
	set ref_function_PerformStockUpdates = function PerformStockUpdates
	set ref_function_StartStockUpdates = function StartStockUpdates
	set ref_function_RemovePurchasedItem = function RemovePurchasedItem
	set ref_function_MarkGameStarted = function MarkGameStarted
	set ref_function_Trig_Unbezeichneter_Ausl__ser_003_Actions = function Trig_Unbezeichneter_Ausl__ser_003_Actions
	set ref_function_hideItem = function hideItem
	set ref_function_GroupAddGroupEnum_2 = function GroupAddGroupEnum
<<<<<<< HEAD
	set ref_function_bridge_DelayNode_recycle = function bridge_DelayNode_recycle_2
	set ref_function_bridge_DelayNode_recycle_2 = function bridge_DelayNode_recycle
	set ref_function_bridge_DelayNode_recycle_3 = function bridge_DelayNode_recycle_3
	set ref_function_callback = function callback
	set ref_function_bridge_CallbackSingle_staticCallback = function bridge_CallbackSingle_staticCallback
	set ref_function_bridge_closure_impl = function bridge_closure_impl_4
=======
	set ref_function_bridge_DelayNode_recycle = function bridge_DelayNode_recycle_3
	set ref_function_bridge_DelayNode_recycle_2 = function bridge_DelayNode_recycle_2
	set ref_function_bridge_DelayNode_recycle_3 = function bridge_DelayNode_recycle
	set ref_function_callback = function callback
	set ref_function_bridge_CallbackSingle_staticCallback = function bridge_CallbackSingle_staticCallback
	set ref_function_bridge_closure_impl = function bridge_closure_impl_7
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
	set ref_function_bridge_Shield_onExpire = function bridge_Shield_onExpire
	set ref_function_bridge_Bar_callUpdateEx = function bridge_Bar_callUpdateEx
	set ref_function_bridge_Spell_timedDisableCastDummy = function bridge_Spell_timedDisableCastDummy
	set ref_function_notUnit = function notUnit
	set ref_function_bridge_Hero_enableAbilityTimed = function bridge_Hero_enableAbilityTimed
<<<<<<< HEAD
=======
	set ref_function_bridge_closure_impl_2 = function bridge_closure_impl
	set ref_function_bridge_closure_impl_3 = function bridge_closure_impl_10
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
	set ref_function_bridge_SamplePointSpell_callCallback = function bridge_SamplePointSpell_callCallback
	set ref_function_TestSpell1_bla = function TestSpell1_bla
	set ref_function_bridge_TestSpell1_callCallback = function bridge_TestSpell1_callCallback
	set ref_function_bridge_Pull2_blackHCall = function bridge_Pull2_blackHCall
<<<<<<< HEAD
	set ref_function_bridge_closure_impl_2 = function bridge_closure_impl_2
	set ref_function_bridge_closure_impl_3 = function bridge_closure_impl_3
	set ref_function_bridge_closure_impl_4 = function bridge_closure_impl
	set ref_function_bridge_closure_impl_5 = function bridge_closure_impl_6
	set ref_function_bridge_Player_setCam = function bridge_Player_setCam
	set ref_function_bridge_Preload_preload = function bridge_Preload_preload
	set ref_function_bridge_Preload_preload_2 = function bridge_Preload_preload_2
	set ref_function_bridge_Preload_preload_3 = function bridge_Preload_preload_3
	set ref_function_switchDebug = function switchDebug
	set ref_function_closure_impl = function closure_impl_87
	set ref_function_createMultiboard = function createMultiboard
	set ref_function_updateTime = function updateTime
	set ref_function_bridge_closure_impl_6 = function bridge_closure_impl_8
	set ref_function_bridge_closure_impl_7 = function bridge_closure_impl_7
=======
	set ref_function_bridge_closure_impl_4 = function bridge_closure_impl_4
	set ref_function_bridge_closure_impl_5 = function bridge_closure_impl_2
	set ref_function_bridge_closure_impl_6 = function bridge_closure_impl_8
	set ref_function_bridge_closure_impl_7 = function bridge_closure_impl_5
	set ref_function_bridge_Player_setCam = function bridge_Player_setCam
	set ref_function_bridge_Preload_preload = function bridge_Preload_preload_2
	set ref_function_bridge_Preload_preload_2 = function bridge_Preload_preload_3
	set ref_function_bridge_Preload_preload_3 = function bridge_Preload_preload
	set ref_function_switchDebug = function switchDebug
	set ref_function_closure_impl = function closure_impl_93
	set ref_function_createMultiboard = function createMultiboard
	set ref_function_updateTime = function updateTime
	set ref_function_bridge_closure_impl_8 = function bridge_closure_impl_9
	set ref_function_bridge_closure_impl_9 = function bridge_closure_impl_3
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
	set ref_function_bridge_Bar_updatePos = function bridge_Bar_updatePos
	set ref_function_bridge_Bar_updateVision = function bridge_Bar_updateVision
	set ref_function_finishPreload = function finishPreload
	set ref_function_bridge_Hero_handleCasts = function bridge_Hero_handleCasts
<<<<<<< HEAD
	set ref_function_bridge_closure_impl_8 = function bridge_closure_impl_5
=======
	set ref_function_bridge_closure_impl_10 = function bridge_closure_impl_6
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
	set ref_function_bridge_GetOrders_callOnOrder = function bridge_GetOrders_callOnOrder
	set ref_function_bridge_Unit_tookDamage = function bridge_Unit_tookDamage
	set ref_function_spellCondition = function spellCondition
	set ref_function_bridge_spellStart = function bridge_spellStart
	set ref_function_bridge_handleCasts = function bridge_handleCasts
	set ref_function_bridge_setCallLimit = function bridge_setCallLimit
	set ref_function_bridge_Dot_loopList = function bridge_Dot_loopList
	set ref_function_bridge_callKnockback = function bridge_callKnockback
	set ref_function_bridge_camTest = function bridge_camTest
	set ref_function_onEsc = function onEsc
endfunction

function init_AbilityTooltipGenerator takes nothing returns nothing
endfunction

function init_Array takes nothing returns nothing
endfunction

function alloc_FreeNode takes nothing returns integer
<<<<<<< HEAD
	local integer this_57
	if FreeNode_firstFree == 0 then
		set FreeNode_maxIndex = FreeNode_maxIndex + 1
		set this_57 = FreeNode_maxIndex
	else
		set FreeNode_firstFree = FreeNode_firstFree - 1
		set this_57 = FreeNode_nextFree[FreeNode_firstFree]
	endif
	return this_57
endfunction

function construct_FreeNode takes integer this_57, integer dataPos, integer size returns nothing
endfunction

function new_FreeNode takes integer dataPos, integer size returns integer
	local integer this_57 = alloc_FreeNode()
	call construct_FreeNode(this_57, dataPos, size)
	return this_57
=======
	local integer this_58
	if FreeNode_firstFree == 0 then
		set FreeNode_maxIndex = FreeNode_maxIndex + 1
		set this_58 = FreeNode_maxIndex
	else
		set FreeNode_firstFree = FreeNode_firstFree - 1
		set this_58 = FreeNode_nextFree[FreeNode_firstFree]
	endif
	return this_58
endfunction

function construct_FreeNode takes integer this_58, integer dataPos, integer size returns nothing
endfunction

function new_FreeNode takes integer dataPos, integer size returns integer
	local integer this_58 = alloc_FreeNode()
	call construct_FreeNode(this_58, dataPos, size)
	return this_58
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
endfunction

function init_ArrayList takes nothing returns nothing
	call new_FreeNode(0, 8191)
endfunction

function init_Basics takes nothing returns nothing
	set Basics_DUMMY_UNIT_ID = 2019849581
	set Basics_HEIGHT_ENABLER = 1097691750
	set Basics_LOCUST_ID = 1097625443
	set Basics_ANIMATION_PERIOD = 0.03
	set Basics_DUMMY_PLAYER = Player(15)
	call Player(12)
endfunction

function init_BuffTypes takes nothing returns nothing
	call new_HashMap()
endfunction

function init_Button takes nothing returns nothing
	local real temp_Button_sizeFix_x
	local real temp_Button_sizeFix_y
	local real temp_Button_posFix_x
	local real temp_Button_posFix_y
	set Button_buttonTexture = "SorvButton.blp"
	set temp_Button_sizeFix_x = 20.
	set temp_Button_sizeFix_y = 20.
	set Button_sizeFix_x = temp_Button_sizeFix_x
	set Button_sizeFix_y = temp_Button_sizeFix_y
	set temp_Button_posFix_x = 10.
	set temp_Button_posFix_y = 10.
	set Button_posFix_x = temp_Button_posFix_x
	set Button_posFix_y = temp_Button_posFix_y
endfunction

<<<<<<< HEAD
function alloc_Table takes nothing returns integer
	local integer this_57
	if Table_firstFree == 0 then
		set Table_maxIndex = Table_maxIndex + 1
		set this_57 = Table_maxIndex
	else
		set Table_firstFree = Table_firstFree - 1
		set this_57 = Table_nextFree[Table_firstFree]
	endif
	set Table_typeId[this_57] = 1
	return this_57
endfunction

function construct_Table takes integer this_57 returns nothing
endfunction

function new_Table takes nothing returns integer
	local integer this_57 = alloc_Table()
	call construct_Table(this_57)
	return this_57
endfunction

=======
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
function init_CaptureAnimation takes nothing returns nothing
	call new_Table()
endfunction

function alloc_OrderStringFactory takes nothing returns integer
<<<<<<< HEAD
	local integer this_57
	if OrderStringFactory_firstFree == 0 then
		set OrderStringFactory_maxIndex = OrderStringFactory_maxIndex + 1
		set this_57 = OrderStringFactory_maxIndex
	else
		set OrderStringFactory_firstFree = OrderStringFactory_firstFree - 1
		set this_57 = OrderStringFactory_nextFree[OrderStringFactory_firstFree]
	endif
	return this_57
endfunction

function construct_OrderStringFactory takes integer this_57 returns nothing
endfunction

function new_OrderStringFactory takes nothing returns integer
	local integer this_57 = alloc_OrderStringFactory()
	call construct_OrderStringFactory(this_57)
	return this_57
=======
	local integer this_58
	if OrderStringFactory_firstFree == 0 then
		set OrderStringFactory_maxIndex = OrderStringFactory_maxIndex + 1
		set this_58 = OrderStringFactory_maxIndex
	else
		set OrderStringFactory_firstFree = OrderStringFactory_firstFree - 1
		set this_58 = OrderStringFactory_nextFree[OrderStringFactory_firstFree]
	endif
	return this_58
endfunction

function construct_OrderStringFactory takes integer this_58 returns nothing
endfunction

function new_OrderStringFactory takes nothing returns integer
	local integer this_58 = alloc_OrderStringFactory()
	call construct_OrderStringFactory(this_58)
	return this_58
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
endfunction

function init_ChannelAbilityPreset takes nothing returns nothing
	call new_OrderStringFactory()
endfunction

function c2sInit takes nothing returns nothing
	set Char_c2s[0] = ""
	set Char_c2s[1] = ""
	set Char_c2s[2] = ""
	set Char_c2s[3] = ""
	set Char_c2s[4] = ""
	set Char_c2s[5] = ""
	set Char_c2s[6] = ""
	set Char_c2s[7] = ""
	set Char_c2s[8] = ""
	set Char_c2s[9] = "\t"
	set Char_c2s[10] = "\n"
	set Char_c2s[11] = ""
	set Char_c2s[12] = ""
	set Char_c2s[13] = "\r"
	set Char_c2s[14] = ""
	set Char_c2s[15] = ""
	set Char_c2s[16] = ""
	set Char_c2s[17] = ""
	set Char_c2s[18] = ""
	set Char_c2s[19] = ""
	set Char_c2s[20] = ""
	set Char_c2s[21] = ""
	set Char_c2s[22] = ""
	set Char_c2s[23] = ""
	set Char_c2s[24] = ""
	set Char_c2s[25] = ""
	set Char_c2s[26] = ""
	set Char_c2s[27] = ""
	set Char_c2s[28] = ""
	set Char_c2s[29] = ""
	set Char_c2s[30] = ""
	set Char_c2s[31] = ""
	set Char_c2s[32] = " "
	set Char_c2s[33] = "!"
	set Char_c2s[34] = "\""
	set Char_c2s[35] = "#"
	set Char_c2s[36] = "$"
	set Char_c2s[37] = "%"
	set Char_c2s[38] = "&"
	set Char_c2s[39] = "'"
	set Char_c2s[40] = "("
	set Char_c2s[41] = ")"
	set Char_c2s[42] = "*"
	set Char_c2s[43] = "+"
	set Char_c2s[44] = ","
	set Char_c2s[45] = "-"
	set Char_c2s[46] = "."
	set Char_c2s[47] = "/"
	set Char_c2s[48] = "0"
	set Char_c2s[49] = "1"
	set Char_c2s[50] = "2"
	set Char_c2s[51] = "3"
	set Char_c2s[52] = "4"
	set Char_c2s[53] = "5"
	set Char_c2s[54] = "6"
	set Char_c2s[55] = "7"
	set Char_c2s[56] = "8"
	set Char_c2s[57] = "9"
	set Char_c2s[58] = ":"
	set Char_c2s[59] = ";"
	set Char_c2s[60] = "<"
	set Char_c2s[61] = "="
	set Char_c2s[62] = ">"
	set Char_c2s[63] = "?"
	set Char_c2s[64] = "@"
	set Char_c2s[65] = "A"
	set Char_c2s[66] = "B"
	set Char_c2s[67] = "C"
	set Char_c2s[68] = "D"
	set Char_c2s[69] = "E"
	set Char_c2s[70] = "F"
	set Char_c2s[71] = "G"
	set Char_c2s[72] = "H"
	set Char_c2s[73] = "I"
	set Char_c2s[74] = "J"
	set Char_c2s[75] = "K"
	set Char_c2s[76] = "L"
	set Char_c2s[77] = "M"
	set Char_c2s[78] = "N"
	set Char_c2s[79] = "O"
	set Char_c2s[80] = "P"
	set Char_c2s[81] = "Q"
	set Char_c2s[82] = "R"
	set Char_c2s[83] = "S"
	set Char_c2s[84] = "T"
	set Char_c2s[85] = "U"
	set Char_c2s[86] = "V"
	set Char_c2s[87] = "W"
	set Char_c2s[88] = "X"
	set Char_c2s[89] = "Y"
	set Char_c2s[90] = "Z"
	set Char_c2s[91] = "["
	set Char_c2s[92] = "\\"
	set Char_c2s[93] = "]"
	set Char_c2s[94] = "^"
	set Char_c2s[95] = "_"
	set Char_c2s[96] = "`"
	set Char_c2s[97] = "a"
	set Char_c2s[98] = "b"
	set Char_c2s[99] = "c"
	set Char_c2s[100] = "d"
	set Char_c2s[101] = "e"
	set Char_c2s[102] = "f"
	set Char_c2s[103] = "g"
	set Char_c2s[104] = "h"
	set Char_c2s[105] = "i"
	set Char_c2s[106] = "j"
	set Char_c2s[107] = "k"
	set Char_c2s[108] = "l"
	set Char_c2s[109] = "m"
	set Char_c2s[110] = "n"
	set Char_c2s[111] = "o"
	set Char_c2s[112] = "p"
	set Char_c2s[113] = "q"
	set Char_c2s[114] = "r"
	set Char_c2s[115] = "s"
	set Char_c2s[116] = "t"
	set Char_c2s[117] = "u"
	set Char_c2s[118] = "v"
	set Char_c2s[119] = "w"
	set Char_c2s[120] = "x"
	set Char_c2s[121] = "y"
	set Char_c2s[122] = "z"
	set Char_c2s[123] = "{"
	set Char_c2s[124] = "|"
	set Char_c2s[125] = "}"
	set Char_c2s[126] = "~"
	set Char_c2s[127] = ""
endfunction

<<<<<<< HEAD
function string_toUpperCase takes string this_57 returns string
	return StringCase(this_57, true)
=======
function string_toUpperCase takes string this_58 returns string
	return StringCase(this_58, true)
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
endfunction

function s2cInit takes nothing returns nothing
	local integer i = 0
	local integer temp = Char_MAX_INDEX
	loop
		exitwhen i > temp
		if string_toUpperCase(Char_c2s[i]) == Char_c2s[i] then
			set Char_s2c[StringHash(Char_c2s[i]) / 2033480 + 1002] = i
		endif
		set i = i + 1
	endloop
endfunction

function widthInit takes nothing returns nothing
endfunction

function init_Char takes nothing returns nothing
	set Char_MAX_INDEX = 126 + 1
	call c2sInit()
	call s2cInit()
	call widthInit()
endfunction

<<<<<<< HEAD
function trigger_addAction takes trigger this_57, code actionFunc returns nothing
	call TriggerAddAction(this_57, actionFunc)
endfunction

function trigger_registerAnyUnitEvent takes trigger this_57, playerunitevent whichEvent returns nothing
	call TriggerRegisterAnyUnitEventBJ(this_57, whichEvent)
=======
function trigger_addAction takes trigger this_58, code actionFunc returns nothing
	call TriggerAddAction(this_58, actionFunc)
endfunction

function trigger_registerAnyUnitEvent takes trigger this_58, playerunitevent whichEvent returns nothing
	call TriggerRegisterAnyUnitEventBJ(this_58, whichEvent)
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
endfunction

function init_ClosureEvents takes nothing returns nothing
	local trigger receiver = CreateTrigger()
	local trigger receiver_2
	call trigger_registerAnyUnitEvent(receiver, EVENT_PLAYER_UNIT_SPELL_CAST)
	set receiver_2 = receiver
	call trigger_addAction(receiver_2, ref_function_bridge_handleCasts)
	set Cast_casts = new_HashMap()
	set OnDamage_damageActions = new_HashMap()
	set receiver = null
	set receiver_2 = null
endfunction

function init_Colors takes string wurstStackTrace returns nothing
	local integer i = 0
	local integer i2
	local integer tempIndex
	local integer tempIndex_2
	local integer tempIndex_3
	local integer tempIndex_4
	local integer tempIndex_5
	local integer tempIndex_6
	local integer tempIndex_7
	local integer tempIndex_8
	local integer tempIndex_9
	local integer tempIndex_10
	local integer tempIndex_11
	local integer tempIndex_12
	local integer tempIndex_13
	loop
		exitwhen i > 9
		call int_toString(i)
		set i = i + 1
	endloop
	set Colors_decs = new_Table()
	set i2 = 0
	loop
		exitwhen i2 > 9
		call dispatch_Table_saveInt(Colors_decs, StringHash(int_toString(i2)), i2, "\n   Colors, line 153" + wurstStackTrace)
		set i2 = i2 + 1
	endloop
	call dispatch_Table_saveInt(Colors_decs, StringHash("A"), 10, "\n   Colors, line 155" + wurstStackTrace)
	call dispatch_Table_saveInt(Colors_decs, StringHash("B"), 11, "\n   Colors, line 156" + wurstStackTrace)
	call dispatch_Table_saveInt(Colors_decs, StringHash("C"), 12, "\n   Colors, line 157" + wurstStackTrace)
	call dispatch_Table_saveInt(Colors_decs, StringHash("D"), 13, "\n   Colors, line 158" + wurstStackTrace)
	call dispatch_Table_saveInt(Colors_decs, StringHash("E"), 14, "\n   Colors, line 159" + wurstStackTrace)
	call dispatch_Table_saveInt(Colors_decs, StringHash("F"), 15, "\n   Colors, line 160" + wurstStackTrace)
	set tempIndex = 0
	set tempIndex_2 = 1
	set tempIndex_3 = 2
	set tempIndex_4 = 3
	set tempIndex_5 = 4
	set tempIndex_6 = 5
	set tempIndex_7 = 6
	set tempIndex_8 = 7
	set tempIndex_9 = 8
	set tempIndex_10 = 9
	set tempIndex_11 = 10
	set tempIndex_12 = 11
	set tempIndex_13 = 12
endfunction

function alloc_Closure_18 takes nothing returns integer
<<<<<<< HEAD
	local integer this_57
	if CallbackSingle_firstFree == 0 then
		set CallbackSingle_maxIndex = CallbackSingle_maxIndex + 1
		set this_57 = CallbackSingle_maxIndex
	else
		set CallbackSingle_firstFree = CallbackSingle_firstFree - 1
		set this_57 = CallbackSingle_nextFree[CallbackSingle_firstFree]
	endif
	set CallbackSingle_typeId[this_57] = 678
	return this_57
=======
	local integer this_58
	if CallbackSingle_firstFree == 0 then
		set CallbackSingle_maxIndex = CallbackSingle_maxIndex + 1
		set this_58 = CallbackSingle_maxIndex
	else
		set CallbackSingle_firstFree = CallbackSingle_firstFree - 1
		set this_58 = CallbackSingle_nextFree[CallbackSingle_firstFree]
	endif
	set CallbackSingle_typeId[this_58] = 677
	return this_58
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
endfunction

function nullTimer takes integer cb, string wurstStackTrace returns nothing
	call doAfter(0., cb, "\n   ClosureTimers, line 57" + wurstStackTrace)
endfunction

function init_CompiletimeInit takes string wurstStackTrace returns nothing
	local integer clVar
	set CompiletimeInit_compiletime = true
	set CompiletimeInit_compiletime = false
	set clVar = alloc_Closure_18()
	call nullTimer(clVar, "\n   CompiletimeInit, line 8" + wurstStackTrace)
endfunction

function alloc_Closure_19 takes nothing returns integer
<<<<<<< HEAD
	local integer this_57
	if Cast_firstFree == 0 then
		set Cast_maxIndex = Cast_maxIndex + 1
		set this_57 = Cast_maxIndex
	else
		set Cast_firstFree = Cast_firstFree - 1
		set this_57 = Cast_nextFree[Cast_firstFree]
	endif
	set Cast_typeId[this_57] = 852
	return this_57
endfunction

function Cast_register takes integer this_57, integer abiCode, string wurstStackTrace returns nothing
	call dispatch_HashMap_put(Cast_casts, abiCode, this_57, "\n   ClosureEvents, line 52" + wurstStackTrace)
endfunction

function dispatch_Cast_register takes integer this_57, integer abiCode, string wurstStackTrace returns nothing
	if Cast_typeId[this_57] == 0 then
		if this_57 == 0 then
=======
	local integer this_58
	if Cast_firstFree == 0 then
		set Cast_maxIndex = Cast_maxIndex + 1
		set this_58 = Cast_maxIndex
	else
		set Cast_firstFree = Cast_firstFree - 1
		set this_58 = Cast_nextFree[Cast_firstFree]
	endif
	set Cast_typeId[this_58] = 855
	return this_58
endfunction

function Cast_register takes integer this_58, integer abiCode, string wurstStackTrace returns nothing
	call dispatch_HashMap_put(Cast_casts, abiCode, this_58, "\n   ClosureEvents, line 52" + wurstStackTrace)
endfunction

function dispatch_Cast_register takes integer this_58, integer abiCode, string wurstStackTrace returns nothing
	if Cast_typeId[this_58] == 0 then
		if this_58 == 0 then
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Cast.register" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Cast.register on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
<<<<<<< HEAD
	if Cast_typeId[this_57] <= 852 then
		if Cast_typeId[this_57] <= 849 then
			call Cast_register(this_57, abiCode, "\n   ClosureEvents, line 50" + wurstStackTrace)
		else
			call Cast_register(this_57, abiCode, "\n   ClosureEvents, line 50" + wurstStackTrace)
		endif
	else
		call Cast_register(this_57, abiCode, "\n   ClosureEvents, line 50" + wurstStackTrace)
=======
	if Cast_typeId[this_58] <= 855 then
		if Cast_typeId[this_58] <= 852 then
			call Cast_register(this_58, abiCode, "\n   ClosureEvents, line 50" + wurstStackTrace)
		else
			call Cast_register(this_58, abiCode, "\n   ClosureEvents, line 50" + wurstStackTrace)
		endif
	else
		call Cast_register(this_58, abiCode, "\n   ClosureEvents, line 50" + wurstStackTrace)
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
	endif
endfunction

function onPointCast takes integer abiCode, integer action, string wurstStackTrace returns nothing
	call dispatch_Cast_register(action, abiCode, "\n   ClosureEvents, line 33" + wurstStackTrace)
endfunction

function init_Conductor takes string wurstStackTrace returns nothing
	local integer clVar = alloc_Closure_19()
	call onPointCast(1918987625, clVar, "\n   Conductor, line 24" + wurstStackTrace)
	set Conductor_range = 900.
	set Conductor_missleRadius = 50.
	set Conductor_missleHeight = 50.
	set Conductor_missleSpeed = 10.
	set Conductor_baseDamage = 10.
	set Conductor_bonusDamage = 5.
	set Conductor_lvlFactor = 1.2
endfunction

<<<<<<< HEAD
function init_ControlPoint takes nothing returns nothing
=======
function CreationEvent_onCreation takes integer action, string wurstStackTrace returns integer
	call dispatch_Event_addAction(CreationEvent_create, action, "\n   CreationEvent, line 10" + wurstStackTrace)
	return action
endfunction

function CreationEvent_onDestroy takes integer action, string wurstStackTrace returns integer
	call dispatch_Event_addAction(CreationEvent_dest, action, "\n   CreationEvent, line 14" + wurstStackTrace)
	return action
endfunction

function alloc_Closure_20 takes nothing returns integer
	local integer this_58
	if Action_firstFree == 0 then
		set Action_maxIndex = Action_maxIndex + 1
		set this_58 = Action_maxIndex
	else
		set Action_firstFree = Action_firstFree - 1
		set this_58 = Action_nextFree[Action_firstFree]
	endif
	set Action_typeId[this_58] = 840
	return this_58
endfunction

function alloc_Closure_21 takes nothing returns integer
	local integer this_58
	if Action_firstFree == 0 then
		set Action_maxIndex = Action_maxIndex + 1
		set this_58 = Action_maxIndex
	else
		set Action_firstFree = Action_firstFree - 1
		set this_58 = Action_nextFree[Action_firstFree]
	endif
	set Action_typeId[this_58] = 839
	return this_58
endfunction

function init_ControlPoint takes string wurstStackTrace returns nothing
	local integer clVar
	local integer clVar_2
	set ControlPoint_height = 335.
	set ControlPoint_captureData = new_HashMap()
	set clVar = alloc_Closure_21()
	call CreationEvent_onCreation(clVar, "\n   ControlPoint, line 59" + wurstStackTrace)
	set clVar_2 = alloc_Closure_20()
	call CreationEvent_onDestroy(clVar_2, "\n   ControlPoint, line 60" + wurstStackTrace)
	set ControlPoint_maxDistance = 900.
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
endfunction

function init_CustomBar takes nothing returns nothing
	set CustomBar_count = 0
	set CustomBar_animationTimer = CreateTimer()
endfunction

function init_DebugFile takes nothing returns nothing
	call PreloadGenClear()
endfunction

function init_DelayedDestroy takes nothing returns nothing
	set DelayedDestroy_numberOfThings = 0
	call CreateTimer()
endfunction

function init_Dot takes nothing returns nothing
	set LinkedListModule_first = 0
	set LinkedListModule_last = 0
	set LinkedListModule_size = 0
endfunction

function TextTag_classname takes nothing returns string
	return "TextTag"
endfunction

function registerNewInstanceEntry takes string name returns integer
	set InstanceBoard_classes = InstanceBoard_classes + 1
	set InstanceBoard_nameOfClass[InstanceBoard_classes] = name
	return InstanceBoard_classes
endfunction

function init_FloatingText takes nothing returns nothing
	set ShowInstances_classId = registerNewInstanceEntry(TextTag_classname())
endfunction

function initFont takes string path returns nothing
	set FontArial_paths[33] = path + "char1.blp"
	set FontArial_paths[46] = path + "char2.blp"
	set FontArial_paths[35] = path + "char3.blp"
	set FontArial_paths[36] = path + "char4.blp"
	set FontArial_paths[37] = path + "char5.blp"
	set FontArial_paths[38] = path + "char6.blp"
	set FontArial_paths[39] = path + "char7.blp"
	set FontArial_paths[40] = path + "char8.blp"
	set FontArial_paths[41] = path + "char9.blp"
	set FontArial_paths[42] = path + "char10.blp"
	set FontArial_paths[43] = path + "char11.blp"
	set FontArial_paths[44] = path + "char12.blp"
	set FontArial_paths[45] = path + "char13.blp"
	set FontArial_paths[46] = path + "char14.blp"
	set FontArial_paths[47] = path + "char15.blp"
	set FontArial_paths[48] = path + "char16.blp"
	set FontArial_paths[49] = path + "char17.blp"
	set FontArial_paths[50] = path + "char18.blp"
	set FontArial_paths[51] = path + "char19.blp"
	set FontArial_paths[52] = path + "char20.blp"
	set FontArial_paths[53] = path + "char21.blp"
	set FontArial_paths[54] = path + "char22.blp"
	set FontArial_paths[55] = path + "char23.blp"
	set FontArial_paths[56] = path + "char24.blp"
	set FontArial_paths[57] = path + "char25.blp"
	set FontArial_paths[58] = path + "char26.blp"
	set FontArial_paths[59] = path + "char27.blp"
	set FontArial_paths[60] = path + "char28.blp"
	set FontArial_paths[61] = path + "char29.blp"
	set FontArial_paths[62] = path + "char30.blp"
	set FontArial_paths[46] = path + "char31.blp"
	set FontArial_paths[64] = path + "char32.blp"
	set FontArial_paths[65] = path + "char33.blp"
	set FontArial_paths[66] = path + "char34.blp"
	set FontArial_paths[67] = path + "char35.blp"
	set FontArial_paths[68] = path + "char36.blp"
	set FontArial_paths[69] = path + "char37.blp"
	set FontArial_paths[70] = path + "char38.blp"
	set FontArial_paths[71] = path + "char39.blp"
	set FontArial_paths[72] = path + "char40.blp"
	set FontArial_paths[73] = path + "char41.blp"
	set FontArial_paths[74] = path + "char42.blp"
	set FontArial_paths[75] = path + "char43.blp"
	set FontArial_paths[76] = path + "char44.blp"
	set FontArial_paths[77] = path + "char45.blp"
	set FontArial_paths[78] = path + "char46.blp"
	set FontArial_paths[79] = path + "char47.blp"
	set FontArial_paths[80] = path + "char48.blp"
	set FontArial_paths[81] = path + "char49.blp"
	set FontArial_paths[82] = path + "char50.blp"
	set FontArial_paths[83] = path + "char51.blp"
	set FontArial_paths[84] = path + "char52.blp"
	set FontArial_paths[85] = path + "char53.blp"
	set FontArial_paths[86] = path + "char54.blp"
	set FontArial_paths[87] = path + "char55.blp"
	set FontArial_paths[88] = path + "char56.blp"
	set FontArial_paths[89] = path + "char57.blp"
	set FontArial_paths[90] = path + "char58.blp"
	set FontArial_paths[91] = path + "char59.blp"
	set FontArial_paths[46] = path + "char60.blp"
	set FontArial_paths[93] = path + "char61.blp"
	set FontArial_paths[94] = path + "char62.blp"
	set FontArial_paths[95] = path + "char63.blp"
	set FontArial_paths[96] = path + "char64.blp"
	set FontArial_paths[97] = path + "char65.blp"
	set FontArial_paths[98] = path + "char66.blp"
	set FontArial_paths[99] = path + "char67.blp"
	set FontArial_paths[100] = path + "char68.blp"
	set FontArial_paths[101] = path + "char69.blp"
	set FontArial_paths[102] = path + "char70.blp"
	set FontArial_paths[103] = path + "char71.blp"
	set FontArial_paths[104] = path + "char72.blp"
	set FontArial_paths[105] = path + "char73.blp"
	set FontArial_paths[106] = path + "char74.blp"
	set FontArial_paths[107] = path + "char75.blp"
	set FontArial_paths[108] = path + "char76.blp"
	set FontArial_paths[109] = path + "char77.blp"
	set FontArial_paths[110] = path + "char78.blp"
	set FontArial_paths[111] = path + "char79.blp"
	set FontArial_paths[112] = path + "char80.blp"
	set FontArial_paths[113] = path + "char81.blp"
	set FontArial_paths[114] = path + "char82.blp"
	set FontArial_paths[115] = path + "char83.blp"
	set FontArial_paths[116] = path + "char84.blp"
	set FontArial_paths[117] = path + "char85.blp"
	set FontArial_paths[118] = path + "char86.blp"
	set FontArial_paths[119] = path + "char87.blp"
	set FontArial_paths[120] = path + "char88.blp"
	set FontArial_paths[121] = path + "char89.blp"
	set FontArial_paths[122] = path + "char90.blp"
	set FontArial_paths[123] = path + "char91.blp"
	set FontArial_paths[124] = path + "char92.blp"
	set FontArial_paths[125] = path + "char93.blp"
	set FontArial_paths[126] = path + "char94.blp"
	set FontArial_widths[33] = 13
	set FontArial_widths[46] = 14
	set FontArial_widths[35] = 29
	set FontArial_widths[36] = 28
	set FontArial_widths[37] = 45
	set FontArial_widths[38] = 33
	set FontArial_widths[39] = 9
	set FontArial_widths[40] = 17
	set FontArial_widths[41] = 16
	set FontArial_widths[42] = 19
	set FontArial_widths[43] = 30
	set FontArial_widths[44] = 14
	set FontArial_widths[45] = 18
	set FontArial_widths[46] = 14
	set FontArial_widths[47] = 13
	set FontArial_widths[48] = 28
	set FontArial_widths[49] = 28
	set FontArial_widths[50] = 27
	set FontArial_widths[51] = 27
	set FontArial_widths[52] = 28
	set FontArial_widths[53] = 28
	set FontArial_widths[54] = 28
	set FontArial_widths[55] = 27
	set FontArial_widths[56] = 28
	set FontArial_widths[57] = 28
	set FontArial_widths[58] = 14
	set FontArial_widths[59] = 13
	set FontArial_widths[60] = 29
	set FontArial_widths[61] = 30
	set FontArial_widths[62] = 29
	set FontArial_widths[46] = 14
	set FontArial_widths[64] = 51
	set FontArial_widths[65] = 33
	set FontArial_widths[66] = 34
	set FontArial_widths[67] = 35
	set FontArial_widths[68] = 36
	set FontArial_widths[69] = 33
	set FontArial_widths[70] = 30
	set FontArial_widths[71] = 39
	set FontArial_widths[72] = 36
	set FontArial_widths[73] = 14
	set FontArial_widths[74] = 24
	set FontArial_widths[75] = 33
	set FontArial_widths[76] = 28
	set FontArial_widths[77] = 42
	set FontArial_widths[78] = 36
	set FontArial_widths[79] = 38
	set FontArial_widths[80] = 33
	set FontArial_widths[81] = 39
	set FontArial_widths[82] = 36
	set FontArial_widths[83] = 34
	set FontArial_widths[84] = 30
	set FontArial_widths[85] = 36
	set FontArial_widths[86] = 32
	set FontArial_widths[87] = 46
	set FontArial_widths[88] = 32
	set FontArial_widths[89] = 32
	set FontArial_widths[90] = 30
	set FontArial_widths[91] = 13
	set FontArial_widths[46] = 14
	set FontArial_widths[93] = 13
	set FontArial_widths[94] = 23
	set FontArial_widths[95] = 27
	set FontArial_widths[96] = 17
	set FontArial_widths[97] = 28
	set FontArial_widths[98] = 28
	set FontArial_widths[99] = 25
	set FontArial_widths[100] = 28
	set FontArial_widths[101] = 28
	set FontArial_widths[102] = 15
	set FontArial_widths[103] = 28
	set FontArial_widths[104] = 27
	set FontArial_widths[105] = 11
	set FontArial_widths[106] = 7
	set FontArial_widths[107] = 25
	set FontArial_widths[108] = 11
	set FontArial_widths[109] = 41
	set FontArial_widths[110] = 27
	set FontArial_widths[111] = 28
	set FontArial_widths[112] = 28
	set FontArial_widths[113] = 28
	set FontArial_widths[114] = 17
	set FontArial_widths[115] = 25
	set FontArial_widths[116] = 14
	set FontArial_widths[117] = 28
	set FontArial_widths[118] = 24
	set FontArial_widths[119] = 35
	set FontArial_widths[120] = 24
	set FontArial_widths[121] = 24
	set FontArial_widths[122] = 25
	set FontArial_widths[123] = 16
	set FontArial_widths[124] = 14
	set FontArial_widths[125] = 16
	set FontArial_widths[126] = 29
	set FontArial_widths[32] = 20
endfunction

function init_FontArial takes nothing returns nothing
	set FontArial_FONT_HEIGHT = 56
	set FontArial_FONT_RESOLUTION = 64
	call initFont("Chars\\")
endfunction

function Preload_classInit takes nothing returns nothing
	set Preload_initOrder[1] = "Abilitys"
	set Preload_initOrder[2] = "Units"
	set Preload_initOrder[3] = "Items"
	set Preload_initOrder[4] = "Destructables"
	set Preload_initOrder[5] = "Buffs"
	set Preload_initOrder[6] = "Trackables"
	set Preload_initOrder[7] = "Menu"
endfunction

function ClassInit_helper_3 takes nothing returns boolean
	call Preload_classInit()
	return true
endfunction

function Preload_startPreload takes string wurstStackTrace returns nothing
<<<<<<< HEAD
	call timer_start(getTimer("\n   GameStart, line 150" + wurstStackTrace), 1.0, ref_function_bridge_Preload_preload)
endfunction

function alloc_Closure_20 takes nothing returns integer
	local integer this_57
	if PreloadAction_firstFree == 0 then
		set PreloadAction_maxIndex = PreloadAction_maxIndex + 1
		set this_57 = PreloadAction_maxIndex
	else
		set PreloadAction_firstFree = PreloadAction_firstFree - 1
		set this_57 = PreloadAction_nextFree[PreloadAction_firstFree]
	endif
	set PreloadAction_typeId[this_57] = 862
	return this_57
endfunction

function alloc_Closure_21 takes nothing returns integer
	local integer this_57
	if Action_firstFree == 0 then
		set Action_maxIndex = Action_maxIndex + 1
		set this_57 = Action_maxIndex
	else
		set Action_firstFree = Action_firstFree - 1
		set this_57 = Action_nextFree[Action_firstFree]
	endif
	set Action_typeId[this_57] = 861
	return this_57
endfunction

function Event_addAction takes integer this_57, integer a returns integer
	set Action_ev[a] = this_57
	if Event_first[this_57] == 0 then
		set Event_first[this_57] = a
		set Event_last[this_57] = a
		set Action_next[a] = 0
		set Action_prev[a] = 0
	else
		set Action_prev[Event_first[this_57]] = a
		set Action_next[a] = Event_first[this_57]
		set Event_first[this_57] = a
	endif
	return a
endfunction

function dispatch_Event_addAction takes integer this_57, integer a, string wurstStackTrace returns integer
	local integer addAction_result
	if Event_typeId[this_57] == 0 then
		if this_57 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Event.addAction" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Event.addAction on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	if Event_typeId[this_57] <= 789 then
		if Event_typeId[this_57] <= 787 then
			if Event_typeId[this_57] <= 682 then
				set addAction_result = Event_addAction(this_57, a)
			else
				set addAction_result = Event_addAction(this_57, a)
			endif
		else
			set addAction_result = Event_addAction(this_57, a)
		endif
	elseif Event_typeId[this_57] <= 792 then
		set addAction_result = Event_addAction(this_57, a)
	else
		set addAction_result = Event_addAction(this_57, a)
	endif
	return addAction_result
endfunction

function alloc_HashList takes nothing returns integer
	local integer this_57
	if HashList_firstFree == 0 then
		set HashList_maxIndex = HashList_maxIndex + 1
		set this_57 = HashList_maxIndex
	else
		set HashList_firstFree = HashList_firstFree - 1
		set this_57 = HashList_nextFree[HashList_firstFree]
	endif
	set HashList_typeId[this_57] = 664
	return this_57
endfunction

function construct_HashList takes integer this_57 returns nothing
	set HashList_size[this_57] = 0
endfunction

function new_HashList takes nothing returns integer
	local integer this_57 = alloc_HashList()
	call construct_HashList(this_57)
	return this_57
endfunction

function alloc_Player takes nothing returns integer
	local integer this_57
	if Player_firstFree == 0 then
		set Player_maxIndex = Player_maxIndex + 1
		set this_57 = Player_maxIndex
	else
		set Player_firstFree = Player_firstFree - 1
		set this_57 = Player_nextFree[Player_firstFree]
	endif
	return this_57
endfunction

function construct_Player takes integer this_57, player p_2, string wurstStackTrace returns nothing
	set Player_camSet[this_57] = getTimer("\n   PlayerClass, line 31" + wurstStackTrace)
	call timer_startPeriodic(Player_camSet[this_57], 1., ref_function_bridge_Player_setCam)
	call timer_setData(Player_camSet[this_57], this_57, "\n   PlayerClass, line 39" + wurstStackTrace)
	call dispatch_HashMap_put(PlayerClass_playerData, playerToIndex(p_2), this_57, "\n   PlayerClass, line 40" + wurstStackTrace)
endfunction

function new_Player takes player p_2, string wurstStackTrace returns integer
	local integer this_57 = alloc_Player()
	call construct_Player(this_57, p_2, "\n   PlayerClass, line 35" + wurstStackTrace)
	return this_57
endfunction

function alloc_SimpleEvent takes nothing returns integer
	local integer this_57
	if Event_firstFree == 0 then
		set Event_maxIndex = Event_maxIndex + 1
		set this_57 = Event_maxIndex
	else
		set Event_firstFree = Event_firstFree - 1
		set this_57 = Event_nextFree[Event_firstFree]
	endif
	set Event_typeId[this_57] = 795
	return this_57
endfunction

function construct_Event takes integer this_57 returns nothing
	set Event_first[this_57] = 0
	set Event_last[this_57] = 0
	set Event_checkData[this_57] = false
endfunction

function construct_SimpleEvent takes integer this_57 returns nothing
	call construct_Event(this_57)
endfunction

function new_SimpleEvent takes nothing returns integer
	local integer this_57 = alloc_SimpleEvent()
	call construct_SimpleEvent(this_57)
	return this_57
=======
	call timer_start(getTimer("\n   GameStart, line 152" + wurstStackTrace), 1.0, ref_function_bridge_Preload_preload)
endfunction

function alloc_Closure_22 takes nothing returns integer
	local integer this_58
	if CallbackSingle_firstFree == 0 then
		set CallbackSingle_maxIndex = CallbackSingle_maxIndex + 1
		set this_58 = CallbackSingle_maxIndex
	else
		set CallbackSingle_firstFree = CallbackSingle_firstFree - 1
		set this_58 = CallbackSingle_nextFree[CallbackSingle_firstFree]
	endif
	set CallbackSingle_typeId[this_58] = 865
	return this_58
endfunction

function alloc_Closure_23 takes nothing returns integer
	local integer this_58
	if Action_firstFree == 0 then
		set Action_maxIndex = Action_maxIndex + 1
		set this_58 = Action_maxIndex
	else
		set Action_firstFree = Action_firstFree - 1
		set this_58 = Action_nextFree[Action_firstFree]
	endif
	set Action_typeId[this_58] = 867
	return this_58
endfunction

function alloc_Closure_24 takes nothing returns integer
	local integer this_58
	if PreloadAction_firstFree == 0 then
		set PreloadAction_maxIndex = PreloadAction_maxIndex + 1
		set this_58 = PreloadAction_maxIndex
	else
		set PreloadAction_firstFree = PreloadAction_firstFree - 1
		set this_58 = PreloadAction_nextFree[PreloadAction_firstFree]
	endif
	set PreloadAction_typeId[this_58] = 868
	return this_58
endfunction

function alloc_ControlPoint takes nothing returns integer
	local integer this_58
	if ControlPoint_firstFree == 0 then
		set ControlPoint_maxIndex = ControlPoint_maxIndex + 1
		set this_58 = ControlPoint_maxIndex
	else
		set ControlPoint_firstFree = ControlPoint_firstFree - 1
		set this_58 = ControlPoint_nextFree[ControlPoint_firstFree]
	endif
	set ControlPoint_typeId[this_58] = 837
	return this_58
endfunction

function construct_Fx_2 takes integer this_58, real pos_x, real pos_y, real facing_radians, string fxpath, string wurstStackTrace returns nothing
	set Fx_dummy[this_58] = null
	set Fx_fx[this_58] = null
	set Fx_dummy[this_58] = DummyRecycler_get(pos_x, pos_y, facing_radians, "\n   Fx, line 36" + wurstStackTrace)
	call dispatch_Fx_setFx(this_58, fxpath, "\n   Fx, line 37" + wurstStackTrace)
endfunction

function new_Fx_2 takes real pos_x, real pos_y, real facing_radians, string fxpath, string wurstStackTrace returns integer
	local integer this_58 = alloc_Fx()
	call construct_Fx_2(this_58, pos_x, pos_y, facing_radians, fxpath, "\n   Fx, line 35" + wurstStackTrace)
	return this_58
endfunction

function construct_ControlPoint takes integer this_58, real pos_x, real pos_y, integer owner, string wurstStackTrace returns nothing
	local timer receiver
	local timer receiver_2
	local integer i
	local integer tempIndex
	local integer tempIndex_2
	local integer tempIndex_3
	set ControlPoint_inRange[this_58] = CreateGroup()
	set ControlPoint_owner[this_58] = owner
	set tempIndex = this_58
	set ControlPoint_pos2[tempIndex] = pos_x
	set ControlPoint_pos2_2[tempIndex] = pos_y
	set tempIndex_2 = this_58
	set ControlPoint_pos3[tempIndex_2] = vec2_withZ(pos_x, pos_y, ControlPoint_height)
	set ControlPoint_pos3_2[tempIndex_2] = vec2_withZ_return_y
	set ControlPoint_pos3_3[tempIndex_2] = vec2_withZ_return_z
	set receiver = getTimer("\n   ControlPoint, line 78" + wurstStackTrace)
	call timer_setData(receiver, this_58, "\n   ControlPoint, line 78" + wurstStackTrace)
	call timer_startPeriodic(receiver, 0.1, ref_function_bridge_closure_impl_2)
	set receiver_2 = getTimer("\n   ControlPoint, line 79" + wurstStackTrace)
	call timer_setData(receiver_2, this_58, "\n   ControlPoint, line 79" + wurstStackTrace)
	call timer_startPeriodic(receiver_2, 0.03, ref_function_bridge_closure_impl_3)
	set i = 1
	loop
		exitwhen i > 360
		set tempIndex_3 = this_58
		call new_Fx_2(vec2_polarOffset(ControlPoint_pos2[tempIndex_3], ControlPoint_pos2_2[tempIndex_3], real_asAngleDegrees(int_toReal(i)), dispatch_ControlPoint_getRadius(this_58, real_asAngleDegrees(int_toReal(i)), "\n   ControlPoint, line 81" + wurstStackTrace)), vec2_polarOffset_return_y, real_asAngleDegrees(0.), "Abilities\\Weapons\\BoatMissile\\BoatMissile.mdl", "\n   ControlPoint, line 81" + wurstStackTrace)
		set i = i + 2
	endloop
	set receiver = null
	set receiver_2 = null
endfunction

function new_ControlPoint takes real pos_x, real pos_y, integer owner, string wurstStackTrace returns integer
	local integer this_58 = alloc_ControlPoint()
	call construct_ControlPoint(this_58, pos_x, pos_y, owner, "\n   ControlPoint, line 70" + wurstStackTrace)
	return this_58
endfunction

function alloc_HashList takes nothing returns integer
	local integer this_58
	if HashList_firstFree == 0 then
		set HashList_maxIndex = HashList_maxIndex + 1
		set this_58 = HashList_maxIndex
	else
		set HashList_firstFree = HashList_firstFree - 1
		set this_58 = HashList_nextFree[HashList_firstFree]
	endif
	set HashList_typeId[this_58] = 663
	return this_58
endfunction

function construct_HashList takes integer this_58 returns nothing
	set HashList_size[this_58] = 0
endfunction

function new_HashList takes nothing returns integer
	local integer this_58 = alloc_HashList()
	call construct_HashList(this_58)
	return this_58
endfunction

function alloc_Player takes nothing returns integer
	local integer this_58
	if Player_firstFree == 0 then
		set Player_maxIndex = Player_maxIndex + 1
		set this_58 = Player_maxIndex
	else
		set Player_firstFree = Player_firstFree - 1
		set this_58 = Player_nextFree[Player_firstFree]
	endif
	return this_58
endfunction

function construct_Player takes integer this_58, player p_2, string wurstStackTrace returns nothing
	set Player_camSet[this_58] = getTimer("\n   PlayerClass, line 31" + wurstStackTrace)
	call timer_startPeriodic(Player_camSet[this_58], 1., ref_function_bridge_Player_setCam)
	call timer_setData(Player_camSet[this_58], this_58, "\n   PlayerClass, line 39" + wurstStackTrace)
	call dispatch_HashMap_put(PlayerClass_playerData, playerToIndex(p_2), this_58, "\n   PlayerClass, line 40" + wurstStackTrace)
endfunction

function new_Player takes player p_2, string wurstStackTrace returns integer
	local integer this_58 = alloc_Player()
	call construct_Player(this_58, p_2, "\n   PlayerClass, line 35" + wurstStackTrace)
	return this_58
endfunction

function alloc_SimpleEvent takes nothing returns integer
	local integer this_58
	if Event_firstFree == 0 then
		set Event_maxIndex = Event_maxIndex + 1
		set this_58 = Event_maxIndex
	else
		set Event_firstFree = Event_firstFree - 1
		set this_58 = Event_nextFree[Event_firstFree]
	endif
	set Event_typeId[this_58] = 794
	return this_58
endfunction

function construct_SimpleEvent takes integer this_58 returns nothing
	call construct_Event(this_58)
endfunction

function new_SimpleEvent takes nothing returns integer
	local integer this_58 = alloc_SimpleEvent()
	call construct_SimpleEvent(this_58)
	return this_58
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
endfunction

function onPreload takes string name, integer action, string wurstStackTrace returns nothing
	call dispatch_HashMap_put(PreloadSystem_preloadActions, StringHash(name), action, "\n   PreloadSystem, line 31" + wurstStackTrace)
endfunction

<<<<<<< HEAD
function trigger_registerPlayerChatEvent takes trigger this_57, player whichPlayer, string chatMessageToDetect, boolean exactMatchOnly returns nothing
	call TriggerRegisterPlayerChatEvent(this_57, whichPlayer, chatMessageToDetect, exactMatchOnly)
=======
function trigger_registerPlayerChatEvent takes trigger this_58, player whichPlayer, string chatMessageToDetect, boolean exactMatchOnly returns nothing
	call TriggerRegisterPlayerChatEvent(this_58, whichPlayer, chatMessageToDetect, exactMatchOnly)
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
endfunction

function init_GameStart takes string wurstStackTrace returns nothing
	local trigger receiver = CreateTrigger()
	local integer i
	local trigger blub
<<<<<<< HEAD
	local integer wurst__iterator0
	local player p_2
	local trigger receiver_2
	local integer clVar
=======
	local integer clVar
	local integer wurst__iterator0
	local player p_2
	local trigger receiver_2
	local integer clVar_2
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
	local integer shopB_2
	local integer scoreB_2
	local integer guideB_2
	local integer statsB_2
<<<<<<< HEAD
	local integer shopT1_2
	local integer shopT2_2
	local integer shopT3_2
=======
	local integer shopT2_2
	local integer shopT3_2
	local integer shopT4_2
	local integer shopT5_2
	local integer shopT6_2
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
	local integer shopT7_2
	local integer shopT8_2
	local integer shopT9_2
	local integer shopOb_2
	local integer scoreOb_2
	local integer guideOb_2
	local integer statsOb_2
	local integer shopPleft_2
	local integer shopPright_2
<<<<<<< HEAD
	local integer shopPleftBot_2
	local integer shopPleftBot2_2
=======
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
	local integer shop1_2
	local integer buttonLayerShop01_2
	local integer shop2_2
	local integer buttonLayerShop02_2
	local integer shop3_2
	local integer buttonLayerShop03_2
	local integer shop4_2
	local integer buttonLayerShop04_2
	local integer shop5_2
	local integer buttonLayerShop05_2
	local integer shop6_2
	local integer buttonLayerShop06_2
	local integer shop7_2
	local integer buttonLayerShop07_2
	local integer shop8_2
	local integer buttonLayerShop08_2
	local integer shop9_2
	local integer buttonLayerShop09_2
	local integer shop10_2
	local integer buttonLayerShop10_2
	local integer shop11_2
	local integer buttonLayerShop11_2
	local integer shop12_2
	local integer buttonLayerShop12_2
	local integer shop13_2
	local integer buttonLayerShop13_2
	local integer shop14_2
	local integer buttonLayerShop14_2
	local integer shop15_2
	local integer buttonLayerShop15_2
	local integer shop16_2
	local integer buttonLayerShop16_2
	local integer shop17_2
	local integer buttonLayerShop17_2
	local integer shop18_2
	local integer buttonLayerShop18_2
	local integer shop19_2
	local integer buttonLayerShop19_2
	local integer shop20_2
	local integer buttonLayerShop20_2
	local integer shop21_2
	local integer buttonLayerShop21_2
	local integer shop22_2
	local integer buttonLayerShop22_2
	local integer shop23_2
	local integer buttonLayerShop23_2
	local integer shop24_2
<<<<<<< HEAD
	local integer shop25_2
	local integer shop26_2
	local integer shop27_2
	local integer shop28_2
	local integer shop29_2
	local integer shop30_2
	local integer shop31_2
	local integer shop32_2
	local integer buttonLayerShop32_2
	local integer clVar_2
=======
	local integer buttonLayerShop24_2
	local integer clVar_3
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
	local real temp_GameStart_tvec_x
	local real temp_GameStart_tvec_y
	local integer temp
	call trigger_addAction(receiver, ref_function_bridge_setCallLimit)
	set GameStart_testt = receiver
	set temp_GameStart_tvec_x = 0.
	set temp_GameStart_tvec_y = 0.
	call CreateGroup()
	call new_HashList()
	call new_LinkedList()
	set GameStart_shopWindow = new_Window()
	set GameStart_scoreWindow = new_Window()
	set GameStart_guideWindow = new_Window()
	set GameStart_statsWindow = new_Window()
	set i = 0
	loop
		exitwhen i > 11
		if GetPlayerSlotState(Player(i)) == PLAYER_SLOT_STATE_PLAYING and GetPlayerController(Player(i)) == MAP_CONTROL_USER then
<<<<<<< HEAD
			call dispatch_LinkedList_add(Setup_allPlayers, playerToIndex(Player(i)), "\n   GameStart, line 82" + wurstStackTrace)
=======
			call dispatch_LinkedList_add(Setup_allPlayers, playerToIndex(Player(i)), "\n   GameStart, line 81" + wurstStackTrace)
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
			call SetPlayerAbilityAvailable(Player(i), 1514238056, false)
			call SetPlayerAbilityAvailable(Player(i), 1514234228, false)
			call SetPlayerAbilityAvailable(Player(i), 1514238836, false)
			call SetPlayerAbilityAvailable(Player(i), 1514238819, false)
		endif
		set i = i + 1
	endloop
<<<<<<< HEAD
	call timer_startPeriodic(getTimer("\n   GameStart, line 88" + wurstStackTrace), 0.5, ref_function_bridge_Dot_loopList)
	call timer_startPeriodic(getTimer("\n   GameStart, line 90" + wurstStackTrace), 0.03, ref_function_bridge_callKnockback)
	set blub = CreateTrigger()
	call trigger_addAction(blub, ref_function_bridge_camTest)
	set wurst__iterator0 = dispatch_LinkedList_iterator(Setup_allPlayers, "\n   GameStart, line 98" + wurstStackTrace)
	loop
		exitwhen  not dispatch_LLIterator_hasNext(wurst__iterator0, "\n   GameStart, line 98" + wurstStackTrace)
		set p_2 = playerFromIndex(dispatch_LLIterator_next(wurst__iterator0, "\n   GameStart, line 98" + wurstStackTrace), "\n   GameStart, line 98" + wurstStackTrace)
		call new_Player(p_2, "\n   GameStart, line 99" + wurstStackTrace)
	endloop
	call dispatch_LLIterator_close(wurst__iterator0, "\n   GameStart, line 98" + wurstStackTrace)
=======
	call timer_startPeriodic(getTimer("\n   GameStart, line 87" + wurstStackTrace), 0.5, ref_function_bridge_Dot_loopList)
	call timer_startPeriodic(getTimer("\n   GameStart, line 89" + wurstStackTrace), 0.03, ref_function_bridge_callKnockback)
	set blub = CreateTrigger()
	call trigger_addAction(blub, ref_function_bridge_camTest)
	call new_ControlPoint(2000., 0., 0, "\n   GameStart, line 95" + wurstStackTrace)
	set clVar = alloc_Closure_22()
	call doAfter(2., clVar, "\n   GameStart, line 96" + wurstStackTrace)
	set wurst__iterator0 = dispatch_LinkedList_iterator(Setup_allPlayers, "\n   GameStart, line 100" + wurstStackTrace)
	loop
		exitwhen  not dispatch_LLIterator_hasNext(wurst__iterator0, "\n   GameStart, line 100" + wurstStackTrace)
		set p_2 = playerFromIndex(dispatch_LLIterator_next(wurst__iterator0, "\n   GameStart, line 100" + wurstStackTrace), "\n   GameStart, line 100" + wurstStackTrace)
		call new_Player(p_2, "\n   GameStart, line 101" + wurstStackTrace)
	endloop
	call dispatch_LLIterator_close(wurst__iterator0, "\n   GameStart, line 100" + wurstStackTrace)
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
	call trigger_registerPlayerChatEvent(GameStart_testt, Player(0), "", false)
	set receiver_2 = CreateTrigger()
	call trigger_addAction(receiver_2, ref_function_onEsc)
	call TriggerRegisterPlayerEventEndCinematic(receiver_2, Player(0))
<<<<<<< HEAD
	call Preload_startPreload("\n   GameStart, line 110" + wurstStackTrace)
=======
	call Preload_startPreload("\n   GameStart, line 112" + wurstStackTrace)
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
	set Preload_maxProgress = 10.015
	set Preload_progress = 0.
	set Preload_preloadStatus = 1
	set Preload_preloadEnd = new_SimpleEvent()
	set Preload_showProgress = true
	set Preload_loopCounter = 0
	call ClassInit_helper_3()
	set temp = Preload_preloadEnd
<<<<<<< HEAD
	set clVar = alloc_Closure_21()
	call dispatch_Event_addAction(temp, clVar, "\n   GameStart, line 183" + wurstStackTrace)
=======
	set clVar_2 = alloc_Closure_23()
	call dispatch_Event_addAction(temp, clVar_2, "\n   GameStart, line 185" + wurstStackTrace)
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
	set shopB_2 = 0
	set scoreB_2 = 0
	set guideB_2 = 0
	set statsB_2 = 0
<<<<<<< HEAD
	set shopT1_2 = 0
	set shopT2_2 = 0
	set shopT3_2 = 0
=======
	set shopT2_2 = 0
	set shopT3_2 = 0
	set shopT4_2 = 0
	set shopT5_2 = 0
	set shopT6_2 = 0
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
	set shopT7_2 = 0
	set shopT8_2 = 0
	set shopT9_2 = 0
	set shopOb_2 = 0
	set scoreOb_2 = 0
	set guideOb_2 = 0
	set statsOb_2 = 0
	set shopPleft_2 = 0
	set shopPright_2 = 0
<<<<<<< HEAD
	set shopPleftBot_2 = 0
	set shopPleftBot2_2 = 0
=======
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
	set shop1_2 = 0
	set buttonLayerShop01_2 = 0
	set shop2_2 = 0
	set buttonLayerShop02_2 = 0
	set shop3_2 = 0
	set buttonLayerShop03_2 = 0
	set shop4_2 = 0
	set buttonLayerShop04_2 = 0
	set shop5_2 = 0
	set buttonLayerShop05_2 = 0
	set shop6_2 = 0
	set buttonLayerShop06_2 = 0
	set shop7_2 = 0
	set buttonLayerShop07_2 = 0
	set shop8_2 = 0
	set buttonLayerShop08_2 = 0
	set shop9_2 = 0
	set buttonLayerShop09_2 = 0
	set shop10_2 = 0
	set buttonLayerShop10_2 = 0
	set shop11_2 = 0
	set buttonLayerShop11_2 = 0
	set shop12_2 = 0
	set buttonLayerShop12_2 = 0
	set shop13_2 = 0
	set buttonLayerShop13_2 = 0
	set shop14_2 = 0
	set buttonLayerShop14_2 = 0
	set shop15_2 = 0
	set buttonLayerShop15_2 = 0
	set shop16_2 = 0
	set buttonLayerShop16_2 = 0
	set shop17_2 = 0
	set buttonLayerShop17_2 = 0
	set shop18_2 = 0
	set buttonLayerShop18_2 = 0
	set shop19_2 = 0
	set buttonLayerShop19_2 = 0
	set shop20_2 = 0
	set buttonLayerShop20_2 = 0
	set shop21_2 = 0
	set buttonLayerShop21_2 = 0
	set shop22_2 = 0
	set buttonLayerShop22_2 = 0
	set shop23_2 = 0
	set buttonLayerShop23_2 = 0
	set shop24_2 = 0
<<<<<<< HEAD
	set shop25_2 = 0
	set shop26_2 = 0
	set shop27_2 = 0
	set shop28_2 = 0
	set shop29_2 = 0
	set shop30_2 = 0
	set shop31_2 = 0
	set shop32_2 = 0
	set buttonLayerShop32_2 = 0
	set clVar_2 = alloc_Closure_20()
	set shopT1[clVar_2] = shopT1_2
	set shopT3[clVar_2] = shopT3_2
	set shopT2[clVar_2] = shopT2_2
	set shopT7[clVar_2] = shopT7_2
	set shopT8[clVar_2] = shopT8_2
	set shopT9[clVar_2] = shopT9_2
	set buttonLayerShop01[clVar_2] = buttonLayerShop01_2
	set buttonLayerShop02[clVar_2] = buttonLayerShop02_2
	set buttonLayerShop03[clVar_2] = buttonLayerShop03_2
	set buttonLayerShop04[clVar_2] = buttonLayerShop04_2
	set buttonLayerShop05[clVar_2] = buttonLayerShop05_2
	set buttonLayerShop06[clVar_2] = buttonLayerShop06_2
	set buttonLayerShop07[clVar_2] = buttonLayerShop07_2
	set buttonLayerShop08[clVar_2] = buttonLayerShop08_2
	set buttonLayerShop09[clVar_2] = buttonLayerShop09_2
	set buttonLayerShop10[clVar_2] = buttonLayerShop10_2
	set buttonLayerShop11[clVar_2] = buttonLayerShop11_2
	set buttonLayerShop12[clVar_2] = buttonLayerShop12_2
	set buttonLayerShop13[clVar_2] = buttonLayerShop13_2
	set buttonLayerShop14[clVar_2] = buttonLayerShop14_2
	set buttonLayerShop15[clVar_2] = buttonLayerShop15_2
	set buttonLayerShop16[clVar_2] = buttonLayerShop16_2
	set buttonLayerShop17[clVar_2] = buttonLayerShop17_2
	set buttonLayerShop18[clVar_2] = buttonLayerShop18_2
	set buttonLayerShop19[clVar_2] = buttonLayerShop19_2
	set buttonLayerShop20[clVar_2] = buttonLayerShop20_2
	set buttonLayerShop21[clVar_2] = buttonLayerShop21_2
	set buttonLayerShop22[clVar_2] = buttonLayerShop22_2
	set buttonLayerShop23[clVar_2] = buttonLayerShop23_2
	set buttonLayerShop32[clVar_2] = buttonLayerShop32_2
	set shopB[clVar_2] = shopB_2
	set shopOb[clVar_2] = shopOb_2
	set scoreB[clVar_2] = scoreB_2
	set scoreOb[clVar_2] = scoreOb_2
	set guideB[clVar_2] = guideB_2
	set guideOb[clVar_2] = guideOb_2
	set statsB[clVar_2] = statsB_2
	set statsOb[clVar_2] = statsOb_2
	set shopPright[clVar_2] = shopPright_2
	set shopPleft[clVar_2] = shopPleft_2
	set shopPleftBot[clVar_2] = shopPleftBot_2
	set shopPleftBot2[clVar_2] = shopPleftBot2_2
	set shop1[clVar_2] = shop1_2
	set shop2[clVar_2] = shop2_2
	set shop3[clVar_2] = shop3_2
	set shop4[clVar_2] = shop4_2
	set shop5[clVar_2] = shop5_2
	set shop6[clVar_2] = shop6_2
	set shop7[clVar_2] = shop7_2
	set shop8[clVar_2] = shop8_2
	set shop9[clVar_2] = shop9_2
	set shop10[clVar_2] = shop10_2
	set shop11[clVar_2] = shop11_2
	set shop12[clVar_2] = shop12_2
	set shop13[clVar_2] = shop13_2
	set shop14[clVar_2] = shop14_2
	set shop15[clVar_2] = shop15_2
	set shop16[clVar_2] = shop16_2
	set shop17[clVar_2] = shop17_2
	set shop18[clVar_2] = shop18_2
	set shop19[clVar_2] = shop19_2
	set shop20[clVar_2] = shop20_2
	set shop21[clVar_2] = shop21_2
	set shop22[clVar_2] = shop22_2
	set shop23[clVar_2] = shop23_2
	set shop24[clVar_2] = shop24_2
	set shop25[clVar_2] = shop25_2
	set shop26[clVar_2] = shop26_2
	set shop27[clVar_2] = shop27_2
	set shop28[clVar_2] = shop28_2
	set shop29[clVar_2] = shop29_2
	set shop30[clVar_2] = shop30_2
	set shop31[clVar_2] = shop31_2
	set shop32[clVar_2] = shop32_2
	call onPreload("Menu", clVar_2, "\n   GameStart, line 312" + wurstStackTrace)
=======
	set buttonLayerShop24_2 = 0
	set clVar_3 = alloc_Closure_24()
	set shopT2[clVar_3] = shopT2_2
	set shopT3[clVar_3] = shopT3_2
	set shopT4[clVar_3] = shopT4_2
	set shopT5[clVar_3] = shopT5_2
	set shopT6[clVar_3] = shopT6_2
	set shopT7[clVar_3] = shopT7_2
	set shopT8[clVar_3] = shopT8_2
	set shopT9[clVar_3] = shopT9_2
	set buttonLayerShop01[clVar_3] = buttonLayerShop01_2
	set buttonLayerShop02[clVar_3] = buttonLayerShop02_2
	set buttonLayerShop03[clVar_3] = buttonLayerShop03_2
	set buttonLayerShop04[clVar_3] = buttonLayerShop04_2
	set buttonLayerShop05[clVar_3] = buttonLayerShop05_2
	set buttonLayerShop06[clVar_3] = buttonLayerShop06_2
	set buttonLayerShop07[clVar_3] = buttonLayerShop07_2
	set buttonLayerShop08[clVar_3] = buttonLayerShop08_2
	set buttonLayerShop09[clVar_3] = buttonLayerShop09_2
	set buttonLayerShop10[clVar_3] = buttonLayerShop10_2
	set buttonLayerShop11[clVar_3] = buttonLayerShop11_2
	set buttonLayerShop12[clVar_3] = buttonLayerShop12_2
	set buttonLayerShop13[clVar_3] = buttonLayerShop13_2
	set buttonLayerShop14[clVar_3] = buttonLayerShop14_2
	set buttonLayerShop15[clVar_3] = buttonLayerShop15_2
	set buttonLayerShop16[clVar_3] = buttonLayerShop16_2
	set buttonLayerShop17[clVar_3] = buttonLayerShop17_2
	set buttonLayerShop18[clVar_3] = buttonLayerShop18_2
	set buttonLayerShop19[clVar_3] = buttonLayerShop19_2
	set buttonLayerShop20[clVar_3] = buttonLayerShop20_2
	set buttonLayerShop21[clVar_3] = buttonLayerShop21_2
	set buttonLayerShop22[clVar_3] = buttonLayerShop22_2
	set buttonLayerShop23[clVar_3] = buttonLayerShop23_2
	set buttonLayerShop24[clVar_3] = buttonLayerShop24_2
	set shopB[clVar_3] = shopB_2
	set shopOb[clVar_3] = shopOb_2
	set scoreB[clVar_3] = scoreB_2
	set scoreOb[clVar_3] = scoreOb_2
	set guideB[clVar_3] = guideB_2
	set guideOb[clVar_3] = guideOb_2
	set statsB[clVar_3] = statsB_2
	set statsOb[clVar_3] = statsOb_2
	set shopPright[clVar_3] = shopPright_2
	set shopPleft[clVar_3] = shopPleft_2
	set shop1[clVar_3] = shop1_2
	set shop2[clVar_3] = shop2_2
	set shop3[clVar_3] = shop3_2
	set shop4[clVar_3] = shop4_2
	set shop5[clVar_3] = shop5_2
	set shop6[clVar_3] = shop6_2
	set shop7[clVar_3] = shop7_2
	set shop8[clVar_3] = shop8_2
	set shop9[clVar_3] = shop9_2
	set shop10[clVar_3] = shop10_2
	set shop11[clVar_3] = shop11_2
	set shop12[clVar_3] = shop12_2
	set shop13[clVar_3] = shop13_2
	set shop14[clVar_3] = shop14_2
	set shop15[clVar_3] = shop15_2
	set shop16[clVar_3] = shop16_2
	set shop17[clVar_3] = shop17_2
	set shop18[clVar_3] = shop18_2
	set shop19[clVar_3] = shop19_2
	set shop20[clVar_3] = shop20_2
	set shop21[clVar_3] = shop21_2
	set shop22[clVar_3] = shop22_2
	set shop23[clVar_3] = shop23_2
	set shop24[clVar_3] = shop24_2
	call onPreload("Menu", clVar_3, "\n   GameStart, line 308" + wurstStackTrace)
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
	set receiver = null
	set blub = null
	set p_2 = null
	set receiver_2 = null
endfunction

function init_GameTimer takes nothing returns nothing
	set GameTimer_gameTimer = CreateTimer()
	call timer_start(GameTimer_gameTimer, 100000., null)
	call timer_startPeriodic(CreateTimer(), Basics_ANIMATION_PERIOD, ref_function_closure_impl)
endfunction

function init_HandleCounter takes string wurstStackTrace returns nothing
	set HandleCounter_TITLE = "HandleCounter"
	set HandleCounter_board = null
	call getTimer("\n   HandleCounter, line 4" + wurstStackTrace)
	set HandleCounter_HANDLE = Player(0)
	set HandleCounter_HANDLE_TEXT = "current handlecount"
	set HandleCounter_MAX_HANDLE = Player(1)
	set HandleCounter_MAX_HANDLE_TEXT = "max handlecount"
	set HandleCounter_TIME_TEXT = "current time"
	set HandleCounter_TIME = Player(2)
	set HandleCounter_updatePeriod = 0.25
	set HandleCounter_stackEndTreshold = 15
	set HandleCounter_clock = getTimer("\n   HandleCounter, line 18" + wurstStackTrace)
	set HandleCounter_seconds = 0
	set HandleCounter_maxHandleCount = 0
	call TimerStart(HandleCounter_clock, 1., true, ref_function_updateTime)
endfunction

function init_HashList takes nothing returns nothing
	set HashList_ht = InitHashtable()
endfunction

function init_HashMap takes nothing returns nothing
	set HashMap_ht = InitHashtable()
endfunction

function init_Helper takes nothing returns nothing
	local integer i = 0
	loop
		exitwhen i > 31
		call R2I(Pow(2., I2R(i)))
		set i = i + 1
	endloop
endfunction

function init_HeroBar takes string wurstStackTrace returns nothing
	local timer receiver
	local timer receiver_2
	set HeroBar_hpColorDead = "|c00003300"
	set HeroBar_shieldColor = "|c00999999"
	set HeroBar_mpColor = "|c000000AA"
	set HeroBar_mpColorDead = "|c00000022"
	set HeroBar_endColor = "|r"
	set HeroBar_marker = "|c00000000|||r"
	set HeroBar_bar = "|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||"
	set HeroBar_realBarCount = 125
	set HeroBar_fakeBarCount = 250
	set HeroBar_seperateAt = 250
	set receiver = getTimer("\n   HeroBar, line 29" + wurstStackTrace)
	call timer_startPeriodic(receiver, 0.01, ref_function_bridge_Bar_updatePos)
	set receiver_2 = getTimer("\n   HeroBar, line 30" + wurstStackTrace)
	call timer_startPeriodic(receiver_2, 0.25, ref_function_bridge_Bar_updateVision)
	set LinkedListModule_first_2 = 0
<<<<<<< HEAD
=======
	set LinkedListModule_last_2 = 0
	set LinkedListModule_size_2 = 0
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
	set receiver = null
	set receiver_2 = null
endfunction

function init_HeroClass takes string wurstStackTrace returns nothing
	local trigger receiver = CreateTrigger()
	local timer receiver_2
	local trigger receiver_3
	call trigger_addAction(receiver, ref_function_bridge_Hero_handleCasts)
<<<<<<< HEAD
=======
	set Hero_castDetect = receiver
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
	set Hero_abiIdToSpell = new_HashMap()
	call getTimer("\n   HeroClass, line 20" + wurstStackTrace)
	set Hero_toMove = new_LinkedList()
	set receiver_2 = getTimer("\n   HeroClass, line 22" + wurstStackTrace)
<<<<<<< HEAD
	call timer_startPeriodic(receiver_2, 0.01, ref_function_bridge_closure_impl_8)
	set receiver_3 = CreateTrigger()
	call trigger_addAction(receiver_3, ref_function_bridge_GetOrders_callOnOrder)
	set GetOrders_orderDetect = receiver_3
=======
	call timer_startPeriodic(receiver_2, 0.01, ref_function_bridge_closure_impl_10)
	set receiver_3 = CreateTrigger()
	call trigger_addAction(receiver_3, ref_function_bridge_GetOrders_callOnOrder)
	set GetOrders_orderDetect = receiver_3
	set LinkedListModule_first_3 = 0
	set LinkedListModule_last_3 = 0
	set LinkedListModule_size_3 = 0
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
	set receiver = null
	set receiver_2 = null
	set receiver_3 = null
endfunction

<<<<<<< HEAD
=======
function init_HeroTypes takes nothing returns nothing
	set HeroTypes_heros = new_HashMap()
	set HeroType_heroAbis = ""
endfunction

>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
function init_Icon takes nothing returns nothing
	set Icon_animationSpeedHover = 5.
	set Icon_animationSpeedHit = 8.
	set Icon_dummyIcon = 1231253358
endfunction

function init_IconType takes nothing returns nothing
	set IconType_iconMap1 = new_HashMap()
	set IconType_iconMap2 = new_HashMap()
	set IconType_restColor = 0.3
endfunction

function init_InstanceBoard takes string wurstStackTrace returns nothing
	set InstanceBoard_classes = 0
	call InitHashtable()
	set InstanceBoard_mb = null
	call timer_start(getTimer("\n   InstanceBoard, line 10" + wurstStackTrace), 0.0, ref_function_createMultiboard)
endfunction

function ItemType_classInit_2 takes nothing returns boolean
	return true
endfunction

function init_ItemClass takes nothing returns nothing
	call new_HashMap()
	call ItemType_classInit_2()
endfunction

function init_Lightning takes nothing returns nothing
<<<<<<< HEAD
endfunction

function rect_getMaxX takes rect this_57 returns real
	return GetRectMaxX(this_57)
endfunction

function rect_getMaxY takes rect this_57 returns real
	return GetRectMaxY(this_57)
endfunction

function rect_getMinX takes rect this_57 returns real
	return GetRectMinX(this_57)
endfunction

function rect_getMinY takes rect this_57 returns real
	return GetRectMinY(this_57)
endfunction

function region_addRect takes region this_57, rect r returns nothing
	call RegionAddRect(this_57, r)
=======
	set Lightning_FORKED_LIGHTNING = "FORK"
endfunction

function rect_getMaxX takes rect this_58 returns real
	return GetRectMaxX(this_58)
endfunction

function rect_getMaxY takes rect this_58 returns real
	return GetRectMaxY(this_58)
endfunction

function rect_getMinX takes rect this_58 returns real
	return GetRectMinX(this_58)
endfunction

function rect_getMinY takes rect this_58 returns real
	return GetRectMinY(this_58)
endfunction

function region_addRect takes region this_58, rect r returns nothing
	call RegionAddRect(this_58, r)
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
endfunction

function init_MapBounds takes nothing returns nothing
	local region receiver
	local region receiver_2
	local real temp_MapBounds_playableMin_x
	local real temp_MapBounds_playableMin_y
	local real temp_MapBounds_playableMax_x
	local real temp_MapBounds_playableMax_y
	local real temp_MapBounds_boundMin_x
	local real temp_MapBounds_boundMin_y
	local real temp_MapBounds_boundMax_x
	local real temp_MapBounds_boundMax_y
	local real temp_MapBounds_playableCenter_x
	local real temp_MapBounds_playableCenter_y
	local real temp_MapBounds_boundCenter_x
	local real temp_MapBounds_boundCenter_y
	set MapBounds_playableMapRect = GetPlayableMapRect()
	set receiver = CreateRegion()
	call region_addRect(receiver, MapBounds_playableMapRect)
	set MapBounds_boundRect = GetWorldBounds()
	set receiver_2 = CreateRegion()
	call region_addRect(receiver_2, MapBounds_boundRect)
	set temp_MapBounds_playableMin_x = rect_getMinX(MapBounds_playableMapRect)
	set temp_MapBounds_playableMin_y = rect_getMinY(MapBounds_playableMapRect)
	set MapBounds_playableMin_x = temp_MapBounds_playableMin_x
	set MapBounds_playableMin_y = temp_MapBounds_playableMin_y
	set temp_MapBounds_playableMax_x = rect_getMaxX(MapBounds_playableMapRect)
	set temp_MapBounds_playableMax_y = rect_getMaxY(MapBounds_playableMapRect)
	set MapBounds_playableMax_x = temp_MapBounds_playableMax_x
	set MapBounds_playableMax_y = temp_MapBounds_playableMax_y
	set temp_MapBounds_boundMin_x = rect_getMinX(MapBounds_boundRect)
	set temp_MapBounds_boundMin_y = rect_getMinY(MapBounds_boundRect)
	set MapBounds_boundMin_x = temp_MapBounds_boundMin_x
	set MapBounds_boundMin_y = temp_MapBounds_boundMin_y
	set temp_MapBounds_boundMax_x = rect_getMaxX(MapBounds_boundRect)
	set temp_MapBounds_boundMax_y = rect_getMaxY(MapBounds_boundRect)
	set MapBounds_boundMax_x = temp_MapBounds_boundMax_x
	set MapBounds_boundMax_y = temp_MapBounds_boundMax_y
	set temp_MapBounds_playableCenter_x = vec2_op_mult(vec2_op_plus(MapBounds_playableMin_x, MapBounds_playableMin_y, MapBounds_playableMax_x, MapBounds_playableMax_y), vec2_op_plus_return_y, 0.5)
	set temp_MapBounds_playableCenter_y = vec2_op_mult_return_y
	set temp_MapBounds_boundCenter_x = vec2_op_mult(vec2_op_plus(MapBounds_boundMin_x, MapBounds_boundMin_y, MapBounds_boundMax_x, MapBounds_boundMax_y), vec2_op_plus_return_y, 0.5)
	set temp_MapBounds_boundCenter_y = vec2_op_mult_return_y
	set receiver = null
	set receiver_2 = null
endfunction

function init_Maths takes nothing returns nothing
	set Maths_DEGTORAD = 0.017453293
	set Maths_RADTODEG = 57.295779513
endfunction

function Widget_classInit takes nothing returns nothing
	local integer i = 1
	loop
		exitwhen i > 8
		set Widget_backgroundTexture[i] = "Hintergrund" + int_toString(i) + ".blp"
		set i = i + 1
	endloop
endfunction

function ClassInit_helper_4 takes nothing returns boolean
	call Widget_classInit()
	return true
endfunction

<<<<<<< HEAD
function alloc_Closure_22 takes nothing returns integer
	local integer this_57
	if PreloadAction_firstFree == 0 then
		set PreloadAction_maxIndex = PreloadAction_maxIndex + 1
		set this_57 = PreloadAction_maxIndex
	else
		set PreloadAction_firstFree = PreloadAction_firstFree - 1
		set this_57 = PreloadAction_nextFree[PreloadAction_firstFree]
	endif
	set PreloadAction_typeId[this_57] = 806
	return this_57
endfunction

function alloc_Stack takes nothing returns integer
	local integer this_57
	if Stack_firstFree == 0 then
		set Stack_maxIndex = Stack_maxIndex + 1
		set this_57 = Stack_maxIndex
	else
		set Stack_firstFree = Stack_firstFree - 1
		set this_57 = Stack_nextFree[Stack_firstFree]
	endif
	set Stack_typeId[this_57] = 798
	return this_57
endfunction

function construct_Stack takes integer this_57 returns nothing
	set Stack_size[this_57] = 0
	set Stack_dummy[this_57] = new_SEntry(0, 0)
	set Stack_top[this_57] = Stack_dummy[this_57]
endfunction

function new_Stack takes nothing returns integer
	local integer this_57 = alloc_Stack()
	call construct_Stack(this_57)
	return this_57
=======
function alloc_Closure_25 takes nothing returns integer
	local integer this_58
	if PreloadAction_firstFree == 0 then
		set PreloadAction_maxIndex = PreloadAction_maxIndex + 1
		set this_58 = PreloadAction_maxIndex
	else
		set PreloadAction_firstFree = PreloadAction_firstFree - 1
		set this_58 = PreloadAction_nextFree[PreloadAction_firstFree]
	endif
	set PreloadAction_typeId[this_58] = 805
	return this_58
endfunction

function alloc_Stack takes nothing returns integer
	local integer this_58
	if Stack_firstFree == 0 then
		set Stack_maxIndex = Stack_maxIndex + 1
		set this_58 = Stack_maxIndex
	else
		set Stack_firstFree = Stack_firstFree - 1
		set this_58 = Stack_nextFree[Stack_firstFree]
	endif
	set Stack_typeId[this_58] = 797
	return this_58
endfunction

function construct_Stack takes integer this_58 returns nothing
	set Stack_size[this_58] = 0
	set Stack_dummy[this_58] = new_SEntry(0, 0)
	set Stack_top[this_58] = Stack_dummy[this_58]
endfunction

function new_Stack takes nothing returns integer
	local integer this_58 = alloc_Stack()
	call construct_Stack(this_58)
	return this_58
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
endfunction

function init_Menu takes string wurstStackTrace returns nothing
	local integer i
	local integer w_2
	local integer clVar
	call ClassInit_helper_4()
	set i = 0
	loop
		exitwhen i > 11
		set WindowManager_currentWindow[i] = new_Stack()
		set i = i + 1
	endloop
	set w_2 = new_ElementLoop(1, 1, Setup_menuWidth, Setup_menuHeight)
<<<<<<< HEAD
	set clVar = alloc_Closure_22()
=======
	set clVar = alloc_Closure_25()
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
	set w[clVar] = w_2
	call onPreload("Trackables", clVar, "\n   Menu, line 199" + wurstStackTrace)
endfunction

function init_Model takes nothing returns nothing
endfunction

function alloc_ArrayQueue takes nothing returns integer
<<<<<<< HEAD
	local integer this_57
	if ArrayQueue_firstFree == 0 then
		set ArrayQueue_maxIndex = ArrayQueue_maxIndex + 1
		set this_57 = ArrayQueue_maxIndex
	else
		set ArrayQueue_firstFree = ArrayQueue_firstFree - 1
		set this_57 = ArrayQueue_nextFree[ArrayQueue_firstFree]
	endif
	set ArrayQueue_typeId[this_57] = 23
	return this_57
endfunction

function construct_ArrayQueue takes integer this_57 returns nothing
	set ArrayQueue_fp[this_57] = 0
	set ArrayQueue_rp[this_57] = 0
	set ArrayQueue_size[this_57] = 0
endfunction

function new_ArrayQueue takes nothing returns integer
	local integer this_57 = alloc_ArrayQueue()
	call construct_ArrayQueue(this_57)
	return this_57
=======
	local integer this_58
	if ArrayQueue_firstFree == 0 then
		set ArrayQueue_maxIndex = ArrayQueue_maxIndex + 1
		set this_58 = ArrayQueue_maxIndex
	else
		set ArrayQueue_firstFree = ArrayQueue_firstFree - 1
		set this_58 = ArrayQueue_nextFree[ArrayQueue_firstFree]
	endif
	set ArrayQueue_typeId[this_58] = 22
	return this_58
endfunction

function construct_ArrayQueue takes integer this_58 returns nothing
	set ArrayQueue_fp[this_58] = 0
	set ArrayQueue_rp[this_58] = 0
	set ArrayQueue_size[this_58] = 0
endfunction

function new_ArrayQueue takes nothing returns integer
	local integer this_58 = alloc_ArrayQueue()
	call construct_ArrayQueue(this_58)
	return this_58
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
endfunction

function init_NewDummyRecycler takes string wurstStackTrace returns nothing
	local integer i
	local integer temp
	local integer j
	local integer temp_2
	set NewDummyRecycler_DIFFERENT_ANGLES = 8
	set NewDummyRecycler_ANGLE_DEGREE = 360 * 1. / NewDummyRecycler_DIFFERENT_ANGLES
	set NewDummyRecycler_SAVED_UNITS_PER_ANGLE = 6
	set DelayNode_t = CreateTimer()
	set DelayNode_first = 0
	set DelayNode_last = 0
	set i = 0
	set temp = NewDummyRecycler_DIFFERENT_ANGLES - 1
	loop
		exitwhen i > temp
		set DummyRecycler_angleQueues[i] = new_ArrayQueue()
		set j = 0
		set temp_2 = NewDummyRecycler_SAVED_UNITS_PER_ANGLE - 1
		loop
			exitwhen j > temp_2
			call dispatch_ArrayQueue_enqueue(DummyRecycler_angleQueues[i], createDummy(MapBounds_boundMax_x, MapBounds_boundMax_y, Basics_DUMMY_PLAYER, real_asAngleDegrees(i * NewDummyRecycler_ANGLE_DEGREE)), "\n   NewDummyRecycler, line 131" + wurstStackTrace)
			set j = j + 1
		endloop
		set i = i + 1
	endloop
endfunction

function initHelper takes nothing returns boolean
	local integer i = 0
	loop
		exitwhen i > 2
		set ObjectIdGenerator_id[i] = 48
		set i = i + 1
	endloop
	return true
endfunction

function init_ObjectIdGenerator takes nothing returns nothing
<<<<<<< HEAD
=======
	set ObjectIdGenerator_heroPrefix = 87
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
	set ObjectIdGenerator_nonheroPrefix = 37
	set ObjectIdGenerator_helperActivator = initHelper()
endfunction

function init_ObjectIds takes nothing returns nothing
	set ObjectIds_charMap = ".................................!.#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[.]^_`abcdefghijklmnopqrstuvwxyz{|}~................................................................................................................................."
endfunction

function Order_classname takes nothing returns string
	return "Order"
endfunction

function init_OrderHandling takes nothing returns nothing
	set OrderHandling_smartId = 851971
	set OrderHandling_stopId = 852529
	set OrderHandling_attackId = 852662
	set OrderHandling_scoreboardId = 852185
	set OrderHandling_exitDetectId = 852131
	set OrderHandling_stopSpell = 1937010544
	set OrderHandling_attackSpell = 1635021931
	set ShowInstances_classId_2 = registerNewInstanceEntry(Order_classname())
	set MoveOrder_moveOrderId = 851986
	set AttackOrder_atkOrderId = 852541
endfunction

function init_Pane takes nothing returns nothing
	local integer temp_Pane_tileDimensions_x
	local integer temp_Pane_tileDimensions_y
	local real temp_Pane_sizeFix_x
	local real temp_Pane_sizeFix_y
	local real temp_Pane_posFixBot_x
	local real temp_Pane_posFixBot_y
	local real temp_Pane_posFixTop_x
	local real temp_Pane_posFixTop_y
	local real temp_Pane_posFixRight_x
	local real temp_Pane_posFixRight_y
	local real temp_Pane_posFixLeft_x
	local real temp_Pane_posFixLeft_y
	set Pane_tileSize = 2
	set temp_Pane_tileDimensions_x = Pane_tileSize
	set temp_Pane_tileDimensions_y = Pane_tileSize
	set Pane_tileDimensions_x = temp_Pane_tileDimensions_x
	set Pane_tileDimensions_y = temp_Pane_tileDimensions_y
	set Pane_horizontalSide = "Seite1.blp"
	set Pane_verticalSide = "Seite2.blp"
	set Pane_leftBotCorner = "Steinecke1.blp"
	set Pane_rightBotCorner = "Steinecke4.blp"
	set Pane_rightTopCorner = "Steinecke3.blp"
	set Pane_leftTopCorner = "Steinecke2.blp"
	set temp_Pane_sizeFix_x = 2.
	set temp_Pane_sizeFix_y = 2.
	set Pane_sizeFix_x = temp_Pane_sizeFix_x
	set Pane_sizeFix_y = temp_Pane_sizeFix_y
	set temp_Pane_posFixBot_x =  - (0.5 / (4 * 1. / Pane_tileSize))
	set temp_Pane_posFixBot_y =  - (26. / (4 * 1. / Pane_tileSize))
	set Pane_posFixBot_x = temp_Pane_posFixBot_x
	set Pane_posFixBot_y = temp_Pane_posFixBot_y
	set temp_Pane_posFixTop_x =  - (0.5 / (4 * 1. / Pane_tileSize))
	set temp_Pane_posFixTop_y = 40. / (4 * 1. / Pane_tileSize)
	set Pane_posFixTop_x = temp_Pane_posFixTop_x
	set Pane_posFixTop_y = temp_Pane_posFixTop_y
	set temp_Pane_posFixRight_x = 32. / (4 * 1. / Pane_tileSize)
	set temp_Pane_posFixRight_y = 0. / (4 * 1. / Pane_tileSize)
	set Pane_posFixRight_x = temp_Pane_posFixRight_x
	set Pane_posFixRight_y = temp_Pane_posFixRight_y
	set temp_Pane_posFixLeft_x =  - (32. / (4 * 1. / Pane_tileSize))
	set temp_Pane_posFixLeft_y = 0.
	set Pane_posFixLeft_x = temp_Pane_posFixLeft_x
	set Pane_posFixLeft_y = temp_Pane_posFixLeft_y
endfunction

function init_Player takes nothing returns nothing
	local integer i = 0
	local integer temp = bj_MAX_PLAYER_SLOTS - 1
	loop
		exitwhen i > temp
		call Player(i)
		set i = i + 1
	endloop
endfunction

function init_PlayerClass takes nothing returns nothing
	set PlayerClass_playerData = new_HashMap()
	call SetTerrainFogEx(0, 40000., 40000., 0., 0., 0., 0.)
	call SetCameraField(CAMERA_FIELD_FARZ, 100000., 0.)
	call FogMaskEnable(false)
	call FogEnable(false)
endfunction

function init_PreloadHandler takes string wurstStackTrace returns nothing
	set PreloadHandler_autoFinish = false
	set PreloadHandler_dum = CreateUnit(Player(15), Basics_DUMMY_UNIT_ID, 0., 0., 0.)
	if PreloadHandler_dum == null then
		call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "PreloadHandler : DUMMY_UNITID (" + idInteger2IdString(Basics_DUMMY_UNIT_ID) + ") not added correctly to the map." + wurstStackTrace)
		call I2S(1 / 0)
	endif
	if PreloadHandler_autoFinish then
		call TimerStart(CreateTimer(), 0.0, false, ref_function_finishPreload)
	endif
endfunction

<<<<<<< HEAD
function alloc_Closure_23 takes nothing returns integer
	local integer this_57
	if PreloadAction_firstFree == 0 then
		set PreloadAction_maxIndex = PreloadAction_maxIndex + 1
		set this_57 = PreloadAction_maxIndex
	else
		set PreloadAction_firstFree = PreloadAction_firstFree - 1
		set this_57 = PreloadAction_nextFree[PreloadAction_firstFree]
	endif
	set PreloadAction_typeId[this_57] = 672
	return this_57
endfunction

function alloc_Closure_24 takes nothing returns integer
	local integer this_57
	if PreloadAction_firstFree == 0 then
		set PreloadAction_maxIndex = PreloadAction_maxIndex + 1
		set this_57 = PreloadAction_maxIndex
	else
		set PreloadAction_firstFree = PreloadAction_firstFree - 1
		set this_57 = PreloadAction_nextFree[PreloadAction_firstFree]
	endif
	set PreloadAction_typeId[this_57] = 676
	return this_57
endfunction

function alloc_Closure_25 takes nothing returns integer
	local integer this_57
	if PreloadAction_firstFree == 0 then
		set PreloadAction_maxIndex = PreloadAction_maxIndex + 1
		set this_57 = PreloadAction_maxIndex
	else
		set PreloadAction_firstFree = PreloadAction_firstFree - 1
		set this_57 = PreloadAction_nextFree[PreloadAction_firstFree]
	endif
	set PreloadAction_typeId[this_57] = 674
	return this_57
endfunction

function alloc_Closure_26 takes nothing returns integer
	local integer this_57
	if PreloadAction_firstFree == 0 then
		set PreloadAction_maxIndex = PreloadAction_maxIndex + 1
		set this_57 = PreloadAction_maxIndex
	else
		set PreloadAction_firstFree = PreloadAction_firstFree - 1
		set this_57 = PreloadAction_nextFree[PreloadAction_firstFree]
	endif
	set PreloadAction_typeId[this_57] = 675
	return this_57
endfunction

function alloc_Closure_27 takes nothing returns integer
	local integer this_57
	if PreloadAction_firstFree == 0 then
		set PreloadAction_maxIndex = PreloadAction_maxIndex + 1
		set this_57 = PreloadAction_maxIndex
	else
		set PreloadAction_firstFree = PreloadAction_firstFree - 1
		set this_57 = PreloadAction_nextFree[PreloadAction_firstFree]
	endif
	set PreloadAction_typeId[this_57] = 671
	return this_57
=======
function alloc_Closure_26 takes nothing returns integer
	local integer this_58
	if PreloadAction_firstFree == 0 then
		set PreloadAction_maxIndex = PreloadAction_maxIndex + 1
		set this_58 = PreloadAction_maxIndex
	else
		set PreloadAction_firstFree = PreloadAction_firstFree - 1
		set this_58 = PreloadAction_nextFree[PreloadAction_firstFree]
	endif
	set PreloadAction_typeId[this_58] = 671
	return this_58
endfunction

function alloc_Closure_27 takes nothing returns integer
	local integer this_58
	if PreloadAction_firstFree == 0 then
		set PreloadAction_maxIndex = PreloadAction_maxIndex + 1
		set this_58 = PreloadAction_maxIndex
	else
		set PreloadAction_firstFree = PreloadAction_firstFree - 1
		set this_58 = PreloadAction_nextFree[PreloadAction_firstFree]
	endif
	set PreloadAction_typeId[this_58] = 673
	return this_58
endfunction

function alloc_Closure_28 takes nothing returns integer
	local integer this_58
	if PreloadAction_firstFree == 0 then
		set PreloadAction_maxIndex = PreloadAction_maxIndex + 1
		set this_58 = PreloadAction_maxIndex
	else
		set PreloadAction_firstFree = PreloadAction_firstFree - 1
		set this_58 = PreloadAction_nextFree[PreloadAction_firstFree]
	endif
	set PreloadAction_typeId[this_58] = 674
	return this_58
endfunction

function alloc_Closure_29 takes nothing returns integer
	local integer this_58
	if PreloadAction_firstFree == 0 then
		set PreloadAction_maxIndex = PreloadAction_maxIndex + 1
		set this_58 = PreloadAction_maxIndex
	else
		set PreloadAction_firstFree = PreloadAction_firstFree - 1
		set this_58 = PreloadAction_nextFree[PreloadAction_firstFree]
	endif
	set PreloadAction_typeId[this_58] = 675
	return this_58
endfunction

function alloc_Closure_30 takes nothing returns integer
	local integer this_58
	if PreloadAction_firstFree == 0 then
		set PreloadAction_maxIndex = PreloadAction_maxIndex + 1
		set this_58 = PreloadAction_maxIndex
	else
		set PreloadAction_firstFree = PreloadAction_firstFree - 1
		set this_58 = PreloadAction_nextFree[PreloadAction_firstFree]
	endif
	set PreloadAction_typeId[this_58] = 670
	return this_58
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
endfunction

function init_PreloadSystem takes string wurstStackTrace returns nothing
	local integer clVar
	local integer clVar_2
	local integer clVar_3
	local integer clVar_4
	local integer clVar_5
	set PreloadSystem_preloadActions = new_HashMap()
	set PreloadSystem_abilitysToPreload = new_HashList()
	set PreloadSystem_unitsToPreload = new_HashList()
	set PreloadSystem_buffsToPreload = new_HashList()
	set PreloadSystem_itemsToPreload = new_HashList()
	set PreloadSystem_destructablesToPreload = new_HashList()
	set PreloadSystem_preloadDummy = CreateUnit(Basics_DUMMY_PLAYER, Basics_DUMMY_UNIT_ID, 0., 0., 0.)
	set PreloadSystem_abilityLoadTime = 0.003
	set PreloadSystem_abilityLoadTimeLvlBonus = 0.003
	set PreloadSystem_unitLoadTime = 0.003
	set PreloadSystem_buffLoadTime = 0.003
	set PreloadSystem_itemLoadTime = 0.003
	set PreloadSystem_destructableLoadTime = 0.003
<<<<<<< HEAD
	set clVar = alloc_Closure_27()
	call onPreload("Abilitys", clVar, "\n   PreloadSystem, line 63" + wurstStackTrace)
	set clVar_2 = alloc_Closure_23()
	call onPreload("Units", clVar_2, "\n   PreloadSystem, line 78" + wurstStackTrace)
	set clVar_3 = alloc_Closure_25()
	call onPreload("Buffs", clVar_3, "\n   PreloadSystem, line 93" + wurstStackTrace)
	set clVar_4 = alloc_Closure_26()
	call onPreload("Items", clVar_4, "\n   PreloadSystem, line 105" + wurstStackTrace)
	set clVar_5 = alloc_Closure_24()
=======
	set clVar = alloc_Closure_30()
	call onPreload("Abilitys", clVar, "\n   PreloadSystem, line 63" + wurstStackTrace)
	set clVar_2 = alloc_Closure_26()
	call onPreload("Units", clVar_2, "\n   PreloadSystem, line 78" + wurstStackTrace)
	set clVar_3 = alloc_Closure_27()
	call onPreload("Buffs", clVar_3, "\n   PreloadSystem, line 93" + wurstStackTrace)
	set clVar_4 = alloc_Closure_28()
	call onPreload("Items", clVar_4, "\n   PreloadSystem, line 105" + wurstStackTrace)
	set clVar_5 = alloc_Closure_29()
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
	call onPreload("Destructables", clVar_5, "\n   PreloadSystem, line 119" + wurstStackTrace)
endfunction

function init_PrintingHelper takes nothing returns nothing
	local trigger t
	local integer i
	set PrintingHelper_DEBUG_MSG_DURATION = 45.
	set t = CreateTrigger()
	call trigger_addAction(t, ref_function_switchDebug)
	set i = 0
	loop
		exitwhen i > 11
		set PrintingHelper_wantDebug[i] = false
		call trigger_registerPlayerChatEvent(t, Player(i), "-d", true)
		set i = i + 1
	endloop
	set t = null
endfunction

<<<<<<< HEAD
function trigger_addCondition takes trigger this_57, boolexpr condition returns nothing
	call TriggerAddCondition(this_57, condition)
=======
function trigger_addCondition takes trigger this_58, boolexpr condition returns nothing
	call TriggerAddCondition(this_58, condition)
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
endfunction

function init_Pull2 takes nothing returns nothing
	local trigger t = CreateTrigger()
	call trigger_addCondition(t, Condition(ref_function_spellCondition))
	call trigger_addAction(t, ref_function_bridge_spellStart)
	call trigger_registerAnyUnitEvent(t, EVENT_PLAYER_UNIT_SPELL_CAST)
	set t = null
endfunction

function init_RTable takes nothing returns nothing
endfunction

<<<<<<< HEAD
function alloc_Closure_28 takes nothing returns integer
	local integer this_57
	if Cast_firstFree == 0 then
		set Cast_maxIndex = Cast_maxIndex + 1
		set this_57 = Cast_maxIndex
	else
		set Cast_firstFree = Cast_firstFree - 1
		set this_57 = Cast_nextFree[Cast_firstFree]
	endif
	set Cast_typeId[this_57] = 855
	return this_57
=======
function alloc_Closure_31 takes nothing returns integer
	local integer this_58
	if Cast_firstFree == 0 then
		set Cast_maxIndex = Cast_maxIndex + 1
		set this_58 = Cast_maxIndex
	else
		set Cast_firstFree = Cast_firstFree - 1
		set this_58 = Cast_nextFree[Cast_firstFree]
	endif
	set Cast_typeId[this_58] = 858
	return this_58
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
endfunction

function onUnitCast takes integer abiCode, integer action, string wurstStackTrace returns nothing
	call dispatch_Cast_register(action, abiCode, "\n   ClosureEvents, line 44" + wurstStackTrace)
endfunction

function init_RamisHomingMissle takes string wurstStackTrace returns nothing
	local integer clVar
	set Missle_missleStartSpeed = 10.
	set Missle_speedLost = 0.99
	set Missle_speedAccel = 10.
	set Missle_missleRadius = 65.
	set Missle_knockback = 50.
	set Missle_knockbackRange = 500.
<<<<<<< HEAD
	set clVar = alloc_Closure_28()
=======
	set clVar = alloc_Closure_31()
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
	call onUnitCast(1093677105, clVar, "\n   RamisHomingMissle, line 71" + wurstStackTrace)
endfunction

function init_Rect takes nothing returns nothing
	call new_Table()
endfunction

function init_Region takes nothing returns nothing
	call new_Table()
endfunction

function init_RockThrow takes nothing returns nothing
endfunction

function init_RunningMazeChecker takes nothing returns nothing
endfunction

<<<<<<< HEAD
function SpellSetup_setDummySpellBook takes integer this_57, integer abiCode returns nothing
endfunction

function dispatch_SpellSetup_setDummySpellBook takes integer this_57, integer abiCode, string wurstStackTrace returns nothing
	if SpellSetup_typeId[this_57] == 0 then
		if this_57 == 0 then
=======
function SpellSetup_setDummySpellBook takes integer this_58, integer abiCode returns nothing
endfunction

function dispatch_SpellSetup_setDummySpellBook takes integer this_58, integer abiCode, string wurstStackTrace returns nothing
	if SpellSetup_typeId[this_58] == 0 then
		if this_58 == 0 then
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling SpellSetup.setDummySpellBook" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called SpellSetup.setDummySpellBook on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
<<<<<<< HEAD
	call SpellSetup_setDummySpellBook(this_57, abiCode)
endfunction

function SpellSetup_setMaxLvl takes integer this_57, integer lvl returns nothing
endfunction

function dispatch_SpellSetup_setMaxLvl takes integer this_57, integer lvl, string wurstStackTrace returns nothing
	if SpellSetup_typeId[this_57] == 0 then
		if this_57 == 0 then
=======
	call SpellSetup_setDummySpellBook(this_58, abiCode)
endfunction

function SpellSetup_setMaxLvl takes integer this_58, integer lvl returns nothing
endfunction

function dispatch_SpellSetup_setMaxLvl takes integer this_58, integer lvl, string wurstStackTrace returns nothing
	if SpellSetup_typeId[this_58] == 0 then
		if this_58 == 0 then
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling SpellSetup.setMaxLvl" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called SpellSetup.setMaxLvl on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
<<<<<<< HEAD
	call SpellSetup_setMaxLvl(this_57, lvl)
endfunction

function SpellSetup_setNeededSkillpoints takes integer this_57, integer lvl, integer points, string wurstStackTrace returns nothing
	call dispatch_Table_saveInt(SpellSetup_pointCost[this_57], lvl, points, "\n   Spell, line 101" + wurstStackTrace)
endfunction

function dispatch_SpellSetup_setNeededSkillpoints takes integer this_57, integer lvl, integer points, string wurstStackTrace returns nothing
	if SpellSetup_typeId[this_57] == 0 then
		if this_57 == 0 then
=======
	call SpellSetup_setMaxLvl(this_58, lvl)
endfunction

function SpellSetup_setNeededSkillpoints takes integer this_58, integer lvl, integer points, string wurstStackTrace returns nothing
	call dispatch_Table_saveInt(SpellSetup_pointCost[this_58], lvl, points, "\n   Spell, line 101" + wurstStackTrace)
endfunction

function dispatch_SpellSetup_setNeededSkillpoints takes integer this_58, integer lvl, integer points, string wurstStackTrace returns nothing
	if SpellSetup_typeId[this_58] == 0 then
		if this_58 == 0 then
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling SpellSetup.setNeededSkillpoints" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called SpellSetup.setNeededSkillpoints on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
<<<<<<< HEAD
	call SpellSetup_setNeededSkillpoints(this_57, lvl, points, "\n   Spell, line 100" + wurstStackTrace)
endfunction

function SpellSetup_setSpell takes integer this_57, integer abiCode returns nothing
endfunction

function dispatch_SpellSetup_setSpell takes integer this_57, integer abiCode, string wurstStackTrace returns nothing
	if SpellSetup_typeId[this_57] == 0 then
		if this_57 == 0 then
=======
	call SpellSetup_setNeededSkillpoints(this_58, lvl, points, "\n   Spell, line 100" + wurstStackTrace)
endfunction

function SpellSetup_setSpell takes integer this_58, integer abiCode returns nothing
endfunction

function dispatch_SpellSetup_setSpell takes integer this_58, integer abiCode, string wurstStackTrace returns nothing
	if SpellSetup_typeId[this_58] == 0 then
		if this_58 == 0 then
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling SpellSetup.setSpell" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called SpellSetup.setSpell on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
<<<<<<< HEAD
	call SpellSetup_setSpell(this_57, abiCode)
=======
	call SpellSetup_setSpell(this_58, abiCode)
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
endfunction

function TestSpell1Setup_setSpellData takes integer ss, string wurstStackTrace returns integer
	call dispatch_SpellSetup_setSpell(ss, 1952805681, "\n   SampleSpells, line 13" + wurstStackTrace)
	call dispatch_SpellSetup_setDummySpellBook(ss, 1514239025, "\n   SampleSpells, line 14" + wurstStackTrace)
	call dispatch_SpellSetup_setMaxLvl(ss, 5, "\n   SampleSpells, line 15" + wurstStackTrace)
	call dispatch_SpellSetup_setNeededSkillpoints(ss, 1, 1, "\n   SampleSpells, line 16" + wurstStackTrace)
	call dispatch_SpellSetup_setNeededSkillpoints(ss, 2, 1, "\n   SampleSpells, line 17" + wurstStackTrace)
	call dispatch_SpellSetup_setNeededSkillpoints(ss, 3, 2, "\n   SampleSpells, line 18" + wurstStackTrace)
	call dispatch_SpellSetup_setNeededSkillpoints(ss, 4, 2, "\n   SampleSpells, line 19" + wurstStackTrace)
	call dispatch_SpellSetup_setNeededSkillpoints(ss, 5, 3, "\n   SampleSpells, line 20" + wurstStackTrace)
	return ss
endfunction

function alloc_SpellSetup takes nothing returns integer
<<<<<<< HEAD
	local integer this_57
	if SpellSetup_firstFree == 0 then
		set SpellSetup_maxIndex = SpellSetup_maxIndex + 1
		set this_57 = SpellSetup_maxIndex
	else
		set SpellSetup_firstFree = SpellSetup_firstFree - 1
		set this_57 = SpellSetup_nextFree[SpellSetup_firstFree]
	endif
	set SpellSetup_typeId[this_57] = 703
	return this_57
endfunction

function ObjId_setId2 takes integer this_57, integer char2 returns nothing
endfunction

function dispatch_ObjId_setId2 takes integer this_57, integer char2, string wurstStackTrace returns nothing
	if ObjId_typeId[this_57] == 0 then
		if this_57 == 0 then
=======
	local integer this_58
	if SpellSetup_firstFree == 0 then
		set SpellSetup_maxIndex = SpellSetup_maxIndex + 1
		set this_58 = SpellSetup_maxIndex
	else
		set SpellSetup_firstFree = SpellSetup_firstFree - 1
		set this_58 = SpellSetup_nextFree[SpellSetup_firstFree]
	endif
	set SpellSetup_typeId[this_58] = 702
	return this_58
endfunction

function ObjId_setId2 takes integer this_58, integer char2 returns nothing
endfunction

function dispatch_ObjId_setId2 takes integer this_58, integer char2, string wurstStackTrace returns nothing
	if ObjId_typeId[this_58] == 0 then
		if this_58 == 0 then
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling ObjId.setId2" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called ObjId.setId2 on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
<<<<<<< HEAD
	call ObjId_setId2(this_57, char2)
endfunction

function ObjId_setId3 takes integer this_57, integer char3 returns nothing
endfunction

function dispatch_ObjId_setId3 takes integer this_57, integer char3, string wurstStackTrace returns nothing
	if ObjId_typeId[this_57] == 0 then
		if this_57 == 0 then
=======
	call ObjId_setId2(this_58, char2)
endfunction

function ObjId_setId3 takes integer this_58, integer char3 returns nothing
endfunction

function dispatch_ObjId_setId3 takes integer this_58, integer char3, string wurstStackTrace returns nothing
	if ObjId_typeId[this_58] == 0 then
		if this_58 == 0 then
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling ObjId.setId3" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called ObjId.setId3 on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
<<<<<<< HEAD
	call ObjId_setId3(this_57, char3)
endfunction

function alloc_ObjId takes nothing returns integer
	local integer this_57
	if ObjId_firstFree == 0 then
		set ObjId_maxIndex = ObjId_maxIndex + 1
		set this_57 = ObjId_maxIndex
	else
		set ObjId_firstFree = ObjId_firstFree - 1
		set this_57 = ObjId_nextFree[ObjId_firstFree]
	endif
	set ObjId_typeId[this_57] = 702
	return this_57
endfunction

function construct_ObjId takes integer this_57 returns nothing
endfunction

function new_ObjId takes nothing returns integer
	local integer this_57 = alloc_ObjId()
	call construct_ObjId(this_57)
	return this_57
endfunction

function construct_SpellSetup takes integer this_57, string wurstStackTrace returns nothing
	set SpellSetup_castDummy[this_57] = new_ObjId()
	set SpellSetup_pointCost[this_57] = new_Table()
	call dispatch_ObjId_setId2(SpellSetup_castDummy[this_57], 83, "\n   Spell, line 87" + wurstStackTrace)
	call dispatch_ObjId_setId3(SpellSetup_castDummy[this_57], 80, "\n   Spell, line 88" + wurstStackTrace)
endfunction

function new_SpellSetup takes string wurstStackTrace returns integer
	local integer this_57 = alloc_SpellSetup()
	call construct_SpellSetup(this_57, "\n   Spell, line 86" + wurstStackTrace)
	return this_57
=======
	call ObjId_setId3(this_58, char3)
endfunction

function alloc_ObjId takes nothing returns integer
	local integer this_58
	if ObjId_firstFree == 0 then
		set ObjId_maxIndex = ObjId_maxIndex + 1
		set this_58 = ObjId_maxIndex
	else
		set ObjId_firstFree = ObjId_firstFree - 1
		set this_58 = ObjId_nextFree[ObjId_firstFree]
	endif
	set ObjId_typeId[this_58] = 701
	return this_58
endfunction

function construct_ObjId takes integer this_58 returns nothing
endfunction

function new_ObjId takes nothing returns integer
	local integer this_58 = alloc_ObjId()
	call construct_ObjId(this_58)
	return this_58
endfunction

function construct_SpellSetup takes integer this_58, string wurstStackTrace returns nothing
	set SpellSetup_castDummy[this_58] = new_ObjId()
	set SpellSetup_pointCost[this_58] = new_Table()
	call dispatch_ObjId_setId2(SpellSetup_castDummy[this_58], 83, "\n   Spell, line 87" + wurstStackTrace)
	call dispatch_ObjId_setId3(SpellSetup_castDummy[this_58], 80, "\n   Spell, line 88" + wurstStackTrace)
endfunction

function new_SpellSetup takes string wurstStackTrace returns integer
	local integer this_58 = alloc_SpellSetup()
	call construct_SpellSetup(this_58, "\n   Spell, line 86" + wurstStackTrace)
	return this_58
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
endfunction

function init_SampleSpells takes string wurstStackTrace returns nothing
	call TestSpell1Setup_setSpellData(new_SpellSetup("\n   SampleSpells, line 9" + wurstStackTrace), "\n   SampleSpells, line 9" + wurstStackTrace)
	set TestSpell1_animationType = 7
endfunction

<<<<<<< HEAD
function hashtable_saveBoolean takes hashtable this_57, integer parentKey, integer childKey, boolean value returns nothing
	call SaveBoolean(this_57, parentKey, childKey, value)
endfunction

function alloc_DebugFile takes nothing returns integer
	local integer this_57
	if DebugFile_firstFree == 0 then
		set DebugFile_maxIndex = DebugFile_maxIndex + 1
		set this_57 = DebugFile_maxIndex
	else
		set DebugFile_firstFree = DebugFile_firstFree - 1
		set this_57 = DebugFile_nextFree[DebugFile_firstFree]
	endif
	return this_57
endfunction

function construct_DebugFile takes integer this_57, string filename returns nothing
=======
function hashtable_saveBoolean takes hashtable this_58, integer parentKey, integer childKey, boolean value returns nothing
	call SaveBoolean(this_58, parentKey, childKey, value)
endfunction

function alloc_DebugFile takes nothing returns integer
	local integer this_58
	if DebugFile_firstFree == 0 then
		set DebugFile_maxIndex = DebugFile_maxIndex + 1
		set this_58 = DebugFile_maxIndex
	else
		set DebugFile_firstFree = DebugFile_firstFree - 1
		set this_58 = DebugFile_nextFree[DebugFile_firstFree]
	endif
	return this_58
endfunction

function construct_DebugFile takes integer this_58, string filename returns nothing
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
	call new_Table()
endfunction

function new_DebugFile takes string filename returns integer
<<<<<<< HEAD
	local integer this_57 = alloc_DebugFile()
	call construct_DebugFile(this_57, filename)
	return this_57
=======
	local integer this_58 = alloc_DebugFile()
	call construct_DebugFile(this_58, filename)
	return this_58
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
endfunction

function init_Setup takes nothing returns nothing
	local real temp_Setup_recycleGraveyard_x
	local real temp_Setup_recycleGraveyard_y
	local real temp_Setup_menuStart_x
	local real temp_Setup_menuStart_y
	set Setup_maxBonSize = 14
	set Setup_attackRaw = 675359024 - 48
	set Setup_attackSpeedRaw = 675424560 - 48
	set Setup_armorRaw = 675490096 - 48
	set Setup_lifeRaw = 675555632 - 48
	set Setup_manaRaw = 675621168 - 48
	set Setup_agiRaw = 675686704 - 48
	set Setup_strRaw = 675752240 - 48
	set Setup_intRaw = 675817776 - 48
	set Setup_lifeRegRaw = 675883312 - 48
	set Setup_manaRegRaw = 675948848 - 48
<<<<<<< HEAD
=======
	set Setup_permAttackItemRaw = 676014384 - 48
	set Setup_permAttackRaw = 676079920 - 48
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
	call new_HashList()
	call new_HashList()
	call new_DebugFile("Info")
	call new_DebugFile("Error")
	call new_DebugFile("Debug")
	set Setup_allPlayers = new_LinkedList()
	set Setup_team1 = "Wargrin"
	set temp_Setup_recycleGraveyard_x = 0.
	set temp_Setup_recycleGraveyard_y = 0.
<<<<<<< HEAD
=======
	set Setup_recycleGraveyard_x = temp_Setup_recycleGraveyard_x
	set Setup_recycleGraveyard_y = temp_Setup_recycleGraveyard_y
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
	set temp_Setup_menuStart_x = -2500.
	set temp_Setup_menuStart_y = -1000.
	set Setup_menuStart_x = temp_Setup_menuStart_x
	set Setup_menuStart_y = temp_Setup_menuStart_y
	set Setup_trackBlacklist = InitHashtable()
	set Setup_tileSize = 64
	set Setup_menuHeight = 22
	set Setup_menuWidth = 44
	call hashtable_saveBoolean(Setup_trackBlacklist, 1, 1, true)
endfunction

function init_Spell takes nothing returns nothing
	set Spell_qSpellId = 852490
	set Spell_wSpellId = 852491
	set Spell_eSpellId = 852217
	set Spell_rSpellId = 852186
	set Spell_dSpellId = 852576
	set Spell_fSpellId = 852215
endfunction

function SamplePointSpellSetup_setSpellData takes integer ss, string wurstStackTrace returns integer
	call dispatch_SpellSetup_setSpell(ss, 1094861636, "\n   SpellTemplate, line 39" + wurstStackTrace)
	call dispatch_SpellSetup_setDummySpellBook(ss, 1162233672, "\n   SpellTemplate, line 40" + wurstStackTrace)
	call dispatch_SpellSetup_setMaxLvl(ss, 5, "\n   SpellTemplate, line 41" + wurstStackTrace)
	call dispatch_SpellSetup_setNeededSkillpoints(ss, 1, 1, "\n   SpellTemplate, line 42" + wurstStackTrace)
	call dispatch_SpellSetup_setNeededSkillpoints(ss, 2, 1, "\n   SpellTemplate, line 43" + wurstStackTrace)
	call dispatch_SpellSetup_setNeededSkillpoints(ss, 3, 2, "\n   SpellTemplate, line 44" + wurstStackTrace)
	call dispatch_SpellSetup_setNeededSkillpoints(ss, 4, 2, "\n   SpellTemplate, line 45" + wurstStackTrace)
	call dispatch_SpellSetup_setNeededSkillpoints(ss, 5, 3, "\n   SpellTemplate, line 46" + wurstStackTrace)
	return ss
endfunction

function init_SpellTemplate takes string wurstStackTrace returns nothing
	call SamplePointSpellSetup_setSpellData(new_SpellSetup("\n   SpellTemplate, line 34" + wurstStackTrace), "\n   SpellTemplate, line 34" + wurstStackTrace)
endfunction

function init_String takes nothing returns nothing
	set String_charset = "0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ"
	set String_numberset = "0123456789"
	call string_length(String_numberset)
	call string_length(String_charset)
endfunction

function init_Table takes nothing returns nothing
	set Table_ht = InitHashtable()
endfunction

function init_TempGroups takes nothing returns nothing
	set TempGroups_ENUM_GROUP = CreateGroup()
endfunction

function init_Terrain takes nothing returns nothing
	local real temp_Terrain_tempPos_x
	local real temp_Terrain_tempPos_y
	set Terrain_MAX_RANGE = 10.
	set Terrain_DUMMY_ITEM_ID = 2003790951
	set Terrain_tempLoc = Location(0., 0.)
	set Terrain_dItem = null
	set Terrain_find = null
	set Terrain_hidMax = 0
	set temp_Terrain_tempPos_x = 0.
	set temp_Terrain_tempPos_y = 0.
	set Terrain_tempPos_x = temp_Terrain_tempPos_x
	set Terrain_tempPos_y = temp_Terrain_tempPos_y
	set Terrain_find = Rect(0., 0., 128., 128.)
	set Terrain_dItem = CreateItem(Terrain_DUMMY_ITEM_ID, 0., 0.)
	call SetItemVisible(Terrain_dItem, false)
endfunction

function init_Test takes nothing returns nothing
endfunction

function init_TextSplat takes nothing returns nothing
	set TextSplat_DISABLE_COLOR_ALPHA = -1
	set TextSplat_DISABLE_MAX_WIDTH = 100000000.
	call getFontWidth(32)
endfunction

function init_TextTagEx takes nothing returns nothing
	local integer temp_TextTagEx_standardColor_red = 255
	local integer temp_TextTagEx_standardColor_green = 255
	local integer temp_TextTagEx_standardColor_blue = 255
	local integer temp_TextTagEx_standardColor_alpha = 255
endfunction

function init_TimedEffect takes nothing returns nothing
	set TimedEffect_effectData = new_Table()
endfunction

function init_TimerUtils takes nothing returns nothing
	set TimerUtils_freeTimersCount = 0
	set TimerUtils_timerData = new_Table()
	set TimerUtils_HELD = 679645218
endfunction

function init_ToolTip takes nothing returns nothing
	local real temp_Tooltip_cleanPos_x
	local real temp_Tooltip_cleanPos_y
	set Tooltip_dummyTip = 1231253358
	set temp_Tooltip_cleanPos_x = vec2_op_plus(Setup_menuStart_x, Setup_menuStart_y, element_toVec(20, 30), element_toVec_return_y)
	set temp_Tooltip_cleanPos_y = vec2_op_plus_return_y
endfunction

function init_ToolTipTypes takes nothing returns nothing
	set ToolTipTypes_tipMap = new_HashMap()
endfunction

function init_Trackable takes nothing returns nothing
	local trigger receiver
	local trigger receiver_2
	set TrackableEx_doubleClickSpeed = 0.5
	set TrackableEx_trackableOwner = new_HashMap()
	set TrackableEx_trackableObjects = new_HashMap()
	set receiver = CreateTrigger()
<<<<<<< HEAD
	call trigger_addAction(receiver, ref_function_bridge_closure_impl_6)
	set TrackableEx_trackTrigger = receiver
	set receiver_2 = CreateTrigger()
	call trigger_addAction(receiver_2, ref_function_bridge_closure_impl_7)
=======
	call trigger_addAction(receiver, ref_function_bridge_closure_impl_8)
	set TrackableEx_trackTrigger = receiver
	set receiver_2 = CreateTrigger()
	call trigger_addAction(receiver_2, ref_function_bridge_closure_impl_9)
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
	set TrackableEx_clickTrigger = receiver_2
	set receiver = null
	set receiver_2 = null
endfunction

function init_Trigger takes nothing returns nothing
	call new_Table()
endfunction

function init_TypeCasting takes nothing returns nothing
	set TypeCasting_typecastdata = new_Table()
endfunction

function Unit_classname takes nothing returns string
	return "Unit"
endfunction

function alloc_Event takes nothing returns integer
<<<<<<< HEAD
	local integer this_57
	if Event_firstFree == 0 then
		set Event_maxIndex = Event_maxIndex + 1
		set this_57 = Event_maxIndex
	else
		set Event_firstFree = Event_firstFree - 1
		set this_57 = Event_nextFree[Event_firstFree]
	endif
	set Event_typeId[this_57] = 682
	return this_57
endfunction

function new_Event takes nothing returns integer
	local integer this_57 = alloc_Event()
	call construct_Event(this_57)
	return this_57
=======
	local integer this_58
	if Event_firstFree == 0 then
		set Event_maxIndex = Event_maxIndex + 1
		set this_58 = Event_maxIndex
	else
		set Event_firstFree = Event_firstFree - 1
		set this_58 = Event_nextFree[Event_firstFree]
	endif
	set Event_typeId[this_58] = 681
	return this_58
endfunction

function new_Event takes nothing returns integer
	local integer this_58 = alloc_Event()
	call construct_Event(this_58)
	return this_58
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
endfunction

function init_UnitClass takes nothing returns nothing
	local trigger receiver
	set Unit_bounceFactor = 1.
	set Unit_knockbackFactor = 6000.
	set receiver = CreateTrigger()
	call trigger_addAction(receiver, ref_function_bridge_Unit_tookDamage)
<<<<<<< HEAD
	call registerNewInstanceEntry(Unit_classname())
	call new_Event()
	call new_Event()
=======
	set Unit_damageDetect = receiver
	set ShowInstances_classId_3 = registerNewInstanceEntry(Unit_classname())
	set CreationEvent_create = new_Event()
	set CreationEvent_dest = new_Event()
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
	set UnitClass_knocklist = new_LinkedList()
	set receiver = null
endfunction

function alloc_UnitEvent takes nothing returns integer
<<<<<<< HEAD
	local integer this_57
	if Event_firstFree == 0 then
		set Event_maxIndex = Event_maxIndex + 1
		set this_57 = Event_maxIndex
	else
		set Event_firstFree = Event_firstFree - 1
		set this_57 = Event_nextFree[Event_firstFree]
	endif
	set Event_typeId[this_57] = 792
	return this_57
endfunction

function construct_UnitEvent takes integer this_57 returns nothing
	call construct_Event(this_57)
endfunction

function new_UnitEvent takes nothing returns integer
	local integer this_57 = alloc_UnitEvent()
	call construct_UnitEvent(this_57)
	return this_57
=======
	local integer this_58
	if Event_firstFree == 0 then
		set Event_maxIndex = Event_maxIndex + 1
		set this_58 = Event_maxIndex
	else
		set Event_firstFree = Event_firstFree - 1
		set this_58 = Event_nextFree[Event_firstFree]
	endif
	set Event_typeId[this_58] = 791
	return this_58
endfunction

function construct_UnitEvent takes integer this_58 returns nothing
	call construct_Event(this_58)
endfunction

function new_UnitEvent takes nothing returns integer
	local integer this_58 = alloc_UnitEvent()
	call construct_UnitEvent(this_58)
	return this_58
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
endfunction

function init_UnitEvents takes nothing returns nothing
	call new_UnitEvent()
endfunction

function init_UnitIndexer takes nothing returns nothing
	call new_Event()
	call new_Event()
endfunction

<<<<<<< HEAD
function alloc_StringList takes nothing returns integer
	local integer this_57
	if StringList_firstFree == 0 then
		set StringList_maxIndex = StringList_maxIndex + 1
		set this_57 = StringList_maxIndex
	else
		set StringList_firstFree = StringList_firstFree - 1
		set this_57 = StringList_nextFree[StringList_firstFree]
	endif
	return this_57
endfunction

function construct_StringList takes integer this_57 returns nothing
endfunction

function new_StringList takes nothing returns integer
	local integer this_57 = alloc_StringList()
	call construct_StringList(this_57)
	return this_57
endfunction

function init_UnitTypes takes nothing returns nothing
	call new_HashMap()
	call new_StringList()
=======
function init_UnitTypes takes nothing returns nothing
	set UnitTypes_unitTypes = new_HashMap()
	set UnitType_basicId = 1215324524
	set UnitType_basicMovespeed = 350
	call new_StringList()
	set UnitType_castPoint = 0.
	set UnitType_castBackPoint = 0.
	set UnitType_animationSmoothingFactor = 0.2
	set UnitType_moveInterpolation = 3
	set UnitType_attackCooldown = 1.
	set UnitType_basicAttack = -1
	set UnitType_diceSides = 0
	set UnitType_diceCount = 1
	set UnitType_foodCost = 0
	set UnitType_sightRange = 1200
	set UnitType_startMana = 10000
	set UnitType_baseBounty = 100
	set UnitType_baseMass = 1000.
	set UnitType_baseRadius = 50.
	set UnitType_baseHeight = 50.
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
endfunction

function main takes nothing returns nothing
	call initGlobals()
	call SetCameraBounds(( - 3328.0) + GetCameraMargin(CAMERA_MARGIN_LEFT), ( - 3584.0) + GetCameraMargin(CAMERA_MARGIN_BOTTOM), 3328.0 - GetCameraMargin(CAMERA_MARGIN_RIGHT), 3072.0 - GetCameraMargin(CAMERA_MARGIN_TOP), ( - 3328.0) + GetCameraMargin(CAMERA_MARGIN_LEFT), 3072.0 - GetCameraMargin(CAMERA_MARGIN_TOP), 3328.0 - GetCameraMargin(CAMERA_MARGIN_RIGHT), ( - 3584.0) + GetCameraMargin(CAMERA_MARGIN_BOTTOM))
	call SetDayNightModels("Environment\\DNC\\DNCLordaeron\\DNCLordaeronTerrain\\DNCLordaeronTerrain.mdl", "Environment\\DNC\\DNCLordaeron\\DNCLordaeronUnit\\DNCLordaeronUnit.mdl")
	call NewSoundEnvironment("Default")
	call SetAmbientDaySound("LordaeronSummerDay")
	call SetAmbientNightSound("LordaeronSummerNight")
	call SetMapMusic("Music", true, 0)
	call CreateCameras()
	call CreateAllUnits()
	call InitBlizzard()
	call InitGlobals()
	call InitCustomTriggers()
	call RunInitializationTriggers()
	call init_Table()
	call init_Trigger()
	call init_Player()
	call init_PrintingHelper()
	call init_String()
	call init_TimerUtils()
	call init_Maths()
	call init_TempGroups()
	call init_Colors("   init_Colors")
	call init_Rect()
	call init_Terrain()
	call init_Basics()
	call init_TypeCasting()
	call init_ObjectIds()
	call init_ChannelAbilityPreset()
	call init_AbilityTooltipGenerator()
	call init_Array()
	call init_ArrayList()
	call init_HashMap()
	call init_HashList()
	call init_PreloadSystem("   init_PreloadSystem")
	call init_CompiletimeInit("   init_CompiletimeInit")
	call init_Trackable()
	call init_Helper()
	call init_DebugFile()
	call init_Setup()
	call init_InstanceBoard("   init_InstanceBoard")
	call init_BuffTypes()
	call init_Menu("   init_Menu")
	call init_Char()
	call init_FontArial()
	call init_TextSplat()
	call init_Button()
	call init_ObjectIdGenerator()
	call init_UnitTypes()
	call init_UnitClass()
	call init_HeroClass("   init_HeroClass")
	call init_CaptureAnimation()
	call init_DelayedDestroy()
	call init_ClosureEvents()
	call init_Region()
	call init_MapBounds()
	call init_GameTimer()
	call init_NewDummyRecycler("   init_NewDummyRecycler")
	call init_Conductor("   init_Conductor")
	call init_Lightning()
	call init_TimedEffect()
<<<<<<< HEAD
	call init_ControlPoint()
=======
	call init_ControlPoint("   init_ControlPoint")
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
	call init_CustomBar()
	call init_Dot()
	call init_FloatingText()
	call init_HandleCounter("   init_HandleCounter")
	call init_HeroBar("   init_HeroBar")
	call init_IconType()
	call init_Icon()
	call init_ToolTipTypes()
	call init_UnitEvents()
	call init_ItemClass()
	call init_Model()
	call init_OrderHandling()
	call init_Pane()
	call init_PlayerClass()
	call init_PreloadHandler("   init_PreloadHandler")
	call init_Spell()
	call init_SampleSpells("   init_SampleSpells")
	call init_ToolTip()
	call init_GameStart("   init_GameStart")
<<<<<<< HEAD
=======
	call init_HeroTypes()
>>>>>>> 70a6606fb18966b3c3a7963e56a4c08eefaa1e37
	call init_Pull2()
	call init_RTable()
	call init_RamisHomingMissle("   init_RamisHomingMissle")
	call init_RockThrow()
	call init_RunningMazeChecker()
	call init_SpellTemplate("   init_SpellTemplate")
	call init_Test()
	call init_TextTagEx()
	call init_UnitIndexer()
endfunction

function InitAllyPriorities takes nothing returns nothing
	call SetStartLocPrioCount(0, 1)
	call SetStartLocPrio(0, 0, 1, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrioCount(1, 1)
	call SetStartLocPrio(1, 0, 0, MAP_LOC_PRIO_HIGH)
endfunction

function InitCustomPlayerSlots takes nothing returns nothing
	call SetPlayerStartLocation(Player(0), 0)
	call ForcePlayerStartLocation(Player(0), 0)
	call SetPlayerColor(Player(0), ConvertPlayerColor(0))
	call SetPlayerRacePreference(Player(0), RACE_PREF_ORC)
	call SetPlayerRaceSelectable(Player(0), false)
	call SetPlayerController(Player(0), MAP_CONTROL_USER)
	call SetPlayerStartLocation(Player(1), 1)
	call ForcePlayerStartLocation(Player(1), 1)
	call SetPlayerColor(Player(1), ConvertPlayerColor(1))
	call SetPlayerRacePreference(Player(1), RACE_PREF_ORC)
	call SetPlayerRaceSelectable(Player(1), false)
	call SetPlayerController(Player(1), MAP_CONTROL_USER)
endfunction

function InitCustomTeams takes nothing returns nothing
	call SetPlayerTeam(Player(0), 0)
	call SetPlayerTeam(Player(1), 0)
endfunction

function config takes nothing returns nothing
	call SetMapName("Noch eine WARCRAFT-III-Karte")
	call SetMapDescription("Unbeschrieben")
	call SetPlayers(2)
	call SetTeams(2)
	call SetGamePlacement(MAP_PLACEMENT_TEAMS_TOGETHER)
	call DefineStartLocation(0, 768.0,  - 512.0)
	call DefineStartLocation(1,  - 1856.0, 192.0)
	call InitCustomPlayerSlots()
	call InitCustomTeams()
	call InitAllyPriorities()
endfunction

