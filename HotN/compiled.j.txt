// this script was compiled with wurst 1.4.0.0-jenkins-Wurst-661
globals
real udg_zw=0.
timer udg_t=null
integer udg_MeineAbility=0
unit udg_CasterVariable=null
group udg_UnverwundbarkeitsGruppe=null
hashtable udg_MeineHashtable=null
rect udg_Urspung=null
rect udg_Ziel=null
real udg_x1=0.
real udg_x2=0.
real udg_x3=0.
real udg_x4=0.
real udg_x5=0.
real udg_y1=0.
real udg_y4=0.
real udg_y5=0.
real udg_y3=0.
real udg_y2=0.
effect udg_effect=null
camerasetup gg_cam_Camera_001=null
trigger gg_trg_Unbezeichneter_Ausl__ser_003=null
integer array LinkedList_dummy
integer array LinkedList_size
integer array LLEntry_elem
integer array LLEntry_prev
integer array LLEntry_next
integer array LLIterator_dummy
integer array LLIterator_current
string array Char_c2s
integer array Char_s2c
integer array Char_width
integer Char_MAX_INDEX=0
integer Char_DEFAULT_WIDTH=0
string Char_DEFAULT_STRING=null
hashtable Table_ht=null
integer Trigger_triggerData=0
string array Colors_hexs
integer Colors_decs=0
integer array Colors_playercolors
integer array Colors_playercolors_2
integer array Colors_playercolors_3
real Terrain_MAX_RANGE=0.
integer Terrain_DUMMY_ITEM_ID=0
location Terrain_tempLoc=null
item Terrain_dItem=null
rect Terrain_find=null
item array Terrain_hid
integer Terrain_hidMax=0
real Terrain_tempPos_x=0.
real Terrain_tempPos_y=0.
player array Player_players
boolean array PrintingHelper_wantDebug
integer PrintingHelper_DEBUG_LEVEL=0
real PrintingHelper_DEBUG_MSG_DURATION=0.
string String_charset=null
string String_numberset=null
integer String_numbersetlength=0
integer String_charsetlength=0
timer array TimerUtils_freeTimers
integer TimerUtils_freeTimersCount=0
integer TimerUtils_timerData=0
integer TimerUtils_HELD=0
integer ForceIterator_tempIndex=0
player array ForceIterator_players
group TempGroups_ENUM_GROUP=null
integer Rect_sourceTable=0
integer Basics_DUMMY_UNIT_ID=0
integer Basics_HEIGHT_ENABLER=0
integer Basics_TREE_RECOGNITION=0
integer Basics_LOCUST_ID=0
real Basics_ANIMATION_PERIOD=0.
real Basics_MAX_COLLISION_SIZE=0.
player Basics_DUMMY_PLAYER=null
player Basics_DUMMY_HOSTILE_PLAYER=null
integer TypeCasting_typecastdata=0
real Maths_PI=0.
real Maths_PI2=0.
real Maths_PIHALF=0.
real Maths_DEGTORAD=0.
real Maths_RADTODEG=0.
integer Region_regionData=0
rect MapBounds_mapRect=null
region MapBounds_mapRegion=null
real MapBounds_mapMinX=0.
real MapBounds_mapMinY=0.
real MapBounds_mapMaxX=0.
real MapBounds_mapMaxY=0.
real MapBounds_mapCenter_x=0.
real MapBounds_mapCenter_y=0.
timer GameTimer_gameTimer=null
integer NewDummyRecycler_DIFFERENT_ANGLES=0
integer NewDummyRecycler_SAVED_UNITS_PER_ANGLE=0
integer array NewDummyRecycler_angleQueues
integer array ArrayQueue_fp
integer array ArrayQueue_rp
integer array ArrayQueue_size
timer DelayNode_t=null
unit array DelayNode_u
real array DelayNode_delayTime
integer array DelayNode_prev
integer array DelayNode_next
integer DelayNode_first=0
unit array Fx_dummy
effect array Fx_fx
real array Fx_zAngle
string array Fx_sfxPath
integer TimedEffect_effectData=0
integer InstanceBoard_classes=0
hashtable InstanceBoard_ht=null
multiboard InstanceBoard_mb=null
integer array InstanceBoard_count
string array InstanceBoard_nameOfClass
unit Filter_filterCheckUnit=null
player Filter_filterCheckPlayer=null
integer array Helper_pow2
string HandleCounter_TITLE=null
leaderboard HandleCounter_board=null
timer HandleCounter_boardTimer=null
player HandleCounter_HANDLE=null
string HandleCounter_HANDLE_TEXT=null
player HandleCounter_MAX_HANDLE=null
string HandleCounter_MAX_HANDLE_TEXT=null
string HandleCounter_TIME_TEXT=null
player HandleCounter_TIME=null
real HandleCounter_updatePeriod=0.
integer HandleCounter_stackEndTreshold=0
timer HandleCounter_clock=null
integer HandleCounter_seconds=0
integer HandleCounter_maxHandleCount=0
string DebugFile_path=null
string DebugFile_filetype=null
integer DebugFile_lastSavedFile=0
string array DebugFile_filename
string array DebugFile_buffer
integer array DebugFile_content
integer array DebugFile_currentLine
integer array AbilityDefinition_def
integer array BuffDefinition_def
integer ChannelSpellPreset_CHANNEL_ID=0
integer ChannelSpellPreset_visibleval=0
integer ChannelSpellPreset_targetimageval=0
integer ChannelSpellPreset_physicalspellval=0
integer ChannelSpellPreset_universalspellval=0
integer ChannelSpellPreset_uniquecastval=0
string SpellDesignConfig_TITLECOLOR=null
string SpellDesignConfig_TITLE_COOLDOWN=null
string SpellDesignConfig_TITLE_TTYPE=null
string SpellDesignConfig_TITLE_EFFECT=null
hashtable HashMap_ht=null
hashtable HashList_ht=null
integer array HashList_size
timer array CallbackCounted_t
integer array CallbackCounted_count
string ObjectIds_charMap=null
integer PreloadSystem_preloadActions=0
integer PreloadSystem_abilitysToPreload=0
integer PreloadSystem_unitsToPreload=0
integer PreloadSystem_buffsToPreload=0
integer PreloadSystem_itemsToPreload=0
integer PreloadSystem_destructablesToPreload=0
real PreloadSystem_totalTime=0.
unit PreloadSystem_preloadDummy=null
real PreloadSystem_abilityLoadTime=0.
real PreloadSystem_abilityLoadTimeLvlBonus=0.
real PreloadSystem_unitLoadTime=0.
real PreloadSystem_buffLoadTime=0.
real PreloadSystem_itemLoadTime=0.
real PreloadSystem_destructableLoadTime=0.
integer array Ability_id
integer array Ability_lvl
unit array u
destructable array d
boolean OeSetup_compiletime=false
real TrackableEx_doubleClickSpeed=0.
timer array TrackableEx_playerDoubleClickTimer
boolean array TrackableEx_playerClickBefore
integer TrackableEx_trackableOwner=0
integer TrackableEx_trackableObjects=0
trigger TrackableEx_trackTrigger=null
trigger TrackableEx_clickTrigger=null
integer array TrackableEx_onTrack
integer array TrackableEx_onClick
integer array TrackableEx_onDoubleClick
integer array Event_first
integer array Event_last
boolean array Event_checkData
integer array Action_next
integer array Action_prev
integer array Action_ev
integer Array_currentSize=0
timer Setup_timeTest=null
integer Setup_maxBonSize=0
integer Setup_attackRaw=0
integer Setup_attackSpeedRaw=0
integer Setup_armorRaw=0
integer Setup_lifeRaw=0
integer Setup_manaRaw=0
integer Setup_agiRaw=0
integer Setup_strRaw=0
integer Setup_intRaw=0
integer Setup_lifeRegRaw=0
integer Setup_manaRegRaw=0
integer Setup_preloadAbi=0
integer Setup_permAttackTomeId=0
integer Setup_infoFile=0
integer Setup_errorFile=0
integer Setup_debugFile=0
string Setup_charMap=null
integer Setup_allPlayers=0
string Setup_team1=null
string Setup_team2=null
real Setup_recycleGraveyard_x=0.
real Setup_recycleGraveyard_y=0.
real Setup_menuStart_x=0.
real Setup_menuStart_y=0.
hashtable Setup_trackBlacklist=null
integer Setup_tileSize=0
integer Setup_menuHeight=0
integer Setup_menuWidth=0
real Setup_abilityLoadTime=0.
real Setup_abilityLoadTimeLevelBonus=0.
integer array Setup_tracks
integer array ElementLoop_a
integer array ElementLoop_a_2
integer array ElementLoop_b
integer array ElementLoop_b_2
integer array ElementLoop_start
integer array Dot_a
integer array Dot_u
integer array Dot_source
real array Dot_damage
timer array Dot_t
integer LinkedListModule_first=0
integer LinkedListModule_last=0
integer LinkedListModule_size=0
integer array LinkedListModule_prev
integer array LinkedListModule_next
integer array this
integer BuffTypes_buffMap=0
integer BuffTypes_buffCount=0
boolean BuffTypes_compiletime=false
integer array Buff_action
integer array Buff_bon
integer array Buff_u
integer array Buff_btyp
integer array Buff_btyp_2
effect array Buff_fx
timer array Buff_fxTimer
timer array Buff_t
integer array Buff_fxCounter
string array Buff_fxType
string array Buff_attachment
integer array this_2
integer array TextTag_u
texttag array TextTag_tt
timer array TextTag_t
integer array TextTag_tType
integer ShowInstances_classId=0
integer array ShieldList_first
integer array ShieldList_last
real array ShieldList_shieldSum
integer array Shield_prev
integer array Shield_next
integer array Shield_referingList
timer array Shield_t
real array Shield_amount
integer array Shield_target
integer array Shield_shieldDestroyed
string HeroBar_hpColor=null
string HeroBar_hpColorDead=null
string HeroBar_shieldColor=null
string HeroBar_mpColor=null
string HeroBar_mpColorDead=null
string HeroBar_endColor=null
string HeroBar_marker=null
string HeroBar_bar=null
integer HeroBar_realBarCount=0
integer HeroBar_fakeBarCount=0
integer HeroBar_seperateAt=0
timer Bar_updatePos=null
timer Bar_updateVision=null
integer array Bar_owner
boolean array Bar_isVisible
boolean array Bar_check
string array Bar_hpFull
integer array Bar_markerDistance
texttag array Bar_tt
integer LinkedListModule_first_2=0
integer LinkedListModule_last_2=0
integer LinkedListModule_size_2=0
integer array LinkedListModule_next_2
integer array Queue_dummy
integer array Queue_front
integer array Queue_back
integer array Queue_size
integer array SEntry_elem
integer array SEntry_next
integer OrderHandling_smartId=0
integer OrderHandling_stopId=0
integer OrderHandling_attackId=0
integer OrderHandling_scoreboardId=0
integer OrderHandling_exitDetectId=0
integer OrderHandling_skillMenuId=0
integer OrderHandling_stopSpell=0
integer OrderHandling_attackSpell=0
integer OrderHandling_scoreboardSpell=0
integer OrderHandling_exitDetectSpell=0
integer OrderHandling_qSpellNoTarget=0
integer OrderHandling_qSpellUnitTarget=0
integer OrderHandling_qSpellPointTarget=0
integer OrderHandling_qSpellUnitPointTarget=0
integer OrderHandling_wSpellNoTarget=0
integer OrderHandling_wSpellUnitTarget=0
integer OrderHandling_wSpellPointTarget=0
integer OrderHandling_wSpellUnitPointTarget=0
integer OrderHandling_eSpellNoTarget=0
integer OrderHandling_eSpellUnitTarget=0
integer OrderHandling_eSpellPointTarget=0
integer OrderHandling_eSpellUnitPointTarget=0
integer OrderHandling_rSpellNoTarget=0
integer OrderHandling_rSpellUnitTarget=0
integer OrderHandling_rSpellPointTarget=0
integer OrderHandling_rSpellUnitPointTarget=0
integer OrderHandling_dSpellNoTarget=0
integer OrderHandling_dSpellUnitTarget=0
integer OrderHandling_dSpellPointTarget=0
integer OrderHandling_dSpellUnitPointTarget=0
integer OrderHandling_fSpellNoTarget=0
integer OrderHandling_fpellUnitTarget=0
integer OrderHandling_fSpellPointTarget=0
integer OrderHandling_fSpellUnitPointTarget=0
integer array Order_orderId
integer ShowInstances_classId_2=0
integer MoveOrder_moveOrderId=0
real array MoveOrder_pos
real array MoveOrder_pos_2
real array MoveOrder_lastPos
real array MoveOrder_lastPos_2
integer AttackOrder_atkOrderId=0
unit array AttackOrder_target
integer array ObjId_id2
integer array ObjId_id3
boolean PreloadHandler_autoFinish=false
group PreloadHandler_dumg=null
unit PreloadHandler_dum=null
integer Spell_qSpellId=0
integer Spell_wSpellId=0
integer Spell_eSpellId=0
integer Spell_rSpellId=0
integer Spell_dSpellId=0
integer Spell_fSpellId=0
integer array SpellSetup_spell
integer array SpellSetup_spellbook
integer array SpellSetup_maxLvl
integer array SpellSetup_castDummy
integer array SpellSetup_pointCost
integer Spell_cleanSpellbook=0
unit array Spellcast_target
real array Spellcast_pos
real array Spellcast_pos_2
integer array Spellcast_spell
integer array Spell_spell
integer array Spell_castDummy
integer array Spell_lvl
integer array Spell_st
integer array Spell_owner
integer HeroClass_heroCount=0
integer array this_3
real array amount
integer array this_4
real array amount_2
integer array this_5
real array amount_3
integer array this_6
real array amount_4
integer array this_7
real array amount_5
integer array this_8
real array amount_6
integer array this_9
real array amount_7
integer array this_10
real array amount_8
integer array this_11
real array amount_9
integer array this_12
real array amount_10
integer array this_13
real array amount_11
integer array this_14
real array amount_12
integer array this_15
real array amount_13
integer array this_16
real array amount_14
integer array this_17
real array amount_15
integer array this_18
real array amount_16
integer array this_19
real array amount_17
integer array this_20
real array amount_18
integer array this_21
real array amount_19
integer array this_22
real array amount_20
integer array this_23
real array amount_21
integer array this_24
real array amount_22
integer array this_25
real array amount_23
integer array this_26
real array amount_24
integer array this_27
real array amount_25
integer array this_28
real array amount_26
integer array this_29
real array amount_27
integer array this_30
real array amount_28
integer array this_31
real array amount_29
integer array this_32
real array amount_30
integer array this_33
real array amount_31
integer array this_34
real array amount_32
integer array this_35
real array amount_33
integer array this_36
real array amount_34
integer array this_37
real array amount_35
integer array this_38
real array amount_36
integer array this_39
real array amount_37
integer array this_40
real array amount_38
real Unit_bounceFactor=0.
real Unit_knockbackFactor=0.
real Unit_basicAttackspeed=0.
unit array Unit_u
real array Unit_attack
real array Unit_bonusAttack
real array Unit_bonusAttackPer
real array Unit_armor
real array Unit_bonusArmor
real array Unit_bonusArmorPer
real array Unit_life
real array Unit_bonusLife
real array Unit_bonusLifePer
real array Unit_mana
real array Unit_bonusMana
real array Unit_bonusManaPer
real array Unit_lifeReg
real array Unit_bonusLifeReg
real array Unit_bonusLifeRegPer
real array Unit_manaReg
real array Unit_bonusManaReg
real array Unit_bonusManaRegPer
real array Unit_bonusAttackspeed
real array Unit_spellpower
real array Unit_spellpowerPer
real array Unit_movespeed
real array Unit_bonusMovespeed
real array Unit_bonusMovespeedPer
real array Unit_normalReduction
real array Unit_bonusResistance
real array Unit_bonusResistancePer
real array Unit_hitchance
real array Unit_evade
real array Unit_critchance
real array Unit_critdamage
real array Unit_bonusDamage
real array Unit_normalDeflection
real array Unit_lifesteal
integer array Unit_vunerableCount
boolean array Unit_vunerable
integer array Unit_shieldList
integer array Unit_lastDamager
integer array Unit_lastHeroDamager
real array Unit_mass
real array Unit_knockSpeed
real array Unit_knockSpeed_2
real array Unit_radius
real array Unit_height
integer array Unit_lastKnocker
integer array Unit_lastCollision
real array Unit_wallLoc
real array Unit_wallLoc_2
boolean array Unit_hasKnockback
boolean array Unit_isHero
boolean array Unit_isDead
integer array Unit_bounty
integer array Unit_ownerId
player array Unit_owner
integer array Unit_stun
integer array Unit_damageTT
integer array Unit_healTT
integer array Unit_dotTT
real array Unit_systemDamage
real array Unit_totalDamage
integer array Unit_playerDamage
integer array Unit_allDots
integer array Unit_allBuffs
integer array Unit_takeHitPre
integer array Unit_takeHitOn
integer array Unit_causeHitPre
integer array Unit_causeHitOn
integer array Unit_takeCritHitOn
integer array Unit_causeCritHitOn
integer array Unit_onDodge
integer array Unit_onMiss
integer array Unit_onDeath
integer array Unit_causeDeath
trigger Unit_damageDetect=null
integer ShowInstances_classId_3=0
integer CreationEvent_create=0
integer CreationEvent_dest=0
integer array this_41
trigger Hero_castDetect=null
integer Hero_abiIdToSpell=0
timer Hero_checkOrders=null
integer Hero_toMove=0
timer Hero_movespeedX=null
boolean array Hero_onAdd
boolean array Hero_wantCapture
integer array Hero_channelCancel
integer array Hero_animationIndex
integer array Hero_hb
integer array Hero_enableAbility
boolean array Hero_acceptOrders
integer array Hero_mainOrder
integer array Hero_lastOrdered
integer array Hero_castQueue
integer array Hero_spellQ
integer array Hero_spellW
integer array Hero_spellE
integer array Hero_spellR
integer array Hero_spellD
integer array Hero_spellF
trigger GetOrders_orderDetect=null
integer LinkedListModule_first_3=0
integer LinkedListModule_last_3=0
integer LinkedListModule_size_3=0
integer array Stun_u
timer array Stun_t
integer array PreDamageData_source
integer array PreDamageData_target
integer array PreDamageEvent_target
integer array OnDamageData_source
integer array OnDamageData_target
real array OnDamageData_damage
boolean array OnDamageData_stop
integer array OnDamageEvent_target
boolean array SpellData_spellSuccess
integer UnitEvents_pullOnCreate=0
integer array Units_source
integer array Units_target
integer UnitClass_knocklist=0
integer UnitClass_last=0
rect array Aura_r
real array Aura_radius
boolexpr array Aura_filter
integer array Aura_u
group array Aura_g
integer array Aura_enter
integer array Aura_leave
image array AreaMarker_img
timer array AreaMarker_t
integer UnitType_originId=0
integer UnitType_typesByName=0
integer UnitType_pos=0
boolean UnitType_compiletime=false
integer TextTagEx_standardColor_red=0
integer TextTagEx_standardColor_green=0
integer TextTagEx_standardColor_blue=0
integer TextTagEx_standardColor_alpha=0
real TextTagEx_resizeRateConstant=0.
integer TextTagEx_fadeTicks=0
integer TextTagEx_resizeTicks=0
integer FontArial_FONT_HEIGHT=0
integer FontArial_FONT_RESOLUTION=0
string array FontArial_paths
integer array FontArial_widths
integer TextSplat_DISABLE_COLOR_ALPHA=0
real TextSplat_DISABLE_MAX_WIDTH=0.
integer TextSplat_spaceWidth=0
real array TextSplat_pos
real array TextSplat_pos_2
real array TextSplat_dimensions
real array TextSplat_dimensions_2
real array TextSplat_cursor
real array TextSplat_cursor_2
real array TextSplat_maxWidth
integer array TextSplat_images
integer array TextSplat_layer
real array TextSplat_fontSize
image array ImageListEntry_img
integer array ImageListEntry_prev
integer array ImageList_last
integer array Stack_dummy
integer array Stack_top
integer array Stack_size
integer array SEntry_elem_2
integer array SEntry_prev
string array Widget_backgroundTexture
integer array Widget_pos
integer array Widget_pos_2
integer array Widget_size
integer array Widget_size_2
boolean ClassInit_helper=false
integer array Observable_content
integer array Observable_click
integer array Observable_dClick
integer array Observable_track
integer array Observable_unTrack
boolean array Observable_playClickAnimation
boolean array Observable_playDoubleClickAnimation
boolean array Observable_playHoverAnimation
integer array WindowManager_currentWindow
integer array WindowManager_currentObservable
integer array Window_content
integer array Window_trackMap
integer array Window_wantToClose
integer array Window_voidClick
integer array w
real array TextBox_maxSpace
string array TextBox_content
integer array TextBox_splat
real array TextBox_fontsize
integer array TextBox_col
integer array TextBox_col_2
integer array TextBox_col_3
image array ImageEx_content
integer array ImageList_first
integer array ImageList_last_2
image array ListImage_img
integer array ListImage_next
integer array ImageIterator_pos
integer Pane_tileSize=0
integer Pane_tileDimensions_x=0
integer Pane_tileDimensions_y=0
string Pane_horizontalSide=null
string Pane_verticalSide=null
string Pane_leftBotCorner=null
string Pane_rightBotCorner=null
string Pane_rightTopCorner=null
string Pane_leftTopCorner=null
real Pane_sizeFix_x=0.
real Pane_sizeFix_y=0.
real Pane_posFixBot_x=0.
real Pane_posFixBot_y=0.
real Pane_posFixTop_x=0.
real Pane_posFixTop_y=0.
real Pane_posFixRight_x=0.
real Pane_posFixRight_y=0.
real Pane_posFixLeft_x=0.
real Pane_posFixLeft_y=0.
integer array Pane_onExit
integer array Pane_list
integer array Pane_content
integer array this_42
integer array this_43
integer array FreeNode_dataPos
integer array FreeNode_size
integer array FreeNode_next
integer ArrayList_freeList=0
integer Model_dummyID=0
unit array Model_u
integer array Model_col
integer array Model_col_2
integer array Model_col_3
integer array IdGenerator_i1
integer array IdGenerator_i2
integer array IdGenerator_i3
integer array IdGenerator_i4
integer IconType_iconMap1=0
integer IconType_iconMap2=0
integer IconType_ids=0
boolean IconType_compiletime=false
real IconType_restColor=0.
real Icon_animationSpeedHover=0.
real Icon_animationSpeedHit=0.
integer Icon_dummyIcon=0
integer array Icon_typ
integer array Icon_typ_2
real array Icon_realPos
real array Icon_realPos_2
integer array Icon_scale
string Button_buttonTexture=null
real Button_sizeFix_x=0.
real Button_sizeFix_y=0.
real Button_posFix_x=0.
real Button_posFix_y=0.
integer array Button_splat
string array Button_name
integer CreationEvent_create_2=0
integer CreationEvent_dest_2=0
integer LinkedListModule_first_4=0
integer LinkedListModule_last_4=0
integer LinkedListModule_size_4=0
integer LinkedListModule_first_5=0
integer LinkedListModule_last_5=0
integer LinkedListModule_size_5=0
real RunningMazeChecker_tileWidth=0.
string Lightning_CHAIN_LIGHTNING_PRIMARY=null
string Lightning_CHAIN_LIGHTNING_SECONDARY=null
string Lightning_DRAIN=null
string Lightning_DRAIN_LIFE=null
string Lightning_DRAIN_MANA=null
string Lightning_FINGER_OF_DEATH=null
string Lightning_FORKED_LIGHTNING=null
string Lightning_HEALING_WAVE_PRIMARY=null
string Lightning_HEALING_WAVE_SECONDARY=null
string Lightning_LIGHTNING_ATTACK=null
string Lightning_MAGIC_LEASH=null
string Lightning_MANA_BURN=null
string Lightning_MANA_FLARE=null
string Lightning_SPIRIT_LINK=null
integer CaptureAnimation_captureTimer=0
real ControlPoint_range=0.
real ControlPoint_captureRange=0.
integer ControlPoint_model=0
integer ControlPoint_morphAbi=0
real ControlPoint_height=0.
real ControlPoint_baseDmg=0.
real ControlPoint_dmgPerLvl=0.
real ControlPoint_percentualDmg=0.
real ControlPoint_heroDmgFactor=0.
real ControlPoint_unitDmgFactor=0.
real ControlPoint_creepDmg=0.
real ControlPoint_captureSpeedPoint=0.
real ControlPoint_captureSpeedHero=0.
real ControlPoint_baseSHeal=0.
real ControlPoint_heroSHealFactor=0.
real ControlPoint_unitSHealFactor=0.
integer SamplePointSpellSetup_setup=0
timer array SamplePointSpell_t
integer TestSpell1Setup_setup=0
integer TestSpell1_animationType=0
integer array TestSpell1_setup
integer array TestSpell1_caster
timer array TestSpell1_t
unit array RockThrow_dummy
unit array RockThrow_u
real array RockThrow_range
real array RockThrow_distd
real array RockThrow_x
real array RockThrow_y
real array RockThrow_z
real array RockThrow_grav
real array RockThrow_currentZ
real array RockThrow_ang
integer array RockThrow_i
integer array RockThrow_c
timer array RockThrow_t
group array RockThrow_g
effect array RockThrow_e
timer array Pull2_t
unit array Pull2_u
unit array Pull2_ut
lightning array Pull2_l
integer array Pull2_i
integer array Pull2_imax
integer array Pull2_uut
timer array Missle_t
integer array Missle_fx
real array Missle_radius
real array Missle_vel
real array Missle_vel_2
integer array Missle_dl
integer array Missle_atHit
integer array Missle_atEnd
integer array Missle_source
boolexpr array Missle_filter
trigger array DelayedDestroy_things
integer DelayedDestroy_numberOfThings=0
timer DelayedDestroy_t=null
integer Cast_casts=0
integer array Cast_abiCode
integer OnDamage_damageActions=0
real Missle_missleStartSpeed=0.
real Missle_speedLost=0.
real Missle_speedAccel=0.
real Missle_missleRadius=0.
real Missle_knockback=0.
real Missle_knockbackRange=0.
integer array Missle_missle
integer array Missle_owner
integer array Missle_target
real array Missle_speed
real array Missle_speed_2
timer array Missle_t_2
timer array Missle_destroyTimer
boolean array Missle_canHitCaster
integer PlayerClass_lastp=0
real PlayerClass_camDistance=0.
real PlayerClass_camAngle=0.
real PlayerClass_camWidth=0.
real PlayerClass_camHeightLow=0.
real PlayerClass_camHeightHigh=0.
integer PlayerClass_playerData=0
player array Player_p
integer array Player_h
string array Player_team
integer array Player_kills
integer array Player_assists
integer array Player_death
boolean array Player_selectionOn
timer array Player_camSet
real array Player_sightfield
real array Player_perspektiv
integer array StringList_first
integer array StringList_last
integer HeroType_basicId=0
integer HeroType_basicMovespeed=0
string HeroType_heroAbis=null
integer HeroType_basicSpells=0
real HeroType_castPoint=0.
real HeroType_castBackPoint=0.
real HeroType_selectionRaduis=0.
real HeroType_attackCooldown=0.
string HeroType_attackType=null
integer HeroType_basicAttack=0
integer HeroType_gen=0
integer CustomBar_DEFAULT_BACKGROUND=0
integer CustomBar_DEFAULT_FOREGROUND=0
integer CustomBar_MAX_GRADIENTS=0
force CustomBar_tempForce=null
integer array CustomBar_bars
integer CustomBar_count=0
timer CustomBar_animationTimer=null
texttag array CustomBar_t
real array CustomBar_position
real array CustomBar_position_2
real array CustomBar_position_3
integer array CustomBar_lockindex
boolean array CustomBar_locked
unit array CustomBar_u
real array CustomBar_xOffset
real array CustomBar_yOffset
trigger GameStart_testt=null
integer GameStart_lastBon=0
real GameStart_tvec_x=0.
real GameStart_tvec_y=0.
real GameStart_hp=0.
integer GameStart_testc=0
integer GameStart_testi=0
real GameStart_ttSize=0.
real GameStart_testr=0.
string GameStart_tests=null
integer GameStart_testSpell=0
string GameStart_testChar=null
group GameStart_testg=null
integer GameStart_progress=0
integer GameStart_recursionCounter=0
integer GameStart_callLimit=0
integer GameStart_tList=0
integer GameStart_lList=0
integer GameStart_shopWindow=0
integer GameStart_scoreWindow=0
integer GameStart_guideWindow=0
real Preload_maxProgress=0.
string array Preload_initOrder
real Preload_progress=0.
integer Preload_preloadStatus=0
integer Preload_preloadEnd=0
boolean Preload_showProgress=false
integer Preload_loopCounter=0
boolean ClassInit_helper_2=false
integer array shopT1
integer array shopT2
integer array shopT3
integer array shopT4
integer array shopT5
integer array shopT6
integer array shopT7
integer array shopT8
integer array shopB
integer array shopOb
integer array scoreB
integer array scoreOb
integer array guideB
integer array guideOb
integer array exitB
integer array exitOb
integer array buyB
integer array shopPright
integer array shopPmiddle
integer array shopPleft
integer array shopPleftBot
integer array shopPleftBot2
integer array shop1
integer array shop2
integer array shop3
integer array shop4
integer array shop5
integer array shop6
integer array shop7
integer array shop8
integer array shop9
integer array shop10
integer array shop11
integer array shop12
integer array shop13
integer array shop14
integer array shop15
integer array shop16
integer array shop17
integer array shop18
integer array shop19
integer array shop20
integer array shop21
integer array shop22
integer array shop23
integer array shop24
integer array shop25
integer array shop26
integer array shop27
integer array shop28
integer array shop29
integer array shop30
integer array shop31
integer array shop32
integer array shop25a
integer array shop26a
integer array shop27a
integer array shop28a
integer array shop29a
integer array shop30a
integer array shop31a
integer array shop32a
integer array shop33
integer array shop34
integer array shop35
integer array shop36
integer array shop37
integer array shop38
integer array shop39
integer array shop40
integer array shop41
integer array shop42
integer array shop43
integer array shop44
integer array shop45
integer array shop46
integer array shop47
integer RTable_tableSize=0
integer array LinkedList_nextFree
integer LinkedList_firstFree=0
integer LinkedList_maxIndex=0
integer array LinkedList_typeId
integer array LLEntry_nextFree
integer LLEntry_firstFree=0
integer LLEntry_maxIndex=0
integer array LLEntry_typeId
integer array LLIterator_nextFree
integer LLIterator_firstFree=0
integer LLIterator_maxIndex=0
integer array LLIterator_typeId
integer LinkedListPredicate_firstFree=0
integer LinkedListPredicate_maxIndex=0
integer LinkedListUpdater_firstFree=0
integer LinkedListUpdater_maxIndex=0
integer A_firstFree=0
integer A_maxIndex=0
integer B_firstFree=0
integer B_maxIndex=0
integer array Table_nextFree
integer Table_firstFree=0
integer Table_maxIndex=0
integer array Table_typeId
integer StringIterator_firstFree=0
integer StringIterator_maxIndex=0
integer StringLines_firstFree=0
integer StringLines_maxIndex=0
integer ForceIterator_firstFree=0
integer ForceIterator_maxIndex=0
integer W3UDefinition_firstFree=0
integer W3UDefinition_maxIndex=0
integer DummyRecycler_firstFree=0
integer DummyRecycler_maxIndex=0
integer array ArrayQueue_nextFree
integer ArrayQueue_firstFree=0
integer ArrayQueue_maxIndex=0
integer array ArrayQueue_typeId
integer array DelayNode_nextFree
integer DelayNode_firstFree=0
integer DelayNode_maxIndex=0
integer array DelayNode_typeId
integer array Fx_nextFree
integer Fx_firstFree=0
integer Fx_maxIndex=0
integer array Fx_typeId
integer array DebugFile_nextFree
integer DebugFile_firstFree=0
integer DebugFile_maxIndex=0
integer array DebugFile_typeId
integer array AbilityDefinition_nextFree
integer AbilityDefinition_firstFree=0
integer AbilityDefinition_maxIndex=0
integer array AbilityDefinition_typeId
integer array BuffDefinition_nextFree
integer BuffDefinition_firstFree=0
integer BuffDefinition_maxIndex=0
integer array BuffDefinition_typeId
integer array HashMap_nextFree
integer HashMap_firstFree=0
integer HashMap_maxIndex=0
integer array HashMap_typeId
integer array HashList_nextFree
integer HashList_firstFree=0
integer HashList_maxIndex=0
integer array HashList_typeId
integer HLIterator_firstFree=0
integer HLIterator_maxIndex=0
integer array CallbackSingle_nextFree
integer CallbackSingle_firstFree=0
integer CallbackSingle_maxIndex=0
integer array CallbackSingle_typeId
integer CallbackPeriodic_firstFree=0
integer CallbackPeriodic_maxIndex=0
integer array CallbackCounted_nextFree
integer CallbackCounted_firstFree=0
integer CallbackCounted_maxIndex=0
integer array CallbackCounted_typeId
integer array PreloadAction_nextFree
integer PreloadAction_firstFree=0
integer PreloadAction_maxIndex=0
integer array PreloadAction_typeId
integer array Ability_nextFree
integer Ability_firstFree=0
integer Ability_maxIndex=0
integer array Ability_typeId
integer Table3D_firstFree=0
integer Table3D_maxIndex=0
integer array TrackableAction_nextFree
integer TrackableAction_firstFree=0
integer TrackableAction_maxIndex=0
integer array TrackableAction_typeId
integer array TrackableEx_nextFree
integer TrackableEx_firstFree=0
integer TrackableEx_maxIndex=0
integer array TrackableEx_typeId
integer array Event_nextFree
integer Event_firstFree=0
integer Event_maxIndex=0
integer array Event_typeId
integer array Action_nextFree
integer Action_firstFree=0
integer Action_maxIndex=0
integer array Action_typeId
integer Array_firstFree=0
integer Array_maxIndex=0
integer array ElementLoop_nextFree
integer ElementLoop_firstFree=0
integer ElementLoop_maxIndex=0
integer array ElementLoop_typeId
integer array Dot_nextFree
integer Dot_firstFree=0
integer Dot_maxIndex=0
integer array Dot_typeId
integer array Buff_nextFree
integer Buff_firstFree=0
integer Buff_maxIndex=0
integer array Buff_typeId
integer array TextTag_nextFree
integer TextTag_firstFree=0
integer TextTag_maxIndex=0
integer array TextTag_typeId
integer ShieldList_firstFree=0
integer ShieldList_maxIndex=0
integer array ShieldList_typeId
integer array Shield_nextFree
integer Shield_firstFree=0
integer Shield_maxIndex=0
integer array Shield_typeId
integer Bar_firstFree=0
integer Bar_maxIndex=0
integer array Bar_typeId
integer BarTest_firstFree=0
integer BarTest_maxIndex=0
integer Queue_firstFree=0
integer Queue_maxIndex=0
integer array Queue_typeId
integer array SEntry_nextFree
integer SEntry_firstFree=0
integer SEntry_maxIndex=0
integer array SEntry_typeId
integer SIterator_firstFree=0
integer SIterator_maxIndex=0
integer array Order_nextFree
integer Order_firstFree=0
integer Order_maxIndex=0
integer array Order_typeId
integer array ObjId_nextFree
integer ObjId_firstFree=0
integer ObjId_maxIndex=0
integer array ObjId_typeId
integer array SpellSetup_nextFree
integer SpellSetup_firstFree=0
integer SpellSetup_maxIndex=0
integer array SpellSetup_typeId
integer array Spellcast_nextFree
integer Spellcast_firstFree=0
integer Spellcast_maxIndex=0
integer array Spellcast_typeId
integer Spell_firstFree=0
integer Spell_maxIndex=0
integer array Spell_typeId
integer Unit_firstFree=0
integer Unit_maxIndex=0
integer array Unit_typeId
integer array Bonus_nextFree
integer Bonus_firstFree=0
integer Bonus_maxIndex=0
integer array Bonus_typeId
integer BonusType_firstFree=0
integer BonusType_maxIndex=0
integer array Stun_nextFree
integer Stun_firstFree=0
integer Stun_maxIndex=0
integer array Stun_typeId
integer array PreDamageData_nextFree
integer PreDamageData_firstFree=0
integer PreDamageData_maxIndex=0
integer array PreDamageData_typeId
integer array OnDamageData_nextFree
integer OnDamageData_firstFree=0
integer OnDamageData_maxIndex=0
integer array OnDamageData_typeId
integer SpellData_firstFree=0
integer SpellData_maxIndex=0
integer array Units_nextFree
integer Units_firstFree=0
integer Units_maxIndex=0
integer array Units_typeId
integer Aura_firstFree=0
integer Aura_maxIndex=0
integer array Aura_typeId
integer array AreaMarker_nextFree
integer AreaMarker_firstFree=0
integer AreaMarker_maxIndex=0
integer array AreaMarker_typeId
integer UnitType_firstFree=0
integer UnitType_maxIndex=0
integer TextTagEx_firstFree=0
integer TextTagEx_maxIndex=0
integer array TextSplat_nextFree
integer TextSplat_firstFree=0
integer TextSplat_maxIndex=0
integer array TextSplat_typeId
integer array ImageListEntry_nextFree
integer ImageListEntry_firstFree=0
integer ImageListEntry_maxIndex=0
integer array ImageListEntry_typeId
integer array ImageList_nextFree
integer ImageList_firstFree=0
integer ImageList_maxIndex=0
integer array ImageList_typeId
integer ImageListIterator_firstFree=0
integer ImageListIterator_maxIndex=0
integer array Stack_nextFree
integer Stack_firstFree=0
integer Stack_maxIndex=0
integer array Stack_typeId
integer array SEntry_nextFree_2
integer SEntry_firstFree_2=0
integer SEntry_maxIndex_2=0
integer array SEntry_typeId_2
integer SIterator_firstFree_2=0
integer SIterator_maxIndex_2=0
integer array Widget_nextFree
integer Widget_firstFree=0
integer Widget_maxIndex=0
integer array Widget_typeId
integer array PlayerAction_nextFree
integer PlayerAction_firstFree=0
integer PlayerAction_maxIndex=0
integer array PlayerAction_typeId
integer WindowManager_firstFree=0
integer WindowManager_maxIndex=0
integer array Window_nextFree
integer Window_firstFree=0
integer Window_maxIndex=0
integer array Window_typeId
integer array ImageList_nextFree_2
integer ImageList_firstFree_2=0
integer ImageList_maxIndex_2=0
integer array ImageList_typeId_2
integer array ListImage_nextFree
integer ListImage_firstFree=0
integer ListImage_maxIndex=0
integer array ListImage_typeId
integer array ImageIterator_nextFree
integer ImageIterator_firstFree=0
integer ImageIterator_maxIndex=0
integer array ImageIterator_typeId
integer array FreeNode_nextFree
integer FreeNode_firstFree=0
integer FreeNode_maxIndex=0
integer array FreeNode_typeId
integer ArrayList_firstFree=0
integer ArrayList_maxIndex=0
integer ArrayListIterator_firstFree=0
integer ArrayListIterator_maxIndex=0
integer array IdGenerator_nextFree
integer IdGenerator_firstFree=0
integer IdGenerator_maxIndex=0
integer array IdGenerator_typeId
integer UnitIndex_firstFree=0
integer UnitIndex_maxIndex=0
integer A_firstFree_2=0
integer A_maxIndex_2=0
integer MazeChecker_firstFree=0
integer MazeChecker_maxIndex=0
integer CaptureData_firstFree=0
integer CaptureData_maxIndex=0
integer array SamplePointSpell_nextFree
integer SamplePointSpell_firstFree=0
integer SamplePointSpell_maxIndex=0
integer array SamplePointSpell_typeId
integer array TestSpell1_nextFree
integer TestSpell1_firstFree=0
integer TestSpell1_maxIndex=0
integer array TestSpell1_typeId
integer RockThrow_firstFree=0
integer RockThrow_maxIndex=0
integer array RockThrow_typeId
integer array Pull2_nextFree
integer Pull2_firstFree=0
integer Pull2_maxIndex=0
integer array Pull2_typeId
integer array Missle_nextFree
integer Missle_firstFree=0
integer Missle_maxIndex=0
integer array Missle_typeId
integer TriggerDelayedDestroy_firstFree=0
integer TriggerDelayedDestroy_maxIndex=0
integer array Cast_nextFree
integer Cast_firstFree=0
integer Cast_maxIndex=0
integer array Cast_typeId
integer OnDamage_firstFree=0
integer OnDamage_maxIndex=0
integer array Missle_nextFree_2
integer Missle_firstFree_2=0
integer Missle_maxIndex_2=0
integer array Missle_typeId_2
integer array Player_nextFree
integer Player_firstFree=0
integer Player_maxIndex=0
integer array Player_typeId
integer ItemType_firstFree=0
integer ItemType_maxIndex=0
integer Item_firstFree=0
integer Item_maxIndex=0
integer array StringList_nextFree
integer StringList_firstFree=0
integer StringList_maxIndex=0
integer array StringList_typeId
integer String_firstFree=0
integer String_maxIndex=0
integer HeroType_firstFree=0
integer HeroType_maxIndex=0
integer array CustomBar_nextFree
integer CustomBar_firstFree=0
integer CustomBar_maxIndex=0
integer array CustomBar_typeId
integer Preload_firstFree=0
integer Preload_maxIndex=0
integer RTable_firstFree=0
integer RTable_maxIndex=0
unit array ArrayQueue_units_0
unit array ArrayQueue_units_1
unit array ArrayQueue_units_2
unit array ArrayQueue_units_3
unit array ArrayQueue_units_4
unit array ArrayQueue_units_5
destructable array Icon_structs_0
destructable array Icon_structs_1
destructable array Icon_structs_2
destructable array Icon_structs_3
destructable array Icon_structs_4
destructable array Icon_structs_5
destructable array Icon_structs_6
destructable array Icon_structs_7
destructable array Icon_structs_8
destructable array Icon_structs_9
destructable array Icon_structs_10
destructable array Icon_structs_11
boolean array Icon_isDisabled_0
boolean array Icon_isDisabled_1
boolean array Icon_isDisabled_2
boolean array Icon_isDisabled_3
boolean array Icon_isDisabled_4
boolean array Icon_isDisabled_5
boolean array Icon_isDisabled_6
boolean array Icon_isDisabled_7
boolean array Icon_isDisabled_8
boolean array Icon_isDisabled_9
boolean array Icon_isDisabled_10
boolean array Icon_isDisabled_11
real item_getPos_return_x=0.
real item_getPos_return_y=0.
real vec3_toVec2_return_x=0.
real vec3_toVec2_return_y=0.
real vec2_withZ_return_x=0.
real vec2_withZ_return_y=0.
real vec2_withZ_return_z=0.
real angle_toVec_return_x=0.
real angle_toVec_return_y=0.
real vec2_op_plus_return_x=0.
real vec2_op_plus_return_y=0.
real vec2_op_minus_return_x=0.
real vec2_op_minus_return_y=0.
real vec2_op_mult_return_x=0.
real vec2_op_mult_return_y=0.
real vec2_polarOffset_return_x=0.
real vec2_polarOffset_return_y=0.
real vec2_setLength_return_x=0.
real vec2_setLength_return_y=0.
real vec2_toVec3_return_x=0.
real vec2_toVec3_return_y=0.
real vec2_toVec3_return_z=0.
real vec3_project_return_x=0.
real vec3_project_return_y=0.
real vec3_project_return_z=0.
real dispatch_Hero_getBarPos_return_x=0.
real dispatch_Hero_getBarPos_return_y=0.
real dispatch_Hero_getBarPos_return_z=0.
real unit_getPos_return_x=0.
real unit_getPos_return_y=0.
real getPathingNormal_return_x=0.
real getPathingNormal_return_y=0.
real getBounceVec_return_x=0.
real getBounceVec_return_y=0.
integer color_withAlpha_return_red=0
integer color_withAlpha_return_green=0
integer color_withAlpha_return_blue=0
integer color_withAlpha_return_alpha=0
integer element_op_plus_return_x=0
integer element_op_plus_return_y=0
integer element_op_minus_return_x=0
integer element_op_minus_return_y=0
integer dispatch_ElementLoop_next_return_x=0
integer dispatch_ElementLoop_next_return_y=0
real element_toVec_return_x=0.
real element_toVec_return_y=0.
integer getIconType_return_normalId=0
integer getIconType_return_diableId=0
real dispatch_Fx_getPos2_return_x=0.
real dispatch_Fx_getPos2_return_y=0.
real Fx_getPos2_return_x=0.
real Fx_getPos2_return_y=0.
integer ElementLoop_next_return_x=0
integer ElementLoop_next_return_y=0
real Hero_getBarPos_return_x=0.
real Hero_getBarPos_return_y=0.
real Hero_getBarPos_return_z=0.
code ref_function_RegisterDestDeathInRegionEnum=null
code ref_function_SetCineModeVolumeGroupsImmediateBJ=null
code ref_function_SetSpeechVolumeGroupsImmediateBJ=null
code ref_function_VolumeGroupResetImmediateBJ=null
code ref_function_RandomItemInRectBJEnum=null
code ref_function_GetLastCreatedGroupEnum=null
code ref_function_DelayedSuspendDecayStopAnimEnum=null
code ref_function_DelayedSuspendDecayStopAnimEnum_2=null
code ref_function_DelayedSuspendDecayFleshEnum=null
code ref_function_DelayedSuspendDecayBoneEnum=null
code ref_function_DelayedSuspendDecayStopAnimEnum_3=null
code ref_function_DelayedSuspendDecay=null
code ref_function_SelectGroupBJEnum=null
code ref_function_SelectGroupBJEnum_2=null
code ref_function_IsUnitGroupDeadBJEnum=null
code ref_function_IsUnitGroupEmptyBJEnum=null
code ref_function_IsUnitGroupInRectBJEnum=null
code ref_function_WakePlayerUnitsEnum=null
code ref_function_PauseAllUnitsBJEnum=null
code ref_function_RandomDestructableInRectBJEnum=null
code ref_function_NudgeUnitsInRectEnum=null
code ref_function_NudgeItemsInRectEnum=null
code ref_function_NearbyElevatorExistsEnum=null
code ref_function_FindElevatorWallBlockerEnum=null
code ref_function_GroupAddGroupEnum=null
code ref_function_GroupRemoveGroupEnum=null
code ref_function_GroupPickRandomUnitEnum=null
code ref_function_ForcePickRandomPlayerEnum=null
code ref_function_CountUnitsInGroupEnum=null
code ref_function_CountPlayersInForceEnum=null
code ref_function_GetRandomSubGroupEnum=null
code ref_function_MakeUnitsPassiveForPlayerEnum=null
code ref_function_CustomVictoryOkBJ=null
code ref_function_CustomVictoryQuitBJ=null
code ref_function_CustomDefeatRestartBJ=null
code ref_function_CustomDefeatReduceDifficultyBJ=null
code ref_function_CustomDefeatLoadBJ=null
code ref_function_CustomDefeatQuitBJ=null
code ref_function_CancelCineSceneBJ=null
code ref_function_FinishCinematicFadeBJ=null
code ref_function_ContinueCinematicFadeBJ=null
code ref_function_TriggerActionUnitRescuedBJ=null
code ref_function_MakeUnitRescuableToForceBJEnum=null
code ref_function_SetPlayerColorBJEnum=null
code ref_function_MeleeGrantItemsToTrainedHero=null
code ref_function_MeleeGrantItemsToHiredHero=null
code ref_function_MeleeClearExcessUnit=null
code ref_function_MeleeEnumFindNearestMine=null
code ref_function_MeleeDoDefeatEnum=null
code ref_function_MeleeDoVictoryEnum=null
code ref_function_MeleeCrippledPlayerTimeout=null
code ref_function_MeleeDoDrawEnum=null
code ref_function_MeleeDoDefeatEnum_2=null
code ref_function_MeleeDoVictoryEnum_2=null
code ref_function_MeleeTriggerTournamentFinishSoon=null
code ref_function_MeleeTriggerTournamentFinishNow=null
code ref_function_MeleeTriggerActionConstructCancel=null
code ref_function_MeleeTriggerActionUnitDeath=null
code ref_function_MeleeTriggerActionUnitConstructionStart=null
code ref_function_MeleeTriggerActionPlayerDefeated=null
code ref_function_MeleeTriggerActionPlayerLeft=null
code ref_function_MeleeTriggerActionAllianceChange=null
code ref_function_MeleeTriggerActionPlayerLeft_2=null
code ref_function_MeleeTriggerActionAllianceChange_2=null
code ref_function_SetDNCSoundsDawn=null
code ref_function_SetDNCSoundsDusk=null
code ref_function_SetDNCSoundsDay=null
code ref_function_SetDNCSoundsNight=null
code ref_function_IssueHauntOrderAtLocBJFilter=null
code ref_function_EnumDestructablesInCircleBJFilter=null
code ref_function_GetUnitsInRectOfPlayerFilter=null
code ref_function_GetUnitsOfTypeIdAllFilter=null
code ref_function_GetUnitsOfPlayerAndTypeIdFilter=null
code ref_function_MeleeTrainedUnitIsHeroBJFilter=null
code ref_function_LivingPlayerUnitsOfTypeIdFilter=null
code ref_function_QueuedTriggerDoneBJ=null
code ref_function_UpdateEachStockBuildingEnum=null
code ref_function_PerformStockUpdates=null
code ref_function_StartStockUpdates=null
code ref_function_RemovePurchasedItem=null
code ref_function_MarkGameStarted=null
code ref_function_Trig_Unbezeichneter_Ausl__ser_003_Actions=null
code ref_function_hideItem=null
code ref_function_bridge_resetCam=null
code ref_function_bridge_resetCam_2=null
code ref_function_bridge_resetCam_3=null
code ref_function_ForceIterator_callback=null
code ref_function_GroupAddGroupEnum_2=null
code ref_function_bridge_DelayNode_recycle=null
code ref_function_bridge_DelayNode_recycle_2=null
code ref_function_bridge_DelayNode_recycle_3=null
code ref_function_bridge_destroyTimedEffect=null
code ref_function_bridge_destroyTimedFx=null
code ref_function_actions=null
code ref_function_callback=null
code ref_function_bridge_CallbackPeriodic_staticCallback=null
code ref_function_bridge_CallbackCounted_staticCallback=null
code ref_function_bridge_CallbackSingle_staticCallback=null
code ref_function_bridge_closure_impl=null
code ref_function_bridge_Dot_timerDestroyDot=null
code ref_function_bridge_Buff_createEffect=null
code ref_function_bridge_Buff_timerDestroyBuff=null
code ref_function_bridge_TextTag_destroyTextTag=null
code ref_function_bridge_TextTag_destroyTextTag_2=null
code ref_function_bridge_TextTag_destroyTextTag_3=null
code ref_function_bridge_Shield_onExpire=null
code ref_function_bridge_Bar_callUpdateEx=null
code ref_function_bridge_Spell_timedDisableCastDummy=null
code ref_function_notUnit=null
code ref_function_bridge_Unit_callMakeVunerable=null
code ref_function_bridge_Stun_destroyStun=null
code ref_function_bridge_Hero_enableAbilityTimed=null
code ref_function_bridge_Stun_destroyStun_2=null
code ref_function_bridge_Aura_callCheck=null
code ref_function_bridge_AreaMarker_destr=null
code ref_function_bridge_playAnimation=null
code ref_function_bridge_SamplePointSpell_callCallback=null
code ref_function_TestSpell1_bla=null
code ref_function_bridge_TestSpell1_callCallback=null
code ref_function_bridge_RockThrow_rockMoveCall=null
code ref_function_bridge_Pull2_blackHCall=null
code ref_function_bridge_Missle_callMove=null
code ref_function_bridge_Missle_callMove_2=null
code ref_function_DelayedDestroy_destroyAllThings=null
code ref_function_bridge_OnDamage_damageHandler=null
code ref_function_bridge_closure_impl_2=null
code ref_function_bridge_closure_impl_3=null
code ref_function_bridge_Player_setCam=null
code ref_function_CustomBar_copyForce=null
code ref_function_CustomBar_lockCallback=null
code ref_function_bridge_CustomBar_fadeOutCallback=null
code ref_function_bridge_Preload_preload=null
code ref_function_bridge_Preload_preload_2=null
code ref_function_bridge_Preload_preload_3=null
code ref_function_switchDebug=null
code ref_function_createMultiboard=null
code ref_function_updateTime=null
code ref_function_bridge_closure_impl_4=null
code ref_function_bridge_closure_impl_5=null
code ref_function_bridge_Bar_updatePos=null
code ref_function_bridge_Bar_updateVision=null
code ref_function_finishPreload=null
code ref_function_bridge_Hero_handleCasts=null
code ref_function_bridge_closure_impl_6=null
code ref_function_bridge_GetOrders_callOnOrder=null
code ref_function_bridge_Unit_tookDamage=null
code ref_function_spellCondition=null
code ref_function_bridge_spellStart=null
code ref_function_bridge_handleCasts=null
code ref_function_bridge_setCallLimit=null
code ref_function_bridge_Dot_loopList=null
code ref_function_bridge_callKnockback=null
code ref_function_bridge_camTest=null
code ref_function_onEsc=null
timer getTimertempReturn=null
unit group_nexttempReturn=null
image createImagetempReturn=null
image createImagetempReturn_2=null
unit DummyRecycler_gettempReturn=null
unit createDummytempReturn=null
image ImageIterator_nexttempReturn=null
player dispatch_Table_loadPlayertempReturn=null
effect dispatch_Table_loadEffecttempReturn=null
unit dispatch_ArrayQueue_dequeuetempReturn=null
image dispatch_ImageIterator_nexttempReturn=null
unit ArrayQueue_units_gettempReturn=null
destructable Icon_structs_gettempReturn=null
endglobals
function CreateBuildingsForPlayer1 takes nothing returns nothing
	local player p = Player(1)
	call CreateUnit(p, 1869050469, 2816.0,  - 3008.0, 270.000)
	set p = null
endfunction

function CreatePlayerBuildings takes nothing returns nothing
	call CreateBuildingsForPlayer1()
endfunction

function CreateUnitsForPlayer0 takes nothing returns nothing
	local player p = Player(0)
	call CreateUnit(p, 1331850337, 3083.8,  - 3295.0, 240.553)
	call CreateUnit(p, 1751609977, 2842.1,  - 3328.5, 260.428)
	call CreateUnit(p, 1747988532, 2655.4,  - 3350.4, 253.243)
	set p = null
endfunction

function CreatePlayerUnits takes nothing returns nothing
	call CreateUnitsForPlayer0()
endfunction

function CreateAllUnits takes nothing returns nothing
	call CreatePlayerBuildings()
	call CreatePlayerUnits()
endfunction

function CreateCameras takes nothing returns nothing
	set gg_cam_Camera_001 = CreateCameraSetup()
	call CameraSetupSetField(gg_cam_Camera_001, CAMERA_FIELD_ZOFFSET, 0.0, 0.0)
	call CameraSetupSetField(gg_cam_Camera_001, CAMERA_FIELD_ROTATION, 90.0, 0.0)
	call CameraSetupSetField(gg_cam_Camera_001, CAMERA_FIELD_ANGLE_OF_ATTACK, 270.0, 0.0)
	call CameraSetupSetField(gg_cam_Camera_001, CAMERA_FIELD_TARGET_DISTANCE, 4660.0, 0.0)
	call CameraSetupSetField(gg_cam_Camera_001, CAMERA_FIELD_ROLL, 0.0, 0.0)
	call CameraSetupSetField(gg_cam_Camera_001, CAMERA_FIELD_FIELD_OF_VIEW, 40.0, 0.0)
	call CameraSetupSetField(gg_cam_Camera_001, CAMERA_FIELD_FARZ, 200.0, 0.0)
	call CameraSetupSetDestPosition(gg_cam_Camera_001,  - 1064.0,  - 280.0, 0.0)
endfunction

function InitTrig_Unbezeichneter_Ausl__ser_003 takes nothing returns nothing
	set gg_trg_Unbezeichneter_Ausl__ser_003 = CreateTrigger()
	call TriggerAddAction(gg_trg_Unbezeichneter_Ausl__ser_003, ref_function_Trig_Unbezeichneter_Ausl__ser_003_Actions)
endfunction

function InitCustomTriggers takes nothing returns nothing
	call InitTrig_Unbezeichneter_Ausl__ser_003()
endfunction

function InitGlobals takes nothing returns nothing
	call CreateTimer()
	call CreateGroup()
endfunction

function RunInitializationTriggers takes nothing returns nothing
	call ConditionalTriggerExecute(gg_trg_Unbezeichneter_Ausl__ser_003)
endfunction

function CustomBar_copyForce takes nothing returns nothing
	call ForceAddPlayer(CustomBar_tempForce, GetEnumPlayer())
endfunction

function CustomBar_lockCallback takes nothing returns nothing
	local integer i = CustomBar_count - 1
	local integer s
	local integer tempIndex
	local integer tempIndex_2
	local integer tempIndex_3
	local real tempTupleSelectionResult_1
	local real temp_tempTupleSelectionResult_1
	local real temp_tempTupleSelectionResult_2
	local real temp_tempTupleSelectionResult_3
	local integer tempIndex_4
	local real tempTupleSelectionResult_2
	local real temp_tempTupleSelectionResult_1_2
	local real temp_tempTupleSelectionResult_2_2
	local real temp_tempTupleSelectionResult_3_2
	local integer tempIndex_5
	local real tempTupleSelectionResult_3
	local real temp_tempTupleSelectionResult_1_3
	local real temp_tempTupleSelectionResult_2_3
	local real temp_tempTupleSelectionResult_3_3
	local texttag temp
	local real temp_2
	local real temp_3
	loop
		exitwhen i < 0
		set s = CustomBar_bars[i]
		set tempIndex = s
		set CustomBar_position[tempIndex] = GetUnitX(CustomBar_u[s])
		set tempIndex_2 = s
		set CustomBar_position_2[tempIndex_2] = GetUnitY(CustomBar_u[s])
		set temp = CustomBar_t[s]
		set tempIndex_3 = s
		set temp_tempTupleSelectionResult_1 = CustomBar_position[tempIndex_3]
		set temp_tempTupleSelectionResult_2 = CustomBar_position_2[tempIndex_3]
		set temp_tempTupleSelectionResult_3 = CustomBar_position_3[tempIndex_3]
		set tempTupleSelectionResult_1 = temp_tempTupleSelectionResult_1
		set temp_2 = tempTupleSelectionResult_1 + CustomBar_xOffset[s]
		set tempIndex_4 = s
		set temp_tempTupleSelectionResult_1_2 = CustomBar_position[tempIndex_4]
		set temp_tempTupleSelectionResult_2_2 = CustomBar_position_2[tempIndex_4]
		set temp_tempTupleSelectionResult_3_2 = CustomBar_position_3[tempIndex_4]
		set tempTupleSelectionResult_2 = temp_tempTupleSelectionResult_2_2
		set temp_3 = tempTupleSelectionResult_2 + CustomBar_yOffset[s]
		set tempIndex_5 = s
		set temp_tempTupleSelectionResult_1_3 = CustomBar_position[tempIndex_5]
		set temp_tempTupleSelectionResult_2_3 = CustomBar_position_2[tempIndex_5]
		set temp_tempTupleSelectionResult_3_3 = CustomBar_position_3[tempIndex_5]
		set tempTupleSelectionResult_3 = temp_tempTupleSelectionResult_3_3
		call SetTextTagPos(temp, temp_2, temp_3, tempTupleSelectionResult_3)
		set i = i - 1
	endloop
	set temp = null
endfunction

function trigger_clearConditions takes trigger this_44 returns nothing
	call TriggerClearConditions(this_44)
endfunction

function trigger_destr takes trigger this_44 returns nothing
	call DestroyTrigger(this_44)
endfunction

function TriggerDelayedDestroy_destroyNow takes trigger t returns nothing
	call trigger_clearConditions(t)
	call trigger_destr(t)
endfunction

function DelayedDestroy_destroyAllThings takes nothing returns nothing
	local integer i = 0
	local integer temp = DelayedDestroy_numberOfThings - 1
	loop
		exitwhen i > temp
		call TriggerDelayedDestroy_destroyNow(DelayedDestroy_things[i])
		set i = i + 1
	endloop
	set DelayedDestroy_numberOfThings = 0
endfunction

function ForceIterator_callback takes nothing returns nothing
	call GetEnumPlayer()
	set ForceIterator_tempIndex = ForceIterator_tempIndex + 1
endfunction

function TestSpell1_bla takes nothing returns nothing
	call SetUnitAnimationByIndex(Unit_u[UnitClass_last], TestSpell1_animationType)
endfunction

function Trig_Unbezeichneter_Ausl__ser_003_Actions takes nothing returns nothing
	call CameraSetupApplyForPlayer(true, gg_cam_Camera_001, Player(0), 0.)
	call CameraSetupApplyForPlayer(true, gg_cam_Camera_001, Player(1), 0.)
endfunction

function getHandleCount takes nothing returns integer
	local integer next = 0
	local integer prevIndex = 0
	local integer index = 0
	local integer a = 0
	local location array loc
	loop
		exitwhen  not (next < HandleCounter_stackEndTreshold)
		set loc[a] = Location(0., 0.)
		set index = GetHandleId(loc[a]) - 1048576
		set a = a + 1
		if index == prevIndex + 1 then
			set next = next + 1
		else
			set next = 0
		endif
		set prevIndex = index
	endloop
	set index = index - a
	loop
		exitwhen  not (a > 0)
		set a = a - 1
		call RemoveLocation(loc[a])
		set loc[a] = null
	endloop
	if index > HandleCounter_maxHandleCount then
		set HandleCounter_maxHandleCount = index
	endif
	return index
endfunction

function getMaxHandleCount takes nothing returns integer
	call getHandleCount()
	return HandleCounter_maxHandleCount
endfunction

function getTime takes nothing returns integer
	return HandleCounter_seconds
endfunction

function actions takes nothing returns nothing
	set HandleCounter_board = CreateLeaderboard()
	call LeaderboardSetLabel(HandleCounter_board, HandleCounter_TITLE)
	call PlayerSetLeaderboard(GetLocalPlayer(), HandleCounter_board)
	call LeaderboardDisplay(HandleCounter_board, true)
	call LeaderboardAddItem(HandleCounter_board, HandleCounter_HANDLE_TEXT, 0, HandleCounter_HANDLE)
	call LeaderboardSetItemValue(HandleCounter_board, 0, getHandleCount())
	call LeaderboardAddItem(HandleCounter_board, HandleCounter_MAX_HANDLE_TEXT, 1, HandleCounter_MAX_HANDLE)
	call LeaderboardSetItemValue(HandleCounter_board, 1, getMaxHandleCount())
	call LeaderboardAddItem(HandleCounter_board, HandleCounter_TIME_TEXT, 2, HandleCounter_TIME)
	call LeaderboardSetItemValue(HandleCounter_board, 2, getTime())
	call LeaderboardSetSizeByItemCount(HandleCounter_board, 3)
	call TimerStart(GetExpiredTimer(), HandleCounter_updatePeriod, true, ref_function_callback)
endfunction

function image_remove takes image this_44, string wurstStackTrace returns nothing
	if this_44 != null then
		call DestroyImage(this_44)
	else
		call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exeption by destroying an image" + wurstStackTrace)
		call I2S(1 / 0)
	endif
endfunction

function hashtable_loadInt takes hashtable this_44, integer parentKey, integer childKey returns integer
	return LoadInteger(this_44, parentKey, childKey)
endfunction

function Table_loadInt takes integer this_44, integer parentKey returns integer
	return hashtable_loadInt(Table_ht, this_44, parentKey)
endfunction

function dispatch_Table_loadInt takes integer this_44, integer parentKey, string wurstStackTrace returns integer
	local integer loadInt_result
	if Table_typeId[this_44] == 0 then
		if this_44 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Table.loadInt" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Table.loadInt on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	set loadInt_result = Table_loadInt(this_44, parentKey)
	return loadInt_result
endfunction

function timer_getData takes timer this_44, string wurstStackTrace returns integer
	return dispatch_Table_loadInt(TimerUtils_timerData, GetHandleId(this_44), "\n   TimerUtils, line 35" + wurstStackTrace)
endfunction

function timer_pause takes timer this_44 returns nothing
	call PauseTimer(this_44)
endfunction

function hashtable_saveInt takes hashtable this_44, integer parentKey, integer childKey, integer value returns nothing
	call SaveInteger(this_44, parentKey, childKey, value)
endfunction

function Table_saveInt takes integer this_44, integer parentKey, integer value returns nothing
	call hashtable_saveInt(Table_ht, this_44, parentKey, value)
endfunction

function dispatch_Table_saveInt takes integer this_44, integer parentKey, integer value, string wurstStackTrace returns nothing
	if Table_typeId[this_44] == 0 then
		if this_44 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Table.saveInt" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Table.saveInt on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call Table_saveInt(this_44, parentKey, value)
endfunction

function timer_setData takes timer this_44, integer data, string wurstStackTrace returns nothing
	call dispatch_Table_saveInt(TimerUtils_timerData, GetHandleId(this_44), data, "\n   TimerUtils, line 31" + wurstStackTrace)
endfunction

function timer_release takes timer this_44, string wurstStackTrace returns nothing
	if this_44 == null then
		call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Trying to release a null timer" + wurstStackTrace)
		call I2S(1 / 0)
		return
	endif
	if timer_getData(this_44, "\n   TimerUtils, line 42" + wurstStackTrace) == TimerUtils_HELD then
		call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "ReleaseTimer: Double free!" + wurstStackTrace)
		call I2S(1 / 0)
		return
	endif
	call timer_setData(this_44, TimerUtils_HELD, "\n   TimerUtils, line 45" + wurstStackTrace)
	call timer_pause(this_44)
	set TimerUtils_freeTimers[TimerUtils_freeTimersCount] = this_44
	set TimerUtils_freeTimersCount = TimerUtils_freeTimersCount + 1
endfunction

function AreaMarker_onDestroy takes integer this_44, string wurstStackTrace returns nothing
	call image_remove(AreaMarker_img[this_44], "\n   AreaMarker, line 33" + wurstStackTrace)
	if AreaMarker_t[this_44] != null then
		call timer_release(AreaMarker_t[this_44], "\n   AreaMarker, line 35" + wurstStackTrace)
	endif
endfunction

function dealloc_AreaMarker takes integer obj, string wurstStackTrace returns nothing
	if AreaMarker_typeId[obj] == 0 then
		call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Double free: object of type AreaMarker" + wurstStackTrace)
		call I2S(1 / 0)
	else
		set AreaMarker_firstFree = AreaMarker_firstFree + 1
		set AreaMarker_typeId[obj] = 0
	endif
endfunction

function destroyAreaMarker takes integer this_44, string wurstStackTrace returns nothing
	call AreaMarker_onDestroy(this_44, "\n   AreaMarker, line 32" + wurstStackTrace)
	call dealloc_AreaMarker(this_44, "\n   AreaMarker, line 32" + wurstStackTrace)
endfunction

function dispatch_AreaMarker_destroyAreaMarker takes integer this_44, string wurstStackTrace returns nothing
	if AreaMarker_typeId[this_44] == 0 then
		if this_44 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling AreaMarker.destroyAreaMarker" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called AreaMarker.destroyAreaMarker on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call destroyAreaMarker(this_44, "\n   AreaMarker, line 12" + wurstStackTrace)
endfunction

function AreaMarker_destr takes string wurstStackTrace returns nothing
	call dispatch_AreaMarker_destroyAreaMarker(timer_getData(GetExpiredTimer(), "\n   AreaMarker, line 30" + wurstStackTrace), "\n   AreaMarker, line 30" + wurstStackTrace)
endfunction

function bridge_AreaMarker_destr takes nothing returns nothing
	call AreaMarker_destr("\n   AreaMarker, line 27")
endfunction

function Action_onDestroy takes integer this_44 returns nothing
	if Event_first[Action_ev[this_44]] != this_44 then
		set Action_next[Action_prev[this_44]] = Action_next[this_44]
	else
		set Event_first[Action_ev[this_44]] = Action_next[this_44]
	endif
	if Event_last[Action_ev[this_44]] != this_44 then
		set Action_prev[Action_next[this_44]] = Action_prev[this_44]
	else
		set Event_last[Action_ev[this_44]] = Action_prev[this_44]
	endif
endfunction

function dealloc_Action takes integer obj, string wurstStackTrace returns nothing
	if Action_typeId[obj] == 0 then
		call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Double free: object of type Action" + wurstStackTrace)
		call I2S(1 / 0)
	else
		set Action_nextFree[Action_firstFree] = obj
		set Action_firstFree = Action_firstFree + 1
		set Action_typeId[obj] = 0
	endif
endfunction

function destroyAction takes integer this_44, string wurstStackTrace returns nothing
	call Action_onDestroy(this_44)
	call dealloc_Action(this_44, "\n   CustomClosureEvents, line 69" + wurstStackTrace)
endfunction

function dispatch_Action_destroyAction takes integer this_44, string wurstStackTrace returns nothing
	if Action_typeId[this_44] == 0 then
		if this_44 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Action.destroyAction" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Action.destroyAction on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	if Action_typeId[this_44] <= 673 then
		if Action_typeId[this_44] <= 669 then
			call destroyAction(this_44, "\n   CustomClosureEvents, line 62" + wurstStackTrace)
		else
			call destroyAction(this_44, "\n   CustomClosureEvents, line 62" + wurstStackTrace)
		endif
	elseif Action_typeId[this_44] <= 675 then
		call destroyAction(this_44, "\n   CustomClosureEvents, line 62" + wurstStackTrace)
	else
		call destroyAction(this_44, "\n   CustomClosureEvents, line 62" + wurstStackTrace)
	endif
endfunction

function closure_impl takes integer this_44 returns nothing
	set Unit_bonusResistance[this_15[this_44]] = Unit_bonusResistance[this_15[this_44]] - amount_13[this_44]
endfunction

function unit_addAbility takes unit this_44, integer abil returns boolean
	return UnitAddAbility(this_44, abil)
endfunction

function unit_removeAbility takes unit this_44, integer abil returns nothing
	call UnitRemoveAbility(this_44, abil)
endfunction

function Unit_updateState takes integer this_44, integer amount_39, integer raw returns nothing
	local integer i
	local integer temp
	local integer statHelper
	local integer i_2
	local integer temp_2
	local integer i_3
	local integer temp_3
	call unit_removeAbility(Unit_u[this_44], raw + 45)
	set i = raw + 97
	set temp = raw + 97 + (Setup_maxBonSize - 1)
	loop
		exitwhen i > temp
		call unit_removeAbility(Unit_u[this_44], i)
		set i = i + 1
	endloop
	set statHelper = amount_39
	if statHelper >= 0 then
		set i_2 = raw + 97
		set temp_2 = raw + 97 + (Setup_maxBonSize - 1)
		loop
			exitwhen i_2 > temp_2
			if ModuloInteger(statHelper, 2) == 1 then
				call unit_addAbility(Unit_u[this_44], i_2)
			endif
			set statHelper = statHelper / 2
			if statHelper == 0 then
				return
			endif
			set i_2 = i_2 + 1
		endloop
	else
		set statHelper = statHelper + 1
		set i_3 = raw + 97
		set temp_3 = raw + 97 + (Setup_maxBonSize - 1)
		loop
			exitwhen i_3 > temp_3
			if ModuloInteger(statHelper, 2) == 0 then
				call unit_addAbility(Unit_u[this_44], i_3)
			endif
			set statHelper = statHelper / 2
			set i_3 = i_3 + 1
		endloop
		call unit_addAbility(Unit_u[this_44], raw + 45)
	endif
endfunction

function dispatch_Unit_updateState takes integer this_44, integer amount_39, integer raw, string wurstStackTrace returns nothing
	if Unit_typeId[this_44] == 0 then
		if this_44 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Unit.updateState" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Unit.updateState on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	if Unit_typeId[this_44] <= 695 then
		call Unit_updateState(this_44, amount_39, raw)
	else
		call Unit_updateState(this_44, amount_39, raw)
	endif
endfunction

function roundReal takes real value returns integer
	if value > 0. then
		return R2I(value + 0.5)
	else
		return R2I(value - 0.5)
	endif
endfunction

function Unit_updateManaReg takes integer this_44, string wurstStackTrace returns nothing
	call dispatch_Unit_updateState(this_44, roundReal((Unit_manaReg[this_44] + Unit_bonusManaReg[this_44]) * (1. + Unit_bonusManaRegPer[this_44] / 100.) - Unit_manaReg[this_44]), Setup_manaRegRaw, "\n   UnitClass, line 822" + wurstStackTrace)
endfunction

function dispatch_Unit_updateManaReg takes integer this_44, string wurstStackTrace returns nothing
	if Unit_typeId[this_44] == 0 then
		if this_44 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Unit.updateManaReg" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Unit.updateManaReg on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	if Unit_typeId[this_44] <= 695 then
		call Unit_updateManaReg(this_44, "\n   UnitClass, line 821" + wurstStackTrace)
	else
		call Unit_updateManaReg(this_44, "\n   UnitClass, line 821" + wurstStackTrace)
	endif
endfunction

function closure_impl_2 takes integer this_44, string wurstStackTrace returns nothing
	set Unit_bonusManaRegPer[this_39[this_44]] = Unit_bonusManaRegPer[this_39[this_44]] - amount_37[this_44]
	call dispatch_Unit_updateManaReg(this_39[this_44], "\n   UnitClass, line 807" + wurstStackTrace)
endfunction

function Unit_updateLifeReg takes integer this_44, string wurstStackTrace returns nothing
	call dispatch_Unit_updateState(this_44, roundReal((Unit_lifeReg[this_44] + Unit_bonusLifeReg[this_44]) * (1. + Unit_bonusLifeRegPer[this_44] / 100.) - Unit_lifeReg[this_44]), Setup_lifeRegRaw, "\n   UnitClass, line 740" + wurstStackTrace)
endfunction

function dispatch_Unit_updateLifeReg takes integer this_44, string wurstStackTrace returns nothing
	if Unit_typeId[this_44] == 0 then
		if this_44 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Unit.updateLifeReg" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Unit.updateLifeReg on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	if Unit_typeId[this_44] <= 695 then
		call Unit_updateLifeReg(this_44, "\n   UnitClass, line 739" + wurstStackTrace)
	else
		call Unit_updateLifeReg(this_44, "\n   UnitClass, line 739" + wurstStackTrace)
	endif
endfunction

function closure_impl_3 takes integer this_44, string wurstStackTrace returns nothing
	set Unit_bonusLifeReg[this_29[this_44]] = Unit_bonusLifeReg[this_29[this_44]] - amount_27[this_44]
	call dispatch_Unit_updateLifeReg(this_29[this_44], "\n   UnitClass, line 706" + wurstStackTrace)
endfunction

function Unit_updateMovespeed takes integer this_44 returns nothing
	call SetUnitMoveSpeed(Unit_u[this_44], (Unit_movespeed[this_44] + Unit_bonusMovespeed[this_44]) * (1. + Unit_bonusMovespeedPer[this_44] / 100.))
endfunction

function alloc_LLEntry takes nothing returns integer
	local integer this_44
	if LLEntry_firstFree == 0 then
		set LLEntry_maxIndex = LLEntry_maxIndex + 1
		set this_44 = LLEntry_maxIndex
	else
		set LLEntry_firstFree = LLEntry_firstFree - 1
		set this_44 = LLEntry_nextFree[LLEntry_firstFree]
	endif
	set LLEntry_typeId[this_44] = 2
	return this_44
endfunction

function construct_LLEntry takes integer this_44, integer elem, integer prev, integer next returns nothing
	set LLEntry_elem[this_44] = elem
	set LLEntry_prev[this_44] = prev
	set LLEntry_next[this_44] = next
endfunction

function new_LLEntry takes integer elem, integer prev, integer next returns integer
	local integer this_44 = alloc_LLEntry()
	call construct_LLEntry(this_44, elem, prev, next)
	return this_44
endfunction

function LinkedList_add takes integer this_44, integer elem returns nothing
	local integer entry = new_LLEntry(elem, LLEntry_prev[LinkedList_dummy[this_44]], LinkedList_dummy[this_44])
	set LLEntry_next[LLEntry_prev[LinkedList_dummy[this_44]]] = entry
	set LLEntry_prev[LinkedList_dummy[this_44]] = entry
	set LinkedList_size[this_44] = LinkedList_size[this_44] + 1
endfunction

function dispatch_LinkedList_add takes integer this_44, integer elem, string wurstStackTrace returns nothing
	if LinkedList_typeId[this_44] == 0 then
		if this_44 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling LinkedList.add" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called LinkedList.add on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call LinkedList_add(this_44, elem)
endfunction

function LLEntry_onDestroy takes integer this_44 returns nothing
endfunction

function dealloc_LLEntry takes integer obj, string wurstStackTrace returns nothing
	if LLEntry_typeId[obj] == 0 then
		call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Double free: object of type LLEntry" + wurstStackTrace)
		call I2S(1 / 0)
	else
		set LLEntry_nextFree[LLEntry_firstFree] = obj
		set LLEntry_firstFree = LLEntry_firstFree + 1
		set LLEntry_typeId[obj] = 0
	endif
endfunction

function destroyLLEntry takes integer this_44, string wurstStackTrace returns nothing
	call LLEntry_onDestroy(this_44)
	call dealloc_LLEntry(this_44, "\n   LinkedList, line 129" + wurstStackTrace)
endfunction

function dispatch_LLEntry_destroyLLEntry takes integer this_44, string wurstStackTrace returns nothing
	if LLEntry_typeId[this_44] == 0 then
		if this_44 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling LLEntry.destroyLLEntry" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called LLEntry.destroyLLEntry on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call destroyLLEntry(this_44, "\n   LinkedList, line 129" + wurstStackTrace)
endfunction

function LinkedList_remove takes integer this_44, integer t, string wurstStackTrace returns nothing
	local integer r = LLEntry_next[LinkedList_dummy[this_44]]
	loop
		exitwhen  not (r != LinkedList_dummy[this_44])
		if LLEntry_elem[r] == t then
			set LLEntry_next[LLEntry_prev[r]] = LLEntry_next[r]
			set LLEntry_prev[LLEntry_next[r]] = LLEntry_prev[r]
			call dispatch_LLEntry_destroyLLEntry(r, "\n   LinkedList, line 42" + wurstStackTrace)
			set LinkedList_size[this_44] = LinkedList_size[this_44] - 1
			return
		endif
		set r = LLEntry_next[r]
	endloop
endfunction

function dispatch_LinkedList_remove takes integer this_44, integer t, string wurstStackTrace returns nothing
	if LinkedList_typeId[this_44] == 0 then
		if this_44 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling LinkedList.remove" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called LinkedList.remove on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call LinkedList_remove(this_44, t, "\n   LinkedList, line 35" + wurstStackTrace)
endfunction

function Unit_getMovespeed takes integer this_44, boolean withBonus returns real
	if withBonus then
		return (Unit_movespeed[this_44] + Unit_bonusMovespeed[this_44]) * (1. + Unit_bonusMovespeedPer[this_44] / 100.)
	else
		return Unit_movespeed[this_44]
	endif
endfunction

function dispatch_Unit_getMovespeed takes integer this_44, boolean withBonus, string wurstStackTrace returns real
	local real getMovespeed_result
	if Unit_typeId[this_44] == 0 then
		if this_44 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Unit.getMovespeed" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Unit.getMovespeed on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	if Unit_typeId[this_44] <= 695 then
		set getMovespeed_result = Unit_getMovespeed(this_44, withBonus)
	else
		set getMovespeed_result = Unit_getMovespeed(this_44, withBonus)
	endif
	return getMovespeed_result
endfunction

function Hero_updateMovespeed takes integer this_44, string wurstStackTrace returns nothing
	call Unit_updateMovespeed(this_44)
	if dispatch_Unit_getMovespeed(this_44, true, "\n   HeroClass, line 175" + wurstStackTrace) > 522. then
		call dispatch_LinkedList_add(Hero_toMove, this_44, "\n   HeroClass, line 176" + wurstStackTrace)
	else
		call dispatch_LinkedList_remove(Hero_toMove, this_44, "\n   HeroClass, line 178" + wurstStackTrace)
	endif
endfunction

function dispatch_Unit_updateMovespeed takes integer this_44, string wurstStackTrace returns nothing
	if Unit_typeId[this_44] == 0 then
		if this_44 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Unit.updateMovespeed" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Unit.updateMovespeed on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	if Unit_typeId[this_44] <= 695 then
		call Unit_updateMovespeed(this_44)
	else
		call Hero_updateMovespeed(this_44, "\n   UnitClass, line 657" + wurstStackTrace)
	endif
endfunction

function closure_impl_4 takes integer this_44, string wurstStackTrace returns nothing
	set Unit_bonusMovespeedPer[this_23[this_44]] = Unit_bonusMovespeedPer[this_23[this_44]] - amount_21[this_44]
	call dispatch_Unit_updateMovespeed(this_23[this_44], "\n   UnitClass, line 643" + wurstStackTrace)
endfunction

function Unit_updateAttack takes integer this_44, string wurstStackTrace returns nothing
	call dispatch_Unit_updateState(this_44, roundReal((Unit_attack[this_44] + Unit_bonusAttack[this_44]) * (1. + Unit_bonusAttackPer[this_44] / 100.) - Unit_attack[this_44]), Setup_attackRaw, "\n   UnitClass, line 494" + wurstStackTrace)
endfunction

function dispatch_Unit_updateAttack takes integer this_44, string wurstStackTrace returns nothing
	if Unit_typeId[this_44] == 0 then
		if this_44 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Unit.updateAttack" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Unit.updateAttack on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	if Unit_typeId[this_44] <= 695 then
		call Unit_updateAttack(this_44, "\n   UnitClass, line 493" + wurstStackTrace)
	else
		call Unit_updateAttack(this_44, "\n   UnitClass, line 493" + wurstStackTrace)
	endif
endfunction

function closure_impl_5 takes integer this_44, string wurstStackTrace returns nothing
	set Unit_bonusAttack[this_3[this_44]] = Unit_bonusAttack[this_3[this_44]] - amount[this_44]
	call dispatch_Unit_updateAttack(this_3[this_44], "\n   UnitClass, line 460" + wurstStackTrace)
endfunction

function Unit_updateMana takes integer this_44, string wurstStackTrace returns nothing
	call dispatch_Unit_updateState(this_44, roundReal((Unit_mana[this_44] + Unit_bonusMana[this_44]) * (1. + Unit_bonusManaPer[this_44] / 100.) - Unit_mana[this_44]), Setup_manaRaw, "\n   UnitClass, line 781" + wurstStackTrace)
endfunction

function getTimer takes string wurstStackTrace returns timer
	local timer receiver
	if TimerUtils_freeTimersCount > 0 then
		set TimerUtils_freeTimersCount = TimerUtils_freeTimersCount - 1
		call timer_setData(TimerUtils_freeTimers[TimerUtils_freeTimersCount], 0, "\n   TimerUtils, line 24" + wurstStackTrace)
		set receiver = null
		return TimerUtils_freeTimers[TimerUtils_freeTimersCount]
	else
		set receiver = CreateTimer()
		call timer_setData(receiver, 0, "\n   TimerUtils, line 27" + wurstStackTrace)
		set getTimertempReturn = receiver
		set receiver = null
		return getTimertempReturn
	endif
endfunction

function timer_start takes timer this_44, real time, code timerCallBack returns nothing
	call TimerStart(this_44, time, false, timerCallBack)
endfunction

function Bar_updateEx takes integer this_44, string wurstStackTrace returns nothing
	local timer receiver = getTimer("\n   HeroBar, line 99" + wurstStackTrace)
	local timer receiver_2
	call timer_setData(receiver, this_44, "\n   HeroBar, line 99" + wurstStackTrace)
	set receiver_2 = receiver
	call timer_start(receiver_2, 0.0, ref_function_bridge_Bar_callUpdateEx)
	set receiver = null
	set receiver_2 = null
endfunction

function dispatch_Bar_updateEx takes integer this_44, string wurstStackTrace returns nothing
	if Bar_typeId[this_44] == 0 then
		if this_44 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Bar.updateEx" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Bar.updateEx on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call Bar_updateEx(this_44, "\n   HeroBar, line 97" + wurstStackTrace)
endfunction

function Hero_updateMana takes integer this_44, string wurstStackTrace returns nothing
	call dispatch_Bar_updateEx(Hero_hb[this_44], "\n   HeroClass, line 170" + wurstStackTrace)
	call Unit_updateMana(this_44, "\n   HeroClass, line 171" + wurstStackTrace)
endfunction

function dispatch_Unit_updateMana takes integer this_44, string wurstStackTrace returns nothing
	if Unit_typeId[this_44] == 0 then
		if this_44 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Unit.updateMana" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Unit.updateMana on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	if Unit_typeId[this_44] <= 695 then
		call Unit_updateMana(this_44, "\n   UnitClass, line 780" + wurstStackTrace)
	else
		call Hero_updateMana(this_44, "\n   UnitClass, line 780" + wurstStackTrace)
	endif
endfunction

function closure_impl_6 takes integer this_44, string wurstStackTrace returns nothing
	set Unit_bonusMana[this_33[this_44]] = Unit_bonusMana[this_33[this_44]] - amount_31[this_44]
	call dispatch_Unit_updateMana(this_33[this_44], "\n   UnitClass, line 747" + wurstStackTrace)
endfunction

function closure_impl_7 takes integer this_44, string wurstStackTrace returns nothing
	set Unit_bonusLifeRegPer[this_31[this_44]] = Unit_bonusLifeRegPer[this_31[this_44]] - amount_29[this_44]
	call dispatch_Unit_updateLifeReg(this_31[this_44], "\n   UnitClass, line 725" + wurstStackTrace)
endfunction

function closure_impl_8 takes integer this_44 returns nothing
	set Unit_spellpower[this_7[this_44]] = Unit_spellpower[this_7[this_44]] - amount_5[this_44]
endfunction

function Unit_updateArmor takes integer this_44, string wurstStackTrace returns nothing
	call dispatch_Unit_updateState(this_44, roundReal((Unit_armor[this_44] + Unit_bonusArmor[this_44]) * (1. + Unit_bonusArmorPer[this_44] / 100.) - Unit_armor[this_44]), Setup_armorRaw, "\n   UnitClass, line 565" + wurstStackTrace)
endfunction

function dispatch_Unit_updateArmor takes integer this_44, string wurstStackTrace returns nothing
	if Unit_typeId[this_44] == 0 then
		if this_44 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Unit.updateArmor" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Unit.updateArmor on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	if Unit_typeId[this_44] <= 695 then
		call Unit_updateArmor(this_44, "\n   UnitClass, line 564" + wurstStackTrace)
	else
		call Unit_updateArmor(this_44, "\n   UnitClass, line 564" + wurstStackTrace)
	endif
endfunction

function closure_impl_9 takes integer this_44, string wurstStackTrace returns nothing
	set Unit_bonusArmor[this_11[this_44]] = Unit_bonusArmor[this_11[this_44]] - amount_9[this_44]
	call dispatch_Unit_updateArmor(this_11[this_44], "\n   UnitClass, line 531" + wurstStackTrace)
endfunction

function Unit_updateLife takes integer this_44, string wurstStackTrace returns nothing
	call dispatch_Unit_updateState(this_44, roundReal((Unit_life[this_44] + Unit_bonusLife[this_44]) * (1. + Unit_bonusLifePer[this_44] / 100.) - Unit_life[this_44]), Setup_lifeRaw, "\n   UnitClass, line 699" + wurstStackTrace)
endfunction

function Hero_updateLife takes integer this_44, string wurstStackTrace returns nothing
	call dispatch_Bar_updateEx(Hero_hb[this_44], "\n   HeroClass, line 166" + wurstStackTrace)
	call Unit_updateLife(this_44, "\n   HeroClass, line 167" + wurstStackTrace)
endfunction

function dispatch_Unit_updateLife takes integer this_44, string wurstStackTrace returns nothing
	if Unit_typeId[this_44] == 0 then
		if this_44 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Unit.updateLife" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Unit.updateLife on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	if Unit_typeId[this_44] <= 695 then
		call Unit_updateLife(this_44, "\n   UnitClass, line 698" + wurstStackTrace)
	else
		call Hero_updateLife(this_44, "\n   UnitClass, line 698" + wurstStackTrace)
	endif
endfunction

function closure_impl_10 takes integer this_44, string wurstStackTrace returns nothing
	set Unit_bonusLife[this_25[this_44]] = Unit_bonusLife[this_25[this_44]] - amount_23[this_44]
	call dispatch_Unit_updateLife(this_25[this_44], "\n   UnitClass, line 665" + wurstStackTrace)
endfunction

function closure_impl_11 takes integer this_44, string wurstStackTrace returns nothing
	set Unit_bonusManaPer[this_35[this_44]] = Unit_bonusManaPer[this_35[this_44]] - amount_33[this_44]
	call dispatch_Unit_updateMana(this_35[this_44], "\n   UnitClass, line 766" + wurstStackTrace)
endfunction

function closure_impl_12 takes integer this_44, string wurstStackTrace returns nothing
	set Unit_bonusLifePer[this_27[this_44]] = Unit_bonusLifePer[this_27[this_44]] - amount_25[this_44]
	call dispatch_Unit_updateLife(this_27[this_44], "\n   UnitClass, line 684" + wurstStackTrace)
endfunction

function closure_impl_13 takes integer this_44 returns nothing
	set Unit_spellpowerPer[this_9[this_44]] = Unit_spellpowerPer[this_9[this_44]] - amount_7[this_44]
endfunction

function Unit_updateAttackspeed takes integer this_44, string wurstStackTrace returns nothing
	call dispatch_Unit_updateState(this_44, roundReal(Unit_bonusAttackspeed[this_44]), Setup_attackSpeedRaw, "\n   UnitClass, line 617" + wurstStackTrace)
endfunction

function dispatch_Unit_updateAttackspeed takes integer this_44, string wurstStackTrace returns nothing
	if Unit_typeId[this_44] == 0 then
		if this_44 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Unit.updateAttackspeed" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Unit.updateAttackspeed on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	if Unit_typeId[this_44] <= 695 then
		call Unit_updateAttackspeed(this_44, "\n   UnitClass, line 616" + wurstStackTrace)
	else
		call Unit_updateAttackspeed(this_44, "\n   UnitClass, line 616" + wurstStackTrace)
	endif
endfunction

function closure_impl_14 takes integer this_44, string wurstStackTrace returns nothing
	set Unit_bonusAttackspeed[this_19[this_44]] = Unit_bonusAttackspeed[this_19[this_44]] - amount_17[this_44]
	call dispatch_Unit_updateAttackspeed(this_19[this_44], "\n   UnitClass, line 602" + wurstStackTrace)
endfunction

function closure_impl_15 takes integer this_44, string wurstStackTrace returns nothing
	set Unit_bonusMovespeed[this_21[this_44]] = Unit_bonusMovespeed[this_21[this_44]] - amount_19[this_44]
	call dispatch_Unit_updateMovespeed(this_21[this_44], "\n   UnitClass, line 624" + wurstStackTrace)
endfunction

function closure_impl_16 takes integer this_44 returns nothing
	set Unit_bonusResistancePer[this_17[this_44]] = Unit_bonusResistancePer[this_17[this_44]] - amount_15[this_44]
endfunction

function closure_impl_17 takes integer this_44, string wurstStackTrace returns nothing
	set Unit_bonusManaReg[this_37[this_44]] = Unit_bonusManaReg[this_37[this_44]] - amount_35[this_44]
	call dispatch_Unit_updateManaReg(this_37[this_44], "\n   UnitClass, line 788" + wurstStackTrace)
endfunction

function closure_impl_18 takes integer this_44, string wurstStackTrace returns nothing
	set Unit_bonusArmorPer[this_13[this_44]] = Unit_bonusArmorPer[this_13[this_44]] - amount_11[this_44]
	call dispatch_Unit_updateArmor(this_13[this_44], "\n   UnitClass, line 550" + wurstStackTrace)
endfunction

function closure_impl_19 takes integer this_44, string wurstStackTrace returns nothing
	set Unit_bonusAttackPer[this_5[this_44]] = Unit_bonusAttackPer[this_5[this_44]] - amount_3[this_44]
	call dispatch_Unit_updateAttack(this_5[this_44], "\n   UnitClass, line 479" + wurstStackTrace)
endfunction

function dispatch_Bonus_remove takes integer this_44, string wurstStackTrace returns nothing
	if Bonus_typeId[this_44] == 0 then
		if this_44 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Bonus.remove" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Bonus.remove on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	if Bonus_typeId[this_44] <= 715 then
		if Bonus_typeId[this_44] <= 705 then
			if Bonus_typeId[this_44] <= 701 then
				if Bonus_typeId[this_44] <= 699 then
					if Bonus_typeId[this_44] <= 696 then
						call closure_impl_5(this_44, "\n   Bonus, line 10" + wurstStackTrace)
					else
						call closure_impl_19(this_44, "\n   Bonus, line 10" + wurstStackTrace)
					endif
				else
					call closure_impl_8(this_44)
				endif
			elseif Bonus_typeId[this_44] <= 703 then
				call closure_impl_13(this_44)
			else
				call closure_impl_9(this_44, "\n   Bonus, line 10" + wurstStackTrace)
			endif
		elseif Bonus_typeId[this_44] <= 711 then
			if Bonus_typeId[this_44] <= 709 then
				if Bonus_typeId[this_44] <= 707 then
					call closure_impl_18(this_44, "\n   Bonus, line 10" + wurstStackTrace)
				else
					call closure_impl(this_44)
				endif
			else
				call closure_impl_16(this_44)
			endif
		elseif Bonus_typeId[this_44] <= 713 then
			call closure_impl_14(this_44, "\n   Bonus, line 10" + wurstStackTrace)
		else
			call closure_impl_15(this_44, "\n   Bonus, line 10" + wurstStackTrace)
		endif
	elseif Bonus_typeId[this_44] <= 725 then
		if Bonus_typeId[this_44] <= 721 then
			if Bonus_typeId[this_44] <= 719 then
				if Bonus_typeId[this_44] <= 717 then
					call closure_impl_4(this_44, "\n   Bonus, line 10" + wurstStackTrace)
				else
					call closure_impl_10(this_44, "\n   Bonus, line 10" + wurstStackTrace)
				endif
			else
				call closure_impl_12(this_44, "\n   Bonus, line 10" + wurstStackTrace)
			endif
		elseif Bonus_typeId[this_44] <= 723 then
			call closure_impl_3(this_44, "\n   Bonus, line 10" + wurstStackTrace)
		else
			call closure_impl_7(this_44, "\n   Bonus, line 10" + wurstStackTrace)
		endif
	elseif Bonus_typeId[this_44] <= 729 then
		if Bonus_typeId[this_44] <= 727 then
			call closure_impl_6(this_44, "\n   Bonus, line 10" + wurstStackTrace)
		else
			call closure_impl_11(this_44, "\n   Bonus, line 10" + wurstStackTrace)
		endif
	elseif Bonus_typeId[this_44] <= 731 then
		call closure_impl_17(this_44, "\n   Bonus, line 10" + wurstStackTrace)
	else
		call closure_impl_2(this_44, "\n   Bonus, line 10" + wurstStackTrace)
	endif
endfunction

function Bonus_onDestroy takes integer this_44, string wurstStackTrace returns nothing
	call dispatch_Bonus_remove(this_44, "\n   Bonus, line 13" + wurstStackTrace)
endfunction

function dealloc_Bonus takes integer obj, string wurstStackTrace returns nothing
	if Bonus_typeId[obj] == 0 then
		call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Double free: object of type Bonus" + wurstStackTrace)
		call I2S(1 / 0)
	else
		set Bonus_nextFree[Bonus_firstFree] = obj
		set Bonus_firstFree = Bonus_firstFree + 1
		set Bonus_typeId[obj] = 0
	endif
endfunction

function destroyBonus takes integer this_44, string wurstStackTrace returns nothing
	call Bonus_onDestroy(this_44, "\n   Bonus, line 12" + wurstStackTrace)
	call dealloc_Bonus(this_44, "\n   Bonus, line 12" + wurstStackTrace)
endfunction

function dispatch_Bonus_destroyBonus takes integer this_44, string wurstStackTrace returns nothing
	if Bonus_typeId[this_44] == 0 then
		if this_44 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Bonus.destroyBonus" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Bonus.destroyBonus on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	if Bonus_typeId[this_44] <= 715 then
		if Bonus_typeId[this_44] <= 705 then
			if Bonus_typeId[this_44] <= 701 then
				if Bonus_typeId[this_44] <= 699 then
					if Bonus_typeId[this_44] <= 697 then
						call destroyBonus(this_44, "\n   Bonus, line 8" + wurstStackTrace)
					else
						call destroyBonus(this_44, "\n   Bonus, line 8" + wurstStackTrace)
					endif
				else
					call destroyBonus(this_44, "\n   Bonus, line 8" + wurstStackTrace)
				endif
			elseif Bonus_typeId[this_44] <= 703 then
				call destroyBonus(this_44, "\n   Bonus, line 8" + wurstStackTrace)
			else
				call destroyBonus(this_44, "\n   Bonus, line 8" + wurstStackTrace)
			endif
		elseif Bonus_typeId[this_44] <= 711 then
			if Bonus_typeId[this_44] <= 709 then
				if Bonus_typeId[this_44] <= 707 then
					call destroyBonus(this_44, "\n   Bonus, line 8" + wurstStackTrace)
				else
					call destroyBonus(this_44, "\n   Bonus, line 8" + wurstStackTrace)
				endif
			else
				call destroyBonus(this_44, "\n   Bonus, line 8" + wurstStackTrace)
			endif
		elseif Bonus_typeId[this_44] <= 713 then
			call destroyBonus(this_44, "\n   Bonus, line 8" + wurstStackTrace)
		else
			call destroyBonus(this_44, "\n   Bonus, line 8" + wurstStackTrace)
		endif
	elseif Bonus_typeId[this_44] <= 725 then
		if Bonus_typeId[this_44] <= 721 then
			if Bonus_typeId[this_44] <= 719 then
				if Bonus_typeId[this_44] <= 717 then
					call destroyBonus(this_44, "\n   Bonus, line 8" + wurstStackTrace)
				else
					call destroyBonus(this_44, "\n   Bonus, line 8" + wurstStackTrace)
				endif
			else
				call destroyBonus(this_44, "\n   Bonus, line 8" + wurstStackTrace)
			endif
		elseif Bonus_typeId[this_44] <= 723 then
			call destroyBonus(this_44, "\n   Bonus, line 8" + wurstStackTrace)
		else
			call destroyBonus(this_44, "\n   Bonus, line 8" + wurstStackTrace)
		endif
	elseif Bonus_typeId[this_44] <= 729 then
		if Bonus_typeId[this_44] <= 727 then
			call destroyBonus(this_44, "\n   Bonus, line 8" + wurstStackTrace)
		else
			call destroyBonus(this_44, "\n   Bonus, line 8" + wurstStackTrace)
		endif
	elseif Bonus_typeId[this_44] <= 731 then
		call destroyBonus(this_44, "\n   Bonus, line 8" + wurstStackTrace)
	else
		call destroyBonus(this_44, "\n   Bonus, line 8" + wurstStackTrace)
	endif
endfunction

function Buff_onDestroy takes integer this_44, string wurstStackTrace returns nothing
	local integer tempIndex
	local integer tempTupleSelectionResult_1
	local integer temp_tempTupleSelectionResult_1
	local integer temp_tempTupleSelectionResult_2
	local integer tempIndex_2
	local integer tempTupleSelectionResult_2
	local integer temp_tempTupleSelectionResult_1_2
	local integer temp_tempTupleSelectionResult_2_2
	local unit temp
	local unit temp_2
	call dispatch_Action_destroyAction(Buff_action[this_44], "\n   Buff, line 64" + wurstStackTrace)
	call timer_release(Buff_t[this_44], "\n   Buff, line 65" + wurstStackTrace)
	call dispatch_LinkedList_remove(Unit_allBuffs[Buff_u[this_44]], this_44, "\n   Buff, line 66" + wurstStackTrace)
	if Buff_fxTimer[this_44] != null then
		call timer_release(Buff_fxTimer[this_44], "\n   Buff, line 68" + wurstStackTrace)
	endif
	set temp = Unit_u[Buff_u[this_44]]
	set tempIndex = this_44
	set temp_tempTupleSelectionResult_1 = Buff_btyp[tempIndex]
	set temp_tempTupleSelectionResult_2 = Buff_btyp_2[tempIndex]
	set tempTupleSelectionResult_1 = temp_tempTupleSelectionResult_1
	call UnitRemoveAbility(temp, tempTupleSelectionResult_1)
	set temp_2 = Unit_u[Buff_u[this_44]]
	set tempIndex_2 = this_44
	set temp_tempTupleSelectionResult_1_2 = Buff_btyp[tempIndex_2]
	set temp_tempTupleSelectionResult_2_2 = Buff_btyp_2[tempIndex_2]
	set tempTupleSelectionResult_2 = temp_tempTupleSelectionResult_2_2
	call UnitRemoveAbility(temp_2, tempTupleSelectionResult_2)
	if Buff_bon[this_44] != 0 then
		call dispatch_Bonus_destroyBonus(Buff_bon[this_44], "\n   Buff, line 72" + wurstStackTrace)
	endif
	if Buff_fx[this_44] != null then
		call DestroyEffect(Buff_fx[this_44])
	endif
	set temp = null
	set temp_2 = null
endfunction

function dealloc_Buff takes integer obj, string wurstStackTrace returns nothing
	if Buff_typeId[obj] == 0 then
		call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Double free: object of type Buff" + wurstStackTrace)
		call I2S(1 / 0)
	else
		set Buff_firstFree = Buff_firstFree + 1
		set Buff_typeId[obj] = 0
	endif
endfunction

function destroyBuff takes integer this_44, string wurstStackTrace returns nothing
	call Buff_onDestroy(this_44, "\n   Buff, line 63" + wurstStackTrace)
	call dealloc_Buff(this_44, "\n   Buff, line 63" + wurstStackTrace)
endfunction

function dispatch_Buff_destroyBuff takes integer this_44, string wurstStackTrace returns nothing
	if Buff_typeId[this_44] == 0 then
		if this_44 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Buff.destroyBuff" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Buff.destroyBuff on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call destroyBuff(this_44, "\n   Buff, line 8" + wurstStackTrace)
endfunction

function closure_impl_20 takes integer this_44, integer data, string wurstStackTrace returns nothing
	call dispatch_Buff_destroyBuff(this_2[this_44], "\n   Buff, line 29" + wurstStackTrace)
endfunction

function print takes string msg returns nothing
	call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., PrintingHelper_DEBUG_MSG_DURATION, msg)
endfunction

function LinkedListModule_remove takes integer this_44 returns nothing
	set LinkedListModule_size = LinkedListModule_size - 1
	if this_44 != LinkedListModule_first then
		set LinkedListModule_next[LinkedListModule_prev[this_44]] = LinkedListModule_next[this_44]
	endif
	if this_44 != LinkedListModule_last then
		set LinkedListModule_prev[LinkedListModule_next[this_44]] = LinkedListModule_prev[this_44]
	endif
	if this_44 == LinkedListModule_last then
		set LinkedListModule_last = LinkedListModule_prev[this_44]
	endif
	if this_44 == LinkedListModule_first then
		set LinkedListModule_first = LinkedListModule_next[this_44]
	endif
	call print("removed")
endfunction

function dispatch_Dot_remove takes integer this_44, string wurstStackTrace returns nothing
	if Dot_typeId[this_44] == 0 then
		if this_44 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Dot.remove" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Dot.remove on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call LinkedListModule_remove(this_44)
endfunction

function Dot_onDestroy takes integer this_44, string wurstStackTrace returns nothing
	call dispatch_Action_destroyAction(Dot_a[this_44], "\n   Dot, line 41" + wurstStackTrace)
	call timer_release(Dot_t[this_44], "\n   Dot, line 42" + wurstStackTrace)
	call dispatch_LinkedList_remove(Unit_allDots[Dot_u[this_44]], this_44, "\n   Dot, line 43" + wurstStackTrace)
	call dispatch_Dot_remove(this_44, "\n   LinkedListModule, line 46" + wurstStackTrace)
endfunction

function dealloc_Dot takes integer obj, string wurstStackTrace returns nothing
	if Dot_typeId[obj] == 0 then
		call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Double free: object of type Dot" + wurstStackTrace)
		call I2S(1 / 0)
	else
		set Dot_firstFree = Dot_firstFree + 1
		set Dot_typeId[obj] = 0
	endif
endfunction

function destroyDot takes integer this_44, string wurstStackTrace returns nothing
	call Dot_onDestroy(this_44, "\n   Dot, line 40" + wurstStackTrace)
	call dealloc_Dot(this_44, "\n   Dot, line 40" + wurstStackTrace)
endfunction

function dispatch_Dot_destroyDot takes integer this_44, string wurstStackTrace returns nothing
	if Dot_typeId[this_44] == 0 then
		if this_44 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Dot.destroyDot" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Dot.destroyDot on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call destroyDot(this_44, "\n   Dot, line 6" + wurstStackTrace)
endfunction

function closure_impl_21 takes integer this_44, integer data, string wurstStackTrace returns nothing
	call dispatch_Dot_destroyDot(this[this_44], "\n   Dot, line 24" + wurstStackTrace)
endfunction

function booleanToIndex takes boolean u_2 returns integer
	if u_2 then
		return 1
	endif
	return 0
endfunction

function HashMap_put takes integer this_44, integer key, integer value returns nothing
	call hashtable_saveInt(HashMap_ht, this_44, key, value)
endfunction

function dispatch_HashMap_put takes integer this_44, integer key, integer value, string wurstStackTrace returns nothing
	if HashMap_typeId[this_44] == 0 then
		if this_44 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling HashMap.put" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called HashMap.put on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call HashMap_put(this_44, key, value)
endfunction

function alloc_SEntry takes nothing returns integer
	local integer this_44
	if SEntry_firstFree_2 == 0 then
		set SEntry_maxIndex_2 = SEntry_maxIndex_2 + 1
		set this_44 = SEntry_maxIndex_2
	else
		set SEntry_firstFree_2 = SEntry_firstFree_2 - 1
		set this_44 = SEntry_nextFree_2[SEntry_firstFree_2]
	endif
	return this_44
endfunction

function construct_SEntry takes integer this_44, integer elem, integer prev returns nothing
	set SEntry_elem_2[this_44] = elem
	set SEntry_prev[this_44] = prev
endfunction

function new_SEntry takes integer elem, integer prev returns integer
	local integer this_44 = alloc_SEntry()
	call construct_SEntry(this_44, elem, prev)
	return this_44
endfunction

function Stack_push takes integer this_44, integer elem returns nothing
	set Stack_top[this_44] = new_SEntry(elem, Stack_top[this_44])
	set Stack_size[this_44] = Stack_size[this_44] + 1
endfunction

function dispatch_Stack_push takes integer this_44, integer elem, string wurstStackTrace returns nothing
	if Stack_typeId[this_44] == 0 then
		if this_44 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Stack.push" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Stack.push on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call Stack_push(this_44, elem)
endfunction

function Icon_isDisabled_get takes integer index1, integer index2, string wurstStackTrace returns boolean
	local boolean returnVal
	if index2 < 0 or index2 >= 12 then
		call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Index out of Bounds" + wurstStackTrace)
		call I2S(1 / 0)
	elseif index2 <= 5 then
		if index2 <= 2 then
			if index2 <= 1 then
				if index2 <= 0 then
					set returnVal = Icon_isDisabled_0[index1]
				else
					set returnVal = Icon_isDisabled_1[index1]
				endif
			else
				set returnVal = Icon_isDisabled_2[index1]
			endif
		elseif index2 <= 4 then
			if index2 <= 3 then
				set returnVal = Icon_isDisabled_3[index1]
			else
				set returnVal = Icon_isDisabled_4[index1]
			endif
		else
			set returnVal = Icon_isDisabled_5[index1]
		endif
	elseif index2 <= 8 then
		if index2 <= 7 then
			if index2 <= 6 then
				set returnVal = Icon_isDisabled_6[index1]
			else
				set returnVal = Icon_isDisabled_7[index1]
			endif
		else
			set returnVal = Icon_isDisabled_8[index1]
		endif
	elseif index2 <= 10 then
		if index2 <= 9 then
			set returnVal = Icon_isDisabled_9[index1]
		else
			set returnVal = Icon_isDisabled_10[index1]
		endif
	else
		set returnVal = Icon_isDisabled_11[index1]
	endif
	return returnVal
endfunction

function Icon_structs_get takes integer index1, integer index2, string wurstStackTrace returns destructable
	local destructable returnVal
	if index2 < 0 or index2 >= 12 then
		call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Index out of Bounds" + wurstStackTrace)
		call I2S(1 / 0)
	elseif index2 <= 5 then
		if index2 <= 2 then
			if index2 <= 1 then
				if index2 <= 0 then
					set returnVal = Icon_structs_0[index1]
				else
					set returnVal = Icon_structs_1[index1]
				endif
			else
				set returnVal = Icon_structs_2[index1]
			endif
		elseif index2 <= 4 then
			if index2 <= 3 then
				set returnVal = Icon_structs_3[index1]
			else
				set returnVal = Icon_structs_4[index1]
			endif
		else
			set returnVal = Icon_structs_5[index1]
		endif
	elseif index2 <= 8 then
		if index2 <= 7 then
			if index2 <= 6 then
				set returnVal = Icon_structs_6[index1]
			else
				set returnVal = Icon_structs_7[index1]
			endif
		else
			set returnVal = Icon_structs_8[index1]
		endif
	elseif index2 <= 10 then
		if index2 <= 9 then
			set returnVal = Icon_structs_9[index1]
		else
			set returnVal = Icon_structs_10[index1]
		endif
	else
		set returnVal = Icon_structs_11[index1]
	endif
	set Icon_structs_gettempReturn = returnVal
	set returnVal = null
	return Icon_structs_gettempReturn
endfunction

function Icon_structs_set takes integer instanceId, integer arrayIndex, destructable value, string wurstStackTrace returns nothing
	if arrayIndex < 0 or arrayIndex >= 12 then
		call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Index out of Bounds" + wurstStackTrace)
		call I2S(1 / 0)
	elseif arrayIndex <= 5 then
		if arrayIndex <= 2 then
			if arrayIndex <= 1 then
				if arrayIndex <= 0 then
					set Icon_structs_0[instanceId] = value
				else
					set Icon_structs_1[instanceId] = value
				endif
			else
				set Icon_structs_2[instanceId] = value
			endif
		elseif arrayIndex <= 4 then
			if arrayIndex <= 3 then
				set Icon_structs_3[instanceId] = value
			else
				set Icon_structs_4[instanceId] = value
			endif
		else
			set Icon_structs_5[instanceId] = value
		endif
	elseif arrayIndex <= 8 then
		if arrayIndex <= 7 then
			if arrayIndex <= 6 then
				set Icon_structs_6[instanceId] = value
			else
				set Icon_structs_7[instanceId] = value
			endif
		else
			set Icon_structs_8[instanceId] = value
		endif
	elseif arrayIndex <= 10 then
		if arrayIndex <= 9 then
			set Icon_structs_9[instanceId] = value
		else
			set Icon_structs_10[instanceId] = value
		endif
	else
		set Icon_structs_11[instanceId] = value
	endif
endfunction

function player_getId takes player this_44 returns integer
	return GetPlayerId(this_44)
endfunction

function Icon_showDirect takes integer this_44, player p, string wurstStackTrace returns nothing
	local destructable d_2 = Icon_structs_get(this_44, player_getId(p), "\n   Icon, line 35" + wurstStackTrace)
	local integer id
	local integer tempIndex
	local integer tempTupleSelectionResult_2
	local integer temp_tempTupleSelectionResult_1
	local integer temp_tempTupleSelectionResult_2
	local integer tempIndex_2
	local integer tempTupleSelectionResult_1
	local integer temp_tempTupleSelectionResult_1_2
	local integer temp_tempTupleSelectionResult_2_2
	local integer tempIndex_3
	local real tempTupleSelectionResult_1_2
	local real temp_tempTupleSelectionResult_1_3
	local real temp_tempTupleSelectionResult_2_3
	local integer tempIndex_4
	local real tempTupleSelectionResult_2_2
	local real temp_tempTupleSelectionResult_1_4
	local real temp_tempTupleSelectionResult_2_4
	local integer temp
	local real temp_2
	local integer temp_3
	local integer temp_4
	if d_2 == null then
		set id = Icon_dummyIcon
		if GetLocalPlayer() == p then
			if Icon_isDisabled_get(this_44, player_getId(p), "\n   Icon, line 39" + wurstStackTrace) then
				set tempIndex = this_44
				set temp_tempTupleSelectionResult_1 = Icon_typ[tempIndex]
				set temp_tempTupleSelectionResult_2 = Icon_typ_2[tempIndex]
				set tempTupleSelectionResult_2 = temp_tempTupleSelectionResult_2
				set id = tempTupleSelectionResult_2
				call print("is Disabled")
			else
				set tempIndex_2 = this_44
				set temp_tempTupleSelectionResult_1_2 = Icon_typ[tempIndex_2]
				set temp_tempTupleSelectionResult_2_2 = Icon_typ_2[tempIndex_2]
				set tempTupleSelectionResult_1 = temp_tempTupleSelectionResult_1_2
				set id = tempTupleSelectionResult_1
			endif
		endif
		set temp_3 = this_44
		set temp_4 = player_getId(p)
		set temp = id
		set tempIndex_3 = this_44
		set temp_tempTupleSelectionResult_1_3 = Icon_realPos[tempIndex_3]
		set temp_tempTupleSelectionResult_2_3 = Icon_realPos_2[tempIndex_3]
		set tempTupleSelectionResult_1_2 = temp_tempTupleSelectionResult_1_3
		set temp_2 = tempTupleSelectionResult_1_2
		set tempIndex_4 = this_44
		set temp_tempTupleSelectionResult_1_4 = Icon_realPos[tempIndex_4]
		set temp_tempTupleSelectionResult_2_4 = Icon_realPos_2[tempIndex_4]
		set tempTupleSelectionResult_2_2 = temp_tempTupleSelectionResult_2_4
		call Icon_structs_set(temp_3, temp_4, CreateDestructable(temp, temp_2, tempTupleSelectionResult_2_2, 0., Icon_scale[this_44] * 1., 1), "\n   Icon, line 44" + wurstStackTrace)
	endif
	set d_2 = null
endfunction

function image_show takes image this_44, player p returns nothing
	if GetLocalPlayer() == p then
		call SetImageRenderAlways(this_44, true)
	endif
endfunction

function ImageEx_showDirect takes integer this_44, player p returns nothing
	call image_show(ImageEx_content[this_44], p)
endfunction

function color_withAlpha takes integer this_red, integer this_green, integer this_blue, integer a returns integer
	set color_withAlpha_return_red = this_red
	set color_withAlpha_return_green = this_green
	set color_withAlpha_return_blue = this_blue
	set color_withAlpha_return_alpha = a
	return color_withAlpha_return_red
endfunction

function unit_setVertexColor takes unit this_44, integer col_red, integer col_green, integer col_blue, integer col_alpha returns nothing
	call SetUnitVertexColor(this_44, col_red, col_green, col_blue, col_alpha)
endfunction

function Model_showDirect takes integer this_44, player p returns nothing
	local unit temp = Model_u[this_44]
	local integer tempIndex = this_44
	call unit_setVertexColor(temp, color_withAlpha(Model_col[tempIndex], Model_col_2[tempIndex], Model_col_3[tempIndex], 255), color_withAlpha_return_green, color_withAlpha_return_blue, color_withAlpha_return_alpha)
	set temp = null
endfunction

function char takes string s returns integer
	local integer a
	if "\\" == s then
		return 92
	endif
	set a = Char_s2c[StringHash(s) / 2033480 + 1002]
	if s != Char_c2s[a] then
		return a + 32
	endif
	return a
endfunction

function alloc_ImageListEntry takes nothing returns integer
	local integer this_44
	if ImageListEntry_firstFree == 0 then
		set ImageListEntry_maxIndex = ImageListEntry_maxIndex + 1
		set this_44 = ImageListEntry_maxIndex
	else
		set ImageListEntry_firstFree = ImageListEntry_firstFree - 1
		set this_44 = ImageListEntry_nextFree[ImageListEntry_firstFree]
	endif
	set ImageListEntry_typeId[this_44] = 779
	return this_44
endfunction

function construct_ImageListEntry takes integer this_44, image img, integer prev returns nothing
	set ImageListEntry_img[this_44] = img
	set ImageListEntry_prev[this_44] = prev
endfunction

function new_ImageListEntry takes image img, integer prev returns integer
	local integer this_44 = alloc_ImageListEntry()
	call construct_ImageListEntry(this_44, img, prev)
	return this_44
endfunction

function ImageList_add takes integer this_44, image i returns nothing
	set ImageList_last[this_44] = new_ImageListEntry(i, ImageList_last[this_44])
endfunction

function dispatch_ImageList_add takes integer this_44, image i, string wurstStackTrace returns nothing
	if ImageList_typeId[this_44] == 0 then
		if this_44 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling ImageList.add" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called ImageList.add on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call ImageList_add(this_44, i)
endfunction

function TextSplat_updateDimY takes integer this_44 returns nothing
	local integer tempIndex = this_44
	local real temp_tempTupleSelectionResult_1 = TextSplat_cursor[tempIndex]
	local real temp_tempTupleSelectionResult_2 = TextSplat_cursor_2[tempIndex]
	local real tempTupleSelectionResult_2 = temp_tempTupleSelectionResult_2
	local real temp = tempTupleSelectionResult_2
	local integer tempIndex_2 = this_44
	local real temp_tempTupleSelectionResult_1_2 = TextSplat_dimensions[tempIndex_2]
	local real temp_tempTupleSelectionResult_2_2 = TextSplat_dimensions_2[tempIndex_2]
	local real tempTupleSelectionResult_2_2 = temp_tempTupleSelectionResult_2_2
	local integer tempIndex_3
	local integer tempIndex_4
	local real tempTupleSelectionResult_2_3
	local real temp_tempTupleSelectionResult_1_3
	local real temp_tempTupleSelectionResult_2_3
	if temp < tempTupleSelectionResult_2_2 then
		set tempIndex_3 = this_44
		set tempIndex_4 = this_44
		set temp_tempTupleSelectionResult_1_3 = TextSplat_cursor[tempIndex_4]
		set temp_tempTupleSelectionResult_2_3 = TextSplat_cursor_2[tempIndex_4]
		set tempTupleSelectionResult_2_3 = temp_tempTupleSelectionResult_2_3
		set TextSplat_dimensions_2[tempIndex_3] = tempTupleSelectionResult_2_3
	endif
endfunction

function dispatch_TextSplat_updateDimY takes integer this_44, string wurstStackTrace returns nothing
	if TextSplat_typeId[this_44] == 0 then
		if this_44 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling TextSplat.updateDimY" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called TextSplat.updateDimY on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call TextSplat_updateDimY(this_44)
endfunction

function getFontHeight takes nothing returns integer
	return FontArial_FONT_HEIGHT
endfunction

function getFontResolution takes nothing returns integer
	return FontArial_FONT_RESOLUTION
endfunction

function TextSplat_newline takes integer this_44, string wurstStackTrace returns nothing
	local integer tempIndex = this_44
	local integer tempIndex_2 = this_44
	local real temp_tempTupleSelectionResult_1 = TextSplat_pos[tempIndex_2]
	local real temp_tempTupleSelectionResult_2 = TextSplat_pos_2[tempIndex_2]
	local real tempTupleSelectionResult_1 = temp_tempTupleSelectionResult_1
	local integer tempIndex_3
	local integer tempIndex_4
	local real tempTupleSelectionResult_2
	local real temp_tempTupleSelectionResult_1_2
	local real temp_tempTupleSelectionResult_2_2
	local integer temp
	set TextSplat_cursor[tempIndex] = tempTupleSelectionResult_1
	set tempIndex_3 = this_44
	set temp = tempIndex_3
	set tempIndex_4 = this_44
	set temp_tempTupleSelectionResult_1_2 = TextSplat_cursor[tempIndex_4]
	set temp_tempTupleSelectionResult_2_2 = TextSplat_cursor_2[tempIndex_4]
	set tempTupleSelectionResult_2 = temp_tempTupleSelectionResult_2_2
	set TextSplat_cursor_2[temp] = tempTupleSelectionResult_2 - TextSplat_fontSize[this_44] * getFontHeight() / getFontResolution()
	call dispatch_TextSplat_updateDimY(this_44, "\n   TextSplat, line 125" + wurstStackTrace)
endfunction

function dispatch_TextSplat_newline takes integer this_44, string wurstStackTrace returns nothing
	if TextSplat_typeId[this_44] == 0 then
		if this_44 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling TextSplat.newline" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called TextSplat.newline on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call TextSplat_newline(this_44, "\n   TextSplat, line 121" + wurstStackTrace)
endfunction

function TextSplat_updateDimX takes integer this_44 returns nothing
	local integer tempIndex = this_44
	local real temp_tempTupleSelectionResult_1 = TextSplat_cursor[tempIndex]
	local real temp_tempTupleSelectionResult_2 = TextSplat_cursor_2[tempIndex]
	local real tempTupleSelectionResult_1 = temp_tempTupleSelectionResult_1
	local real temp = tempTupleSelectionResult_1
	local integer tempIndex_2 = this_44
	local real temp_tempTupleSelectionResult_1_2 = TextSplat_dimensions[tempIndex_2]
	local real temp_tempTupleSelectionResult_2_2 = TextSplat_dimensions_2[tempIndex_2]
	local real tempTupleSelectionResult_1_2 = temp_tempTupleSelectionResult_1_2
	local integer tempIndex_3
	local integer tempIndex_4
	local real tempTupleSelectionResult_1_3
	local real temp_tempTupleSelectionResult_1_3
	local real temp_tempTupleSelectionResult_2_3
	if temp > tempTupleSelectionResult_1_2 then
		set tempIndex_3 = this_44
		set tempIndex_4 = this_44
		set temp_tempTupleSelectionResult_1_3 = TextSplat_cursor[tempIndex_4]
		set temp_tempTupleSelectionResult_2_3 = TextSplat_cursor_2[tempIndex_4]
		set tempTupleSelectionResult_1_3 = temp_tempTupleSelectionResult_1_3
		set TextSplat_dimensions[tempIndex_3] = tempTupleSelectionResult_1_3
	endif
endfunction

function dispatch_TextSplat_updateDimX takes integer this_44, string wurstStackTrace returns nothing
	if TextSplat_typeId[this_44] == 0 then
		if this_44 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling TextSplat.updateDimX" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called TextSplat.updateDimX on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call TextSplat_updateDimX(this_44)
endfunction

function char_toInt takes integer this_c returns integer
	return this_c
endfunction

function getFontPath takes integer c_c returns string
	return FontArial_paths[char_toInt(c_c)]
endfunction

function getFontWidth takes integer c_c returns integer
	return FontArial_widths[char_toInt(c_c)]
endfunction

function image_setColor takes image this_44, integer col_red, integer col_green, integer col_blue, integer col_alpha returns nothing
	call SetImageColor(this_44, col_red, col_green, col_blue, col_alpha)
endfunction

function image_show_2 takes image this_44 returns nothing
	call SetImageRenderAlways(this_44, true)
endfunction

function string_charAt takes string this_44, integer index returns string
	return SubString(this_44, index, index + 1)
endfunction

function string_length takes string this_44 returns integer
	return StringLength(this_44)
endfunction

function TextSplat_append takes integer this_44, string text, integer col_red, integer col_green, integer col_blue, integer col_alpha, player p, string wurstStackTrace returns nothing
	local integer c_c
	local real charWidth
	local integer n
	local integer temp
	local image img
	local image receiver
	local integer tempIndex
	local real tempTupleSelectionResult_1
	local real temp_tempTupleSelectionResult_1
	local real temp_tempTupleSelectionResult_2
	local integer tempIndex_2
	local real tempTupleSelectionResult_1_2
	local real temp_tempTupleSelectionResult_1_2
	local real temp_tempTupleSelectionResult_2_2
	local integer tempIndex_3
	local real tempTupleSelectionResult_2
	local real temp_tempTupleSelectionResult_1_3
	local real temp_tempTupleSelectionResult_2_3
	local integer tempIndex_4
	local integer tempIndex_5
	local real tempTupleSelectionResult_1_3
	local real temp_tempTupleSelectionResult_1_4
	local real temp_tempTupleSelectionResult_2_4
	local string temp_2
	local real temp_3
	local real temp_4
	local real temp_5
	local integer temp_6
	if GetLocalPlayer() == p then
		set n = 0
		set temp = string_length(text) - 1
		loop
			exitwhen n > temp
			set c_c = char(string_charAt(text, n))
			set charWidth = TextSplat_fontSize[this_44] * getFontWidth(c_c) / getFontResolution()
			set tempIndex = this_44
			set temp_tempTupleSelectionResult_1 = TextSplat_cursor[tempIndex]
			set temp_tempTupleSelectionResult_2 = TextSplat_cursor_2[tempIndex]
			set tempTupleSelectionResult_1 = temp_tempTupleSelectionResult_1
			if tempTupleSelectionResult_1 + charWidth > TextSplat_maxWidth[this_44] then
				call dispatch_TextSplat_newline(this_44, "\n   TextSplat, line 111" + wurstStackTrace)
			endif
			if c_c != 32 then
				set temp_2 = getFontPath(c_c)
				set temp_3 = TextSplat_fontSize[this_44]
				set temp_4 = TextSplat_fontSize[this_44]
				set tempIndex_2 = this_44
				set temp_tempTupleSelectionResult_1_2 = TextSplat_cursor[tempIndex_2]
				set temp_tempTupleSelectionResult_2_2 = TextSplat_cursor_2[tempIndex_2]
				set tempTupleSelectionResult_1_2 = temp_tempTupleSelectionResult_1_2
				set temp_5 = tempTupleSelectionResult_1_2
				set tempIndex_3 = this_44
				set temp_tempTupleSelectionResult_1_3 = TextSplat_cursor[tempIndex_3]
				set temp_tempTupleSelectionResult_2_3 = TextSplat_cursor_2[tempIndex_3]
				set tempTupleSelectionResult_2 = temp_tempTupleSelectionResult_2_3
				set receiver = CreateImage(temp_2, temp_3, temp_4, 0., temp_5, tempTupleSelectionResult_2, 0., 0., 0., 0., TextSplat_layer[this_44] + 1)
				call image_show_2(receiver)
				set img = receiver
				if col_alpha != TextSplat_DISABLE_COLOR_ALPHA then
					call image_setColor(img, col_red, col_green, col_blue, col_alpha)
				endif
				call dispatch_ImageList_add(TextSplat_images[this_44], img, "\n   TextSplat, line 117" + wurstStackTrace)
			endif
			set tempIndex_4 = this_44
			set temp_6 = tempIndex_4
			set tempIndex_5 = this_44
			set temp_tempTupleSelectionResult_1_4 = TextSplat_cursor[tempIndex_5]
			set temp_tempTupleSelectionResult_2_4 = TextSplat_cursor_2[tempIndex_5]
			set tempTupleSelectionResult_1_3 = temp_tempTupleSelectionResult_1_4
			set TextSplat_cursor[temp_6] = tempTupleSelectionResult_1_3 + charWidth
			call dispatch_TextSplat_updateDimX(this_44, "\n   TextSplat, line 119" + wurstStackTrace)
			set n = n + 1
		endloop
	endif
	set img = null
	set receiver = null
endfunction

function dispatch_TextSplat_append takes integer this_44, string text, integer col_red, integer col_green, integer col_blue, integer col_alpha, player p, string wurstStackTrace returns nothing
	if TextSplat_typeId[this_44] == 0 then
		if this_44 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling TextSplat.append" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called TextSplat.append on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call TextSplat_append(this_44, text, col_red, col_green, col_blue, col_alpha, p, "\n   TextSplat, line 102" + wurstStackTrace)
endfunction

function ImageListEntry_onDestroy takes integer this_44 returns nothing
endfunction

function dealloc_ImageListEntry takes integer obj, string wurstStackTrace returns nothing
	if ImageListEntry_typeId[obj] == 0 then
		call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Double free: object of type ImageListEntry" + wurstStackTrace)
		call I2S(1 / 0)
	else
		set ImageListEntry_nextFree[ImageListEntry_firstFree] = obj
		set ImageListEntry_firstFree = ImageListEntry_firstFree + 1
		set ImageListEntry_typeId[obj] = 0
	endif
endfunction

function destroyImageListEntry takes integer this_44, string wurstStackTrace returns nothing
	call ImageListEntry_onDestroy(this_44)
	call dealloc_ImageListEntry(this_44, "\n   TextSplat, line 166" + wurstStackTrace)
endfunction

function dispatch_ImageListEntry_destroyImageListEntry takes integer this_44, string wurstStackTrace returns nothing
	if ImageListEntry_typeId[this_44] == 0 then
		if this_44 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling ImageListEntry.destroyImageListEntry" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called ImageListEntry.destroyImageListEntry on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call destroyImageListEntry(this_44, "\n   TextSplat, line 166" + wurstStackTrace)
endfunction

function ImageList_eraseAll takes integer this_44, string wurstStackTrace returns nothing
	local integer e = ImageList_last[this_44]
	loop
		exitwhen  not (e != 0)
		call image_remove(ImageListEntry_img[e], "\n   TextSplat, line 187" + wurstStackTrace)
		call dispatch_ImageListEntry_destroyImageListEntry(e, "\n   TextSplat, line 188" + wurstStackTrace)
		set e = ImageListEntry_prev[e]
	endloop
	set ImageList_last[this_44] = 0
endfunction

function dispatch_ImageList_eraseAll takes integer this_44, string wurstStackTrace returns nothing
	if ImageList_typeId[this_44] == 0 then
		if this_44 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling ImageList.eraseAll" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called ImageList.eraseAll on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call ImageList_eraseAll(this_44, "\n   TextSplat, line 183" + wurstStackTrace)
endfunction

function TextSplat_clear takes integer this_44, player p, string wurstStackTrace returns nothing
	local integer tempIndex
	local integer tempIndex_2
	local real tempTupleSelectionResult_1
	local real temp_tempTupleSelectionResult_1
	local real temp_tempTupleSelectionResult_2
	local integer tempIndex_3
	local real tempTupleSelectionResult_2
	local real temp_tempTupleSelectionResult_1_2
	local real temp_tempTupleSelectionResult_2_2
	local integer tempIndex_4
	local integer tempIndex_5
	local integer temp
	local integer temp_2
	if GetLocalPlayer() == p then
		call dispatch_ImageList_eraseAll(TextSplat_images[this_44], "\n   TextSplat, line 154" + wurstStackTrace)
		set tempIndex = this_44
		set temp = tempIndex
		set tempIndex_2 = this_44
		set temp_tempTupleSelectionResult_1 = TextSplat_pos[tempIndex_2]
		set temp_tempTupleSelectionResult_2 = TextSplat_pos_2[tempIndex_2]
		set tempTupleSelectionResult_1 = temp_tempTupleSelectionResult_1
		set TextSplat_cursor[temp] = tempTupleSelectionResult_1
		set temp_2 = tempIndex
		set tempIndex_3 = this_44
		set temp_tempTupleSelectionResult_1_2 = TextSplat_pos[tempIndex_3]
		set temp_tempTupleSelectionResult_2_2 = TextSplat_pos_2[tempIndex_3]
		set tempTupleSelectionResult_2 = temp_tempTupleSelectionResult_2_2
		set TextSplat_cursor_2[temp_2] = tempTupleSelectionResult_2 - TextSplat_fontSize[this_44]
		set tempIndex_4 = this_44
		set tempIndex_5 = this_44
		set TextSplat_dimensions[tempIndex_4] = TextSplat_pos[tempIndex_5]
		set TextSplat_dimensions_2[tempIndex_4] = TextSplat_pos_2[tempIndex_5]
	endif
endfunction

function dispatch_TextSplat_clear takes integer this_44, player p, string wurstStackTrace returns nothing
	if TextSplat_typeId[this_44] == 0 then
		if this_44 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling TextSplat.clear" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called TextSplat.clear on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call TextSplat_clear(this_44, p, "\n   TextSplat, line 151" + wurstStackTrace)
endfunction

function TextBox_showDirect takes integer this_44, player p, string wurstStackTrace returns nothing
	local integer tempIndex
	local integer temp
	local string temp_2
	call dispatch_TextSplat_clear(TextBox_splat[this_44], p, "\n   TextBox, line 34" + wurstStackTrace)
	set temp = TextBox_splat[this_44]
	set temp_2 = TextBox_content[this_44]
	set tempIndex = this_44
	call dispatch_TextSplat_append(temp, temp_2, color_withAlpha(TextBox_col[tempIndex], TextBox_col_2[tempIndex], TextBox_col_3[tempIndex], 255), color_withAlpha_return_green, color_withAlpha_return_blue, color_withAlpha_return_alpha, p, "\n   TextBox, line 35" + wurstStackTrace)
endfunction

function ImageIterator_onDestroy takes integer this_44 returns nothing
endfunction

function dealloc_ImageIterator takes integer obj, string wurstStackTrace returns nothing
	if ImageIterator_typeId[obj] == 0 then
		call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Double free: object of type ImageIterator" + wurstStackTrace)
		call I2S(1 / 0)
	else
		set ImageIterator_nextFree[ImageIterator_firstFree] = obj
		set ImageIterator_firstFree = ImageIterator_firstFree + 1
		set ImageIterator_typeId[obj] = 0
	endif
endfunction

function destroyImageIterator takes integer this_44, string wurstStackTrace returns nothing
	call ImageIterator_onDestroy(this_44)
	call dealloc_ImageIterator(this_44, "\n   ImageList, line 38" + wurstStackTrace)
endfunction

function dispatch_ImageIterator_destroyImageIterator takes integer this_44, string wurstStackTrace returns nothing
	if ImageIterator_typeId[this_44] == 0 then
		if this_44 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling ImageIterator.destroyImageIterator" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called ImageIterator.destroyImageIterator on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call destroyImageIterator(this_44, "\n   ImageList, line 38" + wurstStackTrace)
endfunction

function ImageIterator_close takes integer this_44, string wurstStackTrace returns nothing
	call dispatch_ImageIterator_destroyImageIterator(this_44, "\n   ImageList, line 53" + wurstStackTrace)
endfunction

function dispatch_ImageIterator_close takes integer this_44, string wurstStackTrace returns nothing
	if ImageIterator_typeId[this_44] == 0 then
		if this_44 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling ImageIterator.close" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called ImageIterator.close on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call ImageIterator_close(this_44, "\n   ImageList, line 52" + wurstStackTrace)
endfunction

function ImageIterator_hasNext takes integer this_44 returns boolean
	return ImageIterator_pos[this_44] != 0
endfunction

function dispatch_ImageIterator_hasNext takes integer this_44, string wurstStackTrace returns boolean
	local boolean hasNext_result
	if ImageIterator_typeId[this_44] == 0 then
		if this_44 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling ImageIterator.hasNext" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called ImageIterator.hasNext on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	set hasNext_result = ImageIterator_hasNext(this_44)
	return hasNext_result
endfunction

function ImageIterator_next takes integer this_44 returns image
	local image img = ListImage_img[ImageIterator_pos[this_44]]
	set ImageIterator_pos[this_44] = ListImage_next[ImageIterator_pos[this_44]]
	set ImageIterator_nexttempReturn = img
	set img = null
	return ImageIterator_nexttempReturn
endfunction

function dispatch_ImageIterator_next takes integer this_44, string wurstStackTrace returns image
	local image next_result
	if ImageIterator_typeId[this_44] == 0 then
		if this_44 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling ImageIterator.next" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called ImageIterator.next on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	set next_result = ImageIterator_next(this_44)
	set dispatch_ImageIterator_nexttempReturn = next_result
	set next_result = null
	return dispatch_ImageIterator_nexttempReturn
endfunction

function alloc_ImageIterator takes nothing returns integer
	local integer this_44
	if ImageIterator_firstFree == 0 then
		set ImageIterator_maxIndex = ImageIterator_maxIndex + 1
		set this_44 = ImageIterator_maxIndex
	else
		set ImageIterator_firstFree = ImageIterator_firstFree - 1
		set this_44 = ImageIterator_nextFree[ImageIterator_firstFree]
	endif
	set ImageIterator_typeId[this_44] = 798
	return this_44
endfunction

function construct_ImageIterator takes integer this_44, integer start returns nothing
	set ImageIterator_pos[this_44] = start
endfunction

function new_ImageIterator takes integer start returns integer
	local integer this_44 = alloc_ImageIterator()
	call construct_ImageIterator(this_44, start)
	return this_44
endfunction

function ImageList_iterator takes integer this_44 returns integer
	return new_ImageIterator(ImageList_first[this_44])
endfunction

function dispatch_ImageList_iterator takes integer this_44, string wurstStackTrace returns integer
	local integer iterator_result
	if ImageList_typeId_2[this_44] == 0 then
		if this_44 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling ImageList.iterator" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called ImageList.iterator on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	set iterator_result = ImageList_iterator(this_44)
	return iterator_result
endfunction

function LLIterator_onDestroy takes integer this_44 returns nothing
endfunction

function dealloc_LLIterator takes integer obj, string wurstStackTrace returns nothing
	if LLIterator_typeId[obj] == 0 then
		call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Double free: object of type LLIterator" + wurstStackTrace)
		call I2S(1 / 0)
	else
		set LLIterator_nextFree[LLIterator_firstFree] = obj
		set LLIterator_firstFree = LLIterator_firstFree + 1
		set LLIterator_typeId[obj] = 0
	endif
endfunction

function destroyLLIterator takes integer this_44, string wurstStackTrace returns nothing
	call LLIterator_onDestroy(this_44)
	call dealloc_LLIterator(this_44, "\n   LinkedList, line 139" + wurstStackTrace)
endfunction

function dispatch_LLIterator_destroyLLIterator takes integer this_44, string wurstStackTrace returns nothing
	if LLIterator_typeId[this_44] == 0 then
		if this_44 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling LLIterator.destroyLLIterator" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called LLIterator.destroyLLIterator on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call destroyLLIterator(this_44, "\n   LinkedList, line 139" + wurstStackTrace)
endfunction

function LLIterator_close takes integer this_44, string wurstStackTrace returns nothing
	call dispatch_LLIterator_destroyLLIterator(this_44, "\n   LinkedList, line 164" + wurstStackTrace)
endfunction

function dispatch_LLIterator_close takes integer this_44, string wurstStackTrace returns nothing
	if LLIterator_typeId[this_44] == 0 then
		if this_44 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling LLIterator.close" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called LLIterator.close on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call LLIterator_close(this_44, "\n   LinkedList, line 163" + wurstStackTrace)
endfunction

function LLIterator_hasNext takes integer this_44 returns boolean
	return LLEntry_next[LLIterator_current[this_44]] != LLIterator_dummy[this_44]
endfunction

function dispatch_LLIterator_hasNext takes integer this_44, string wurstStackTrace returns boolean
	local boolean hasNext_result
	if LLIterator_typeId[this_44] == 0 then
		if this_44 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling LLIterator.hasNext" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called LLIterator.hasNext on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	set hasNext_result = LLIterator_hasNext(this_44)
	return hasNext_result
endfunction

function LLIterator_next takes integer this_44 returns integer
	set LLIterator_current[this_44] = LLEntry_next[LLIterator_current[this_44]]
	return LLEntry_elem[LLIterator_current[this_44]]
endfunction

function dispatch_LLIterator_next takes integer this_44, string wurstStackTrace returns integer
	local integer next_result
	if LLIterator_typeId[this_44] == 0 then
		if this_44 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling LLIterator.next" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called LLIterator.next on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	set next_result = LLIterator_next(this_44)
	return next_result
endfunction

function alloc_LLIterator takes nothing returns integer
	local integer this_44
	if LLIterator_firstFree == 0 then
		set LLIterator_maxIndex = LLIterator_maxIndex + 1
		set this_44 = LLIterator_maxIndex
	else
		set LLIterator_firstFree = LLIterator_firstFree - 1
		set this_44 = LLIterator_nextFree[LLIterator_firstFree]
	endif
	set LLIterator_typeId[this_44] = 3
	return this_44
endfunction

function construct_LLIterator takes integer this_44, integer dummy returns nothing
	set LLIterator_dummy[this_44] = dummy
	set LLIterator_current[this_44] = dummy
endfunction

function new_LLIterator takes integer dummy returns integer
	local integer this_44 = alloc_LLIterator()
	call construct_LLIterator(this_44, dummy)
	return this_44
endfunction

function LinkedList_iterator takes integer this_44 returns integer
	return new_LLIterator(LinkedList_dummy[this_44])
endfunction

function dispatch_LinkedList_iterator takes integer this_44, string wurstStackTrace returns integer
	local integer iterator_result
	if LinkedList_typeId[this_44] == 0 then
		if this_44 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling LinkedList.iterator" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called LinkedList.iterator on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	set iterator_result = LinkedList_iterator(this_44)
	return iterator_result
endfunction

function TextSplat_append_2 takes integer this_44, string text, player p, string wurstStackTrace returns nothing
	call dispatch_TextSplat_append(this_44, text, 0, 0, 0, TextSplat_DISABLE_COLOR_ALPHA, p, "\n   TextSplat, line 100" + wurstStackTrace)
endfunction

function dispatch_TextSplat_append_2 takes integer this_44, string text, player p, string wurstStackTrace returns nothing
	if TextSplat_typeId[this_44] == 0 then
		if this_44 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling TextSplat.append" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called TextSplat.append on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call TextSplat_append_2(this_44, text, p, "\n   TextSplat, line 98" + wurstStackTrace)
endfunction

function cyc_cyc_cyc_dispatch_Widget_showDirect takes integer funcChoice, integer funcChoice_2, integer funcChoice_3, integer this_44, player p, string wurstStackTrace returns nothing
	local integer wurst__iterator1
	local image img
	local integer wurst__iterator2
	local integer w_2
	if funcChoice == 0 then
		if funcChoice_2 == 0 then
			if funcChoice_3 == 0 then
				if Widget_typeId[this_44] == 0 then
					if this_44 == 0 then
						call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Widget.showDirect" + wurstStackTrace)
						call I2S(1 / 0)
					else
						call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Widget.showDirect on invalid object." + wurstStackTrace)
						call I2S(1 / 0)
					endif
				endif
				if Widget_typeId[this_44] <= 799 then
					if Widget_typeId[this_44] <= 794 then
						if Widget_typeId[this_44] <= 786 then
							call cyc_cyc_cyc_dispatch_Widget_showDirect(0, 0, 1, this_44, p, "\n   Menu, line 28" + wurstStackTrace)
						else
							call TextBox_showDirect(this_44, p, "\n   Menu, line 28" + wurstStackTrace)
						endif
					elseif Widget_typeId[this_44] <= 795 then
						call ImageEx_showDirect(this_44, p)
					else
						call cyc_cyc_cyc_dispatch_Widget_showDirect(1, this_44, 0, 0, p, "\n   Menu, line 28" + wurstStackTrace)
					endif
				elseif Widget_typeId[this_44] <= 809 then
					if Widget_typeId[this_44] <= 805 then
						call Model_showDirect(this_44, p)
					else
						call Icon_showDirect(this_44, p, "\n   Menu, line 28" + wurstStackTrace)
					endif
				else
					call cyc_cyc_cyc_dispatch_Widget_showDirect(0, 1, this_44, 0, p, "\n   Menu, line 28" + wurstStackTrace)
				endif
			elseif funcChoice_3 == 1 then
				call cyc_cyc_cyc_dispatch_Widget_showDirect(0, 0, 0, Observable_content[this_44], p, "\n   Menu, line 56" + wurstStackTrace)
			endif
		elseif funcChoice_2 == 1 then
			call dispatch_TextSplat_append_2(Button_splat[funcChoice_3], Button_name[funcChoice_3], p, "\n   Button, line 26" + wurstStackTrace)
			call cyc_cyc_cyc_dispatch_Widget_showDirect(0, 0, 1, funcChoice_3, p, "\n   Button, line 27" + wurstStackTrace)
		endif
	elseif funcChoice == 1 then
		if GetLocalPlayer() == p then
			set wurst__iterator1 = dispatch_ImageList_iterator(Pane_list[funcChoice_2], "\n   Pane, line 89" + wurstStackTrace)
			loop
				exitwhen  not dispatch_ImageIterator_hasNext(wurst__iterator1, "\n   Pane, line 89" + wurstStackTrace)
				set img = dispatch_ImageIterator_next(wurst__iterator1, "\n   Pane, line 89" + wurstStackTrace)
				call image_show_2(img)
			endloop
			call dispatch_ImageIterator_close(wurst__iterator1, "\n   Pane, line 89" + wurstStackTrace)
			set wurst__iterator2 = dispatch_LinkedList_iterator(Pane_content[funcChoice_2], "\n   Pane, line 91" + wurstStackTrace)
			loop
				exitwhen  not dispatch_LLIterator_hasNext(wurst__iterator2, "\n   Pane, line 91" + wurstStackTrace)
				set w_2 = dispatch_LLIterator_next(wurst__iterator2, "\n   Pane, line 91" + wurstStackTrace)
				call cyc_cyc_cyc_dispatch_Widget_showDirect(0, 0, 0, w_2, p, "\n   Pane, line 92" + wurstStackTrace)
			endloop
			call dispatch_LLIterator_close(wurst__iterator2, "\n   Pane, line 91" + wurstStackTrace)
		endif
	endif
	set img = null
endfunction

function Window_showContent takes integer this_44, player p, string wurstStackTrace returns nothing
	local integer wurst__iterator0 = dispatch_LinkedList_iterator(Window_content[this_44], "\n   Menu, line 170" + wurstStackTrace)
	local integer g
	loop
		exitwhen  not dispatch_LLIterator_hasNext(wurst__iterator0, "\n   Menu, line 170" + wurstStackTrace)
		set g = dispatch_LLIterator_next(wurst__iterator0, "\n   Menu, line 170" + wurstStackTrace)
		call cyc_cyc_cyc_dispatch_Widget_showDirect(0, 0, 0, g, p, "\n   Menu, line 171" + wurstStackTrace)
	endloop
	call dispatch_LLIterator_close(wurst__iterator0, "\n   Menu, line 170" + wurstStackTrace)
endfunction

function dispatch_Window_showContent takes integer this_44, player p, string wurstStackTrace returns nothing
	if Window_typeId[this_44] == 0 then
		if this_44 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Window.showContent" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Window.showContent on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	if Window_typeId[this_44] <= 789 then
		call Window_showContent(this_44, p, "\n   Menu, line 169" + wurstStackTrace)
	else
		call Window_showContent(this_44, p, "\n   Menu, line 169" + wurstStackTrace)
	endif
endfunction

function handle_getHandleId takes handle this_44 returns integer
	return GetHandleId(this_44)
endfunction

function playerToIndex takes player object returns integer
	return handle_getHandleId(object)
endfunction

function WindowManager_openWindow takes integer w_2, player p, string wurstStackTrace returns nothing
	call dispatch_HashMap_put(Window_wantToClose[w_2], playerToIndex(p), booleanToIndex(false), "\n   Menu, line 126" + wurstStackTrace)
	call dispatch_Window_showContent(w_2, p, "\n   Menu, line 127" + wurstStackTrace)
	call dispatch_Stack_push(WindowManager_currentWindow[GetPlayerId(p)], w_2, "\n   Menu, line 128" + wurstStackTrace)
endfunction

function afterPreload takes string wurstStackTrace returns nothing
	call WindowManager_openWindow(GameStart_shopWindow, Player(0), "\n   GameStart, line 504" + wurstStackTrace)
endfunction

function closure_impl_22 takes integer this_44, integer i, string wurstStackTrace returns nothing
	call afterPreload("\n   GameStart, line 183" + wurstStackTrace)
endfunction

function dispatch_Action_fire takes integer this_44, integer d_2, string wurstStackTrace returns nothing
	if Action_typeId[this_44] == 0 then
		if this_44 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Action.fire" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Action.fire on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	if Action_typeId[this_44] <= 675 then
		if Action_typeId[this_44] <= 673 then
			call closure_impl_21(this_44, d_2, "\n   CustomClosureEvents, line 67" + wurstStackTrace)
		else
			call closure_impl_20(this_44, d_2, "\n   CustomClosureEvents, line 67" + wurstStackTrace)
		endif
	else
		call closure_impl_22(this_44, d_2, "\n   CustomClosureEvents, line 67" + wurstStackTrace)
	endif
endfunction

function Event_stop takes integer this_44, integer d_2 returns boolean
	return false
endfunction

function OnDamageEvent_stop takes integer this_44, integer data returns boolean
	return OnDamageData_stop[data]
endfunction

function SpellEvent_stop takes integer this_44, integer data returns boolean
	return  not SpellData_spellSuccess[data]
endfunction

function dispatch_Event_stop takes integer this_44, integer d_2, string wurstStackTrace returns boolean
	local boolean stop_result
	if Event_typeId[this_44] == 0 then
		if this_44 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Event.stop" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Event.stop on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	if Event_typeId[this_44] <= 767 then
		if Event_typeId[this_44] <= 765 then
			if Event_typeId[this_44] <= 668 then
				set stop_result = Event_stop(this_44, d_2)
			else
				set stop_result = Event_stop(this_44, d_2)
			endif
		else
			set stop_result = OnDamageEvent_stop(this_44, d_2)
		endif
	elseif Event_typeId[this_44] <= 770 then
		if Event_typeId[this_44] <= 769 then
			set stop_result = SpellEvent_stop(this_44, d_2)
		else
			set stop_result = Event_stop(this_44, d_2)
		endif
	else
		set stop_result = Event_stop(this_44, d_2)
	endif
	return stop_result
endfunction

function Event_callActions takes integer this_44, integer d_2, string wurstStackTrace returns nothing
	local integer buffer = Event_first[this_44]
	if Event_checkData[this_44] then
		loop
			exitwhen  not (buffer != 0)
			if dispatch_Event_stop(this_44, d_2, "\n   CustomClosureEvents, line 44" + wurstStackTrace) then
				return
			endif
			call dispatch_Action_fire(buffer, d_2, "\n   CustomClosureEvents, line 46" + wurstStackTrace)
			set buffer = Action_next[buffer]
		endloop
	else
		loop
			exitwhen  not (buffer != 0)
			call dispatch_Action_fire(buffer, d_2, "\n   CustomClosureEvents, line 50" + wurstStackTrace)
			set buffer = Action_next[buffer]
		endloop
	endif
endfunction

function UnitEvent_fire takes integer this_44, integer whichUnit, string wurstStackTrace returns nothing
	call Event_callActions(this_44, whichUnit, "\n   UnitEvents, line 94" + wurstStackTrace)
endfunction

function dispatch_UnitEvent_fire takes integer this_44, integer whichUnit, string wurstStackTrace returns nothing
	if Event_typeId[this_44] == 0 then
		if this_44 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling UnitEvent.fire" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called UnitEvent.fire on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call UnitEvent_fire(this_44, whichUnit, "\n   UnitEvents, line 93" + wurstStackTrace)
endfunction

function group_close takes group this_44 returns nothing
	call DestroyGroup(this_44)
endfunction

function group_hasNext takes group this_44 returns boolean
	return FirstOfGroup(this_44) != null
endfunction

function group_iterator takes group this_44 returns group
	set bj_groupAddGroupDest = CreateGroup()
	call ForGroup(this_44, ref_function_GroupAddGroupEnum_2)
	return bj_groupAddGroupDest
endfunction

function group_next takes group this_44 returns unit
	local unit u_2 = FirstOfGroup(this_44)
	call GroupRemoveUnit(this_44, u_2)
	set group_nexttempReturn = u_2
	set u_2 = null
	return group_nexttempReturn
endfunction

function unit_getX takes unit this_44 returns real
	return GetUnitX(this_44)
endfunction

function unit_getY takes unit this_44 returns real
	return GetUnitY(this_44)
endfunction

function unit_getPos takes unit this_44 returns real
	set unit_getPos_return_x = unit_getX(this_44)
	set unit_getPos_return_y = unit_getY(this_44)
	return unit_getPos_return_x
endfunction

function unit_getUserData takes unit this_44 returns integer
	return GetUnitUserData(this_44)
endfunction

function real_squared takes real this_44 returns real
	return this_44 * this_44
endfunction

function vec2_distToVec takes real this_x, real this_y, real v_x, real v_y returns real
	return SquareRoot(real_squared(v_x - this_x) + real_squared(v_y - this_y))
endfunction

function Aura_check takes integer this_44, string wurstStackTrace returns nothing
	local group wurst__iterator0 = group_iterator(Aura_g[this_44])
	local unit gu
	local integer obj
	local group tempGroup
	local unit gu_2
	local integer obj_2
	loop
		exitwhen  not group_hasNext(wurst__iterator0)
		set gu = group_next(wurst__iterator0)
		set obj = unit_getUserData(gu)
		if obj != 0 and vec2_distToVec(unit_getPos(gu), unit_getPos_return_y, unit_getPos(Unit_u[Aura_u[this_44]]), unit_getPos_return_y) > Aura_radius[this_44] then
			call dispatch_UnitEvent_fire(Aura_leave[this_44], obj, "\n   AuraHelper, line 46" + wurstStackTrace)
			call GroupRemoveUnit(Aura_g[this_44], gu)
		endif
	endloop
	call group_close(wurst__iterator0)
	set tempGroup = CreateGroup()
	call MoveRectTo(Aura_r[this_44], unit_getX(Unit_u[Aura_u[this_44]]), unit_getY(Unit_u[Aura_u[this_44]]))
	call GroupEnumUnitsInRect(tempGroup, Aura_r[this_44], Aura_filter[this_44])
	loop
		exitwhen  not group_hasNext(tempGroup)
		set gu_2 = group_next(tempGroup)
		set obj_2 = unit_getUserData(gu_2)
		if obj_2 != 0 and vec2_distToVec(unit_getPos(gu_2), unit_getPos_return_y, unit_getPos(Unit_u[Aura_u[this_44]]), unit_getPos_return_y) <= Aura_radius[this_44] and ( not IsUnitInGroup(gu_2, Aura_g[this_44])) then
			call dispatch_UnitEvent_fire(Aura_enter[this_44], obj_2, "\n   AuraHelper, line 54" + wurstStackTrace)
			call GroupAddUnit(Aura_g[this_44], gu_2)
		endif
	endloop
	call DestroyGroup(tempGroup)
	set wurst__iterator0 = null
	set gu = null
	set tempGroup = null
	set gu_2 = null
endfunction

function dispatch_Aura_check takes integer this_44, string wurstStackTrace returns nothing
	if Aura_typeId[this_44] == 0 then
		if this_44 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Aura.check" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Aura.check on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call Aura_check(this_44, "\n   AuraHelper, line 41" + wurstStackTrace)
endfunction

function Aura_callCheck takes string wurstStackTrace returns nothing
	call dispatch_Aura_check(timer_getData(GetExpiredTimer(), "\n   AuraHelper, line 33" + wurstStackTrace), "\n   AuraHelper, line 33" + wurstStackTrace)
endfunction

function bridge_Aura_callCheck takes nothing returns nothing
	call Aura_callCheck("\n   AuraHelper, line 30")
endfunction

function unit_getState takes unit this_44, unitstate state returns real
	return GetUnitState(this_44, state)
endfunction

function unit_getHP takes unit this_44 returns real
	return unit_getState(this_44, UNIT_STATE_LIFE)
endfunction

function Bar_update takes integer this_44 returns nothing
	local real hp = unit_getHP(Unit_u[Bar_owner[this_44]])
	local real maxHp = GetUnitState(Unit_u[Bar_owner[this_44]], UNIT_STATE_MAX_LIFE)
	local real per = hp / maxHp
	local integer barsGot = roundReal(per * HeroBar_realBarCount) * 2
	local integer shieldBars = roundReal(ShieldList_shieldSum[Unit_shieldList[Bar_owner[this_44]]] / maxHp * HeroBar_realBarCount) * 2
	local integer barsLeft = HeroBar_fakeBarCount - barsGot - shieldBars
	local string hpGot
	local string shield
	local integer manaBarsGot
	local integer manaBarsLeft
	local string manaGot
	local string manaDead
	local string final
	set barsGot = barsGot + barsGot / (Bar_markerDistance[this_44] + 2) * 12
	set hpGot = SubString(Bar_hpFull[this_44], 0, barsGot)
	set shield = SubString(HeroBar_bar, 0, shieldBars)
	set manaBarsGot = roundReal(GetUnitState(Unit_u[Bar_owner[this_44]], UNIT_STATE_MANA) / GetUnitState(Unit_u[Bar_owner[this_44]], UNIT_STATE_MAX_MANA) * HeroBar_realBarCount) * 2
	set manaBarsLeft = HeroBar_fakeBarCount - manaBarsGot
	set manaGot = SubString(HeroBar_bar, 0, manaBarsGot)
	set manaDead = SubString(HeroBar_bar, 0, manaBarsLeft)
	if barsLeft <= 0 then
		set final = hpGot + HeroBar_shieldColor + shield + HeroBar_endColor + "|n" + HeroBar_mpColor + manaGot + HeroBar_endColor + HeroBar_mpColorDead + manaDead + HeroBar_endColor
	else
		set final = hpGot + HeroBar_shieldColor + shield + HeroBar_endColor + HeroBar_hpColorDead + SubString(HeroBar_bar, 0, barsLeft) + HeroBar_endColor + "|n" + HeroBar_mpColor + manaGot + HeroBar_endColor + HeroBar_mpColorDead + manaDead + HeroBar_endColor
	endif
	call SetTextTagText(Bar_tt[this_44], final, 0.01)
endfunction

function dispatch_Bar_update takes integer this_44, string wurstStackTrace returns nothing
	if Bar_typeId[this_44] == 0 then
		if this_44 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Bar.update" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Bar.update on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call Bar_update(this_44)
endfunction

function Bar_updateExDirect takes integer this_44, string wurstStackTrace returns nothing
	local integer i
	local integer temp
	local integer charCount
	set Bar_markerDistance[this_44] = (HeroBar_seperateAt * HeroBar_realBarCount / R2I(GetUnitState(Unit_u[Bar_owner[this_44]], UNIT_STATE_MAX_LIFE)) - 1) * 2
	set Bar_hpFull[this_44] = ""
	set i = 1
	set temp = HeroBar_fakeBarCount / (Bar_markerDistance[this_44] + 2)
	loop
		exitwhen i > temp
		set Bar_hpFull[this_44] = Bar_hpFull[this_44] + SubString(HeroBar_bar, 0, Bar_markerDistance[this_44])
		set Bar_hpFull[this_44] = Bar_hpFull[this_44] + HeroBar_marker
		set i = i + 1
	endloop
	set charCount = HeroBar_fakeBarCount / (Bar_markerDistance[this_44] + 2) * (Bar_markerDistance[this_44] + 2)
	set Bar_hpFull[this_44] = Bar_hpFull[this_44] + SubString(HeroBar_bar, 0, HeroBar_fakeBarCount - charCount)
	call dispatch_Bar_update(this_44, "\n   HeroBar, line 115" + wurstStackTrace)
endfunction

function dispatch_Bar_updateExDirect takes integer this_44, string wurstStackTrace returns nothing
	if Bar_typeId[this_44] == 0 then
		if this_44 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Bar.updateExDirect" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Bar.updateExDirect on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call Bar_updateExDirect(this_44, "\n   HeroBar, line 107" + wurstStackTrace)
endfunction

function Bar_callUpdateEx takes string wurstStackTrace returns nothing
	local timer t = GetExpiredTimer()
	call dispatch_Bar_updateExDirect(timer_getData(t, "\n   HeroBar, line 103" + wurstStackTrace), "\n   HeroBar, line 103" + wurstStackTrace)
	call timer_release(t, "\n   HeroBar, line 104" + wurstStackTrace)
	set t = null
	set t = null
endfunction

function bridge_Bar_callUpdateEx takes nothing returns nothing
	call Bar_callUpdateEx("\n   HeroBar, line 99")
endfunction

function Hero_getBarPos takes integer this_44 returns real
	set Hero_getBarPos_return_x = unit_getX(Unit_u[this_44]) - 55.
	set Hero_getBarPos_return_y = unit_getY(Unit_u[this_44])
	set Hero_getBarPos_return_z = GetUnitFlyHeight(Unit_u[this_44]) + Unit_height[this_44]
	return Hero_getBarPos_return_x
endfunction

function dispatch_Hero_getBarPos takes integer this_44, string wurstStackTrace returns real
	local real getBarPos_result_x
	local real getBarPos_result_y
	local real getBarPos_result_z
	local real temp_getBarPos_result_x
	local real temp_getBarPos_result_y
	local real temp_getBarPos_result_z
	if Unit_typeId[this_44] == 0 then
		if this_44 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Hero.getBarPos" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Hero.getBarPos on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	set temp_getBarPos_result_x = Hero_getBarPos(this_44)
	set temp_getBarPos_result_y = Hero_getBarPos_return_y
	set temp_getBarPos_result_z = Hero_getBarPos_return_z
	set getBarPos_result_x = temp_getBarPos_result_x
	set getBarPos_result_y = temp_getBarPos_result_y
	set getBarPos_result_z = temp_getBarPos_result_z
	set dispatch_Hero_getBarPos_return_x = getBarPos_result_x
	set dispatch_Hero_getBarPos_return_y = getBarPos_result_y
	set dispatch_Hero_getBarPos_return_z = getBarPos_result_z
	return dispatch_Hero_getBarPos_return_x
endfunction

function texttag_setPos takes texttag this_44, real pos_x, real pos_y, real pos_z returns nothing
	call SetTextTagPos(this_44, pos_x, pos_y, pos_z)
endfunction

function Bar_updatePos_2 takes string wurstStackTrace returns nothing
	local integer b = LinkedListModule_first_2
	loop
		exitwhen  not (b != 0)
		if Bar_isVisible[b] then
			call texttag_setPos(Bar_tt[b], dispatch_Hero_getBarPos(Bar_owner[b], "\n   HeroBar, line 72" + wurstStackTrace), dispatch_Hero_getBarPos_return_y, dispatch_Hero_getBarPos_return_z)
		endif
		set b = LinkedListModule_next_2[b]
	endloop
endfunction

function bridge_Bar_updatePos takes nothing returns nothing
	call Bar_updatePos_2("\n   HeroBar, line 30")
endfunction

function texttag_setVisibility takes texttag this_44, boolean flag returns nothing
	call SetTextTagVisibility(this_44, flag)
endfunction

function Bar_updateVision_2 takes string wurstStackTrace returns nothing
	local integer b = LinkedListModule_first_2
	loop
		exitwhen  not (b != 0)
		if Bar_check[b] then
			if IsVisibleToPlayer(unit_getX(Unit_u[Bar_owner[b]]), unit_getY(Unit_u[Bar_owner[b]]), GetLocalPlayer()) then
				set Bar_isVisible[b] = true
				call texttag_setVisibility(Bar_tt[b], true)
			else
				set Bar_isVisible[b] = false
				call texttag_setVisibility(Bar_tt[b], false)
			endif
			call dispatch_Bar_update(b, "\n   HeroBar, line 65" + wurstStackTrace)
			set b = LinkedListModule_next_2[b]
		endif
	endloop
endfunction

function bridge_Bar_updateVision takes nothing returns nothing
	call Bar_updateVision_2("\n   HeroBar, line 31")
endfunction

function unit_addEffect takes unit this_44, string fx, string attachment returns effect
	return AddSpecialEffectTarget(fx, this_44, attachment)
endfunction

function Buff_createEffect takes string wurstStackTrace returns nothing
	local timer t = GetExpiredTimer()
	local integer b = timer_getData(t, "\n   Buff, line 56" + wurstStackTrace)
	if Buff_fxCounter[b] > 0 then
		call DestroyEffect(unit_addEffect(Unit_u[Buff_u[b]], Buff_fxType[b], Buff_attachment[b]))
		set Buff_fxCounter[b] = Buff_fxCounter[b] - 1
	else
		call timer_release(t, "\n   Buff, line 61" + wurstStackTrace)
	endif
	set t = null
endfunction

function bridge_Buff_createEffect takes nothing returns nothing
	call Buff_createEffect("\n   Buff, line 52")
endfunction

function Buff_timerDestroyBuff takes string wurstStackTrace returns nothing
	call dispatch_Buff_destroyBuff(timer_getData(GetExpiredTimer(), "\n   Buff, line 35" + wurstStackTrace), "\n   Buff, line 35" + wurstStackTrace)
endfunction

function bridge_Buff_timerDestroyBuff takes nothing returns nothing
	call Buff_timerDestroyBuff("\n   Buff, line 32")
endfunction

function dispatch_CallbackCounted_call takes integer this_44, integer cb returns nothing
endfunction

function CallbackCounted_onDestroy takes integer this_44, string wurstStackTrace returns nothing
	call timer_release(CallbackCounted_t[this_44], "\n   ClosureTimers, line 125" + wurstStackTrace)
endfunction

function dealloc_CallbackCounted takes integer obj, string wurstStackTrace returns nothing
	if CallbackCounted_typeId[obj] == 0 then
		call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Double free: object of type CallbackCounted" + wurstStackTrace)
		call I2S(1 / 0)
	else
		set CallbackCounted_firstFree = CallbackCounted_firstFree + 1
		set CallbackCounted_typeId[obj] = 0
	endif
endfunction

function destroyCallbackCounted takes integer this_44, string wurstStackTrace returns nothing
	call CallbackCounted_onDestroy(this_44, "\n   ClosureTimers, line 124" + wurstStackTrace)
	call dealloc_CallbackCounted(this_44, "\n   ClosureTimers, line 124" + wurstStackTrace)
endfunction

function dispatch_CallbackCounted_destroyCallbackCounted takes integer this_44, string wurstStackTrace returns nothing
	if CallbackCounted_typeId[this_44] == 0 then
		if this_44 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling CallbackCounted.destroyCallbackCounted" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called CallbackCounted.destroyCallbackCounted on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call destroyCallbackCounted(this_44, "\n   ClosureTimers, line 97" + wurstStackTrace)
endfunction

function CallbackCounted_callAndCount takes integer this_44, string wurstStackTrace returns nothing
	call dispatch_CallbackCounted_call(this_44, this_44)
	set CallbackCounted_count[this_44] = CallbackCounted_count[this_44] - 1
	if CallbackCounted_count[this_44] <= 0 then
		call dispatch_CallbackCounted_destroyCallbackCounted(this_44, "\n   ClosureTimers, line 122" + wurstStackTrace)
	endif
endfunction

function dispatch_CallbackCounted_callAndCount takes integer this_44, string wurstStackTrace returns nothing
	if CallbackCounted_typeId[this_44] == 0 then
		if this_44 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling CallbackCounted.callAndCount" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called CallbackCounted.callAndCount on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call CallbackCounted_callAndCount(this_44, "\n   ClosureTimers, line 118" + wurstStackTrace)
endfunction

function CallbackCounted_staticCallback takes string wurstStackTrace returns nothing
	call dispatch_CallbackCounted_callAndCount(timer_getData(GetExpiredTimer(), "\n   ClosureTimers, line 116" + wurstStackTrace), "\n   ClosureTimers, line 116" + wurstStackTrace)
endfunction

function bridge_CallbackCounted_staticCallback takes nothing returns nothing
	call CallbackCounted_staticCallback("\n   ClosureTimers, line 107")
endfunction

function dispatch_CallbackPeriodic_call takes integer this_44, integer cb returns nothing
endfunction

function CallbackPeriodic_staticCallback takes string wurstStackTrace returns nothing
	local integer cb = timer_getData(GetExpiredTimer(), "\n   ClosureTimers, line 91" + wurstStackTrace)
	call dispatch_CallbackPeriodic_call(cb, cb)
endfunction

function bridge_CallbackPeriodic_staticCallback takes nothing returns nothing
	call CallbackPeriodic_staticCallback("\n   ClosureTimers, line 88")
endfunction

function closure_impl_23 takes integer this_44, string wurstStackTrace returns nothing
	set Unit_bonusMana[this_34[this_44]] = Unit_bonusMana[this_34[this_44]] - amount_32[this_44]
	call dispatch_Unit_updateMana(this_34[this_44], "\n   UnitClass, line 758" + wurstStackTrace)
endfunction

function closure_impl_24 takes integer this_44, string wurstStackTrace returns nothing
	set Unit_bonusArmorPer[this_14[this_44]] = Unit_bonusArmorPer[this_14[this_44]] - amount_12[this_44]
	call dispatch_Unit_updateArmor(this_14[this_44], "\n   UnitClass, line 561" + wurstStackTrace)
endfunction

function closure_impl_25 takes integer this_44, string wurstStackTrace returns nothing
	set Unit_bonusManaRegPer[this_40[this_44]] = Unit_bonusManaRegPer[this_40[this_44]] - amount_38[this_44]
	call dispatch_Unit_updateManaReg(this_40[this_44], "\n   UnitClass, line 818" + wurstStackTrace)
endfunction

function closure_impl_26 takes integer this_44 returns nothing
	set Unit_bonusResistance[this_16[this_44]] = Unit_bonusResistance[this_16[this_44]] - amount_14[this_44]
endfunction

function closure_impl_27 takes integer this_44, string wurstStackTrace returns nothing
	set Unit_bonusMana[this_36[this_44]] = Unit_bonusMana[this_36[this_44]] - amount_34[this_44]
	call dispatch_Unit_updateMana(this_36[this_44], "\n   UnitClass, line 777" + wurstStackTrace)
endfunction

function closure_impl_28 takes integer this_44 returns nothing
	call RemoveDestructable(d[this_44])
endfunction

function closure_impl_29 takes integer this_44, string wurstStackTrace returns nothing
	set Unit_bonusLife[this_26[this_44]] = Unit_bonusLife[this_26[this_44]] - amount_24[this_44]
	call dispatch_Unit_updateLife(this_26[this_44], "\n   UnitClass, line 676" + wurstStackTrace)
endfunction

function closure_impl_30 takes integer this_44, string wurstStackTrace returns nothing
	set Unit_bonusAttack[this_4[this_44]] = Unit_bonusAttack[this_4[this_44]] - amount_2[this_44]
	call dispatch_Unit_updateAttack(this_4[this_44], "\n   UnitClass, line 471" + wurstStackTrace)
endfunction

function dispatch_Hero_updateLife takes integer this_44, string wurstStackTrace returns nothing
	if Unit_typeId[this_44] == 0 then
		if this_44 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Hero.updateLife" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Hero.updateLife on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call Hero_updateLife(this_44, "\n   HeroClass, line 165" + wurstStackTrace)
endfunction

function dispatch_Hero_updateMana takes integer this_44, string wurstStackTrace returns nothing
	if Unit_typeId[this_44] == 0 then
		if this_44 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Hero.updateMana" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Hero.updateMana on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call Hero_updateMana(this_44, "\n   HeroClass, line 169" + wurstStackTrace)
endfunction

function closure_impl_31 takes integer this_44, string wurstStackTrace returns nothing
	call dispatch_Unit_updateArmor(this_41[this_44], "\n   HeroClass, line 131" + wurstStackTrace)
	call dispatch_Hero_updateLife(this_41[this_44], "\n   HeroClass, line 132" + wurstStackTrace)
	call dispatch_Hero_updateMana(this_41[this_44], "\n   HeroClass, line 133" + wurstStackTrace)
endfunction

function unit_remove takes unit this_44 returns nothing
	call RemoveUnit(this_44)
endfunction

function closure_impl_32 takes integer this_44 returns nothing
	call unit_remove(u[this_44])
endfunction

function closure_impl_33 takes integer this_44, string wurstStackTrace returns nothing
	set Unit_bonusAttackPer[this_6[this_44]] = Unit_bonusAttackPer[this_6[this_44]] - amount_4[this_44]
	call dispatch_Unit_updateAttack(this_6[this_44], "\n   UnitClass, line 490" + wurstStackTrace)
endfunction

function closure_impl_34 takes integer this_44 returns nothing
	set Unit_spellpowerPer[this_10[this_44]] = Unit_spellpowerPer[this_10[this_44]] - amount_8[this_44]
endfunction

function closure_impl_35 takes integer this_44, string wurstStackTrace returns nothing
	set Unit_bonusArmor[this_12[this_44]] = Unit_bonusArmor[this_12[this_44]] - amount_10[this_44]
	call dispatch_Unit_updateArmor(this_12[this_44], "\n   UnitClass, line 542" + wurstStackTrace)
endfunction

function closure_impl_36 takes integer this_44, string wurstStackTrace returns nothing
	set Unit_bonusLifeRegPer[this_32[this_44]] = Unit_bonusLifeRegPer[this_32[this_44]] - amount_30[this_44]
	call dispatch_Unit_updateLifeReg(this_32[this_44], "\n   UnitClass, line 736" + wurstStackTrace)
endfunction

function closure_impl_37 takes integer this_44, string wurstStackTrace returns nothing
	set Unit_bonusLifePer[this_28[this_44]] = Unit_bonusLifePer[this_28[this_44]] - amount_26[this_44]
	call dispatch_Unit_updateLife(this_28[this_44], "\n   UnitClass, line 695" + wurstStackTrace)
endfunction

function closure_impl_38 takes integer this_44, string wurstStackTrace returns nothing
	set Unit_bonusLifeReg[this_30[this_44]] = Unit_bonusLifeReg[this_30[this_44]] - amount_28[this_44]
	call dispatch_Unit_updateLifeReg(this_30[this_44], "\n   UnitClass, line 717" + wurstStackTrace)
endfunction

function closure_impl_39 takes integer this_44, string wurstStackTrace returns nothing
	set Unit_bonusMovespeedPer[this_24[this_44]] = Unit_bonusMovespeedPer[this_24[this_44]] - amount_22[this_44]
	call dispatch_Unit_updateMovespeed(this_24[this_44], "\n   UnitClass, line 654" + wurstStackTrace)
endfunction

function closure_impl_40 takes integer this_44 returns nothing
	set Unit_spellpower[this_8[this_44]] = Unit_spellpower[this_8[this_44]] - amount_6[this_44]
endfunction

function closure_impl_41 takes integer this_44 returns nothing
	set Unit_bonusResistancePer[this_18[this_44]] = Unit_bonusResistancePer[this_18[this_44]] - amount_16[this_44]
endfunction

function closure_impl_42 takes integer this_44, string wurstStackTrace returns nothing
	set Unit_bonusAttackspeed[this_20[this_44]] = Unit_bonusAttackspeed[this_20[this_44]] - amount_18[this_44]
	call dispatch_Unit_updateAttackspeed(this_20[this_44], "\n   UnitClass, line 613" + wurstStackTrace)
endfunction

function closure_impl_43 takes integer this_44, string wurstStackTrace returns nothing
	set Unit_bonusMovespeed[this_22[this_44]] = Unit_bonusMovespeed[this_22[this_44]] - amount_20[this_44]
	call dispatch_Unit_updateMovespeed(this_22[this_44], "\n   UnitClass, line 635" + wurstStackTrace)
endfunction

function closure_impl_44 takes integer this_44, string wurstStackTrace returns nothing
	set Unit_bonusManaReg[this_38[this_44]] = Unit_bonusManaReg[this_38[this_44]] - amount_36[this_44]
	call dispatch_Unit_updateManaReg(this_38[this_44], "\n   UnitClass, line 799" + wurstStackTrace)
endfunction

function dispatch_CallbackSingle_call takes integer this_44, string wurstStackTrace returns nothing
	if CallbackSingle_typeId[this_44] == 0 then
		if this_44 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling CallbackSingle.call" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called CallbackSingle.call on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	if CallbackSingle_typeId[this_44] <= 714 then
		if CallbackSingle_typeId[this_44] <= 704 then
			if CallbackSingle_typeId[this_44] <= 698 then
				if CallbackSingle_typeId[this_44] <= 664 then
					if CallbackSingle_typeId[this_44] <= 660 then
						call closure_impl_32(this_44)
					else
						call closure_impl_28(this_44)
					endif
				else
					call closure_impl_30(this_44, "\n   ClosureTimers, line 65" + wurstStackTrace)
				endif
			elseif CallbackSingle_typeId[this_44] <= 702 then
				if CallbackSingle_typeId[this_44] <= 700 then
					call closure_impl_33(this_44, "\n   ClosureTimers, line 65" + wurstStackTrace)
				else
					call closure_impl_40(this_44)
				endif
			else
				call closure_impl_34(this_44)
			endif
		elseif CallbackSingle_typeId[this_44] <= 710 then
			if CallbackSingle_typeId[this_44] <= 708 then
				if CallbackSingle_typeId[this_44] <= 706 then
					call closure_impl_35(this_44, "\n   ClosureTimers, line 65" + wurstStackTrace)
				else
					call closure_impl_24(this_44, "\n   ClosureTimers, line 65" + wurstStackTrace)
				endif
			else
				call closure_impl_26(this_44)
			endif
		elseif CallbackSingle_typeId[this_44] <= 712 then
			call closure_impl_41(this_44)
		else
			call closure_impl_42(this_44, "\n   ClosureTimers, line 65" + wurstStackTrace)
		endif
	elseif CallbackSingle_typeId[this_44] <= 726 then
		if CallbackSingle_typeId[this_44] <= 720 then
			if CallbackSingle_typeId[this_44] <= 718 then
				if CallbackSingle_typeId[this_44] <= 716 then
					call closure_impl_43(this_44, "\n   ClosureTimers, line 65" + wurstStackTrace)
				else
					call closure_impl_39(this_44, "\n   ClosureTimers, line 65" + wurstStackTrace)
				endif
			else
				call closure_impl_29(this_44, "\n   ClosureTimers, line 65" + wurstStackTrace)
			endif
		elseif CallbackSingle_typeId[this_44] <= 724 then
			if CallbackSingle_typeId[this_44] <= 722 then
				call closure_impl_37(this_44, "\n   ClosureTimers, line 65" + wurstStackTrace)
			else
				call closure_impl_38(this_44, "\n   ClosureTimers, line 65" + wurstStackTrace)
			endif
		else
			call closure_impl_36(this_44, "\n   ClosureTimers, line 65" + wurstStackTrace)
		endif
	elseif CallbackSingle_typeId[this_44] <= 732 then
		if CallbackSingle_typeId[this_44] <= 730 then
			if CallbackSingle_typeId[this_44] <= 728 then
				call closure_impl_23(this_44, "\n   ClosureTimers, line 65" + wurstStackTrace)
			else
				call closure_impl_27(this_44, "\n   ClosureTimers, line 65" + wurstStackTrace)
			endif
		else
			call closure_impl_44(this_44, "\n   ClosureTimers, line 65" + wurstStackTrace)
		endif
	elseif CallbackSingle_typeId[this_44] <= 734 then
		call closure_impl_25(this_44, "\n   ClosureTimers, line 65" + wurstStackTrace)
	else
		call closure_impl_31(this_44, "\n   ClosureTimers, line 65" + wurstStackTrace)
	endif
endfunction

function CallbackSingle_onDestroy takes integer this_44 returns nothing
endfunction

function dealloc_CallbackSingle takes integer obj, string wurstStackTrace returns nothing
	if CallbackSingle_typeId[obj] == 0 then
		call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Double free: object of type CallbackSingle" + wurstStackTrace)
		call I2S(1 / 0)
	else
		set CallbackSingle_nextFree[CallbackSingle_firstFree] = obj
		set CallbackSingle_firstFree = CallbackSingle_firstFree + 1
		set CallbackSingle_typeId[obj] = 0
	endif
endfunction

function destroyCallbackSingle takes integer this_44, string wurstStackTrace returns nothing
	call CallbackSingle_onDestroy(this_44)
	call dealloc_CallbackSingle(this_44, "\n   ClosureTimers, line 63" + wurstStackTrace)
endfunction

function dispatch_CallbackSingle_destroyCallbackSingle takes integer this_44, string wurstStackTrace returns nothing
	if CallbackSingle_typeId[this_44] == 0 then
		if this_44 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling CallbackSingle.destroyCallbackSingle" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called CallbackSingle.destroyCallbackSingle on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	if CallbackSingle_typeId[this_44] <= 714 then
		if CallbackSingle_typeId[this_44] <= 702 then
			if CallbackSingle_typeId[this_44] <= 664 then
				if CallbackSingle_typeId[this_44] <= 660 then
					if CallbackSingle_typeId[this_44] <= 653 then
						call destroyCallbackSingle(this_44, "\n   ClosureTimers, line 63" + wurstStackTrace)
					else
						call destroyCallbackSingle(this_44, "\n   ClosureTimers, line 63" + wurstStackTrace)
					endif
				else
					call destroyCallbackSingle(this_44, "\n   ClosureTimers, line 63" + wurstStackTrace)
				endif
			elseif CallbackSingle_typeId[this_44] <= 700 then
				if CallbackSingle_typeId[this_44] <= 698 then
					call destroyCallbackSingle(this_44, "\n   ClosureTimers, line 63" + wurstStackTrace)
				else
					call destroyCallbackSingle(this_44, "\n   ClosureTimers, line 63" + wurstStackTrace)
				endif
			else
				call destroyCallbackSingle(this_44, "\n   ClosureTimers, line 63" + wurstStackTrace)
			endif
		elseif CallbackSingle_typeId[this_44] <= 708 then
			if CallbackSingle_typeId[this_44] <= 706 then
				if CallbackSingle_typeId[this_44] <= 704 then
					call destroyCallbackSingle(this_44, "\n   ClosureTimers, line 63" + wurstStackTrace)
				else
					call destroyCallbackSingle(this_44, "\n   ClosureTimers, line 63" + wurstStackTrace)
				endif
			else
				call destroyCallbackSingle(this_44, "\n   ClosureTimers, line 63" + wurstStackTrace)
			endif
		elseif CallbackSingle_typeId[this_44] <= 712 then
			if CallbackSingle_typeId[this_44] <= 710 then
				call destroyCallbackSingle(this_44, "\n   ClosureTimers, line 63" + wurstStackTrace)
			else
				call destroyCallbackSingle(this_44, "\n   ClosureTimers, line 63" + wurstStackTrace)
			endif
		else
			call destroyCallbackSingle(this_44, "\n   ClosureTimers, line 63" + wurstStackTrace)
		endif
	elseif CallbackSingle_typeId[this_44] <= 726 then
		if CallbackSingle_typeId[this_44] <= 720 then
			if CallbackSingle_typeId[this_44] <= 718 then
				if CallbackSingle_typeId[this_44] <= 716 then
					call destroyCallbackSingle(this_44, "\n   ClosureTimers, line 63" + wurstStackTrace)
				else
					call destroyCallbackSingle(this_44, "\n   ClosureTimers, line 63" + wurstStackTrace)
				endif
			else
				call destroyCallbackSingle(this_44, "\n   ClosureTimers, line 63" + wurstStackTrace)
			endif
		elseif CallbackSingle_typeId[this_44] <= 724 then
			if CallbackSingle_typeId[this_44] <= 722 then
				call destroyCallbackSingle(this_44, "\n   ClosureTimers, line 63" + wurstStackTrace)
			else
				call destroyCallbackSingle(this_44, "\n   ClosureTimers, line 63" + wurstStackTrace)
			endif
		else
			call destroyCallbackSingle(this_44, "\n   ClosureTimers, line 63" + wurstStackTrace)
		endif
	elseif CallbackSingle_typeId[this_44] <= 732 then
		if CallbackSingle_typeId[this_44] <= 730 then
			if CallbackSingle_typeId[this_44] <= 728 then
				call destroyCallbackSingle(this_44, "\n   ClosureTimers, line 63" + wurstStackTrace)
			else
				call destroyCallbackSingle(this_44, "\n   ClosureTimers, line 63" + wurstStackTrace)
			endif
		else
			call destroyCallbackSingle(this_44, "\n   ClosureTimers, line 63" + wurstStackTrace)
		endif
	elseif CallbackSingle_typeId[this_44] <= 734 then
		call destroyCallbackSingle(this_44, "\n   ClosureTimers, line 63" + wurstStackTrace)
	else
		call destroyCallbackSingle(this_44, "\n   ClosureTimers, line 63" + wurstStackTrace)
	endif
endfunction

function CallbackSingle_staticCallback takes string wurstStackTrace returns nothing
	local timer t = GetExpiredTimer()
	local integer cb = timer_getData(t, "\n   ClosureTimers, line 74" + wurstStackTrace)
	call dispatch_CallbackSingle_call(cb, "\n   ClosureTimers, line 75" + wurstStackTrace)
	call dispatch_CallbackSingle_destroyCallbackSingle(cb, "\n   ClosureTimers, line 76" + wurstStackTrace)
	call timer_release(t, "\n   ClosureTimers, line 77" + wurstStackTrace)
	set t = null
endfunction

function bridge_CallbackSingle_staticCallback takes nothing returns nothing
	call CallbackSingle_staticCallback("\n   ClosureTimers, line 68")
endfunction

function CustomBar_unlock takes integer this_44 returns nothing
	if  not CustomBar_locked[this_44] then
		return
	endif
	set CustomBar_count = CustomBar_count - 1
	if CustomBar_count == 0 then
		call PauseTimer(CustomBar_animationTimer)
	endif
	set CustomBar_bars[CustomBar_lockindex[this_44]] = CustomBar_bars[CustomBar_count]
	set CustomBar_lockindex[CustomBar_bars[CustomBar_count]] = CustomBar_lockindex[this_44]
	set CustomBar_locked[this_44] = false
endfunction

function dispatch_CustomBar_unlock takes integer this_44, string wurstStackTrace returns nothing
	if CustomBar_typeId[this_44] == 0 then
		if this_44 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling CustomBar.unlock" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called CustomBar.unlock on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call CustomBar_unlock(this_44)
endfunction

function CustomBar_onDestroy takes integer this_44, string wurstStackTrace returns nothing
	if CustomBar_t[this_44] != null then
		call DestroyTextTag(CustomBar_t[this_44])
	endif
	if CustomBar_locked[this_44] then
		call dispatch_CustomBar_unlock(this_44, "\n   CustomBar, line 358" + wurstStackTrace)
	endif
endfunction

function dealloc_CustomBar takes integer obj, string wurstStackTrace returns nothing
	if CustomBar_typeId[obj] == 0 then
		call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Double free: object of type CustomBar" + wurstStackTrace)
		call I2S(1 / 0)
	else
		set CustomBar_firstFree = CustomBar_firstFree + 1
		set CustomBar_typeId[obj] = 0
	endif
endfunction

function destroyCustomBar takes integer this_44, string wurstStackTrace returns nothing
	call CustomBar_onDestroy(this_44, "\n   CustomBar, line 353" + wurstStackTrace)
	call dealloc_CustomBar(this_44, "\n   CustomBar, line 353" + wurstStackTrace)
endfunction

function dispatch_CustomBar_destroyCustomBar takes integer this_44, string wurstStackTrace returns nothing
	if CustomBar_typeId[this_44] == 0 then
		if this_44 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling CustomBar.destroyCustomBar" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called CustomBar.destroyCustomBar on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call destroyCustomBar(this_44, "\n   CustomBar, line 111" + wurstStackTrace)
endfunction

function CustomBar_fadeOutCallback takes string wurstStackTrace returns nothing
	local integer bar = timer_getData(GetExpiredTimer(), "\n   CustomBar, line 362" + wurstStackTrace)
	set CustomBar_t[bar] = null
	call dispatch_CustomBar_destroyCustomBar(bar, "\n   CustomBar, line 364" + wurstStackTrace)
	call timer_release(GetExpiredTimer(), "\n   CustomBar, line 365" + wurstStackTrace)
endfunction

function bridge_CustomBar_fadeOutCallback takes nothing returns nothing
	call CustomBar_fadeOutCallback("\n   CustomBar, line 378")
endfunction

function ArrayQueue_units_set takes integer instanceId, integer arrayIndex, unit value, string wurstStackTrace returns nothing
	if arrayIndex < 0 or arrayIndex >= 6 then
		call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Index out of Bounds" + wurstStackTrace)
		call I2S(1 / 0)
	elseif arrayIndex <= 2 then
		if arrayIndex <= 1 then
			if arrayIndex <= 0 then
				set ArrayQueue_units_0[instanceId] = value
			else
				set ArrayQueue_units_1[instanceId] = value
			endif
		else
			set ArrayQueue_units_2[instanceId] = value
		endif
	elseif arrayIndex <= 4 then
		if arrayIndex <= 3 then
			set ArrayQueue_units_3[instanceId] = value
		else
			set ArrayQueue_units_4[instanceId] = value
		endif
	else
		set ArrayQueue_units_5[instanceId] = value
	endif
endfunction

function ArrayQueue_enqueue takes integer this_44, unit u_2, string wurstStackTrace returns nothing
	if ArrayQueue_size[this_44] < NewDummyRecycler_SAVED_UNITS_PER_ANGLE then
		set ArrayQueue_size[this_44] = ArrayQueue_size[this_44] + 1
		set ArrayQueue_rp[this_44] = ModuloInteger(ArrayQueue_rp[this_44] + 1, NewDummyRecycler_SAVED_UNITS_PER_ANGLE)
		call ArrayQueue_units_set(this_44, ArrayQueue_rp[this_44], u_2, "\n   NewDummyRecycler, line 46" + wurstStackTrace)
	else
		call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Queue Overflow" + wurstStackTrace)
		call I2S(1 / 0)
	endif
endfunction

function dispatch_ArrayQueue_enqueue takes integer this_44, unit u_2, string wurstStackTrace returns nothing
	if ArrayQueue_typeId[this_44] == 0 then
		if this_44 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling ArrayQueue.enqueue" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called ArrayQueue.enqueue on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call ArrayQueue_enqueue(this_44, u_2, "\n   NewDummyRecycler, line 42" + wurstStackTrace)
endfunction

function unit_pause takes unit this_44 returns nothing
	call PauseUnit(this_44, true)
endfunction

function unit_setPos takes unit this_44, real x, real y returns nothing
	call SetUnitPosition(this_44, x, y)
endfunction

function DummyRecycler_recycle takes unit u_2, string wurstStackTrace returns nothing
	local integer smallestQueue = 0
	local integer i = 1
	local integer temp = NewDummyRecycler_DIFFERENT_ANGLES - 1
	local unit receiver
	local unit receiver_2
	loop
		exitwhen i > temp
		if ArrayQueue_size[NewDummyRecycler_angleQueues[smallestQueue]] > ArrayQueue_size[NewDummyRecycler_angleQueues[i]] then
			set smallestQueue = i
		endif
		set i = i + 1
	endloop
	if ArrayQueue_size[NewDummyRecycler_angleQueues[smallestQueue]] >= NewDummyRecycler_SAVED_UNITS_PER_ANGLE then
		call unit_remove(u_2)
	else
		call dispatch_ArrayQueue_enqueue(NewDummyRecycler_angleQueues[smallestQueue], u_2, "\n   NewDummyRecycler, line 26" + wurstStackTrace)
		set receiver = u_2
		call unit_setPos(receiver, 32256., 32256.)
		set receiver_2 = receiver
		call unit_pause(receiver_2)
	endif
	set receiver = null
	set receiver_2 = null
endfunction

function DelayNode_onDestroy takes integer this_44 returns nothing
endfunction

function dealloc_DelayNode takes integer obj, string wurstStackTrace returns nothing
	if DelayNode_typeId[obj] == 0 then
		call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Double free: object of type DelayNode" + wurstStackTrace)
		call I2S(1 / 0)
	else
		set DelayNode_nextFree[DelayNode_firstFree] = obj
		set DelayNode_firstFree = DelayNode_firstFree + 1
		set DelayNode_typeId[obj] = 0
	endif
endfunction

function destroyDelayNode takes integer this_44, string wurstStackTrace returns nothing
	call DelayNode_onDestroy(this_44)
	call dealloc_DelayNode(this_44, "\n   NewDummyRecycler, line 59" + wurstStackTrace)
endfunction

function dispatch_DelayNode_destroyDelayNode takes integer this_44, string wurstStackTrace returns nothing
	if DelayNode_typeId[this_44] == 0 then
		if this_44 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling DelayNode.destroyDelayNode" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called DelayNode.destroyDelayNode on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call destroyDelayNode(this_44, "\n   NewDummyRecycler, line 59" + wurstStackTrace)
endfunction

function timer_getElapsed takes timer this_44 returns real
	return TimerGetElapsed(this_44)
endfunction

function getElapsedGameTime takes nothing returns real
	return timer_getElapsed(GameTimer_gameTimer)
endfunction

function DelayNode_recycle takes string wurstStackTrace returns nothing
	local integer tmp
	call DummyRecycler_recycle(DelayNode_u[DelayNode_first], "\n   NewDummyRecycler, line 90" + wurstStackTrace)
	call print("delay recycled")
	set tmp = DelayNode_first
	if DelayNode_next[DelayNode_first] == 0 then
		set DelayNode_first = 0
	endif
	if DelayNode_next[DelayNode_first] != 0 then
		set DelayNode_first = DelayNode_next[DelayNode_first]
		set DelayNode_prev[DelayNode_first] = 0
		call timer_start(DelayNode_t, DelayNode_delayTime[DelayNode_first] - getElapsedGameTime(), ref_function_bridge_DelayNode_recycle)
	else
		set DelayNode_first = 0
	endif
	call dispatch_DelayNode_destroyDelayNode(tmp, "\n   NewDummyRecycler, line 101" + wurstStackTrace)
endfunction

function bridge_DelayNode_recycle takes nothing returns nothing
	call DelayNode_recycle("\n   NewDummyRecycler, line 85")
endfunction

function bridge_DelayNode_recycle_2 takes nothing returns nothing
	call DelayNode_recycle("\n   NewDummyRecycler, line 98")
endfunction

function bridge_DelayNode_recycle_3 takes nothing returns nothing
	call DelayNode_recycle("\n   NewDummyRecycler, line 87")
endfunction

function LinkedListModule_getFirst takes nothing returns integer
	return LinkedListModule_first
endfunction

function LinkedListModule_getNext takes integer this_44 returns integer
	return LinkedListModule_next[this_44]
endfunction

function dispatch_Dot_getNext takes integer this_44, string wurstStackTrace returns integer
	local integer getNext_result
	if Dot_typeId[this_44] == 0 then
		if this_44 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Dot.getNext" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Dot.getNext on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	set getNext_result = LinkedListModule_getNext(this_44)
	return getNext_result
endfunction

function Event_onDestroy takes integer this_44, string wurstStackTrace returns nothing
	local integer buffer1 = Event_first[this_44]
	local integer buffer2
	loop
		exitwhen  not (buffer1 != 0)
		set buffer2 = Action_next[buffer1]
		call dispatch_Action_destroyAction(buffer1, "\n   CustomClosureEvents, line 58" + wurstStackTrace)
		set buffer1 = buffer2
	endloop
endfunction

function Unit2Event_onDestroy takes integer this_44, string wurstStackTrace returns nothing
	call Event_onDestroy(this_44, "\n   UnitEvents, line 106" + wurstStackTrace)
endfunction

function dealloc_Unit2Event takes integer obj, string wurstStackTrace returns nothing
	if Event_typeId[obj] == 0 then
		call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Double free: object of type Unit2Event" + wurstStackTrace)
		call I2S(1 / 0)
	else
		set Event_nextFree[Event_firstFree] = obj
		set Event_firstFree = Event_firstFree + 1
		set Event_typeId[obj] = 0
	endif
endfunction

function destroyUnit2Event takes integer this_44, string wurstStackTrace returns nothing
	call Unit2Event_onDestroy(this_44, "\n   UnitEvents, line 106" + wurstStackTrace)
	call dealloc_Unit2Event(this_44, "\n   UnitEvents, line 106" + wurstStackTrace)
endfunction

function dispatch_Unit2Event_destroyUnit2Event takes integer this_44, string wurstStackTrace returns nothing
	if Event_typeId[this_44] == 0 then
		if this_44 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Unit2Event.destroyUnit2Event" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Unit2Event.destroyUnit2Event on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call destroyUnit2Event(this_44, "\n   UnitEvents, line 106" + wurstStackTrace)
endfunction

function Shield_onDestroy takes integer this_44, string wurstStackTrace returns nothing
	set ShieldList_shieldSum[Shield_referingList[this_44]] = ShieldList_shieldSum[Shield_referingList[this_44]] - Shield_amount[this_44]
	call timer_release(Shield_t[this_44], "\n   Shield, line 94" + wurstStackTrace)
	if Shield_shieldDestroyed[this_44] != 0 then
		call dispatch_Unit2Event_destroyUnit2Event(Shield_shieldDestroyed[this_44], "\n   Shield, line 96" + wurstStackTrace)
	endif
	if Shield_prev[this_44] != 0 then
		set Shield_next[Shield_prev[this_44]] = Shield_next[this_44]
	endif
	if Shield_next[this_44] != 0 then
		set Shield_prev[Shield_next[this_44]] = Shield_prev[this_44]
	endif
	if ShieldList_first[Shield_referingList[this_44]] == this_44 then
		set ShieldList_first[Shield_referingList[this_44]] = Shield_next[this_44]
	endif
	if ShieldList_last[Shield_referingList[this_44]] == this_44 then
		set ShieldList_last[Shield_referingList[this_44]] = Shield_prev[this_44]
	endif
endfunction

function dealloc_Shield takes integer obj, string wurstStackTrace returns nothing
	if Shield_typeId[obj] == 0 then
		call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Double free: object of type Shield" + wurstStackTrace)
		call I2S(1 / 0)
	else
		set Shield_nextFree[Shield_firstFree] = obj
		set Shield_firstFree = Shield_firstFree + 1
		set Shield_typeId[obj] = 0
	endif
endfunction

function destroyShield takes integer this_44, string wurstStackTrace returns nothing
	call Shield_onDestroy(this_44, "\n   Shield, line 92" + wurstStackTrace)
	call dealloc_Shield(this_44, "\n   Shield, line 92" + wurstStackTrace)
endfunction

function dispatch_Shield_destroyShield takes integer this_44, string wurstStackTrace returns nothing
	if Shield_typeId[this_44] == 0 then
		if this_44 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Shield.destroyShield" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Shield.destroyShield on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call destroyShield(this_44, "\n   Shield, line 65" + wurstStackTrace)
endfunction

function Units_onDestroy takes integer this_44 returns nothing
endfunction

function dealloc_Units takes integer obj, string wurstStackTrace returns nothing
	if Units_typeId[obj] == 0 then
		call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Double free: object of type Units" + wurstStackTrace)
		call I2S(1 / 0)
	else
		set Units_nextFree[Units_firstFree] = obj
		set Units_firstFree = Units_firstFree + 1
		set Units_typeId[obj] = 0
	endif
endfunction

function destroyUnits takes integer this_44, string wurstStackTrace returns nothing
	call Units_onDestroy(this_44)
	call dealloc_Units(this_44, "\n   UnitEvents, line 100" + wurstStackTrace)
endfunction

function dispatch_Units_destroyUnits takes integer this_44, string wurstStackTrace returns nothing
	if Units_typeId[this_44] == 0 then
		if this_44 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Units.destroyUnits" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Units.destroyUnits on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call destroyUnits(this_44, "\n   UnitEvents, line 100" + wurstStackTrace)
endfunction

function alloc_Units takes nothing returns integer
	local integer this_44
	if Units_firstFree == 0 then
		set Units_maxIndex = Units_maxIndex + 1
		set this_44 = Units_maxIndex
	else
		set Units_firstFree = Units_firstFree - 1
		set this_44 = Units_nextFree[Units_firstFree]
	endif
	set Units_typeId[this_44] = 771
	return this_44
endfunction

function construct_Units takes integer this_44 returns nothing
endfunction

function new_Units takes nothing returns integer
	local integer this_44 = alloc_Units()
	call construct_Units(this_44)
	return this_44
endfunction

function Unit2Event_fire takes integer this_44, integer source, integer target, string wurstStackTrace returns nothing
	local integer data = new_Units()
	call Event_callActions(this_44, data, "\n   UnitEvents, line 112" + wurstStackTrace)
	call dispatch_Units_destroyUnits(data, "\n   UnitEvents, line 113" + wurstStackTrace)
endfunction

function dispatch_Unit2Event_fire takes integer this_44, integer source, integer target, string wurstStackTrace returns nothing
	if Event_typeId[this_44] == 0 then
		if this_44 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Unit2Event.fire" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Unit2Event.fire on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call Unit2Event_fire(this_44, source, target, "\n   UnitEvents, line 108" + wurstStackTrace)
endfunction

function ShieldList_damage takes integer this_44, real amount_39, integer source, string wurstStackTrace returns real
	local real remainingDmg
	local integer pos
	local integer buffer
	if ShieldList_first[this_44] == 0 then
		return amount_39
	endif
	if amount_39 > ShieldList_shieldSum[this_44] then
		set ShieldList_shieldSum[this_44] = 0.
	else
		set ShieldList_shieldSum[this_44] = ShieldList_shieldSum[this_44] - amount_39
	endif
	set remainingDmg = amount_39
	set pos = ShieldList_first[this_44]
	loop
		exitwhen  not (remainingDmg > 0. and pos != 0)
		if Shield_amount[pos] >= remainingDmg then
			set Shield_amount[pos] = Shield_amount[pos] - remainingDmg
			return 0.
		else
			set remainingDmg = remainingDmg - Shield_amount[pos]
			set Shield_amount[pos] = 0.
			if Shield_shieldDestroyed[pos] != 0 then
				call dispatch_Unit2Event_fire(Shield_shieldDestroyed[pos], source, Shield_target[pos], "\n   Shield, line 30" + wurstStackTrace)
			endif
			set buffer = pos
			set pos = Shield_next[buffer]
			call dispatch_Shield_destroyShield(buffer, "\n   Shield, line 33" + wurstStackTrace)
		endif
	endloop
	return remainingDmg
endfunction

function dispatch_ShieldList_damage takes integer this_44, real amount_39, integer source, string wurstStackTrace returns real
	local real damage_result
	if ShieldList_typeId[this_44] == 0 then
		if this_44 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling ShieldList.damage" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called ShieldList.damage on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	set damage_result = ShieldList_damage(this_44, amount_39, source, "\n   Shield, line 12" + wurstStackTrace)
	return damage_result
endfunction

function hashtable_loadReal takes hashtable this_44, integer parentKey, integer childKey returns real
	return LoadReal(this_44, parentKey, childKey)
endfunction

function Table_loadReal takes integer this_44, integer parentKey returns real
	return hashtable_loadReal(Table_ht, this_44, parentKey)
endfunction

function dispatch_Table_loadReal takes integer this_44, integer parentKey, string wurstStackTrace returns real
	local real loadReal_result
	if Table_typeId[this_44] == 0 then
		if this_44 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Table.loadReal" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Table.loadReal on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	set loadReal_result = Table_loadReal(this_44, parentKey)
	return loadReal_result
endfunction

function hashtable_saveReal takes hashtable this_44, integer parentKey, integer childKey, real value returns nothing
	call SaveReal(this_44, parentKey, childKey, value)
endfunction

function Table_saveReal takes integer this_44, integer parentKey, real value returns nothing
	call hashtable_saveReal(Table_ht, this_44, parentKey, value)
endfunction

function dispatch_Table_saveReal takes integer this_44, integer parentKey, real value, string wurstStackTrace returns nothing
	if Table_typeId[this_44] == 0 then
		if this_44 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Table.saveReal" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Table.saveReal on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call Table_saveReal(this_44, parentKey, value)
endfunction

function Unit_invuTT takes integer this_44 returns nothing
endfunction

function dispatch_Unit_invuTT takes integer this_44, string wurstStackTrace returns nothing
	if Unit_typeId[this_44] == 0 then
		if this_44 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Unit.invuTT" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Unit.invuTT on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	if Unit_typeId[this_44] <= 695 then
		call Unit_invuTT(this_44)
	else
		call Unit_invuTT(this_44)
	endif
endfunction

function Unit_goldTT takes integer this_44, real dmg, player p returns nothing
endfunction

function dispatch_Unit_goldTT takes integer this_44, real dmg, player p, string wurstStackTrace returns nothing
	if Unit_typeId[this_44] == 0 then
		if this_44 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Unit.goldTT" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Unit.goldTT on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	if Unit_typeId[this_44] <= 695 then
		call Unit_goldTT(this_44, dmg, p)
	else
		call Unit_goldTT(this_44, dmg, p)
	endif
endfunction

function unit_kill takes unit this_44 returns nothing
	call KillUnit(this_44)
endfunction

function Unit_kill takes integer this_44, integer source, string wurstStackTrace returns nothing
	local integer i
	local integer goldAmount
	if  not Unit_isDead[this_44] then
		set Unit_isDead[this_44] = true
		call unit_addAbility(Unit_u[this_44], 1684365668)
		if Unit_onDeath[this_44] != 0 then
			call dispatch_Unit2Event_fire(Unit_onDeath[this_44], source, this_44, "\n   UnitClass, line 243" + wurstStackTrace)
		endif
		if Unit_causeDeath[this_44] != 0 then
			call dispatch_Unit2Event_fire(Unit_causeDeath[this_44], source, this_44, "\n   UnitClass, line 245" + wurstStackTrace)
		endif
		set i = 0
		loop
			exitwhen i > 11
			if dispatch_Table_loadReal(Unit_playerDamage[this_44], i, "\n   UnitClass, line 247" + wurstStackTrace) != 0. then
				set goldAmount = roundReal(dispatch_Table_loadReal(Unit_playerDamage[this_44], i, "\n   UnitClass, line 248" + wurstStackTrace) / Unit_totalDamage[this_44] * Unit_bounty[this_44])
				call SetPlayerState(Player(i), PLAYER_STATE_RESOURCE_GOLD, GetPlayerState(Player(i), PLAYER_STATE_RESOURCE_GOLD) + goldAmount)
				call dispatch_Unit_goldTT(this_44, goldAmount * 1., Player(i), "\n   UnitClass, line 250" + wurstStackTrace)
			endif
			set i = i + 1
		endloop
		call unit_kill(Unit_u[this_44])
	endif
endfunction

function Bar_disable takes integer this_44 returns nothing
	call texttag_setVisibility(Bar_tt[this_44], false)
	set Bar_check[this_44] = false
endfunction

function dispatch_Bar_disable takes integer this_44, string wurstStackTrace returns nothing
	if Bar_typeId[this_44] == 0 then
		if this_44 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Bar.disable" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Bar.disable on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call Bar_disable(this_44)
endfunction

function Hero_kill takes integer this_44, integer source, string wurstStackTrace returns nothing
	call dispatch_Bar_disable(Hero_hb[this_44], "\n   HeroClass, line 89" + wurstStackTrace)
	call Unit_kill(this_44, source, "\n   HeroClass, line 90" + wurstStackTrace)
endfunction

function dispatch_Unit_kill takes integer this_44, integer source, string wurstStackTrace returns nothing
	if Unit_typeId[this_44] == 0 then
		if this_44 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Unit.kill" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Unit.kill on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	if Unit_typeId[this_44] <= 695 then
		call Unit_kill(this_44, source, "\n   UnitClass, line 238" + wurstStackTrace)
	else
		call Hero_kill(this_44, source, "\n   UnitClass, line 238" + wurstStackTrace)
	endif
endfunction

function unit_setState takes unit this_44, unitstate state, real value returns nothing
	call SetUnitState(this_44, state, value)
endfunction

function unit_setHP takes unit this_44, real hp returns nothing
	call unit_setState(this_44, UNIT_STATE_LIFE, hp)
endfunction

function Unit_dealDamage takes integer this_44, real amount_39, integer source, boolean reward, string wurstStackTrace returns boolean
	local real tHP
	local real currentAmount
	if Unit_isHero[source] then
	endif
	if Unit_vunerable[this_44] then
		set tHP = unit_getHP(Unit_u[this_44])
		set currentAmount = dispatch_ShieldList_damage(Unit_shieldList[this_44], amount_39, source, "\n   UnitClass, line 997" + wurstStackTrace)
		set Unit_totalDamage[this_44] = Unit_totalDamage[this_44] + amount_39
		if  not reward then
			set Unit_systemDamage[this_44] = Unit_systemDamage[this_44] + amount_39
		endif
		if tHP - 0.405 <= currentAmount then
			if reward then
				call dispatch_Table_saveReal(Unit_playerDamage[this_44], Unit_ownerId[this_44], dispatch_Table_loadReal(Unit_playerDamage[this_44], Unit_ownerId[this_44], "\n   UnitClass, line 1003" + wurstStackTrace) + tHP, "\n   UnitClass, line 1003" + wurstStackTrace)
			endif
			call dispatch_Unit_kill(this_44, source, "\n   UnitClass, line 1004" + wurstStackTrace)
		elseif reward then
			call dispatch_Table_saveReal(Unit_playerDamage[this_44], Unit_ownerId[this_44], dispatch_Table_loadReal(Unit_playerDamage[this_44], Unit_ownerId[this_44], "\n   UnitClass, line 1007" + wurstStackTrace) + amount_39, "\n   UnitClass, line 1007" + wurstStackTrace)
		endif
		call unit_setHP(Unit_u[this_44], tHP - currentAmount)
		if Unit_isHero[this_44] or Unit_isHero[source] then
			return true
		else
			return false
		endif
	else
		if Unit_isHero[this_44] or Unit_isHero[source] then
			call dispatch_Unit_invuTT(this_44, "\n   UnitClass, line 1015" + wurstStackTrace)
		endif
		return false
	endif
endfunction

function Hero_dealDamage takes integer this_44, real amount_39, integer source, boolean bonus, string wurstStackTrace returns boolean
	call dispatch_Bar_update(Hero_hb[this_44], "\n   HeroClass, line 162" + wurstStackTrace)
	return Unit_dealDamage(this_44, amount_39, source, bonus, "\n   HeroClass, line 163" + wurstStackTrace)
endfunction

function dispatch_Unit_dealDamage takes integer this_44, real amount_39, integer source, boolean reward, string wurstStackTrace returns boolean
	local boolean dealDamage_result
	if Unit_typeId[this_44] == 0 then
		if this_44 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Unit.dealDamage" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Unit.dealDamage on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	if Unit_typeId[this_44] <= 695 then
		set dealDamage_result = Unit_dealDamage(this_44, amount_39, source, reward, "\n   UnitClass, line 991" + wurstStackTrace)
	else
		set dealDamage_result = Hero_dealDamage(this_44, amount_39, source, reward, "\n   UnitClass, line 991" + wurstStackTrace)
	endif
	return dealDamage_result
endfunction

function Unit_dotTT_2 takes integer this_44, real dmg returns nothing
endfunction

function dispatch_Unit_dotTT takes integer this_44, real dmg, string wurstStackTrace returns nothing
	if Unit_typeId[this_44] == 0 then
		if this_44 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Unit.dotTT" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Unit.dotTT on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	if Unit_typeId[this_44] <= 695 then
		call Unit_dotTT_2(this_44, dmg)
	else
		call Unit_dotTT_2(this_44, dmg)
	endif
endfunction

function Unit_damageDot takes integer this_44, integer source, real amount_39, string wurstStackTrace returns nothing
	if dispatch_Unit_dealDamage(this_44, amount_39, source, true, "\n   UnitClass, line 1026" + wurstStackTrace) then
		call dispatch_Unit_dotTT(this_44, amount_39, "\n   UnitClass, line 1027" + wurstStackTrace)
	endif
endfunction

function dispatch_Unit_damageDot takes integer this_44, integer source, real amount_39, string wurstStackTrace returns nothing
	if Unit_typeId[this_44] == 0 then
		if this_44 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Unit.damageDot" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Unit.damageDot on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	if Unit_typeId[this_44] <= 695 then
		call Unit_damageDot(this_44, source, amount_39, "\n   UnitClass, line 1025" + wurstStackTrace)
	else
		call Unit_damageDot(this_44, source, amount_39, "\n   UnitClass, line 1025" + wurstStackTrace)
	endif
endfunction

function Dot_loopList takes string wurstStackTrace returns nothing
	local integer d_2 = LinkedListModule_getFirst()
	local integer buffer
	loop
		exitwhen  not (d_2 != 0)
		set buffer = d_2
		set d_2 = dispatch_Dot_getNext(d_2, "\n   Dot, line 37" + wurstStackTrace)
		call dispatch_Unit_damageDot(Dot_u[buffer], Dot_source[buffer], Dot_damage[buffer], "\n   Dot, line 38" + wurstStackTrace)
	endloop
endfunction

function bridge_Dot_loopList takes nothing returns nothing
	call Dot_loopList("\n   GameStart, line 87")
endfunction

function Dot_timerDestroyDot takes string wurstStackTrace returns nothing
	call dispatch_Dot_destroyDot(timer_getData(GetExpiredTimer(), "\n   Dot, line 31" + wurstStackTrace), "\n   Dot, line 31" + wurstStackTrace)
endfunction

function bridge_Dot_timerDestroyDot takes nothing returns nothing
	call Dot_timerDestroyDot("\n   Dot, line 28")
endfunction

function timerToIndex takes timer object returns integer
	return handle_getHandleId(object)
endfunction

function Hero_addAbilityCastProtection takes integer this_44, integer abiId, string wurstStackTrace returns nothing
	local timer t
	call SetPlayerAbilityAvailable(Unit_owner[this_44], abiId, false)
	set t = getTimer("\n   HeroClass, line 240" + wurstStackTrace)
	call timer_setData(t, this_44, "\n   HeroClass, line 241" + wurstStackTrace)
	call dispatch_HashMap_put(Hero_enableAbility[this_44], timerToIndex(t), abiId, "\n   HeroClass, line 242" + wurstStackTrace)
	call timer_start(t, 0.0, ref_function_bridge_Hero_enableAbilityTimed)
	set t = null
endfunction

function dispatch_Hero_addAbilityCastProtection takes integer this_44, integer abiId, string wurstStackTrace returns nothing
	if Unit_typeId[this_44] == 0 then
		if this_44 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Hero.addAbilityCastProtection" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Hero.addAbilityCastProtection on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call Hero_addAbilityCastProtection(this_44, abiId, "\n   HeroClass, line 238" + wurstStackTrace)
endfunction

function Hero_channelCancel_2 takes integer this_44, string wurstStackTrace returns nothing
	call dispatch_UnitEvent_fire(Hero_channelCancel[this_44], this_44, "\n   HeroClass, line 354" + wurstStackTrace)
endfunction

function dispatch_Hero_channelCancel takes integer this_44, string wurstStackTrace returns nothing
	if Unit_typeId[this_44] == 0 then
		if this_44 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Hero.channelCancel" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Hero.channelCancel on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call Hero_channelCancel_2(this_44, "\n   HeroClass, line 352" + wurstStackTrace)
endfunction

function Queue_dequeue takes integer this_44 returns integer
	local integer tmp = Queue_front[this_44]
	set Queue_front[this_44] = SEntry_next[Queue_front[this_44]]
	set Queue_size[this_44] = Queue_size[this_44] - 1
	return SEntry_elem[tmp]
endfunction

function dispatch_Queue_dequeue takes integer this_44, string wurstStackTrace returns integer
	local integer dequeue_result
	if Queue_typeId[this_44] == 0 then
		if this_44 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Queue.dequeue" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Queue.dequeue on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	set dequeue_result = Queue_dequeue(this_44)
	return dequeue_result
endfunction

function Hero_cleanCastQueue takes integer this_44, string wurstStackTrace returns nothing
	loop
		exitwhen  not (dispatch_Queue_dequeue(Hero_castQueue[this_44], "\n   HeroClass, line 345" + wurstStackTrace) != 0)
	endloop
endfunction

function dispatch_Hero_cleanCastQueue takes integer this_44, string wurstStackTrace returns nothing
	if Unit_typeId[this_44] == 0 then
		if this_44 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Hero.cleanCastQueue" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Hero.cleanCastQueue on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call Hero_cleanCastQueue(this_44, "\n   HeroClass, line 344" + wurstStackTrace)
endfunction

function int_toString takes integer this_44 returns string
	return I2S(this_44)
endfunction

function multiboard_getItem takes multiboard this_44, integer row, integer column returns multiboarditem
	return MultiboardGetItem(this_44, row, column)
endfunction

function multiboarditem_release takes multiboarditem this_44 returns nothing
	call MultiboardReleaseItem(this_44)
endfunction

function multiboarditem_setValue takes multiboarditem this_44, string value returns nothing
	call MultiboardSetItemValue(this_44, value)
endfunction

function Order_onDestroy takes integer this_44 returns nothing
	local multiboarditem mbi
	local multiboarditem receiver
	set InstanceBoard_count[ShowInstances_classId_2] = InstanceBoard_count[ShowInstances_classId_2] - 1
	set mbi = multiboard_getItem(InstanceBoard_mb, ShowInstances_classId_2, 1)
	set receiver = mbi
	call multiboarditem_setValue(receiver, int_toString(InstanceBoard_count[ShowInstances_classId_2]))
	call multiboarditem_release(receiver)
	set mbi = null
	set receiver = null
endfunction

function dealloc_Order takes integer obj, string wurstStackTrace returns nothing
	if Order_typeId[obj] == 0 then
		call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Double free: object of type Order" + wurstStackTrace)
		call I2S(1 / 0)
	else
		set Order_nextFree[Order_firstFree] = obj
		set Order_firstFree = Order_firstFree + 1
		set Order_typeId[obj] = 0
	endif
endfunction

function destroyOrder takes integer this_44, string wurstStackTrace returns nothing
	call Order_onDestroy(this_44)
	call dealloc_Order(this_44, "\n   OrderHandling, line 62" + wurstStackTrace)
endfunction

function dispatch_Order_destroyOrder takes integer this_44, string wurstStackTrace returns nothing
	if Order_typeId[this_44] == 0 then
		if this_44 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Order.destroyOrder" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Order.destroyOrder on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call destroyOrder(this_44, "\n   OrderHandling, line 62" + wurstStackTrace)
endfunction

function Hero_setMainOrder takes integer this_44, integer o, string wurstStackTrace returns nothing
	if Hero_mainOrder[this_44] != 0 then
		call dispatch_Order_destroyOrder(Hero_mainOrder[this_44], "\n   HeroClass, line 247" + wurstStackTrace)
	endif
	set Hero_mainOrder[this_44] = o
endfunction

function dispatch_Hero_setMainOrder takes integer this_44, integer o, string wurstStackTrace returns nothing
	if Unit_typeId[this_44] == 0 then
		if this_44 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Hero.setMainOrder" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Hero.setMainOrder on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call Hero_setMainOrder(this_44, o, "\n   HeroClass, line 245" + wurstStackTrace)
endfunction

function trigger_disable takes trigger this_44 returns nothing
	call DisableTrigger(this_44)
endfunction

function trigger_enable takes trigger this_44 returns nothing
	call EnableTrigger(this_44)
endfunction

function AttackOrder_issueToUnit takes integer this_44, unit u_2 returns boolean
	call trigger_disable(GetOrders_orderDetect)
	call IssueTargetOrderById(u_2, AttackOrder_atkOrderId, AttackOrder_target[this_44])
	call trigger_enable(GetOrders_orderDetect)
	return GetUnitAbilityLevel(u_2, 1684365668) == 1
endfunction

function MoveOrder_issueToUnit takes integer this_44, unit u_2 returns boolean
	local real currentPos_x
	local real currentPos_y
	local boolean b
	local integer tempIndex
	local real tempTupleSelectionResult_1
	local real temp_tempTupleSelectionResult_1
	local real temp_tempTupleSelectionResult_2
	local integer tempIndex_2
	local real tempTupleSelectionResult_2
	local real temp_tempTupleSelectionResult_1_2
	local real temp_tempTupleSelectionResult_2_2
	local real temp_currentPos_x
	local real temp_currentPos_y
	local integer tempIndex_3
	local integer tempIndex_4
	local unit temp
	local integer temp_2
	local real temp_3
	local real temp_4
	call trigger_disable(GetOrders_orderDetect)
	set temp = u_2
	set temp_2 = MoveOrder_moveOrderId
	set tempIndex = this_44
	set temp_tempTupleSelectionResult_1 = MoveOrder_pos[tempIndex]
	set temp_tempTupleSelectionResult_2 = MoveOrder_pos_2[tempIndex]
	set tempTupleSelectionResult_1 = temp_tempTupleSelectionResult_1
	set temp_3 = tempTupleSelectionResult_1
	set tempIndex_2 = this_44
	set temp_tempTupleSelectionResult_1_2 = MoveOrder_pos[tempIndex_2]
	set temp_tempTupleSelectionResult_2_2 = MoveOrder_pos_2[tempIndex_2]
	set tempTupleSelectionResult_2 = temp_tempTupleSelectionResult_2_2
	call IssuePointOrderById(temp, temp_2, temp_3, tempTupleSelectionResult_2)
	call trigger_enable(GetOrders_orderDetect)
	set temp_currentPos_x = unit_getPos(u_2)
	set temp_currentPos_y = unit_getPos_return_y
	set currentPos_x = temp_currentPos_x
	set currentPos_y = temp_currentPos_y
	set temp_4 = currentPos_x
	set tempIndex_3 = this_44
	set b = temp_4 == MoveOrder_lastPos[tempIndex_3] and currentPos_y == MoveOrder_lastPos_2[tempIndex_3]
	set tempIndex_4 = this_44
	set MoveOrder_lastPos[tempIndex_4] = currentPos_x
	set MoveOrder_lastPos_2[tempIndex_4] = currentPos_y
	set temp = null
	return b
endfunction

function dispatch_Order_issueToUnit takes integer this_44, unit u_2, string wurstStackTrace returns boolean
	local boolean issueToUnit_result
	if Order_typeId[this_44] == 0 then
		if this_44 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Order.issueToUnit" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Order.issueToUnit on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	if Order_typeId[this_44] <= 685 then
		set issueToUnit_result = MoveOrder_issueToUnit(this_44, u_2)
	else
		set issueToUnit_result = AttackOrder_issueToUnit(this_44, u_2)
	endif
	return issueToUnit_result
endfunction

function alloc_SEntry_2 takes nothing returns integer
	local integer this_44
	if SEntry_firstFree == 0 then
		set SEntry_maxIndex = SEntry_maxIndex + 1
		set this_44 = SEntry_maxIndex
	else
		set SEntry_firstFree = SEntry_firstFree - 1
		set this_44 = SEntry_nextFree[SEntry_firstFree]
	endif
	return this_44
endfunction

function construct_SEntry_2 takes integer this_44, integer elem, integer next returns nothing
	set SEntry_elem[this_44] = elem
	set SEntry_next[this_44] = next
endfunction

function new_SEntry_2 takes integer elem, integer next returns integer
	local integer this_44 = alloc_SEntry_2()
	call construct_SEntry_2(this_44, elem, next)
	return this_44
endfunction

function Queue_enqueue takes integer this_44, integer elem returns nothing
	if Queue_front[this_44] == Queue_dummy[this_44] then
		set Queue_front[this_44] = new_SEntry_2(elem, Queue_dummy[this_44])
		set Queue_back[this_44] = Queue_front[this_44]
		set SEntry_next[Queue_front[this_44]] = Queue_dummy[this_44]
	else
		set SEntry_next[Queue_back[this_44]] = new_SEntry_2(elem, Queue_dummy[this_44])
		set Queue_back[this_44] = SEntry_next[Queue_back[this_44]]
	endif
	set Queue_size[this_44] = Queue_size[this_44] + 1
endfunction

function dispatch_Queue_enqueue takes integer this_44, integer elem, string wurstStackTrace returns nothing
	if Queue_typeId[this_44] == 0 then
		if this_44 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Queue.enqueue" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Queue.enqueue on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call Queue_enqueue(this_44, elem)
endfunction

function alloc_Spellcast takes nothing returns integer
	local integer this_44
	if Spellcast_firstFree == 0 then
		set Spellcast_maxIndex = Spellcast_maxIndex + 1
		set this_44 = Spellcast_maxIndex
	else
		set Spellcast_firstFree = Spellcast_firstFree - 1
		set this_44 = Spellcast_nextFree[Spellcast_firstFree]
	endif
	set Spellcast_typeId[this_44] = 689
	return this_44
endfunction

function construct_Spellcast takes integer this_44 returns nothing
endfunction

function new_Spellcast takes nothing returns integer
	local integer this_44 = alloc_Spellcast()
	call construct_Spellcast(this_44)
	return this_44
endfunction

function Spell_getInstantSpellCast takes integer this_44 returns integer
	local integer sc = new_Spellcast()
	set Spellcast_spell[sc] = this_44
	return sc
endfunction

function dispatch_Spell_getInstantSpellCast takes integer this_44, string wurstStackTrace returns integer
	local integer getInstantSpellCast_result
	if Spell_typeId[this_44] == 0 then
		if this_44 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Spell.getInstantSpellCast" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Spell.getInstantSpellCast on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	if Spell_typeId[this_44] <= 816 then
		if Spell_typeId[this_44] <= 694 then
			set getInstantSpellCast_result = Spell_getInstantSpellCast(this_44)
		else
			set getInstantSpellCast_result = Spell_getInstantSpellCast(this_44)
		endif
	else
		set getInstantSpellCast_result = Spell_getInstantSpellCast(this_44)
	endif
	return getInstantSpellCast_result
endfunction

function Spell_getPointSpellCast takes integer this_44, real pos_x, real pos_y returns integer
	local integer sc = new_Spellcast()
	local integer tempIndex
	set Spellcast_spell[sc] = this_44
	set tempIndex = sc
	set Spellcast_pos[tempIndex] = pos_x
	set Spellcast_pos_2[tempIndex] = pos_y
	return sc
endfunction

function dispatch_Spell_getPointSpellCast takes integer this_44, real pos_x, real pos_y, string wurstStackTrace returns integer
	local integer getPointSpellCast_result
	if Spell_typeId[this_44] == 0 then
		if this_44 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Spell.getPointSpellCast" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Spell.getPointSpellCast on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	if Spell_typeId[this_44] <= 816 then
		if Spell_typeId[this_44] <= 694 then
			set getPointSpellCast_result = Spell_getPointSpellCast(this_44, pos_x, pos_y)
		else
			set getPointSpellCast_result = Spell_getPointSpellCast(this_44, pos_x, pos_y)
		endif
	else
		set getPointSpellCast_result = Spell_getPointSpellCast(this_44, pos_x, pos_y)
	endif
	return getPointSpellCast_result
endfunction

function Spell_getUnitSpellCast takes integer this_44, unit target returns integer
	local integer sc = new_Spellcast()
	set Spellcast_spell[sc] = this_44
	set Spellcast_target[sc] = target
	return sc
endfunction

function dispatch_Spell_getUnitSpellCast takes integer this_44, unit target, string wurstStackTrace returns integer
	local integer getUnitSpellCast_result
	if Spell_typeId[this_44] == 0 then
		if this_44 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Spell.getUnitSpellCast" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Spell.getUnitSpellCast on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	if Spell_typeId[this_44] <= 816 then
		if Spell_typeId[this_44] <= 694 then
			set getUnitSpellCast_result = Spell_getUnitSpellCast(this_44, target)
		else
			set getUnitSpellCast_result = Spell_getUnitSpellCast(this_44, target)
		endif
	else
		set getUnitSpellCast_result = Spell_getUnitSpellCast(this_44, target)
	endif
	return getUnitSpellCast_result
endfunction

function alloc_AttackOrder takes nothing returns integer
	local integer this_44
	if Order_firstFree == 0 then
		set Order_maxIndex = Order_maxIndex + 1
		set this_44 = Order_maxIndex
	else
		set Order_firstFree = Order_firstFree - 1
		set this_44 = Order_nextFree[Order_firstFree]
	endif
	set Order_typeId[this_44] = 686
	return this_44
endfunction

function construct_Order takes integer this_44 returns nothing
	local multiboarditem mbi
	local multiboarditem receiver
	set InstanceBoard_count[ShowInstances_classId_2] = InstanceBoard_count[ShowInstances_classId_2] + 1
	set mbi = multiboard_getItem(InstanceBoard_mb, ShowInstances_classId_2, 1)
	set receiver = mbi
	call multiboarditem_setValue(receiver, int_toString(InstanceBoard_count[ShowInstances_classId_2]))
	call multiboarditem_release(receiver)
	set mbi = null
	set receiver = null
endfunction

function construct_AttackOrder takes integer this_44, unit target returns nothing
	call construct_Order(this_44)
	set Order_orderId[this_44] = Order_orderId[this_44]
	set AttackOrder_target[this_44] = target
endfunction

function new_AttackOrder takes unit target returns integer
	local integer this_44 = alloc_AttackOrder()
	call construct_AttackOrder(this_44, target)
	return this_44
endfunction

function alloc_MoveOrder takes nothing returns integer
	local integer this_44
	if Order_firstFree == 0 then
		set Order_maxIndex = Order_maxIndex + 1
		set this_44 = Order_maxIndex
	else
		set Order_firstFree = Order_firstFree - 1
		set this_44 = Order_nextFree[Order_firstFree]
	endif
	set Order_typeId[this_44] = 685
	return this_44
endfunction

function construct_MoveOrder takes integer this_44, real pos_x, real pos_y returns nothing
	local integer tempIndex
	local integer tempIndex_2
	call construct_Order(this_44)
	set tempIndex = this_44
	set MoveOrder_lastPos[tempIndex] = 0.
	set MoveOrder_lastPos_2[tempIndex] = 0.
	set Order_orderId[this_44] = Order_orderId[this_44]
	set tempIndex_2 = this_44
	set MoveOrder_pos[tempIndex_2] = pos_x
	set MoveOrder_pos_2[tempIndex_2] = pos_y
endfunction

function new_MoveOrder takes real pos_x, real pos_y returns integer
	local integer this_44 = alloc_MoveOrder()
	call construct_MoveOrder(this_44, pos_x, pos_y)
	return this_44
endfunction

function Hero_onOrder takes integer this_44, real pos_x, real pos_y, unit target, integer orderId, string wurstStackTrace returns nothing
	local integer temp
	local integer temp_2
	local integer casted
	local integer temp_3
	set Hero_lastOrdered[this_44] = 0
	set temp = orderId
	if temp == OrderHandling_exitDetectId then
		call SetPlayerAbilityAvailable(Unit_owner[this_44], 1702390132, false)
		return
	elseif temp == OrderHandling_scoreboardId then
		call dispatch_Hero_addAbilityCastProtection(this_44, 1935896434, "\n   HeroClass, line 259" + wurstStackTrace)
		return
	endif
	if Hero_acceptOrders[this_44] then
		set temp_2 = orderId
		if temp_2 == OrderHandling_smartId then
			if target == null then
				call dispatch_Hero_setMainOrder(this_44, new_MoveOrder(pos_x, pos_y), "\n   HeroClass, line 266" + wurstStackTrace)
				call dispatch_Order_issueToUnit(Hero_mainOrder[this_44], Unit_u[this_44], "\n   HeroClass, line 267" + wurstStackTrace)
			elseif IsUnitAlly(target, Unit_owner[this_44]) then
				call dispatch_Hero_setMainOrder(this_44, new_MoveOrder(unit_getPos(target), unit_getPos_return_y), "\n   HeroClass, line 270" + wurstStackTrace)
				call dispatch_Order_issueToUnit(Hero_mainOrder[this_44], Unit_u[this_44], "\n   HeroClass, line 271" + wurstStackTrace)
			else
				call dispatch_Hero_setMainOrder(this_44, new_AttackOrder(target), "\n   HeroClass, line 273" + wurstStackTrace)
				call dispatch_Order_issueToUnit(Hero_mainOrder[this_44], Unit_u[this_44], "\n   HeroClass, line 274" + wurstStackTrace)
			endif
		elseif temp_2 == OrderHandling_attackId then
			if IsUnitAlly(target, Unit_owner[this_44]) then
				call dispatch_Hero_setMainOrder(this_44, new_MoveOrder(unit_getPos(target), unit_getPos_return_y), "\n   HeroClass, line 277" + wurstStackTrace)
				call dispatch_Order_issueToUnit(Hero_mainOrder[this_44], Unit_u[this_44], "\n   HeroClass, line 278" + wurstStackTrace)
			else
				call dispatch_Hero_setMainOrder(this_44, new_AttackOrder(target), "\n   HeroClass, line 280" + wurstStackTrace)
				call dispatch_Order_issueToUnit(Hero_mainOrder[this_44], Unit_u[this_44], "\n   HeroClass, line 281" + wurstStackTrace)
			endif
		elseif temp_2 == OrderHandling_stopId then
			call dispatch_Hero_setMainOrder(this_44, 0, "\n   HeroClass, line 283" + wurstStackTrace)
			call IssueImmediateOrderById(Unit_u[this_44], 851972)
		endif
		if Hero_channelCancel[this_44] != 0 and GetUnitTypeId(target) != 1668314229 then
			call dispatch_Hero_channelCancel(this_44, "\n   HeroClass, line 286" + wurstStackTrace)
		elseif GetUnitTypeId(target) == 1668314229 then
		endif
	else
		set casted = 0
		set temp_3 = orderId
		if temp_3 == OrderHandling_smartId then
			call dispatch_Hero_cleanCastQueue(this_44, "\n   HeroClass, line 293" + wurstStackTrace)
			if target == null then
				call dispatch_Hero_setMainOrder(this_44, new_MoveOrder(pos_x, pos_y), "\n   HeroClass, line 295" + wurstStackTrace)
			elseif IsUnitAlly(target, Unit_owner[this_44]) then
				call dispatch_Hero_setMainOrder(this_44, new_MoveOrder(unit_getPos(target), unit_getPos_return_y), "\n   HeroClass, line 298" + wurstStackTrace)
			else
				call dispatch_Hero_setMainOrder(this_44, new_AttackOrder(target), "\n   HeroClass, line 300" + wurstStackTrace)
			endif
		elseif temp_3 == OrderHandling_attackId then
			call dispatch_Hero_cleanCastQueue(this_44, "\n   HeroClass, line 302" + wurstStackTrace)
			call dispatch_Hero_addAbilityCastProtection(this_44, OrderHandling_attackSpell, "\n   HeroClass, line 303" + wurstStackTrace)
			if IsUnitAlly(target, Unit_owner[this_44]) then
				call dispatch_Hero_setMainOrder(this_44, new_MoveOrder(unit_getPos(target), unit_getPos_return_y), "\n   HeroClass, line 305" + wurstStackTrace)
			else
				call dispatch_Hero_setMainOrder(this_44, new_AttackOrder(target), "\n   HeroClass, line 307" + wurstStackTrace)
			endif
		elseif temp_3 == OrderHandling_stopId then
			call dispatch_Hero_cleanCastQueue(this_44, "\n   HeroClass, line 309" + wurstStackTrace)
			call dispatch_Hero_addAbilityCastProtection(this_44, OrderHandling_stopSpell, "\n   HeroClass, line 310" + wurstStackTrace)
			call dispatch_Hero_setMainOrder(this_44, 0, "\n   HeroClass, line 311" + wurstStackTrace)
		elseif temp_3 == Spell_qSpellId then
			set casted = Hero_spellQ[this_44]
			call dispatch_Hero_addAbilityCastProtection(this_44, Spell_spell[Hero_spellQ[this_44]], "\n   HeroClass, line 314" + wurstStackTrace)
		elseif temp_3 == Spell_wSpellId then
			set casted = Hero_spellW[this_44]
			call dispatch_Hero_addAbilityCastProtection(this_44, Spell_spell[Hero_spellW[this_44]], "\n   HeroClass, line 317" + wurstStackTrace)
		elseif temp_3 == Spell_eSpellId then
			set casted = Hero_spellE[this_44]
			call dispatch_Hero_addAbilityCastProtection(this_44, Spell_spell[Hero_spellE[this_44]], "\n   HeroClass, line 320" + wurstStackTrace)
		elseif temp_3 == Spell_rSpellId then
			set casted = Hero_spellR[this_44]
			call dispatch_Hero_addAbilityCastProtection(this_44, Spell_spell[Hero_spellR[this_44]], "\n   HeroClass, line 323" + wurstStackTrace)
		elseif temp_3 == Spell_dSpellId then
			set casted = Hero_spellD[this_44]
			call dispatch_Hero_addAbilityCastProtection(this_44, Spell_spell[Hero_spellD[this_44]], "\n   HeroClass, line 326" + wurstStackTrace)
		elseif temp_3 == Spell_fSpellId then
			set casted = Hero_spellF[this_44]
			call dispatch_Hero_addAbilityCastProtection(this_44, Spell_spell[Hero_spellF[this_44]], "\n   HeroClass, line 329" + wurstStackTrace)
		endif
		if casted != 0 then
			if target == null then
				if pos_x == 0. and pos_y == 0. then
					call dispatch_Queue_enqueue(Hero_castQueue[this_44], dispatch_Spell_getInstantSpellCast(casted, "\n   HeroClass, line 333" + wurstStackTrace), "\n   HeroClass, line 333" + wurstStackTrace)
				else
					call dispatch_Queue_enqueue(Hero_castQueue[this_44], dispatch_Spell_getPointSpellCast(casted, pos_x, pos_y, "\n   HeroClass, line 335" + wurstStackTrace), "\n   HeroClass, line 335" + wurstStackTrace)
				endif
			else
				call dispatch_Queue_enqueue(Hero_castQueue[this_44], dispatch_Spell_getUnitSpellCast(casted, target, "\n   HeroClass, line 337" + wurstStackTrace), "\n   HeroClass, line 337" + wurstStackTrace)
			endif
		endif
		if Hero_channelCancel[this_44] != 0 and GetUnitTypeId(target) != 1668314229 then
			call dispatch_Hero_channelCancel(this_44, "\n   HeroClass, line 339" + wurstStackTrace)
		elseif GetUnitTypeId(target) == 1668314229 then
		endif
	endif
endfunction

function dispatch_Hero_onOrder takes integer this_44, real pos_x, real pos_y, unit target, integer orderId, string wurstStackTrace returns nothing
	if Unit_typeId[this_44] == 0 then
		if this_44 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Hero.onOrder" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Hero.onOrder on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call Hero_onOrder(this_44, pos_x, pos_y, target, orderId, "\n   HeroClass, line 250" + wurstStackTrace)
endfunction

function GetOrders_callOnOrder takes string wurstStackTrace returns nothing
	call trigger_disable(GetOrders_orderDetect)
	call dispatch_Hero_onOrder(unit_getUserData(GetTriggerUnit()), GetOrderPointX(), GetOrderPointY(), GetOrderTargetUnit(), GetIssuedOrderId(), "\n   OrderHandling, line 57" + wurstStackTrace)
	call trigger_enable(GetOrders_orderDetect)
endfunction

function bridge_GetOrders_callOnOrder takes nothing returns nothing
	call GetOrders_callOnOrder("\n   OrderHandling, line 48")
endfunction

function HashMap_get takes integer this_44, integer key returns integer
	return hashtable_loadInt(HashMap_ht, this_44, key)
endfunction

function dispatch_HashMap_get takes integer this_44, integer key, string wurstStackTrace returns integer
	local integer get_result
	if HashMap_typeId[this_44] == 0 then
		if this_44 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling HashMap.get" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called HashMap.get on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	set get_result = HashMap_get(this_44, key)
	return get_result
endfunction

function Hero_enableAbilityTimed takes string wurstStackTrace returns nothing
	local timer t = GetExpiredTimer()
	local integer obj = timer_getData(t, "\n   HeroClass, line 233" + wurstStackTrace)
	call SetPlayerAbilityAvailable(Unit_owner[obj], dispatch_HashMap_get(Hero_enableAbility[obj], timerToIndex(t), "\n   HeroClass, line 234" + wurstStackTrace), true)
	call timer_release(t, "\n   HeroClass, line 235" + wurstStackTrace)
	set t = null
	set t = null
endfunction

function bridge_Hero_enableAbilityTimed takes nothing returns nothing
	call Hero_enableAbilityTimed("\n   HeroClass, line 243")
endfunction

function dispatch_InstantSpell_onCast takes integer this_44, integer caster returns nothing
endfunction

function InstantSpell_callOnCast takes integer this_44, integer caster, real targetPos_x, real targetPos_y, integer target returns nothing
	call dispatch_InstantSpell_onCast(this_44, caster)
endfunction

function dispatch_PointOrUnitSpell_onPointCast takes integer this_44, integer caster, real targetPos_x, real targetPos_y returns nothing
endfunction

function dispatch_PointOrUnitSpell_onUnitCast takes integer this_44, integer caster, integer target returns nothing
endfunction

function PointOrUnitSpell_callOnCast takes integer this_44, integer caster, real targetPos_x, real targetPos_y, integer target returns nothing
	if target == 0 then
		call dispatch_PointOrUnitSpell_onPointCast(this_44, caster, targetPos_x, targetPos_y)
	else
		call dispatch_PointOrUnitSpell_onUnitCast(this_44, caster, target)
	endif
endfunction

function alloc_SamplePointSpell takes nothing returns integer
	local integer this_44
	if SamplePointSpell_firstFree == 0 then
		set SamplePointSpell_maxIndex = SamplePointSpell_maxIndex + 1
		set this_44 = SamplePointSpell_maxIndex
	else
		set SamplePointSpell_firstFree = SamplePointSpell_firstFree - 1
		set this_44 = SamplePointSpell_nextFree[SamplePointSpell_firstFree]
	endif
	set SamplePointSpell_typeId[this_44] = 817
	return this_44
endfunction

function timer_startPeriodic takes timer this_44, real time, code timerCallBack returns nothing
	call TimerStart(this_44, time, true, timerCallBack)
endfunction

function construct_SamplePointSpell takes integer this_44, integer caster, real pos_x, real pos_y, integer setupData, string wurstStackTrace returns nothing
	set SamplePointSpell_t[this_44] = getTimer("\n   SpellTemplate, line 61" + wurstStackTrace)
	call timer_setData(SamplePointSpell_t[this_44], this_44, "\n   SpellTemplate, line 62" + wurstStackTrace)
	call timer_startPeriodic(SamplePointSpell_t[this_44], 0.03, ref_function_bridge_SamplePointSpell_callCallback)
endfunction

function new_SamplePointSpell takes integer caster, real pos_x, real pos_y, integer setupData, string wurstStackTrace returns integer
	local integer this_44 = alloc_SamplePointSpell()
	call construct_SamplePointSpell(this_44, caster, pos_x, pos_y, setupData, "\n   SpellTemplate, line 60" + wurstStackTrace)
	return this_44
endfunction

function SamplePointSpellSetup_onCast takes integer this_44, integer caster, real pos_x, real pos_y, string wurstStackTrace returns nothing
	call new_SamplePointSpell(caster, pos_x, pos_y, this_44, "\n   SpellTemplate, line 54" + wurstStackTrace)
endfunction

function alloc_TestSpell1 takes nothing returns integer
	local integer this_44
	if TestSpell1_firstFree == 0 then
		set TestSpell1_maxIndex = TestSpell1_maxIndex + 1
		set this_44 = TestSpell1_maxIndex
	else
		set TestSpell1_firstFree = TestSpell1_firstFree - 1
		set this_44 = TestSpell1_nextFree[TestSpell1_firstFree]
	endif
	set TestSpell1_typeId[this_44] = 819
	return this_44
endfunction

function Hero_spellStart takes integer this_44 returns nothing
	set Hero_acceptOrders[this_44] = false
endfunction

function dispatch_Hero_spellStart takes integer this_44, string wurstStackTrace returns nothing
	if Unit_typeId[this_44] == 0 then
		if this_44 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Hero.spellStart" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Hero.spellStart on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call Hero_spellStart(this_44)
endfunction

function int_toReal takes integer this_44 returns real
	return I2R(this_44)
endfunction

function construct_TestSpell1 takes integer this_44, integer caster, integer setup, string wurstStackTrace returns nothing
	call SetUnitAnimationByIndex(Unit_u[caster], TestSpell1_animationType)
	call timer_start(getTimer("\n   SampleSpells, line 41" + wurstStackTrace), 0.0, ref_function_TestSpell1_bla)
	set TestSpell1_caster[this_44] = caster
	call dispatch_Hero_spellStart(caster, "\n   SampleSpells, line 44" + wurstStackTrace)
	set TestSpell1_t[this_44] = getTimer("\n   SampleSpells, line 45" + wurstStackTrace)
	call timer_setData(TestSpell1_t[this_44], this_44, "\n   SampleSpells, line 46" + wurstStackTrace)
	call timer_start(TestSpell1_t[this_44], int_toReal(Spell_lvl[setup]) + 3., ref_function_bridge_TestSpell1_callCallback)
endfunction

function new_TestSpell1 takes integer caster, integer setup, string wurstStackTrace returns integer
	local integer this_44 = alloc_TestSpell1()
	call construct_TestSpell1(this_44, caster, setup, "\n   SampleSpells, line 39" + wurstStackTrace)
	return this_44
endfunction

function TestSpell1Setup_onCast takes integer this_44, integer caster, real pos_x, real pos_y, string wurstStackTrace returns nothing
	call new_TestSpell1(caster, this_44, "\n   SampleSpells, line 28" + wurstStackTrace)
endfunction

function dispatch_PointSpell_onCast takes integer this_44, integer caster, real targetPos_x, real targetPos_y, string wurstStackTrace returns nothing
	if Spell_typeId[this_44] == 0 then
		if this_44 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling PointSpell.onCast" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called PointSpell.onCast on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	if Spell_typeId[this_44] <= 816 then
		call SamplePointSpellSetup_onCast(this_44, caster, targetPos_x, targetPos_y, "\n   Spell, line 245" + wurstStackTrace)
	else
		call TestSpell1Setup_onCast(this_44, caster, targetPos_x, targetPos_y, "\n   Spell, line 245" + wurstStackTrace)
	endif
endfunction

function PointSpell_callOnCast takes integer this_44, integer caster, real targetPos_x, real targetPos_y, integer target, string wurstStackTrace returns nothing
	call dispatch_PointSpell_onCast(this_44, caster, targetPos_x, targetPos_y, "\n   Spell, line 238" + wurstStackTrace)
endfunction

function dispatch_UnitSpell_onCast takes integer this_44, integer caster, integer target returns nothing
endfunction

function UnitSpell_callOnCast takes integer this_44, integer caster, real targetPos_x, real targetPos_y, integer target returns nothing
	call dispatch_UnitSpell_onCast(this_44, caster, target)
endfunction

function dispatch_Spell_callOnCast takes integer this_44, integer caster, real targetPos_x, real targetPos_y, integer target, string wurstStackTrace returns nothing
	if Spell_typeId[this_44] == 0 then
		if this_44 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Spell.callOnCast" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Spell.callOnCast on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	if Spell_typeId[this_44] <= 693 then
		if Spell_typeId[this_44] <= 692 then
			if Spell_typeId[this_44] <= 691 then
				call InstantSpell_callOnCast(this_44, caster, targetPos_x, targetPos_y, target)
			else
				call PointSpell_callOnCast(this_44, caster, targetPos_x, targetPos_y, target, "\n   Spell, line 147" + wurstStackTrace)
			endif
		else
			call UnitSpell_callOnCast(this_44, caster, targetPos_x, targetPos_y, target)
		endif
	elseif Spell_typeId[this_44] <= 816 then
		if Spell_typeId[this_44] <= 694 then
			call PointOrUnitSpell_callOnCast(this_44, caster, targetPos_x, targetPos_y, target)
		else
			call PointSpell_callOnCast(this_44, caster, targetPos_x, targetPos_y, target, "\n   Spell, line 147" + wurstStackTrace)
		endif
	else
		call PointSpell_callOnCast(this_44, caster, targetPos_x, targetPos_y, target, "\n   Spell, line 147" + wurstStackTrace)
	endif
endfunction

function Hero_handleCasts takes string wurstStackTrace returns nothing
	local integer s = dispatch_HashMap_get(Hero_abiIdToSpell, GetSpellAbilityId(), "\n   HeroClass, line 197" + wurstStackTrace)
	local integer h
	local real pos_x
	local real pos_y
	local integer un
	local real temp_pos_x
	local real temp_pos_y
	if s != 0 then
		set h = unit_getUserData(GetTriggerUnit())
		set temp_pos_x = GetSpellTargetX()
		set temp_pos_y = GetSpellTargetY()
		set pos_x = temp_pos_x
		set pos_y = temp_pos_y
		set un = unit_getUserData(GetSpellTargetUnit())
		call dispatch_Spell_callOnCast(s, h, pos_x, pos_y, un, "\n   HeroClass, line 202" + wurstStackTrace)
	endif
endfunction

function bridge_Hero_handleCasts takes nothing returns nothing
	call Hero_handleCasts("\n   HeroClass, line 19")
endfunction

function Fx_getX takes integer this_44 returns real
	return unit_getX(Fx_dummy[this_44])
endfunction

function dispatch_Fx_getX takes integer this_44, string wurstStackTrace returns real
	local real getX_result
	if Fx_typeId[this_44] == 0 then
		if this_44 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Fx.getX" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Fx.getX on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	set getX_result = Fx_getX(this_44)
	return getX_result
endfunction

function Fx_getY takes integer this_44 returns real
	return unit_getY(Fx_dummy[this_44])
endfunction

function dispatch_Fx_getY takes integer this_44, string wurstStackTrace returns real
	local real getY_result
	if Fx_typeId[this_44] == 0 then
		if this_44 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Fx.getY" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Fx.getY on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	set getY_result = Fx_getY(this_44)
	return getY_result
endfunction

function Fx_getPos2 takes integer this_44, string wurstStackTrace returns real
	set Fx_getPos2_return_x = dispatch_Fx_getX(this_44, "\n   Fx, line 151" + wurstStackTrace)
	set Fx_getPos2_return_y = dispatch_Fx_getY(this_44, "\n   Fx, line 151" + wurstStackTrace)
	return Fx_getPos2_return_x
endfunction

function dispatch_Fx_getPos2 takes integer this_44, string wurstStackTrace returns real
	local real getPos2_result_x
	local real getPos2_result_y
	local real temp_getPos2_result_x
	local real temp_getPos2_result_y
	if Fx_typeId[this_44] == 0 then
		if this_44 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Fx.getPos2" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Fx.getPos2 on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	set temp_getPos2_result_x = Fx_getPos2(this_44, "\n   Fx, line 149" + wurstStackTrace)
	set temp_getPos2_result_y = Fx_getPos2_return_y
	set getPos2_result_x = temp_getPos2_result_x
	set getPos2_result_y = temp_getPos2_result_y
	set dispatch_Fx_getPos2_return_x = getPos2_result_x
	set dispatch_Fx_getPos2_return_y = getPos2_result_y
	return dispatch_Fx_getPos2_return_x
endfunction

function Fx_setPos takes integer this_44, real pos_x, real pos_y returns nothing
	call unit_setPos(Fx_dummy[this_44], pos_x, pos_y)
endfunction

function dispatch_Fx_setPos takes integer this_44, real pos_x, real pos_y, string wurstStackTrace returns nothing
	if Fx_typeId[this_44] == 0 then
		if this_44 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Fx.setPos" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Fx.setPos on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call Fx_setPos(this_44, pos_x, pos_y)
endfunction

function alloc_DelayNode takes nothing returns integer
	local integer this_44
	if DelayNode_firstFree == 0 then
		set DelayNode_maxIndex = DelayNode_maxIndex + 1
		set this_44 = DelayNode_maxIndex
	else
		set DelayNode_firstFree = DelayNode_firstFree - 1
		set this_44 = DelayNode_nextFree[DelayNode_firstFree]
	endif
	set DelayNode_typeId[this_44] = 20
	return this_44
endfunction

function timer_getRemaining takes timer this_44 returns real
	return TimerGetRemaining(this_44)
endfunction

function construct_DelayNode takes integer this_44, unit u_2, real time returns nothing
	local integer tmp
	set DelayNode_prev[this_44] = 0
	set DelayNode_next[this_44] = 0
	set DelayNode_u[this_44] = u_2
	set DelayNode_delayTime[this_44] = getElapsedGameTime() + time
	if DelayNode_first == 0 then
		set DelayNode_first = this_44
	else
		set tmp = DelayNode_first
		loop
			exitwhen  not (DelayNode_next[tmp] != 0 and DelayNode_delayTime[tmp] < DelayNode_delayTime[this_44])
			set tmp = DelayNode_next[tmp]
		endloop
		if DelayNode_delayTime[tmp] < DelayNode_delayTime[this_44] then
			set DelayNode_next[tmp] = this_44
			set DelayNode_prev[this_44] = tmp
		else
			set DelayNode_next[DelayNode_prev[tmp]] = this_44
			set DelayNode_prev[this_44] = DelayNode_prev[tmp]
			set DelayNode_next[this_44] = tmp
			set DelayNode_prev[tmp] = this_44
		endif
		if timer_getRemaining(DelayNode_t) > 0. and time < timer_getRemaining(DelayNode_t) then
			call timer_start(DelayNode_t, time, ref_function_bridge_DelayNode_recycle_2)
		elseif timer_getRemaining(DelayNode_t) <= 0. then
			call timer_start(DelayNode_t, time, ref_function_bridge_DelayNode_recycle_3)
		endif
	endif
endfunction

function new_DelayNode takes unit u_2, real time returns integer
	local integer this_44 = alloc_DelayNode()
	call construct_DelayNode(this_44, u_2, time)
	return this_44
endfunction

function DummyRecycler_recycle_2 takes unit u_2, real delay returns nothing
	call new_DelayNode(u_2, delay)
endfunction

function effect_destr takes effect this_44 returns nothing
	call DestroyEffect(this_44)
endfunction

function Fx_onDestroy takes integer this_44 returns nothing
	if Fx_fx[this_44] != null then
		call effect_destr(Fx_fx[this_44])
	endif
	call DummyRecycler_recycle_2(Fx_dummy[this_44], 1.)
endfunction

function dealloc_Fx takes integer obj, string wurstStackTrace returns nothing
	if Fx_typeId[obj] == 0 then
		call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Double free: object of type Fx" + wurstStackTrace)
		call I2S(1 / 0)
	else
		set Fx_nextFree[Fx_firstFree] = obj
		set Fx_firstFree = Fx_firstFree + 1
		set Fx_typeId[obj] = 0
	endif
endfunction

function destroyFx takes integer this_44, string wurstStackTrace returns nothing
	call Fx_onDestroy(this_44)
	call dealloc_Fx(this_44, "\n   Fx, line 199" + wurstStackTrace)
endfunction

function dispatch_Fx_destroyFx takes integer this_44, string wurstStackTrace returns nothing
	if Fx_typeId[this_44] == 0 then
		if this_44 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Fx.destroyFx" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Fx.destroyFx on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call destroyFx(this_44, "\n   Fx, line 21" + wurstStackTrace)
endfunction

function Missle_onDestroy takes integer this_44, string wurstStackTrace returns nothing
	call dispatch_Unit2Event_destroyUnit2Event(Missle_atHit[this_44], "\n   Missle, line 115" + wurstStackTrace)
	call dispatch_Unit2Event_destroyUnit2Event(Missle_atEnd[this_44], "\n   Missle, line 116" + wurstStackTrace)
	call timer_release(Missle_t[this_44], "\n   Missle, line 117" + wurstStackTrace)
	call dispatch_Fx_destroyFx(Missle_fx[this_44], "\n   Missle, line 118" + wurstStackTrace)
endfunction

function dealloc_Missle takes integer obj, string wurstStackTrace returns nothing
	if Missle_typeId[obj] == 0 then
		call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Double free: object of type Missle" + wurstStackTrace)
		call I2S(1 / 0)
	else
		set Missle_firstFree = Missle_firstFree + 1
		set Missle_typeId[obj] = 0
	endif
endfunction

function destroyMissle takes integer this_44, string wurstStackTrace returns nothing
	call Missle_onDestroy(this_44, "\n   Missle, line 114" + wurstStackTrace)
	call dealloc_Missle(this_44, "\n   Missle, line 114" + wurstStackTrace)
endfunction

function dispatch_Missle_destroyMissle takes integer this_44, string wurstStackTrace returns nothing
	if Missle_typeId[this_44] == 0 then
		if this_44 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Missle.destroyMissle" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Missle.destroyMissle on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call destroyMissle(this_44, "\n   Missle, line 10" + wurstStackTrace)
endfunction

function vec2_op_minus takes real this_x, real this_y, real v_x, real v_y returns real
	set vec2_op_minus_return_x = this_x - v_x
	set vec2_op_minus_return_y = this_y - v_y
	return vec2_op_minus_return_x
endfunction

function vec2_op_plus takes real this_x, real this_y, real v_x, real v_y returns real
	set vec2_op_plus_return_x = this_x + v_x
	set vec2_op_plus_return_y = this_y + v_y
	return vec2_op_plus_return_x
endfunction

function Missle_move takes integer this_44, string wurstStackTrace returns nothing
	local group g
	local unit u_2
	local real prePos_x
	local real prePos_y
	local unit hitUnit
	local real minDist
	local unit lu
	local real targetPos_x
	local real targetPos_y
	local real currentDist
	local integer tempIndex
	local integer tempIndex_2
	local real temp_prePos_x
	local real temp_prePos_y
	local real temp_targetPos_x
	local real temp_targetPos_y
	local real temp
	local real temp_2
	local integer temp_3
	local real temp_4
	local real temp_5
	if Missle_dl[this_44] <= 0 then
		call dispatch_Unit2Event_fire(Missle_atEnd[this_44], Missle_source[this_44], 0, "\n   Missle, line 77" + wurstStackTrace)
		call dispatch_Missle_destroyMissle(this_44, "\n   Missle, line 78" + wurstStackTrace)
	else
		set temp_3 = Missle_fx[this_44]
		set temp = dispatch_Fx_getPos2(Missle_fx[this_44], "\n   Missle, line 80" + wurstStackTrace)
		set temp_2 = dispatch_Fx_getPos2_return_y
		set tempIndex = this_44
		call dispatch_Fx_setPos(temp_3, vec2_op_plus(temp, temp_2, Missle_vel[tempIndex], Missle_vel_2[tempIndex]), vec2_op_plus_return_y, "\n   Missle, line 80" + wurstStackTrace)
		set g = CreateGroup()
		set Filter_filterCheckUnit = Unit_u[Missle_source[this_44]]
		call GroupEnumUnitsInRange(g, dispatch_Fx_getX(Missle_fx[this_44], "\n   Missle, line 84" + wurstStackTrace), dispatch_Fx_getY(Missle_fx[this_44], "\n   Missle, line 84" + wurstStackTrace), Missle_radius[this_44], Missle_filter[this_44])
		set u_2 = FirstOfGroup(g)
		if u_2 == null then
			set Missle_dl[this_44] = Missle_dl[this_44] - 1
		else
			call GroupRemoveUnit(g, u_2)
			if FirstOfGroup(g) == null then
				call dispatch_Unit2Event_fire(Missle_atHit[this_44], Missle_source[this_44], unit_getUserData(u_2), "\n   Missle, line 91" + wurstStackTrace)
				call DestroyGroup(g)
				call dispatch_Missle_destroyMissle(this_44, "\n   Missle, line 93" + wurstStackTrace)
				set g = null
				set u_2 = null
			else
				call GroupAddUnit(g, u_2)
				set temp_4 = dispatch_Fx_getPos2(Missle_fx[this_44], "\n   Missle, line 98" + wurstStackTrace)
				set temp_5 = dispatch_Fx_getPos2_return_y
				set tempIndex_2 = this_44
				set temp_prePos_x = vec2_op_minus(temp_4, temp_5, Missle_vel[tempIndex_2], Missle_vel_2[tempIndex_2])
				set temp_prePos_y = vec2_op_minus_return_y
				set prePos_x = temp_prePos_x
				set prePos_y = temp_prePos_y
				set hitUnit = null
				set minDist = 10000.
				loop
					exitwhen  not group_hasNext(g)
					set lu = group_next(g)
					set temp_targetPos_x = unit_getPos(lu)
					set temp_targetPos_y = unit_getPos_return_y
					set targetPos_x = temp_targetPos_x
					set targetPos_y = temp_targetPos_y
					set currentDist = vec2_distToVec(targetPos_x, targetPos_y, prePos_x, prePos_y)
					if currentDist > minDist then
						set minDist = currentDist
						set hitUnit = lu
					endif
				endloop
				call dispatch_Unit2Event_fire(Missle_atHit[this_44], Missle_source[this_44], unit_getUserData(hitUnit), "\n   Missle, line 107" + wurstStackTrace)
				call DestroyGroup(g)
				set u_2 = null
				set g = null
				set hitUnit = null
				call dispatch_Missle_destroyMissle(this_44, "\n   Missle, line 112" + wurstStackTrace)
			endif
		endif
	endif
	set g = null
	set u_2 = null
	set hitUnit = null
	set lu = null
endfunction

function dispatch_Missle_move takes integer this_44, string wurstStackTrace returns nothing
	if Missle_typeId[this_44] == 0 then
		if this_44 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Missle.move" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Missle.move on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call Missle_move(this_44, "\n   Missle, line 75" + wurstStackTrace)
endfunction

function Missle_callMove takes string wurstStackTrace returns nothing
	call dispatch_Missle_move(timer_getData(GetExpiredTimer(), "\n   Missle, line 47" + wurstStackTrace), "\n   Missle, line 47" + wurstStackTrace)
endfunction

function bridge_Missle_callMove takes nothing returns nothing
	call Missle_callMove("\n   Missle, line 44")
endfunction

function bridge_Missle_callMove_2 takes nothing returns nothing
	call Missle_callMove("\n   Missle, line 33")
endfunction

function dispatch_OnDamage_run takes integer this_44, unit damaged, unit source, real amount_39 returns nothing
endfunction

function unitToIndex takes unit object returns integer
	return handle_getHandleId(object)
endfunction

function OnDamage_damageHandler takes string wurstStackTrace returns boolean
	local integer wurst__iterator0 = dispatch_LinkedList_iterator(dispatch_HashMap_get(OnDamage_damageActions, unitToIndex(GetTriggerUnit()), "\n   ClosureEvents, line 97" + wurstStackTrace), "\n   ClosureEvents, line 97" + wurstStackTrace)
	local integer action
	loop
		exitwhen  not dispatch_LLIterator_hasNext(wurst__iterator0, "\n   ClosureEvents, line 97" + wurstStackTrace)
		set action = dispatch_LLIterator_next(wurst__iterator0, "\n   ClosureEvents, line 97" + wurstStackTrace)
		call dispatch_OnDamage_run(action, GetTriggerUnit(), GetEventDamageSource(), GetEventDamage())
	endloop
	call dispatch_LLIterator_close(wurst__iterator0, "\n   ClosureEvents, line 97" + wurstStackTrace)
	return false
endfunction

function bridge_OnDamage_damageHandler takes nothing returns boolean
	return OnDamage_damageHandler("\n   ClosureEvents, line 108")
endfunction

function Player_setCam takes string wurstStackTrace returns nothing
	local timer t = GetExpiredTimer()
	call timer_getData(t, "\n   PlayerClass, line 45" + wurstStackTrace)
	set t = null
endfunction

function bridge_Player_setCam takes nothing returns nothing
	call Player_setCam("\n   PlayerClass, line 39")
endfunction

function dispatch_Event_callActions takes integer this_44, integer d_2, string wurstStackTrace returns nothing
	if Event_typeId[this_44] == 0 then
		if this_44 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Event.callActions" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Event.callActions on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	if Event_typeId[this_44] <= 767 then
		if Event_typeId[this_44] <= 765 then
			if Event_typeId[this_44] <= 668 then
				call Event_callActions(this_44, d_2, "\n   CustomClosureEvents, line 39" + wurstStackTrace)
			else
				call Event_callActions(this_44, d_2, "\n   CustomClosureEvents, line 39" + wurstStackTrace)
			endif
		else
			call Event_callActions(this_44, d_2, "\n   CustomClosureEvents, line 39" + wurstStackTrace)
		endif
	elseif Event_typeId[this_44] <= 770 then
		call Event_callActions(this_44, d_2, "\n   CustomClosureEvents, line 39" + wurstStackTrace)
	else
		call Event_callActions(this_44, d_2, "\n   CustomClosureEvents, line 39" + wurstStackTrace)
	endif
endfunction

function alloc_Closure takes nothing returns integer
	local integer this_44
	if CallbackSingle_firstFree == 0 then
		set CallbackSingle_maxIndex = CallbackSingle_maxIndex + 1
		set this_44 = CallbackSingle_maxIndex
	else
		set CallbackSingle_firstFree = CallbackSingle_firstFree - 1
		set this_44 = CallbackSingle_nextFree[CallbackSingle_firstFree]
	endif
	set CallbackSingle_typeId[this_44] = 660
	return this_44
endfunction

function HashList_get takes integer this_44, integer index returns integer
	return hashtable_loadInt(HashList_ht, this_44, index)
endfunction

function dispatch_HashList_get takes integer this_44, integer index, string wurstStackTrace returns integer
	local integer get_result
	if HashList_typeId[this_44] == 0 then
		if this_44 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling HashList.get" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called HashList.get on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	set get_result = HashList_get(this_44, index)
	return get_result
endfunction

function HashList_getSize takes integer this_44 returns integer
	return HashList_size[this_44]
endfunction

function dispatch_HashList_getSize takes integer this_44, string wurstStackTrace returns integer
	local integer getSize_result
	if HashList_typeId[this_44] == 0 then
		if this_44 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling HashList.getSize" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called HashList.getSize on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	set getSize_result = HashList_getSize(this_44)
	return getSize_result
endfunction

function CallbackSingle_start takes integer this_44, real time, string wurstStackTrace returns nothing
	local timer receiver = getTimer("\n   ClosureTimers, line 68" + wurstStackTrace)
	local timer receiver_2
	call timer_setData(receiver, this_44, "\n   ClosureTimers, line 68" + wurstStackTrace)
	set receiver_2 = receiver
	call timer_start(receiver_2, time, ref_function_bridge_CallbackSingle_staticCallback)
	set receiver = null
	set receiver_2 = null
endfunction

function dispatch_CallbackSingle_start takes integer this_44, real time, string wurstStackTrace returns nothing
	if CallbackSingle_typeId[this_44] == 0 then
		if this_44 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling CallbackSingle.start" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called CallbackSingle.start on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	if CallbackSingle_typeId[this_44] <= 714 then
		if CallbackSingle_typeId[this_44] <= 702 then
			if CallbackSingle_typeId[this_44] <= 664 then
				if CallbackSingle_typeId[this_44] <= 660 then
					if CallbackSingle_typeId[this_44] <= 653 then
						call CallbackSingle_start(this_44, time, "\n   ClosureTimers, line 67" + wurstStackTrace)
					else
						call CallbackSingle_start(this_44, time, "\n   ClosureTimers, line 67" + wurstStackTrace)
					endif
				else
					call CallbackSingle_start(this_44, time, "\n   ClosureTimers, line 67" + wurstStackTrace)
				endif
			elseif CallbackSingle_typeId[this_44] <= 700 then
				if CallbackSingle_typeId[this_44] <= 698 then
					call CallbackSingle_start(this_44, time, "\n   ClosureTimers, line 67" + wurstStackTrace)
				else
					call CallbackSingle_start(this_44, time, "\n   ClosureTimers, line 67" + wurstStackTrace)
				endif
			else
				call CallbackSingle_start(this_44, time, "\n   ClosureTimers, line 67" + wurstStackTrace)
			endif
		elseif CallbackSingle_typeId[this_44] <= 708 then
			if CallbackSingle_typeId[this_44] <= 706 then
				if CallbackSingle_typeId[this_44] <= 704 then
					call CallbackSingle_start(this_44, time, "\n   ClosureTimers, line 67" + wurstStackTrace)
				else
					call CallbackSingle_start(this_44, time, "\n   ClosureTimers, line 67" + wurstStackTrace)
				endif
			else
				call CallbackSingle_start(this_44, time, "\n   ClosureTimers, line 67" + wurstStackTrace)
			endif
		elseif CallbackSingle_typeId[this_44] <= 712 then
			if CallbackSingle_typeId[this_44] <= 710 then
				call CallbackSingle_start(this_44, time, "\n   ClosureTimers, line 67" + wurstStackTrace)
			else
				call CallbackSingle_start(this_44, time, "\n   ClosureTimers, line 67" + wurstStackTrace)
			endif
		else
			call CallbackSingle_start(this_44, time, "\n   ClosureTimers, line 67" + wurstStackTrace)
		endif
	elseif CallbackSingle_typeId[this_44] <= 726 then
		if CallbackSingle_typeId[this_44] <= 720 then
			if CallbackSingle_typeId[this_44] <= 718 then
				if CallbackSingle_typeId[this_44] <= 716 then
					call CallbackSingle_start(this_44, time, "\n   ClosureTimers, line 67" + wurstStackTrace)
				else
					call CallbackSingle_start(this_44, time, "\n   ClosureTimers, line 67" + wurstStackTrace)
				endif
			else
				call CallbackSingle_start(this_44, time, "\n   ClosureTimers, line 67" + wurstStackTrace)
			endif
		elseif CallbackSingle_typeId[this_44] <= 724 then
			if CallbackSingle_typeId[this_44] <= 722 then
				call CallbackSingle_start(this_44, time, "\n   ClosureTimers, line 67" + wurstStackTrace)
			else
				call CallbackSingle_start(this_44, time, "\n   ClosureTimers, line 67" + wurstStackTrace)
			endif
		else
			call CallbackSingle_start(this_44, time, "\n   ClosureTimers, line 67" + wurstStackTrace)
		endif
	elseif CallbackSingle_typeId[this_44] <= 732 then
		if CallbackSingle_typeId[this_44] <= 730 then
			if CallbackSingle_typeId[this_44] <= 728 then
				call CallbackSingle_start(this_44, time, "\n   ClosureTimers, line 67" + wurstStackTrace)
			else
				call CallbackSingle_start(this_44, time, "\n   ClosureTimers, line 67" + wurstStackTrace)
			endif
		else
			call CallbackSingle_start(this_44, time, "\n   ClosureTimers, line 67" + wurstStackTrace)
		endif
	elseif CallbackSingle_typeId[this_44] <= 734 then
		call CallbackSingle_start(this_44, time, "\n   ClosureTimers, line 67" + wurstStackTrace)
	else
		call CallbackSingle_start(this_44, time, "\n   ClosureTimers, line 67" + wurstStackTrace)
	endif
endfunction

function doAfter takes real timeToWait, integer cb, string wurstStackTrace returns nothing
	call dispatch_CallbackSingle_start(cb, timeToWait, "\n   ClosureTimers, line 52" + wurstStackTrace)
endfunction

function unit_getName takes unit this_44 returns string
	return GetUnitName(this_44)
endfunction

function closure_impl_45 takes integer this_44, integer i, string wurstStackTrace returns real
	local real ret = 0.
	local integer id
	local unit u_2
	local integer clVar
	if i >= dispatch_HashList_getSize(PreloadSystem_unitsToPreload, "\n   PreloadSystem, line 81" + wurstStackTrace) then
		call unit_remove(PreloadSystem_preloadDummy)
		set ret = -1.
	else
		set id = dispatch_HashList_get(PreloadSystem_unitsToPreload, i, "\n   PreloadSystem, line 85" + wurstStackTrace)
		set u_2 = CreateUnit(Basics_DUMMY_PLAYER, id, 0., 0., 0.)
		if unit_getName(u_2) == "" or unit_getName(u_2) == null then
			set ret = -2.
		else
			set clVar = alloc_Closure()
			set u[clVar] = u_2
			call doAfter(1., clVar, "\n   PreloadSystem, line 90" + wurstStackTrace)
			set ret = PreloadSystem_unitLoadTime
		endif
	endif
	set u_2 = null
	return ret
endfunction

function alloc_Closure_2 takes nothing returns integer
	local integer this_44
	if PlayerAction_firstFree == 0 then
		set PlayerAction_maxIndex = PlayerAction_maxIndex + 1
		set this_44 = PlayerAction_maxIndex
	else
		set PlayerAction_firstFree = PlayerAction_firstFree - 1
		set this_44 = PlayerAction_nextFree[PlayerAction_firstFree]
	endif
	set PlayerAction_typeId[this_44] = 842
	return this_44
endfunction

function alloc_Closure_3 takes nothing returns integer
	local integer this_44
	if PlayerAction_firstFree == 0 then
		set PlayerAction_maxIndex = PlayerAction_maxIndex + 1
		set this_44 = PlayerAction_maxIndex
	else
		set PlayerAction_firstFree = PlayerAction_firstFree - 1
		set this_44 = PlayerAction_nextFree[PlayerAction_firstFree]
	endif
	set PlayerAction_typeId[this_44] = 843
	return this_44
endfunction

function alloc_Closure_4 takes nothing returns integer
	local integer this_44
	if PlayerAction_firstFree == 0 then
		set PlayerAction_maxIndex = PlayerAction_maxIndex + 1
		set this_44 = PlayerAction_maxIndex
	else
		set PlayerAction_firstFree = PlayerAction_firstFree - 1
		set this_44 = PlayerAction_nextFree[PlayerAction_firstFree]
	endif
	set PlayerAction_typeId[this_44] = 844
	return this_44
endfunction

function alloc_Closure_5 takes nothing returns integer
	local integer this_44
	if PlayerAction_firstFree == 0 then
		set PlayerAction_maxIndex = PlayerAction_maxIndex + 1
		set this_44 = PlayerAction_maxIndex
	else
		set PlayerAction_firstFree = PlayerAction_firstFree - 1
		set this_44 = PlayerAction_nextFree[PlayerAction_firstFree]
	endif
	set PlayerAction_typeId[this_44] = 841
	return this_44
endfunction

function ElementLoop_onDestroy takes integer this_44 returns nothing
endfunction

function dealloc_ElementLoop takes integer obj, string wurstStackTrace returns nothing
	if ElementLoop_typeId[obj] == 0 then
		call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Double free: object of type ElementLoop" + wurstStackTrace)
		call I2S(1 / 0)
	else
		set ElementLoop_nextFree[ElementLoop_firstFree] = obj
		set ElementLoop_firstFree = ElementLoop_firstFree + 1
		set ElementLoop_typeId[obj] = 0
	endif
endfunction

function destroyElementLoop takes integer this_44, string wurstStackTrace returns nothing
	call ElementLoop_onDestroy(this_44)
	call dealloc_ElementLoop(this_44, "\n   Setup, line 106" + wurstStackTrace)
endfunction

function dispatch_ElementLoop_destroyElementLoop takes integer this_44, string wurstStackTrace returns nothing
	if ElementLoop_typeId[this_44] == 0 then
		if this_44 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling ElementLoop.destroyElementLoop" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called ElementLoop.destroyElementLoop on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call destroyElementLoop(this_44, "\n   Setup, line 106" + wurstStackTrace)
endfunction

function ElementLoop_close takes integer this_44, string wurstStackTrace returns nothing
	call dispatch_ElementLoop_destroyElementLoop(this_44, "\n   Setup, line 132" + wurstStackTrace)
endfunction

function dispatch_ElementLoop_close takes integer this_44, string wurstStackTrace returns nothing
	if ElementLoop_typeId[this_44] == 0 then
		if this_44 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling ElementLoop.close" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called ElementLoop.close on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call ElementLoop_close(this_44, "\n   Setup, line 131" + wurstStackTrace)
endfunction

function ElementLoop_hasNext takes integer this_44 returns boolean
	local integer tempIndex = this_44
	local integer temp_tempTupleSelectionResult_1 = ElementLoop_a[tempIndex]
	local integer temp_tempTupleSelectionResult_2 = ElementLoop_a_2[tempIndex]
	local integer tempTupleSelectionResult_1 = temp_tempTupleSelectionResult_1
	local integer temp = tempTupleSelectionResult_1
	local integer tempIndex_2 = this_44
	local integer temp_tempTupleSelectionResult_1_2 = ElementLoop_b[tempIndex_2]
	local integer temp_tempTupleSelectionResult_2_2 = ElementLoop_b_2[tempIndex_2]
	local integer tempTupleSelectionResult_1_2 = temp_tempTupleSelectionResult_1_2
	local integer tempIndex_3
	local integer tempTupleSelectionResult_2
	local integer temp_tempTupleSelectionResult_1_3
	local integer temp_tempTupleSelectionResult_2_3
	local integer tempIndex_4
	local integer tempTupleSelectionResult_2_2
	local integer temp_tempTupleSelectionResult_1_4
	local integer temp_tempTupleSelectionResult_2_4
	local integer temp_2
	local boolean andLeft
	if temp <= tempTupleSelectionResult_1_2 then
		set tempIndex_3 = this_44
		set temp_tempTupleSelectionResult_1_3 = ElementLoop_a[tempIndex_3]
		set temp_tempTupleSelectionResult_2_3 = ElementLoop_a_2[tempIndex_3]
		set tempTupleSelectionResult_2 = temp_tempTupleSelectionResult_2_3
		set temp_2 = tempTupleSelectionResult_2
		set tempIndex_4 = this_44
		set temp_tempTupleSelectionResult_1_4 = ElementLoop_b[tempIndex_4]
		set temp_tempTupleSelectionResult_2_4 = ElementLoop_b_2[tempIndex_4]
		set tempTupleSelectionResult_2_2 = temp_tempTupleSelectionResult_2_4
		set andLeft = temp_2 <= tempTupleSelectionResult_2_2
	else
		set andLeft = false
	endif
	return andLeft
endfunction

function dispatch_ElementLoop_hasNext takes integer this_44, string wurstStackTrace returns boolean
	local boolean hasNext_result
	if ElementLoop_typeId[this_44] == 0 then
		if this_44 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling ElementLoop.hasNext" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called ElementLoop.hasNext on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	set hasNext_result = ElementLoop_hasNext(this_44)
	return hasNext_result
endfunction

function ElementLoop_iterator takes integer this_44 returns integer
	return this_44
endfunction

function dispatch_ElementLoop_iterator takes integer this_44, string wurstStackTrace returns integer
	local integer iterator_result
	if ElementLoop_typeId[this_44] == 0 then
		if this_44 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling ElementLoop.iterator" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called ElementLoop.iterator on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	set iterator_result = ElementLoop_iterator(this_44)
	return iterator_result
endfunction

function ElementLoop_next takes integer this_44 returns integer
	local integer tempIndex = this_44
	local integer temp_ret_x = ElementLoop_a[tempIndex]
	local integer temp_ret_y = ElementLoop_a_2[tempIndex]
	local integer ret_x = temp_ret_x
	local integer ret_y = temp_ret_y
	local integer tempIndex_2 = this_44
	local integer temp_tempTupleSelectionResult_1 = ElementLoop_a[tempIndex_2]
	local integer temp_tempTupleSelectionResult_2 = ElementLoop_a_2[tempIndex_2]
	local integer tempTupleSelectionResult_1 = temp_tempTupleSelectionResult_1
	local integer temp = tempTupleSelectionResult_1
	local integer tempIndex_3 = this_44
	local integer temp_tempTupleSelectionResult_1_2 = ElementLoop_b[tempIndex_3]
	local integer temp_tempTupleSelectionResult_2_2 = ElementLoop_b_2[tempIndex_3]
	local integer tempTupleSelectionResult_1_2 = temp_tempTupleSelectionResult_1_2
	local integer tempIndex_4
	local integer tempIndex_5
	local integer tempTupleSelectionResult_2
	local integer temp_tempTupleSelectionResult_1_3
	local integer temp_tempTupleSelectionResult_2_3
	local integer tempIndex_6
	local integer tempIndex_7
	local integer tempIndex_8
	local integer tempTupleSelectionResult_1_3
	local integer temp_tempTupleSelectionResult_1_4
	local integer temp_tempTupleSelectionResult_2_4
	local integer temp_2
	local integer temp_3
	if temp >= tempTupleSelectionResult_1_2 then
		set tempIndex_4 = this_44
		set temp_2 = tempIndex_4
		set tempIndex_5 = this_44
		set temp_tempTupleSelectionResult_1_3 = ElementLoop_a[tempIndex_5]
		set temp_tempTupleSelectionResult_2_3 = ElementLoop_a_2[tempIndex_5]
		set tempTupleSelectionResult_2 = temp_tempTupleSelectionResult_2_3
		set ElementLoop_a_2[temp_2] = tempTupleSelectionResult_2 + 1
		set tempIndex_6 = this_44
		set ElementLoop_a[tempIndex_6] = ElementLoop_start[this_44]
	else
		set tempIndex_7 = this_44
		set temp_3 = tempIndex_7
		set tempIndex_8 = this_44
		set temp_tempTupleSelectionResult_1_4 = ElementLoop_a[tempIndex_8]
		set temp_tempTupleSelectionResult_2_4 = ElementLoop_a_2[tempIndex_8]
		set tempTupleSelectionResult_1_3 = temp_tempTupleSelectionResult_1_4
		set ElementLoop_a[temp_3] = tempTupleSelectionResult_1_3 + 1
	endif
	set ElementLoop_next_return_x = ret_x
	set ElementLoop_next_return_y = ret_y
	return ElementLoop_next_return_x
endfunction

function dispatch_ElementLoop_next takes integer this_44, string wurstStackTrace returns integer
	local integer next_result_x
	local integer next_result_y
	local integer temp_next_result_x
	local integer temp_next_result_y
	if ElementLoop_typeId[this_44] == 0 then
		if this_44 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling ElementLoop.next" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called ElementLoop.next on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	set temp_next_result_x = ElementLoop_next(this_44)
	set temp_next_result_y = ElementLoop_next_return_y
	set next_result_x = temp_next_result_x
	set next_result_y = temp_next_result_y
	set dispatch_ElementLoop_next_return_x = next_result_x
	set dispatch_ElementLoop_next_return_y = next_result_y
	return dispatch_ElementLoop_next_return_x
endfunction

function element_op_minus takes integer this_x, integer this_y, integer other_x, integer other_y returns integer
	set element_op_minus_return_x = this_x - other_x
	set element_op_minus_return_y = this_y - other_y
	return element_op_minus_return_x
endfunction

function element_op_plus takes integer this_x, integer this_y, integer other_x, integer other_y returns integer
	set element_op_plus_return_x = this_x + other_x
	set element_op_plus_return_y = this_y + other_y
	return element_op_plus_return_x
endfunction

function getTrackableAt takes integer pos_x, integer pos_y returns integer
	return Setup_tracks[(Setup_menuWidth + 1) * pos_x + pos_y]
endfunction

function alloc_ElementLoop takes nothing returns integer
	local integer this_44
	if ElementLoop_firstFree == 0 then
		set ElementLoop_maxIndex = ElementLoop_maxIndex + 1
		set this_44 = ElementLoop_maxIndex
	else
		set ElementLoop_firstFree = ElementLoop_firstFree - 1
		set this_44 = ElementLoop_nextFree[ElementLoop_firstFree]
	endif
	set ElementLoop_typeId[this_44] = 671
	return this_44
endfunction

function construct_ElementLoop takes integer this_44, integer a_x, integer a_y, integer b_x, integer b_y returns nothing
	local integer tempIndex = this_44
	local integer tempIndex_2
	set ElementLoop_a[tempIndex] = a_x
	set ElementLoop_a_2[tempIndex] = a_y
	set tempIndex_2 = this_44
	set ElementLoop_b[tempIndex_2] = b_x
	set ElementLoop_b_2[tempIndex_2] = b_y
	set ElementLoop_start[this_44] = a_x
endfunction

function new_ElementLoop takes integer a_x, integer a_y, integer b_x, integer b_y returns integer
	local integer this_44 = alloc_ElementLoop()
	call construct_ElementLoop(this_44, a_x, a_y, b_x, b_y)
	return this_44
endfunction

function Window_addClickDetection takes integer this_44, integer o, string wurstStackTrace returns nothing
	local integer tempIndex = o
	local integer temp_3 = Widget_pos[tempIndex]
	local integer temp_4 = Widget_pos_2[tempIndex]
	local integer tempIndex_2 = o
	local integer temp = Widget_pos[tempIndex_2]
	local integer temp_2 = Widget_pos_2[tempIndex_2]
	local integer tempIndex_3 = o
	local integer wurst__iterator2 = dispatch_ElementLoop_iterator(new_ElementLoop(temp_3, temp_4, element_op_minus(element_op_plus(temp, temp_2, Widget_size[tempIndex_3], Widget_size_2[tempIndex_3]), element_op_plus_return_y, 1, 1), element_op_minus_return_y), "\n   Menu, line 182" + wurstStackTrace)
	local integer e_x
	local integer e_y
	local integer temp_e_x
	local integer temp_e_y
	loop
		exitwhen  not dispatch_ElementLoop_hasNext(wurst__iterator2, "\n   Menu, line 182" + wurstStackTrace)
		set temp_e_x = dispatch_ElementLoop_next(wurst__iterator2, "\n   Menu, line 182" + wurstStackTrace)
		set temp_e_y = dispatch_ElementLoop_next_return_y
		set e_x = temp_e_x
		set e_y = temp_e_y
		call dispatch_HashMap_put(Window_trackMap[this_44], getTrackableAt(e_x, e_y), o, "\n   Menu, line 183" + wurstStackTrace)
	endloop
	call dispatch_ElementLoop_close(wurst__iterator2, "\n   Menu, line 182" + wurstStackTrace)
endfunction

function dispatch_Window_addClickDetection takes integer this_44, integer o, string wurstStackTrace returns nothing
	if Window_typeId[this_44] == 0 then
		if this_44 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Window.addClickDetection" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Window.addClickDetection on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	if Window_typeId[this_44] <= 789 then
		call Window_addClickDetection(this_44, o, "\n   Menu, line 181" + wurstStackTrace)
	else
		call Window_addClickDetection(this_44, o, "\n   Menu, line 181" + wurstStackTrace)
	endif
endfunction

function Observable_onAdd takes integer this_44, integer w_2, string wurstStackTrace returns nothing
	call dispatch_Window_addClickDetection(w_2, this_44, "\n   Menu, line 53" + wurstStackTrace)
endfunction

function Widget_onAdd takes integer this_44, integer w_2 returns nothing
endfunction

function cyc_dispatch_Window_add takes integer funcChoice, integer this_44, integer g, string wurstStackTrace returns nothing
	local integer wurst__iterator0
	local integer wi
	if funcChoice == 0 then
		if Window_typeId[this_44] == 0 then
			if this_44 == 0 then
				call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Window.add" + wurstStackTrace)
				call I2S(1 / 0)
			else
				call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Window.add on invalid object." + wurstStackTrace)
				call I2S(1 / 0)
			endif
		endif
		if Window_typeId[this_44] <= 789 then
			call cyc_dispatch_Window_add(1, this_44, g, "\n   Menu, line 177" + wurstStackTrace)
		else
			call cyc_dispatch_Window_add(1, this_44, g, "\n   Menu, line 177" + wurstStackTrace)
		endif
	elseif funcChoice == 1 then
		call dispatch_LinkedList_add(Window_content[this_44], g, "\n   Menu, line 178" + wurstStackTrace)
		call cyc_dispatch_Window_add(2, g, this_44, "\n   Menu, line 179" + wurstStackTrace)
	elseif funcChoice == 2 then
		if Widget_typeId[this_44] == 0 then
			if this_44 == 0 then
				call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Widget.onAdd" + wurstStackTrace)
				call I2S(1 / 0)
			else
				call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Widget.onAdd on invalid object." + wurstStackTrace)
				call I2S(1 / 0)
			endif
		endif
		if Widget_typeId[this_44] <= 799 then
			if Widget_typeId[this_44] <= 786 then
				if Widget_typeId[this_44] <= 785 then
					call Widget_onAdd(this_44, g)
				else
					call Observable_onAdd(this_44, g, "\n   Menu, line 26" + wurstStackTrace)
				endif
			elseif Widget_typeId[this_44] <= 795 then
				call Widget_onAdd(this_44, g)
			else
				call cyc_dispatch_Window_add(3, this_44, g, "\n   Menu, line 26" + wurstStackTrace)
			endif
		elseif Widget_typeId[this_44] <= 809 then
			if Widget_typeId[this_44] <= 805 then
				call Widget_onAdd(this_44, g)
			else
				call Widget_onAdd(this_44, g)
			endif
		else
			call Observable_onAdd(this_44, g, "\n   Menu, line 26" + wurstStackTrace)
		endif
	elseif funcChoice == 3 then
		set wurst__iterator0 = dispatch_LinkedList_iterator(Pane_content[this_44], "\n   Pane, line 84" + wurstStackTrace)
		loop
			exitwhen  not dispatch_LLIterator_hasNext(wurst__iterator0, "\n   Pane, line 84" + wurstStackTrace)
			set wi = dispatch_LLIterator_next(wurst__iterator0, "\n   Pane, line 84" + wurstStackTrace)
			call cyc_dispatch_Window_add(0, g, wi, "\n   Pane, line 85" + wurstStackTrace)
		endloop
		call dispatch_LLIterator_close(wurst__iterator0, "\n   Pane, line 84" + wurstStackTrace)
	endif
endfunction

function Observable_setClickAction takes integer this_44, integer p returns nothing
	set Observable_click[this_44] = p
endfunction

function dispatch_Observable_setClickAction takes integer this_44, integer p, string wurstStackTrace returns nothing
	if Widget_typeId[this_44] == 0 then
		if this_44 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Observable.setClickAction" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Observable.setClickAction on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	if Widget_typeId[this_44] <= 786 then
		call Observable_setClickAction(this_44, p)
	else
		call Observable_setClickAction(this_44, p)
	endif
endfunction

function TextBox_setColor takes integer this_44, integer c_red, integer c_green, integer c_blue returns nothing
	local integer tempIndex = this_44
	set TextBox_col[tempIndex] = c_red
	set TextBox_col_2[tempIndex] = c_green
	set TextBox_col_3[tempIndex] = c_blue
endfunction

function dispatch_TextBox_setColor takes integer this_44, integer c_red, integer c_green, integer c_blue, string wurstStackTrace returns nothing
	if Widget_typeId[this_44] == 0 then
		if this_44 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling TextBox.setColor" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called TextBox.setColor on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call TextBox_setColor(this_44, c_red, c_green, c_blue)
endfunction

function TextBox_setText takes integer this_44, string s, player p returns nothing
	if GetLocalPlayer() == p then
		set TextBox_content[this_44] = s
	endif
endfunction

function dispatch_TextBox_setText takes integer this_44, string s, player p, string wurstStackTrace returns nothing
	if Widget_typeId[this_44] == 0 then
		if this_44 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling TextBox.setText" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called TextBox.setText on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call TextBox_setText(this_44, s, p)
endfunction

function alloc_Button takes nothing returns integer
	local integer this_44
	if Widget_firstFree == 0 then
		set Widget_maxIndex = Widget_maxIndex + 1
		set this_44 = Widget_maxIndex
	else
		set Widget_firstFree = Widget_firstFree - 1
		set this_44 = Widget_nextFree[Widget_firstFree]
	endif
	set Widget_typeId[this_44] = 810
	return this_44
endfunction

function construct_Widget takes integer this_44, integer pos_x, integer pos_y, integer size_x, integer size_y returns nothing
	local integer tempIndex = this_44
	local integer tempIndex_2
	set Widget_pos[tempIndex] = pos_x
	set Widget_pos_2[tempIndex] = pos_y
	set tempIndex_2 = this_44
	set Widget_size[tempIndex_2] = size_x
	set Widget_size_2[tempIndex_2] = size_y
endfunction

function construct_Observable takes integer this_44, integer w_2 returns nothing
	local integer temp = this_44
	local integer tempIndex = w_2
	local integer temp_2 = Widget_pos[tempIndex]
	local integer temp_3 = Widget_pos_2[tempIndex]
	local integer tempIndex_2 = w_2
	call construct_Widget(temp, temp_2, temp_3, Widget_size[tempIndex_2], Widget_size_2[tempIndex_2])
	set Observable_click[this_44] = 0
	set Observable_dClick[this_44] = 0
	set Observable_track[this_44] = 0
	set Observable_unTrack[this_44] = 0
	set Observable_playClickAnimation[this_44] = true
	set Observable_playDoubleClickAnimation[this_44] = true
	set Observable_playHoverAnimation[this_44] = true
	set Observable_content[this_44] = w_2
endfunction

function TextSplat_setMaxWidth takes integer this_44, real maxWidth returns nothing
	local integer temp = this_44
	local integer tempIndex = this_44
	local real temp_tempTupleSelectionResult_1 = TextSplat_pos[tempIndex]
	local real temp_tempTupleSelectionResult_2 = TextSplat_pos_2[tempIndex]
	local real tempTupleSelectionResult_1 = temp_tempTupleSelectionResult_1
	set TextSplat_maxWidth[temp] = tempTupleSelectionResult_1 + maxWidth
endfunction

function dispatch_TextSplat_setMaxWidth takes integer this_44, real maxWidth, string wurstStackTrace returns nothing
	if TextSplat_typeId[this_44] == 0 then
		if this_44 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling TextSplat.setMaxWidth" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called TextSplat.setMaxWidth on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call TextSplat_setMaxWidth(this_44, maxWidth)
endfunction

function element_toVec takes integer this_x, integer this_y returns real
	set element_toVec_return_x = this_x * Setup_tileSize * 1.
	set element_toVec_return_y = this_y * Setup_tileSize * 1.
	return element_toVec_return_x
endfunction

function alloc_ImageEx takes nothing returns integer
	local integer this_44
	if Widget_firstFree == 0 then
		set Widget_maxIndex = Widget_maxIndex + 1
		set this_44 = Widget_maxIndex
	else
		set Widget_firstFree = Widget_firstFree - 1
		set this_44 = Widget_nextFree[Widget_firstFree]
	endif
	set Widget_typeId[this_44] = 795
	return this_44
endfunction

function createImage takes string path, real pos_x, real pos_y, real sizeX, real sizeY, integer layer returns image
	local image temp = CreateImage(path, sizeX, sizeY, 0., pos_x, pos_y, 0., sizeX / 2., sizeY / 2., 0., layer + 1)
	set createImagetempReturn_2 = temp
	set temp = null
	return createImagetempReturn_2
endfunction

function construct_ImageEx takes integer this_44, integer pos_x, integer pos_y, real posOffset_x, real posOffset_y, integer size_x, integer size_y, real sizeFix_x, real sizeFix_y, string filePath, integer layer returns nothing
	call construct_Widget(this_44, pos_x, pos_y, size_x, size_y)
	set ImageEx_content[this_44] = createImage(filePath, vec2_op_plus(vec2_op_plus(element_toVec(pos_x, pos_y), element_toVec_return_y, Setup_menuStart_x, Setup_menuStart_y), vec2_op_plus_return_y, posOffset_x, posOffset_y), vec2_op_plus_return_y, size_x * Setup_tileSize + sizeFix_x, size_y * Setup_tileSize + sizeFix_y, layer)
endfunction

function new_ImageEx takes integer pos_x, integer pos_y, real posOffset_x, real posOffset_y, integer size_x, integer size_y, real sizeFix_x, real sizeFix_y, string filePath, integer layer returns integer
	local integer this_44 = alloc_ImageEx()
	call construct_ImageEx(this_44, pos_x, pos_y, posOffset_x, posOffset_y, size_x, size_y, sizeFix_x, sizeFix_y, filePath, layer)
	return this_44
endfunction

function alloc_TextSplat takes nothing returns integer
	local integer this_44
	if TextSplat_firstFree == 0 then
		set TextSplat_maxIndex = TextSplat_maxIndex + 1
		set this_44 = TextSplat_maxIndex
	else
		set TextSplat_firstFree = TextSplat_firstFree - 1
		set this_44 = TextSplat_nextFree[TextSplat_firstFree]
	endif
	set TextSplat_typeId[this_44] = 778
	return this_44
endfunction

function alloc_ImageList takes nothing returns integer
	local integer this_44
	if ImageList_firstFree == 0 then
		set ImageList_maxIndex = ImageList_maxIndex + 1
		set this_44 = ImageList_maxIndex
	else
		set ImageList_firstFree = ImageList_firstFree - 1
		set this_44 = ImageList_nextFree[ImageList_firstFree]
	endif
	set ImageList_typeId[this_44] = 780
	return this_44
endfunction

function construct_ImageList takes integer this_44 returns nothing
	set ImageList_last[this_44] = 0
endfunction

function new_ImageList takes nothing returns integer
	local integer this_44 = alloc_ImageList()
	call construct_ImageList(this_44)
	return this_44
endfunction

function construct_TextSplat takes integer this_44, real pos_x, real pos_y, real fontSize, integer l returns nothing
	local integer tempIndex = this_44
	local integer tempIndex_2
	local integer tempIndex_3
	set TextSplat_pos[tempIndex] = pos_x
	set TextSplat_pos_2[tempIndex] = pos_y
	set TextSplat_fontSize[this_44] = fontSize
	set TextSplat_images[this_44] = new_ImageList()
	set TextSplat_layer[this_44] = l
	set TextSplat_maxWidth[this_44] = TextSplat_DISABLE_MAX_WIDTH
	set tempIndex_2 = this_44
	set TextSplat_cursor[tempIndex_2] = pos_x
	set TextSplat_cursor_2[tempIndex_2] = pos_y - fontSize
	set tempIndex_3 = this_44
	set TextSplat_dimensions[tempIndex_3] = pos_x
	set TextSplat_dimensions_2[tempIndex_3] = pos_y
endfunction

function new_TextSplat takes real pos_x, real pos_y, real fontSize, integer l returns integer
	local integer this_44 = alloc_TextSplat()
	call construct_TextSplat(this_44, pos_x, pos_y, fontSize, l)
	return this_44
endfunction

function construct_Button takes integer this_44, integer pos_x, integer pos_y, integer scale, integer l, string name, string wurstStackTrace returns nothing
	local real textsize
	local real vecSize_x
	local real vecSize_y
	local integer receiver
	local integer tempIndex
	local real temp_vecSize_x
	local real temp_vecSize_y
	call construct_Observable(this_44, new_ImageEx(pos_x, pos_y, Button_posFix_x, Button_posFix_y, scale * 4, scale, Button_sizeFix_x, Button_sizeFix_y, Button_buttonTexture, l))
	set Button_name[this_44] = name
	set textsize = 32. + scale * 20
	set tempIndex = this_44
	set temp_vecSize_x = element_toVec(Widget_size[tempIndex], Widget_size_2[tempIndex])
	set temp_vecSize_y = element_toVec_return_y
	set vecSize_x = temp_vecSize_x
	set vecSize_y = temp_vecSize_y
	set receiver = new_TextSplat(vec2_op_plus(vec2_op_plus(element_toVec(pos_x, pos_y), element_toVec_return_y, vecSize_x / 4. - string_length(name) * (textsize / 2.), vecSize_y / 2.), vec2_op_plus_return_y, Setup_menuStart_x, Setup_menuStart_y), vec2_op_plus_return_y, textsize, l)
	call dispatch_TextSplat_setMaxWidth(receiver, 1000., "\n   Button, line 22" + wurstStackTrace)
	set Button_splat[this_44] = receiver
endfunction

function new_Button takes integer pos_x, integer pos_y, integer scale, integer l, string name, string wurstStackTrace returns integer
	local integer this_44 = alloc_Button()
	call construct_Button(this_44, pos_x, pos_y, scale, l, name, "\n   Button, line 17" + wurstStackTrace)
	return this_44
endfunction

function alloc_Icon takes nothing returns integer
	local integer this_44
	if Widget_firstFree == 0 then
		set Widget_maxIndex = Widget_maxIndex + 1
		set this_44 = Widget_maxIndex
	else
		set Widget_firstFree = Widget_firstFree - 1
		set this_44 = Widget_nextFree[Widget_firstFree]
	endif
	set Widget_typeId[this_44] = 809
	return this_44
endfunction

function getIconType takes string name, string wurstStackTrace returns integer
	local integer i = dispatch_HashMap_get(IconType_iconMap1, StringHash(name), "\n   IconType, line 1116" + wurstStackTrace)
	local integer i2 = dispatch_HashMap_get(IconType_iconMap2, StringHash(name), "\n   IconType, line 1117" + wurstStackTrace)
	set getIconType_return_normalId = i
	set getIconType_return_diableId = i2
	return getIconType_return_normalId
endfunction

function construct_Icon takes integer this_44, string name, integer pos_x, integer pos_y, integer scale, string wurstStackTrace returns nothing
	local integer tempIndex
	local integer tempIndex_2
	local integer tempIndex_3
	local integer tempIndex_4
	local integer temp
	call construct_Widget(this_44, pos_x, pos_y, scale, scale)
	set tempIndex = this_44
	set Icon_realPos[tempIndex] = vec2_op_plus(element_toVec(pos_x, pos_y), element_toVec_return_y, Setup_menuStart_x, Setup_menuStart_y)
	set Icon_realPos_2[tempIndex] = vec2_op_plus_return_y
	set tempIndex_2 = this_44
	set temp = tempIndex_2
	set tempIndex_3 = this_44
	set Icon_realPos[temp] = vec2_op_plus(Icon_realPos[tempIndex_3], Icon_realPos_2[tempIndex_3], (scale - 1) * 0.5, (scale - 1) * 0.5)
	set Icon_realPos_2[tempIndex_2] = vec2_op_plus_return_y
	set tempIndex_4 = this_44
	set Icon_typ[tempIndex_4] = getIconType(name, "\n   Icon, line 25" + wurstStackTrace)
	set Icon_typ_2[tempIndex_4] = getIconType_return_diableId
	set Icon_scale[this_44] = scale
endfunction

function new_Icon takes string name, integer pos_x, integer pos_y, integer scale, string wurstStackTrace returns integer
	local integer this_44 = alloc_Icon()
	call construct_Icon(this_44, name, pos_x, pos_y, scale, "\n   Icon, line 21" + wurstStackTrace)
	return this_44
endfunction

function alloc_Observable takes nothing returns integer
	local integer this_44
	if Widget_firstFree == 0 then
		set Widget_maxIndex = Widget_maxIndex + 1
		set this_44 = Widget_maxIndex
	else
		set Widget_firstFree = Widget_firstFree - 1
		set this_44 = Widget_nextFree[Widget_firstFree]
	endif
	set Widget_typeId[this_44] = 786
	return this_44
endfunction

function new_Observable takes integer w_2 returns integer
	local integer this_44 = alloc_Observable()
	call construct_Observable(this_44, w_2)
	return this_44
endfunction

function alloc_Pane takes nothing returns integer
	local integer this_44
	if Widget_firstFree == 0 then
		set Widget_maxIndex = Widget_maxIndex + 1
		set this_44 = Widget_maxIndex
	else
		set Widget_firstFree = Widget_firstFree - 1
		set this_44 = Widget_nextFree[Widget_firstFree]
	endif
	set Widget_typeId[this_44] = 799
	return this_44
endfunction

function alloc_Closure_6 takes nothing returns integer
	local integer this_44
	if PlayerAction_firstFree == 0 then
		set PlayerAction_maxIndex = PlayerAction_maxIndex + 1
		set this_44 = PlayerAction_maxIndex
	else
		set PlayerAction_firstFree = PlayerAction_firstFree - 1
		set this_44 = PlayerAction_nextFree[PlayerAction_firstFree]
	endif
	set PlayerAction_typeId[this_44] = 800
	return this_44
endfunction

function createImage_2 takes string filePath, integer pos_x, integer pos_y, integer size_x, integer size_y, real sizeFix_x, real sizeFix_y, integer layer returns image
	return createImage(filePath, vec2_op_plus(element_toVec(pos_x, pos_y), element_toVec_return_y, Setup_menuStart_x, Setup_menuStart_y), vec2_op_plus_return_y, size_x * Setup_tileSize + sizeFix_x, size_y * Setup_tileSize + sizeFix_y, layer)
endfunction

function createImage_3 takes string filePath, integer pos_x, integer pos_y, real posOffset_x, real posOffset_y, integer size_x, integer size_y, real sizeFix_x, real sizeFix_y, integer layer returns image
	return createImage(filePath, vec2_op_plus(vec2_op_plus(element_toVec(pos_x, pos_y), element_toVec_return_y, Setup_menuStart_x, Setup_menuStart_y), vec2_op_plus_return_y, posOffset_x, posOffset_y), vec2_op_plus_return_y, size_x * Setup_tileSize + sizeFix_x, size_y * Setup_tileSize + sizeFix_y, layer)
endfunction

function alloc_ListImage takes nothing returns integer
	local integer this_44
	if ListImage_firstFree == 0 then
		set ListImage_maxIndex = ListImage_maxIndex + 1
		set this_44 = ListImage_maxIndex
	else
		set ListImage_firstFree = ListImage_firstFree - 1
		set this_44 = ListImage_nextFree[ListImage_firstFree]
	endif
	return this_44
endfunction

function construct_ListImage takes integer this_44, image img returns nothing
	set ListImage_img[this_44] = img
endfunction

function new_ListImage takes image img returns integer
	local integer this_44 = alloc_ListImage()
	call construct_ListImage(this_44, img)
	return this_44
endfunction

function ImageList_add_2 takes integer this_44, image img returns nothing
	local integer temp
	if ImageList_first[this_44] == 0 then
		set ImageList_first[this_44] = new_ListImage(img)
		set ImageList_last_2[this_44] = ImageList_first[this_44]
	else
		set temp = new_ListImage(img)
		set ListImage_next[ImageList_last_2[this_44]] = temp
		set ImageList_last_2[this_44] = temp
	endif
endfunction

function dispatch_ImageList_add_2 takes integer this_44, image img, string wurstStackTrace returns nothing
	if ImageList_typeId_2[this_44] == 0 then
		if this_44 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling ImageList.add" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called ImageList.add on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call ImageList_add_2(this_44, img)
endfunction

function construct_ImageEx_2 takes integer this_44, integer pos_x, integer pos_y, integer size_x, integer size_y, real sizeFix_x, real sizeFix_y, string filePath, integer layer returns nothing
	call construct_Widget(this_44, pos_x, pos_y, size_x, size_y)
	set ImageEx_content[this_44] = createImage(filePath, vec2_op_plus(element_toVec(pos_x, pos_y), element_toVec_return_y, Setup_menuStart_x, Setup_menuStart_y), vec2_op_plus_return_y, size_x * Setup_tileSize + sizeFix_x, size_y * Setup_tileSize + sizeFix_y, layer)
endfunction

function new_ImageEx_2 takes integer pos_x, integer pos_y, integer size_x, integer size_y, real sizeFix_x, real sizeFix_y, string filePath, integer layer returns integer
	local integer this_44 = alloc_ImageEx()
	call construct_ImageEx_2(this_44, pos_x, pos_y, size_x, size_y, sizeFix_x, sizeFix_y, filePath, layer)
	return this_44
endfunction

function alloc_ImageList_2 takes nothing returns integer
	local integer this_44
	if ImageList_firstFree_2 == 0 then
		set ImageList_maxIndex_2 = ImageList_maxIndex_2 + 1
		set this_44 = ImageList_maxIndex_2
	else
		set ImageList_firstFree_2 = ImageList_firstFree_2 - 1
		set this_44 = ImageList_nextFree_2[ImageList_firstFree_2]
	endif
	set ImageList_typeId_2[this_44] = 796
	return this_44
endfunction

function construct_ImageList_2 takes integer this_44 returns nothing
	set ImageList_first[this_44] = 0
	set ImageList_last_2[this_44] = 0
endfunction

function new_ImageList_2 takes nothing returns integer
	local integer this_44 = alloc_ImageList_2()
	call construct_ImageList_2(this_44)
	return this_44
endfunction

function alloc_LinkedList takes nothing returns integer
	local integer this_44
	if LinkedList_firstFree == 0 then
		set LinkedList_maxIndex = LinkedList_maxIndex + 1
		set this_44 = LinkedList_maxIndex
	else
		set LinkedList_firstFree = LinkedList_firstFree - 1
		set this_44 = LinkedList_nextFree[LinkedList_firstFree]
	endif
	set LinkedList_typeId[this_44] = 1
	return this_44
endfunction

function construct_LinkedList takes integer this_44 returns nothing
	set LinkedList_size[this_44] = 0
	set LinkedList_dummy[this_44] = new_LLEntry(0, 0, 0)
	set LLEntry_next[LinkedList_dummy[this_44]] = LinkedList_dummy[this_44]
	set LLEntry_prev[LinkedList_dummy[this_44]] = LinkedList_dummy[this_44]
endfunction

function new_LinkedList takes nothing returns integer
	local integer this_44 = alloc_LinkedList()
	call construct_LinkedList(this_44)
	return this_44
endfunction

function construct_Pane takes integer this_44, integer pos_x, integer pos_y, integer size_x, integer size_y, integer l, boolean exitable, string wurstStackTrace returns nothing
	local integer i
	local integer temp
	local integer temp_2
	local integer i_2
	local integer temp_3
	local integer temp_4
	local integer clVar
	local integer receiver
	local integer temp_5
	local integer temp_6
	call construct_Widget(this_44, pos_x, pos_y, size_x, size_y)
	set Pane_onExit[this_44] = 0
	set Pane_list[this_44] = new_ImageList_2()
	set Pane_content[this_44] = new_LinkedList()
	call dispatch_ImageList_add_2(Pane_list[this_44], createImage_2(Pane_leftBotCorner, pos_x, pos_y, Pane_tileDimensions_x, Pane_tileDimensions_y, Pane_sizeFix_x, Pane_sizeFix_y, l), "\n   Pane, line 32" + wurstStackTrace)
	call dispatch_ImageList_add_2(Pane_list[this_44], createImage_2(Pane_leftTopCorner, element_op_plus(pos_x, pos_y, 0, size_y), element_op_plus_return_y, Pane_tileDimensions_x, Pane_tileDimensions_y, Pane_sizeFix_x, Pane_sizeFix_y, l), "\n   Pane, line 33" + wurstStackTrace)
	call dispatch_ImageList_add_2(Pane_list[this_44], createImage_2(Pane_rightBotCorner, element_op_plus(pos_x, pos_y, size_x, 0), element_op_plus_return_y, Pane_tileDimensions_x, Pane_tileDimensions_y, Pane_sizeFix_x, Pane_sizeFix_y, l), "\n   Pane, line 34" + wurstStackTrace)
	call dispatch_ImageList_add_2(Pane_list[this_44], createImage_2(Pane_rightTopCorner, element_op_plus(pos_x, pos_y, size_x, size_y), element_op_plus_return_y, Pane_tileDimensions_x, Pane_tileDimensions_y, Pane_sizeFix_x, Pane_sizeFix_y, l), "\n   Pane, line 35" + wurstStackTrace)
	set i = pos_x + Pane_tileSize
	set temp = pos_x + size_x - Pane_tileSize
	set temp_2 = Pane_tileSize
	loop
		exitwhen i > temp
		call dispatch_ImageList_add_2(Pane_list[this_44], createImage_3(Pane_horizontalSide, i, pos_y, Pane_posFixBot_x, Pane_posFixBot_y, Pane_tileDimensions_x, Pane_tileDimensions_y, Pane_sizeFix_x, Pane_sizeFix_y, l), "\n   Pane, line 37" + wurstStackTrace)
		call dispatch_ImageList_add_2(Pane_list[this_44], createImage_3(Pane_horizontalSide, i, pos_y + size_y, Pane_posFixTop_x, Pane_posFixTop_y, Pane_tileDimensions_x, Pane_tileDimensions_y, Pane_sizeFix_x, Pane_sizeFix_y, l), "\n   Pane, line 38" + wurstStackTrace)
		set i = i + temp_2
	endloop
	set i_2 = pos_y + Pane_tileSize
	set temp_3 = pos_y + size_y - Pane_tileSize
	set temp_4 = Pane_tileSize
	loop
		exitwhen i_2 > temp_3
		call dispatch_ImageList_add_2(Pane_list[this_44], createImage_3(Pane_verticalSide, pos_x, i_2, Pane_posFixLeft_x, Pane_posFixLeft_y, Pane_tileDimensions_x, Pane_tileDimensions_y, Pane_sizeFix_x, Pane_sizeFix_y, l), "\n   Pane, line 40" + wurstStackTrace)
		call dispatch_ImageList_add_2(Pane_list[this_44], createImage_3(Pane_verticalSide, pos_x + size_x, i_2, Pane_posFixRight_x, Pane_posFixRight_y, Pane_tileDimensions_x, Pane_tileDimensions_y, Pane_sizeFix_x, Pane_sizeFix_y, l), "\n   Pane, line 41" + wurstStackTrace)
		set i_2 = i_2 + temp_4
	endloop
	if exitable then
		set temp_6 = Pane_content[this_44]
		set receiver = new_Observable(new_ImageEx_2(element_op_minus(element_op_plus(pos_x, pos_y, size_x, size_y), element_op_plus_return_y, 1, 1), element_op_minus_return_y, 1, 1, 20., 20., "menuExit.blp", l))
		set temp_5 = receiver
		set clVar = alloc_Closure_6()
		set this_42[clVar] = this_44
		call dispatch_Observable_setClickAction(temp_5, clVar, "\n   Pane, line 43" + wurstStackTrace)
		call dispatch_LinkedList_add(temp_6, receiver, "\n   Pane, line 43" + wurstStackTrace)
	endif
endfunction

function new_Pane takes integer pos_x, integer pos_y, integer size_x, integer size_y, integer l, boolean exitable, string wurstStackTrace returns integer
	local integer this_44 = alloc_Pane()
	call construct_Pane(this_44, pos_x, pos_y, size_x, size_y, l, exitable, "\n   Pane, line 30" + wurstStackTrace)
	return this_44
endfunction

function alloc_Closure_7 takes nothing returns integer
	local integer this_44
	if PlayerAction_firstFree == 0 then
		set PlayerAction_maxIndex = PlayerAction_maxIndex + 1
		set this_44 = PlayerAction_maxIndex
	else
		set PlayerAction_firstFree = PlayerAction_firstFree - 1
		set this_44 = PlayerAction_nextFree[PlayerAction_firstFree]
	endif
	set PlayerAction_typeId[this_44] = 801
	return this_44
endfunction

function vec2_op_mult takes real this_x, real this_y, real factor returns real
	set vec2_op_mult_return_x = this_x * factor
	set vec2_op_mult_return_y = this_y * factor
	return vec2_op_mult_return_x
endfunction

function real_toString takes real this_44 returns string
	return R2S(this_44)
endfunction

function vec2_toString takes real this_x, real this_y returns string
	return "Vector2 [ " + real_toString(this_x) + ", " + real_toString(this_y) + " ]"
endfunction

function construct_Pane_2 takes integer this_44, integer pos_x, integer pos_y, integer size_x, integer size_y, integer l, integer backgroundScale, boolean exitable, string wurstStackTrace returns nothing
	local real backgroundOffset_x
	local real backgroundOffset_y
	local real backgroundSizeFix_x
	local real backgroundSizeFix_y
	local integer i
	local integer temp
	local integer temp_2
	local integer i2
	local integer temp_3
	local integer temp_4
	local integer i_2
	local integer temp_5
	local integer temp_6
	local integer i_3
	local integer temp_7
	local integer temp_8
	local integer clVar
	local integer receiver
	local real temp_backgroundOffset_x
	local real temp_backgroundOffset_y
	local real temp_backgroundSizeFix_x
	local real temp_backgroundSizeFix_y
	local integer temp_9
	local integer temp_10
	call construct_Widget(this_44, pos_x, pos_y, size_x, size_y)
	set Pane_onExit[this_44] = 0
	set Pane_list[this_44] = new_ImageList_2()
	set Pane_content[this_44] = new_LinkedList()
	set temp_backgroundOffset_x = element_toVec(backgroundScale, backgroundScale)
	set temp_backgroundOffset_y = element_toVec_return_y
	set backgroundOffset_x = temp_backgroundOffset_x
	set backgroundOffset_y = temp_backgroundOffset_y
	set backgroundOffset_x = backgroundOffset_x / 2.
	set backgroundOffset_y = backgroundOffset_y / 2.
	set temp_backgroundSizeFix_x = vec2_op_mult(element_toVec(backgroundScale, backgroundScale), element_toVec_return_y, 0.01)
	set temp_backgroundSizeFix_y = vec2_op_mult_return_y
	set backgroundSizeFix_x = temp_backgroundSizeFix_x
	set backgroundSizeFix_y = temp_backgroundSizeFix_y
	set i = pos_x
	set temp = pos_x + size_x - backgroundScale
	set temp_2 = backgroundScale
	loop
		exitwhen i > temp
		set i2 = pos_y
		set temp_3 = pos_y + size_y - backgroundScale
		set temp_4 = backgroundScale
		loop
			exitwhen i2 > temp_3
			call dispatch_ImageList_add_2(Pane_list[this_44], createImage_3(Widget_backgroundTexture[GetRandomInt(1, 8)], i, i2, backgroundOffset_x, backgroundOffset_y, backgroundScale, backgroundScale, backgroundSizeFix_x, backgroundSizeFix_y, l), "\n   Pane, line 57" + wurstStackTrace)
			set i2 = i2 + temp_4
		endloop
		set i = i + temp_2
	endloop
	call dispatch_ImageList_add_2(Pane_list[this_44], createImage_2(Pane_leftBotCorner, pos_x, pos_y, Pane_tileDimensions_x, Pane_tileDimensions_y, Pane_sizeFix_x, Pane_sizeFix_y, l), "\n   Pane, line 58" + wurstStackTrace)
	call dispatch_ImageList_add_2(Pane_list[this_44], createImage_2(Pane_leftTopCorner, element_op_plus(pos_x, pos_y, 0, size_y), element_op_plus_return_y, Pane_tileDimensions_x, Pane_tileDimensions_y, Pane_sizeFix_x, Pane_sizeFix_y, l), "\n   Pane, line 59" + wurstStackTrace)
	call dispatch_ImageList_add_2(Pane_list[this_44], createImage_2(Pane_rightBotCorner, element_op_plus(pos_x, pos_y, size_x, 0), element_op_plus_return_y, Pane_tileDimensions_x, Pane_tileDimensions_y, Pane_sizeFix_x, Pane_sizeFix_y, l), "\n   Pane, line 60" + wurstStackTrace)
	call dispatch_ImageList_add_2(Pane_list[this_44], createImage_2(Pane_rightTopCorner, element_op_plus(pos_x, pos_y, size_x, size_y), element_op_plus_return_y, Pane_tileDimensions_x, Pane_tileDimensions_y, Pane_sizeFix_x, Pane_sizeFix_y, l), "\n   Pane, line 61" + wurstStackTrace)
	set i_2 = pos_x + Pane_tileSize
	set temp_5 = pos_x + size_x - Pane_tileSize
	set temp_6 = Pane_tileSize
	loop
		exitwhen i_2 > temp_5
		call dispatch_ImageList_add_2(Pane_list[this_44], createImage_3(Pane_horizontalSide, i_2, pos_y, Pane_posFixBot_x, Pane_posFixBot_y, Pane_tileDimensions_x, Pane_tileDimensions_y, Pane_sizeFix_x, Pane_sizeFix_y, l), "\n   Pane, line 63" + wurstStackTrace)
		call dispatch_ImageList_add_2(Pane_list[this_44], createImage_3(Pane_horizontalSide, i_2, pos_y + size_y, Pane_posFixTop_x, Pane_posFixTop_y, Pane_tileDimensions_x, Pane_tileDimensions_y, Pane_sizeFix_x, Pane_sizeFix_y, l), "\n   Pane, line 64" + wurstStackTrace)
		call print(vec2_toString(element_toVec(i_2, pos_y), element_toVec_return_y))
		set i_2 = i_2 + temp_6
	endloop
	set i_3 = pos_y + Pane_tileSize
	set temp_7 = pos_y + size_y - Pane_tileSize
	set temp_8 = Pane_tileSize
	loop
		exitwhen i_3 > temp_7
		call dispatch_ImageList_add_2(Pane_list[this_44], createImage_3(Pane_verticalSide, pos_x, i_3, Pane_posFixLeft_x, Pane_posFixLeft_y, Pane_tileDimensions_x, Pane_tileDimensions_y, Pane_sizeFix_x, Pane_sizeFix_y, l), "\n   Pane, line 67" + wurstStackTrace)
		call dispatch_ImageList_add_2(Pane_list[this_44], createImage_3(Pane_verticalSide, pos_x + size_x, i_3, Pane_posFixRight_x, Pane_posFixRight_y, Pane_tileDimensions_x, Pane_tileDimensions_y, Pane_sizeFix_x, Pane_sizeFix_y, l), "\n   Pane, line 68" + wurstStackTrace)
		set i_3 = i_3 + temp_8
	endloop
	if exitable then
		set temp_10 = Pane_content[this_44]
		set receiver = new_Observable(new_ImageEx_2(element_op_minus(element_op_plus(pos_x, pos_y, size_x, size_y), element_op_plus_return_y, 1, 1), element_op_minus_return_y, 1, 1, 20., 20., "menuExit.blp", l))
		set temp_9 = receiver
		set clVar = alloc_Closure_7()
		set this_43[clVar] = this_44
		call dispatch_Observable_setClickAction(temp_9, clVar, "\n   Pane, line 70" + wurstStackTrace)
		call dispatch_LinkedList_add(temp_10, receiver, "\n   Pane, line 70" + wurstStackTrace)
	endif
endfunction

function new_Pane_2 takes integer pos_x, integer pos_y, integer size_x, integer size_y, integer l, integer backgroundScale, boolean exitable, string wurstStackTrace returns integer
	local integer this_44 = alloc_Pane()
	call construct_Pane_2(this_44, pos_x, pos_y, size_x, size_y, l, backgroundScale, exitable, "\n   Pane, line 49" + wurstStackTrace)
	return this_44
endfunction

function alloc_TextBox takes nothing returns integer
	local integer this_44
	if Widget_firstFree == 0 then
		set Widget_maxIndex = Widget_maxIndex + 1
		set this_44 = Widget_maxIndex
	else
		set Widget_firstFree = Widget_firstFree - 1
		set this_44 = Widget_nextFree[Widget_firstFree]
	endif
	set Widget_typeId[this_44] = 794
	return this_44
endfunction

function construct_TextBox takes integer this_44, integer pos_x, integer pos_y, integer size_x, integer size_y, real fontsize, integer l, string wurstStackTrace returns nothing
	local real posFix_x
	local real posFix_y
	local integer receiver
	local integer tempIndex
	local real tempTupleSelectionResult_2
	local real temp_tempTupleSelectionResult_1
	local real temp_tempTupleSelectionResult_2
	local real temp_posFix_x
	local real temp_posFix_y
	local real tempTupleSelectionResult_1
	local real temp_tempTupleSelectionResult_1_2
	local real temp_tempTupleSelectionResult_2_2
	local integer temp
	call construct_Widget(this_44, pos_x, pos_y, size_x, size_y)
	set TextBox_content[this_44] = ""
	set tempIndex = this_44
	set TextBox_col[tempIndex] = 0
	set TextBox_col_2[tempIndex] = 0
	set TextBox_col_3[tempIndex] = 0
	set temp_posFix_x = 30.
	set temp_tempTupleSelectionResult_1 = element_toVec(size_x, size_y)
	set temp_tempTupleSelectionResult_2 = element_toVec_return_y
	set tempTupleSelectionResult_2 = temp_tempTupleSelectionResult_2
	set temp_posFix_y = tempTupleSelectionResult_2 - 30.
	set posFix_x = temp_posFix_x
	set posFix_y = temp_posFix_y
	set receiver = new_TextSplat(vec2_op_plus(vec2_op_plus(element_toVec(pos_x, pos_y), element_toVec_return_y, posFix_x, posFix_y), vec2_op_plus_return_y, Setup_menuStart_x, Setup_menuStart_y), vec2_op_plus_return_y, fontsize, l)
	set temp = receiver
	set temp_tempTupleSelectionResult_1_2 = element_toVec(size_x, size_y)
	set temp_tempTupleSelectionResult_2_2 = element_toVec_return_y
	set tempTupleSelectionResult_1 = temp_tempTupleSelectionResult_1_2
	call dispatch_TextSplat_setMaxWidth(temp, tempTupleSelectionResult_1 - 60., "\n   TextBox, line 20" + wurstStackTrace)
	set TextBox_splat[this_44] = receiver
endfunction

function new_TextBox takes integer pos_x, integer pos_y, integer size_x, integer size_y, real fontsize, integer l, string wurstStackTrace returns integer
	local integer this_44 = alloc_TextBox()
	call construct_TextBox(this_44, pos_x, pos_y, size_x, size_y, fontsize, l, "\n   TextBox, line 16" + wurstStackTrace)
	return this_44
endfunction

function closure_impl_46 takes integer this_44, integer i, string wurstStackTrace returns real
	local real ret = 0.01
	local integer temp = i
	local integer clVar
	local integer clVar_2
	local integer clVar_3
	local integer clVar_4
	local integer temp_2
	local integer temp_3
	local integer temp_4
	local integer temp_5
	if temp == 0 then
		set shopB[this_44] = new_Button(2, 22, 1, 0, "Shop", "\n   GameStart, line 271" + wurstStackTrace)
		set scoreB[this_44] = new_Button(2, 20, 1, 0, "Score", "\n   GameStart, line 272" + wurstStackTrace)
		set guideB[this_44] = new_Button(2, 18, 1, 0, "Guide", "\n   GameStart, line 273" + wurstStackTrace)
		set exitB[this_44] = new_Button(2, 16, 1, 0, "Exit", "\n   GameStart, line 274" + wurstStackTrace)
		set buyB[this_44] = new_Button(34, 4, 1, 0, "Buy", "\n   GameStart, line 275" + wurstStackTrace)
	elseif temp == 1 then
		set shopPleft[this_44] = new_Pane(6, 6, 12, 16, 2, true, "\n   GameStart, line 277" + wurstStackTrace)
		set shopPmiddle[this_44] = new_Pane_2(20, 6, 8, 12, 1, 4, true, "\n   GameStart, line 278" + wurstStackTrace)
		set shopPright[this_44] = new_Pane_2(30, 6, 8, 8, 1, 4, false, "\n   GameStart, line 279" + wurstStackTrace)
		set shopPleftBot[this_44] = new_Pane_2(11, 1, 12, 2, 1, 2, true, "\n   GameStart, line 280" + wurstStackTrace)
		set shopPleftBot2[this_44] = new_Pane_2(6, 1, 4, 2, 1, 2, true, "\n   GameStart, line 281" + wurstStackTrace)
	elseif temp == 2 then
		set shopT1[this_44] = new_TextBox(5, 3, 4, 2, 55., 1, "\n   GameStart, line 283" + wurstStackTrace)
		call dispatch_TextBox_setColor(shopT1[this_44], 255, 255, 0, "\n   GameStart, line 284" + wurstStackTrace)
		call dispatch_TextBox_setText(shopT1[this_44], "Inventory", Player(0), "\n   GameStart, line 285" + wurstStackTrace)
		set shopT2[this_44] = new_TextBox(19, 18, 13, 2, 70., 1, "\n   GameStart, line 287" + wurstStackTrace)
		call dispatch_TextBox_setColor(shopT2[this_44], 255, 205, 155, "\n   GameStart, line 288" + wurstStackTrace)
		call dispatch_TextBox_setText(shopT2[this_44], "Ogre Glove", Player(0), "\n   GameStart, line 289" + wurstStackTrace)
		set shopT3[this_44] = new_TextBox(20, 17, 8, 1, 45., 1, "\n   GameStart, line 291" + wurstStackTrace)
		call dispatch_TextBox_setColor(shopT3[this_44], 255, 255, 100, "\n   GameStart, line 292" + wurstStackTrace)
		call dispatch_TextBox_setText(shopT3[this_44], "+ 1 Strength", Player(0), "\n   GameStart, line 293" + wurstStackTrace)
		set shopT4[this_44] = new_TextBox(20, 16, 8, 1, 45., 1, "\n   GameStart, line 295" + wurstStackTrace)
		call dispatch_TextBox_setColor(shopT4[this_44], 255, 255, 100, "\n   GameStart, line 296" + wurstStackTrace)
		call dispatch_TextBox_setText(shopT4[this_44], "+ 10% Attack Speed", Player(0), "\n   GameStart, line 297" + wurstStackTrace)
		set shopT5[this_44] = new_TextBox(20, 15, 8, 1, 45., 1, "\n   GameStart, line 299" + wurstStackTrace)
		call dispatch_TextBox_setColor(shopT5[this_44], 255, 255, 100, "\n   GameStart, line 300" + wurstStackTrace)
		call dispatch_TextBox_setText(shopT5[this_44], "+ 1 Armor", Player(0), "\n   GameStart, line 301" + wurstStackTrace)
		set shopT6[this_44] = new_TextBox(20, 14, 8, 1, 45., 1, "\n   GameStart, line 303" + wurstStackTrace)
		call dispatch_TextBox_setColor(shopT6[this_44], 255, 255, 100, "\n   GameStart, line 304" + wurstStackTrace)
		call dispatch_TextBox_setText(shopT6[this_44], "+ 20 Hit Points", Player(0), "\n   GameStart, line 305" + wurstStackTrace)
		set shopT7[this_44] = new_TextBox(20, 13, 8, 1, 40., 1, "\n   GameStart, line 307" + wurstStackTrace)
		call dispatch_TextBox_setColor(shopT7[this_44], 205, 255, 205, "\n   GameStart, line 308" + wurstStackTrace)
		call dispatch_TextBox_setText(shopT7[this_44], "Ogre Boulder: Throws a big ass rock boulder towards the target position. The first unit it hits gets damage and knocked back.", Player(0), "\n   GameStart, line 309" + wurstStackTrace)
		set shopT8[this_44] = new_TextBox(20, 10, 8, 1, 40., 1, "\n   GameStart, line 311" + wurstStackTrace)
		call dispatch_TextBox_setColor(shopT8[this_44], 205, 255, 205, "\n   GameStart, line 312" + wurstStackTrace)
		call dispatch_TextBox_setText(shopT8[this_44], "PointTarget/Damage=20+Spellpower/Knockback=30/Cooldown=20sec.", Player(0), "\n   GameStart, line 313" + wurstStackTrace)
	elseif temp == 3 then
		set shop1[this_44] = new_Icon("Glove", 7, 7, 2, "\n   GameStart, line 320" + wurstStackTrace)
		set shop2[this_44] = new_Icon("Impale", 7, 9, 2, "\n   GameStart, line 321" + wurstStackTrace)
		set shop3[this_44] = new_Icon("Glove", 7, 11, 2, "\n   GameStart, line 322" + wurstStackTrace)
		set shop4[this_44] = new_Icon("Glove", 7, 13, 2, "\n   GameStart, line 323" + wurstStackTrace)
		set shop5[this_44] = new_Icon("HealingSpray", 7, 15, 2, "\n   GameStart, line 324" + wurstStackTrace)
		set shop6[this_44] = new_Icon("Glove", 7, 17, 2, "\n   GameStart, line 325" + wurstStackTrace)
		set shop7[this_44] = new_Icon("Impale", 7, 19, 2, "\n   GameStart, line 326" + wurstStackTrace)
		set shop8[this_44] = new_Icon("Glove", 7, 21, 2, "\n   GameStart, line 327" + wurstStackTrace)
		set shop9[this_44] = new_Icon("Glove", 9, 21, 2, "\n   GameStart, line 328" + wurstStackTrace)
		set shop10[this_44] = new_Icon("Glove", 9, 7, 2, "\n   GameStart, line 329" + wurstStackTrace)
		set shop11[this_44] = new_Icon("Glove", 9, 9, 2, "\n   GameStart, line 330" + wurstStackTrace)
		set shop12[this_44] = new_Icon("HealingSpray", 9, 11, 2, "\n   GameStart, line 331" + wurstStackTrace)
		set shop13[this_44] = new_Icon("Glove", 9, 13, 2, "\n   GameStart, line 332" + wurstStackTrace)
		set shop14[this_44] = new_Icon("Glove", 9, 15, 2, "\n   GameStart, line 333" + wurstStackTrace)
		set shop15[this_44] = new_Icon("Glove", 9, 17, 2, "\n   GameStart, line 334" + wurstStackTrace)
		set shop16[this_44] = new_Icon("Glove", 9, 19, 2, "\n   GameStart, line 335" + wurstStackTrace)
		set shop17[this_44] = new_Icon("Glove", 11, 21, 2, "\n   GameStart, line 336" + wurstStackTrace)
		set shop18[this_44] = new_Icon("Impale", 11, 7, 2, "\n   GameStart, line 337" + wurstStackTrace)
		set shop19[this_44] = new_Icon("Glove", 11, 9, 2, "\n   GameStart, line 338" + wurstStackTrace)
		set shop20[this_44] = new_Icon("Glove", 11, 11, 2, "\n   GameStart, line 339" + wurstStackTrace)
		set shop21[this_44] = new_Icon("Glove", 11, 13, 2, "\n   GameStart, line 340" + wurstStackTrace)
		set shop22[this_44] = new_Icon("Glove", 11, 15, 2, "\n   GameStart, line 341" + wurstStackTrace)
		set shop23[this_44] = new_Icon("Glove", 11, 17, 2, "\n   GameStart, line 342" + wurstStackTrace)
		set shop24[this_44] = new_Icon("Glove", 11, 19, 2, "\n   GameStart, line 343" + wurstStackTrace)
		set shop25[this_44] = new_Icon("Glove", 13, 21, 2, "\n   GameStart, line 344" + wurstStackTrace)
		set shop26[this_44] = new_Icon("Glove", 13, 7, 2, "\n   GameStart, line 345" + wurstStackTrace)
		set shop27[this_44] = new_Icon("Impale", 13, 9, 2, "\n   GameStart, line 346" + wurstStackTrace)
		set shop28[this_44] = new_Icon("Glove", 13, 11, 2, "\n   GameStart, line 347" + wurstStackTrace)
		set shop29[this_44] = new_Icon("Glove", 13, 13, 2, "\n   GameStart, line 348" + wurstStackTrace)
		set shop30[this_44] = new_Icon("HealingSpray", 13, 15, 2, "\n   GameStart, line 349" + wurstStackTrace)
		set shop31[this_44] = new_Icon("Glove", 13, 17, 2, "\n   GameStart, line 350" + wurstStackTrace)
		set shop32[this_44] = new_Icon("Glove", 13, 19, 2, "\n   GameStart, line 351" + wurstStackTrace)
		set shop25a[this_44] = new_Icon("Glove", 15, 21, 2, "\n   GameStart, line 352" + wurstStackTrace)
		set shop26a[this_44] = new_Icon("Glove", 15, 7, 2, "\n   GameStart, line 353" + wurstStackTrace)
		set shop27a[this_44] = new_Icon("Impale", 15, 9, 2, "\n   GameStart, line 354" + wurstStackTrace)
		set shop28a[this_44] = new_Icon("Glove", 15, 11, 2, "\n   GameStart, line 355" + wurstStackTrace)
		set shop29a[this_44] = new_Icon("Glove", 15, 13, 2, "\n   GameStart, line 356" + wurstStackTrace)
		set shop30a[this_44] = new_Icon("Glove", 15, 15, 2, "\n   GameStart, line 357" + wurstStackTrace)
		set shop31a[this_44] = new_Icon("Glove", 15, 17, 2, "\n   GameStart, line 358" + wurstStackTrace)
		set shop32a[this_44] = new_Icon("HealingSpray", 15, 19, 2, "\n   GameStart, line 359" + wurstStackTrace)
		set shop33[this_44] = new_Icon("Glove", 12, 2, 2, "\n   GameStart, line 361" + wurstStackTrace)
		set shop34[this_44] = new_Icon("Glove", 14, 2, 2, "\n   GameStart, line 362" + wurstStackTrace)
		set shop35[this_44] = new_Icon("Glove", 16, 2, 2, "\n   GameStart, line 363" + wurstStackTrace)
		set shop36[this_44] = new_Icon("Glove", 18, 2, 2, "\n   GameStart, line 364" + wurstStackTrace)
		set shop37[this_44] = new_Icon("Glove", 20, 2, 2, "\n   GameStart, line 365" + wurstStackTrace)
		set shop38[this_44] = new_Icon("Glove", 22, 2, 2, "\n   GameStart, line 366" + wurstStackTrace)
		set shop39[this_44] = new_Icon("Glove", 7, 2, 2, "\n   GameStart, line 368" + wurstStackTrace)
		set shop40[this_44] = new_Icon("Glove", 9, 2, 2, "\n   GameStart, line 369" + wurstStackTrace)
		set shop41[this_44] = new_Icon("Glove", 34, 10, 3, "\n   GameStart, line 371" + wurstStackTrace)
		set shop42[this_44] = new_Icon("Glove", 31, 13, 1, "\n   GameStart, line 372" + wurstStackTrace)
		set shop43[this_44] = new_Icon("Glove", 34, 13, 1, "\n   GameStart, line 373" + wurstStackTrace)
		set shop44[this_44] = new_Icon("Glove", 37, 13, 1, "\n   GameStart, line 374" + wurstStackTrace)
		set shop45[this_44] = new_Icon("Glove", 31, 7, 1, "\n   GameStart, line 375" + wurstStackTrace)
		set shop46[this_44] = new_Icon("Glove", 34, 7, 1, "\n   GameStart, line 376" + wurstStackTrace)
		set shop47[this_44] = new_Icon("HealingSpray", 37, 7, 1, "\n   GameStart, line 377" + wurstStackTrace)
	elseif temp == 4 then
		set shopOb[this_44] = new_Observable(shopB[this_44])
		set temp_2 = shopOb[this_44]
		set clVar = alloc_Closure_5()
		call dispatch_Observable_setClickAction(temp_2, clVar, "\n   GameStart, line 380" + wurstStackTrace)
		set scoreOb[this_44] = new_Observable(scoreB[this_44])
		set temp_3 = scoreOb[this_44]
		set clVar_2 = alloc_Closure_2()
		call dispatch_Observable_setClickAction(temp_3, clVar_2, "\n   GameStart, line 386" + wurstStackTrace)
		set guideOb[this_44] = new_Observable(guideB[this_44])
		set temp_4 = guideOb[this_44]
		set clVar_3 = alloc_Closure_3()
		call dispatch_Observable_setClickAction(temp_4, clVar_3, "\n   GameStart, line 392" + wurstStackTrace)
		set exitOb[this_44] = new_Observable(exitB[this_44])
		set temp_5 = exitOb[this_44]
		set clVar_4 = alloc_Closure_4()
		call dispatch_Observable_setClickAction(temp_5, clVar_4, "\n   GameStart, line 398" + wurstStackTrace)
	elseif temp == 5 then
		call cyc_dispatch_Window_add(0, GameStart_shopWindow, shopOb[this_44], "\n   GameStart, line 403" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_shopWindow, scoreOb[this_44], "\n   GameStart, line 404" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_shopWindow, guideOb[this_44], "\n   GameStart, line 405" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_shopWindow, exitOb[this_44], "\n   GameStart, line 406" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_shopWindow, buyB[this_44], "\n   GameStart, line 408" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_shopWindow, shopPright[this_44], "\n   GameStart, line 410" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_shopWindow, shopPmiddle[this_44], "\n   GameStart, line 411" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_shopWindow, shopPleft[this_44], "\n   GameStart, line 412" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_shopWindow, shopPleftBot[this_44], "\n   GameStart, line 413" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_shopWindow, shopPleftBot2[this_44], "\n   GameStart, line 414" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_shopWindow, shop1[this_44], "\n   GameStart, line 416" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_shopWindow, shop2[this_44], "\n   GameStart, line 417" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_shopWindow, shop3[this_44], "\n   GameStart, line 418" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_shopWindow, shop4[this_44], "\n   GameStart, line 419" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_shopWindow, shop5[this_44], "\n   GameStart, line 420" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_shopWindow, shop6[this_44], "\n   GameStart, line 421" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_shopWindow, shop7[this_44], "\n   GameStart, line 422" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_shopWindow, shop8[this_44], "\n   GameStart, line 423" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_shopWindow, shop9[this_44], "\n   GameStart, line 424" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_shopWindow, shop10[this_44], "\n   GameStart, line 425" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_shopWindow, shop11[this_44], "\n   GameStart, line 426" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_shopWindow, shop12[this_44], "\n   GameStart, line 427" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_shopWindow, shop13[this_44], "\n   GameStart, line 428" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_shopWindow, shop14[this_44], "\n   GameStart, line 429" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_shopWindow, shop15[this_44], "\n   GameStart, line 430" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_shopWindow, shop16[this_44], "\n   GameStart, line 431" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_shopWindow, shop17[this_44], "\n   GameStart, line 432" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_shopWindow, shop18[this_44], "\n   GameStart, line 433" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_shopWindow, shop19[this_44], "\n   GameStart, line 434" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_shopWindow, shop20[this_44], "\n   GameStart, line 435" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_shopWindow, shop21[this_44], "\n   GameStart, line 436" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_shopWindow, shop22[this_44], "\n   GameStart, line 437" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_shopWindow, shop23[this_44], "\n   GameStart, line 438" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_shopWindow, shop24[this_44], "\n   GameStart, line 439" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_shopWindow, shop25[this_44], "\n   GameStart, line 440" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_shopWindow, shop26[this_44], "\n   GameStart, line 441" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_shopWindow, shop27[this_44], "\n   GameStart, line 442" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_shopWindow, shop28[this_44], "\n   GameStart, line 443" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_shopWindow, shop29[this_44], "\n   GameStart, line 444" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_shopWindow, shop30[this_44], "\n   GameStart, line 445" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_shopWindow, shop31[this_44], "\n   GameStart, line 446" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_shopWindow, shop32[this_44], "\n   GameStart, line 447" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_shopWindow, shop25a[this_44], "\n   GameStart, line 448" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_shopWindow, shop26a[this_44], "\n   GameStart, line 449" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_shopWindow, shop27a[this_44], "\n   GameStart, line 450" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_shopWindow, shop28a[this_44], "\n   GameStart, line 451" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_shopWindow, shop29a[this_44], "\n   GameStart, line 452" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_shopWindow, shop30a[this_44], "\n   GameStart, line 453" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_shopWindow, shop31a[this_44], "\n   GameStart, line 454" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_shopWindow, shop32a[this_44], "\n   GameStart, line 455" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_shopWindow, shop33[this_44], "\n   GameStart, line 457" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_shopWindow, shop34[this_44], "\n   GameStart, line 458" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_shopWindow, shop35[this_44], "\n   GameStart, line 459" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_shopWindow, shop36[this_44], "\n   GameStart, line 460" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_shopWindow, shop37[this_44], "\n   GameStart, line 461" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_shopWindow, shop38[this_44], "\n   GameStart, line 462" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_shopWindow, shop39[this_44], "\n   GameStart, line 463" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_shopWindow, shop40[this_44], "\n   GameStart, line 464" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_shopWindow, shop41[this_44], "\n   GameStart, line 466" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_shopWindow, shop42[this_44], "\n   GameStart, line 467" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_shopWindow, shop43[this_44], "\n   GameStart, line 468" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_shopWindow, shop44[this_44], "\n   GameStart, line 469" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_shopWindow, shop45[this_44], "\n   GameStart, line 470" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_shopWindow, shop46[this_44], "\n   GameStart, line 471" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_shopWindow, shop47[this_44], "\n   GameStart, line 472" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_shopWindow, shopT1[this_44], "\n   GameStart, line 474" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_shopWindow, shopT2[this_44], "\n   GameStart, line 475" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_shopWindow, shopT3[this_44], "\n   GameStart, line 476" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_shopWindow, shopT4[this_44], "\n   GameStart, line 477" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_shopWindow, shopT5[this_44], "\n   GameStart, line 478" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_shopWindow, shopT6[this_44], "\n   GameStart, line 479" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_shopWindow, shopT7[this_44], "\n   GameStart, line 480" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_shopWindow, shopT8[this_44], "\n   GameStart, line 481" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_scoreWindow, shopOb[this_44], "\n   GameStart, line 484" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_scoreWindow, scoreOb[this_44], "\n   GameStart, line 485" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_scoreWindow, guideOb[this_44], "\n   GameStart, line 486" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_scoreWindow, exitOb[this_44], "\n   GameStart, line 487" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_guideWindow, shopOb[this_44], "\n   GameStart, line 489" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_guideWindow, scoreOb[this_44], "\n   GameStart, line 490" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_guideWindow, guideOb[this_44], "\n   GameStart, line 491" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, GameStart_guideWindow, exitOb[this_44], "\n   GameStart, line 492" + wurstStackTrace)
	else
		set ret =  - 1.
	endif
	return ret
endfunction

function alloc_Closure_8 takes nothing returns integer
	local integer this_44
	if TrackableAction_firstFree == 0 then
		set TrackableAction_maxIndex = TrackableAction_maxIndex + 1
		set this_44 = TrackableAction_maxIndex
	else
		set TrackableAction_firstFree = TrackableAction_firstFree - 1
		set this_44 = TrackableAction_nextFree[TrackableAction_firstFree]
	endif
	set TrackableAction_typeId[this_44] = 793
	return this_44
endfunction

function alloc_Closure_9 takes nothing returns integer
	local integer this_44
	if TrackableAction_firstFree == 0 then
		set TrackableAction_maxIndex = TrackableAction_maxIndex + 1
		set this_44 = TrackableAction_maxIndex
	else
		set TrackableAction_firstFree = TrackableAction_firstFree - 1
		set this_44 = TrackableAction_nextFree[TrackableAction_firstFree]
	endif
	set TrackableAction_typeId[this_44] = 792
	return this_44
endfunction

function alloc_Closure_10 takes nothing returns integer
	local integer this_44
	if TrackableAction_firstFree == 0 then
		set TrackableAction_maxIndex = TrackableAction_maxIndex + 1
		set this_44 = TrackableAction_maxIndex
	else
		set TrackableAction_firstFree = TrackableAction_firstFree - 1
		set this_44 = TrackableAction_nextFree[TrackableAction_firstFree]
	endif
	set TrackableAction_typeId[this_44] = 791
	return this_44
endfunction

function TrackableEx_onClick_2 takes integer this_44, integer action returns nothing
	set TrackableEx_onClick[this_44] = action
endfunction

function dispatch_TrackableEx_onClick takes integer this_44, integer action, string wurstStackTrace returns nothing
	if TrackableEx_typeId[this_44] == 0 then
		if this_44 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling TrackableEx.onClick" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called TrackableEx.onClick on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call TrackableEx_onClick_2(this_44, action)
endfunction

function TrackableEx_onDoubleClick_2 takes integer this_44, integer action, string wurstStackTrace returns nothing
	local integer i
	local timer receiver
	if TrackableEx_onDoubleClick[this_44] == 0 then
		set i = 0
		loop
			exitwhen i > 11
			if GetPlayerSlotState(Player(i)) == PLAYER_SLOT_STATE_PLAYING and GetPlayerController(Player(i)) == MAP_CONTROL_USER then
				set receiver = getTimer("\n   Trackable, line 82" + wurstStackTrace)
				call timer_setData(receiver, i, "\n   Trackable, line 82" + wurstStackTrace)
				set TrackableEx_playerDoubleClickTimer[i] = receiver
			endif
			set i = i + 1
		endloop
	endif
	set TrackableEx_onDoubleClick[this_44] = action
	set receiver = null
endfunction

function dispatch_TrackableEx_onDoubleClick takes integer this_44, integer action, string wurstStackTrace returns nothing
	if TrackableEx_typeId[this_44] == 0 then
		if this_44 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling TrackableEx.onDoubleClick" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called TrackableEx.onDoubleClick on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call TrackableEx_onDoubleClick_2(this_44, action, "\n   Trackable, line 77" + wurstStackTrace)
endfunction

function TrackableEx_onTrack_2 takes integer this_44, integer action returns nothing
	set TrackableEx_onTrack[this_44] = action
endfunction

function dispatch_TrackableEx_onTrack takes integer this_44, integer action, string wurstStackTrace returns nothing
	if TrackableEx_typeId[this_44] == 0 then
		if this_44 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling TrackableEx.onTrack" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called TrackableEx.onTrack on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call TrackableEx_onTrack_2(this_44, action)
endfunction

function alloc_TrackableEx takes nothing returns integer
	local integer this_44
	if TrackableEx_firstFree == 0 then
		set TrackableEx_maxIndex = TrackableEx_maxIndex + 1
		set this_44 = TrackableEx_maxIndex
	else
		set TrackableEx_firstFree = TrackableEx_firstFree - 1
		set this_44 = TrackableEx_nextFree[TrackableEx_firstFree]
	endif
	set TrackableEx_typeId[this_44] = 667
	return this_44
endfunction

function trackableToIndex takes trackable object returns integer
	return handle_getHandleId(object)
endfunction

function trigger_registerTrackableHitEvent takes trigger this_44, trackable whichTrackable returns nothing
	call TriggerRegisterTrackableHitEvent(this_44, whichTrackable)
endfunction

function trigger_registerTrackableTrackEvent takes trigger this_44, trackable whichTrackable returns nothing
	call TriggerRegisterTrackableTrackEvent(this_44, whichTrackable)
endfunction

function construct_TrackableEx takes integer this_44, real pos_x, real pos_y, string path, string wurstStackTrace returns nothing
	local integer i
	local string newPath
	local trackable t
	set TrackableEx_onTrack[this_44] = 0
	set TrackableEx_onClick[this_44] = 0
	set TrackableEx_onDoubleClick[this_44] = 0
	set i = 0
	loop
		exitwhen i > 11
		if GetPlayerSlotState(Player(i)) == PLAYER_SLOT_STATE_PLAYING and GetPlayerController(Player(i)) == MAP_CONTROL_USER then
			set newPath = ""
			if GetLocalPlayer() == Player(i) then
				set newPath = path
			endif
			set t = CreateTrackable(newPath, pos_x, pos_y, 0.)
			call dispatch_HashMap_put(TrackableEx_trackableOwner, trackableToIndex(t), playerToIndex(Player(i)), "\n   Trackable, line 44" + wurstStackTrace)
			call dispatch_HashMap_put(TrackableEx_trackableObjects, trackableToIndex(t), this_44, "\n   Trackable, line 45" + wurstStackTrace)
			call trigger_registerTrackableTrackEvent(TrackableEx_trackTrigger, t)
			call trigger_registerTrackableHitEvent(TrackableEx_clickTrigger, t)
		endif
		set i = i + 1
	endloop
	set t = null
endfunction

function new_TrackableEx takes real pos_x, real pos_y, string path, string wurstStackTrace returns integer
	local integer this_44 = alloc_TrackableEx()
	call construct_TrackableEx(this_44, pos_x, pos_y, path, "\n   Trackable, line 36" + wurstStackTrace)
	return this_44
endfunction

function alloc_Window takes nothing returns integer
	local integer this_44
	if Window_firstFree == 0 then
		set Window_maxIndex = Window_maxIndex + 1
		set this_44 = Window_maxIndex
	else
		set Window_firstFree = Window_firstFree - 1
		set this_44 = Window_nextFree[Window_firstFree]
	endif
	set Window_typeId[this_44] = 789
	return this_44
endfunction

function alloc_HashMap takes nothing returns integer
	local integer this_44
	if HashMap_firstFree == 0 then
		set HashMap_maxIndex = HashMap_maxIndex + 1
		set this_44 = HashMap_maxIndex
	else
		set HashMap_firstFree = HashMap_firstFree - 1
		set this_44 = HashMap_nextFree[HashMap_firstFree]
	endif
	set HashMap_typeId[this_44] = 650
	return this_44
endfunction

function construct_HashMap takes integer this_44 returns nothing
endfunction

function new_HashMap takes nothing returns integer
	local integer this_44 = alloc_HashMap()
	call construct_HashMap(this_44)
	return this_44
endfunction

function construct_Window takes integer this_44 returns nothing
	set Window_content[this_44] = new_LinkedList()
	set Window_trackMap[this_44] = new_HashMap()
	set Window_wantToClose[this_44] = new_HashMap()
	set Window_voidClick[this_44] = 0
endfunction

function new_Window takes nothing returns integer
	local integer this_44 = alloc_Window()
	call construct_Window(this_44)
	return this_44
endfunction

function setTrackableAt takes integer pos_x, integer pos_y, integer tr returns nothing
	set Setup_tracks[(Setup_menuWidth + 1) * pos_x + pos_y] = tr
endfunction

function closure_impl_47 takes integer this_44, integer i, string wurstStackTrace returns real
	local real ret = 0.02
	local integer dum = 1
	local integer e_x
	local integer e_y
	local integer win
	local integer i2
	local integer tr
	local integer clVar
	local integer clVar_2
	local integer clVar_3
	local integer temp_e_x
	local integer temp_e_y
	local integer temp
	local integer temp_2
	local integer temp_3
	loop
		exitwhen dum > 10
		if dispatch_ElementLoop_hasNext(w[this_44], "\n   Menu, line 204" + wurstStackTrace) then
			set temp_e_x = dispatch_ElementLoop_next(w[this_44], "\n   Menu, line 205" + wurstStackTrace)
			set temp_e_y = dispatch_ElementLoop_next_return_y
			set e_x = temp_e_x
			set e_y = temp_e_y
		else
			set win = new_Window()
			set i2 = 0
			loop
				exitwhen i2 > 11
				call WindowManager_openWindow(win, Player(i2), "\n   Menu, line 209" + wurstStackTrace)
				set i2 = i2 + 1
			endloop
			set ret = -1.
			exitwhen true
		endif
		set tr = new_TrackableEx(vec2_op_plus(element_toVec(e_x, e_y), element_toVec_return_y, Setup_menuStart_x, Setup_menuStart_y), vec2_op_plus_return_y, "track2.mdx", "\n   Menu, line 212" + wurstStackTrace)
		call setTrackableAt(e_x, e_y, tr)
		set temp = tr
		set clVar = alloc_Closure_10()
		call dispatch_TrackableEx_onClick(temp, clVar, "\n   Menu, line 214" + wurstStackTrace)
		set temp_2 = tr
		set clVar_2 = alloc_Closure_9()
		call dispatch_TrackableEx_onDoubleClick(temp_2, clVar_2, "\n   Menu, line 215" + wurstStackTrace)
		set temp_3 = tr
		set clVar_3 = alloc_Closure_8()
		call dispatch_TrackableEx_onTrack(temp_3, clVar_3, "\n   Menu, line 216" + wurstStackTrace)
		set dum = dum + 1
	endloop
	return ret
endfunction

function alloc_Closure_11 takes nothing returns integer
	local integer this_44
	if CallbackSingle_firstFree == 0 then
		set CallbackSingle_maxIndex = CallbackSingle_maxIndex + 1
		set this_44 = CallbackSingle_maxIndex
	else
		set CallbackSingle_firstFree = CallbackSingle_firstFree - 1
		set this_44 = CallbackSingle_nextFree[CallbackSingle_firstFree]
	endif
	set CallbackSingle_typeId[this_44] = 664
	return this_44
endfunction

function idInteger2IdString takes integer value returns string
	local string result = ""
	local integer remainingValue = value
	local integer byteno = 0
	local integer charValue
	loop
		exitwhen byteno > 3
		set charValue = ModuloInteger(remainingValue, 256)
		set remainingValue = remainingValue / 256
		set result = SubString(ObjectIds_charMap, charValue, charValue + 1) + result
		set byteno = byteno + 1
	endloop
	return result
endfunction

function printError takes string msg returns nothing
	call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., PrintingHelper_DEBUG_MSG_DURATION, "|cffFF0000[ERROR]|r - " + msg)
endfunction

function closure_impl_48 takes integer this_44, integer i, string wurstStackTrace returns real
	local real ret = 0.
	local integer id
	local destructable d_2
	local integer clVar
	if i >= dispatch_HashList_getSize(PreloadSystem_destructablesToPreload, "\n   PreloadSystem, line 122" + wurstStackTrace) then
		set ret = -1.
	else
		set id = dispatch_HashList_get(PreloadSystem_destructablesToPreload, i, "\n   PreloadSystem, line 125" + wurstStackTrace)
		set d_2 = CreateDestructable(id, 0., 0., 0., 0., 0)
		if GetDestructableName(d_2) == null or GetDestructableName(d_2) == "" then
			call printError("Following destructable is missing or invaild and could not be loaded: " + idInteger2IdString(id))
			set ret = -2.
		else
			set clVar = alloc_Closure_11()
			set d[clVar] = d_2
			call doAfter(1., clVar, "\n   PreloadSystem, line 131" + wurstStackTrace)
			set ret = PreloadSystem_destructableLoadTime
		endif
	endif
	set d_2 = null
	return ret
endfunction

function closure_impl_49 takes integer this_44, integer i, string wurstStackTrace returns real
	local real ret = 0.
	local integer id
	if i >= dispatch_HashList_getSize(PreloadSystem_buffsToPreload, "\n   PreloadSystem, line 96" + wurstStackTrace) then
		set ret = -1.
	else
		set id = dispatch_HashList_get(PreloadSystem_buffsToPreload, i, "\n   PreloadSystem, line 99" + wurstStackTrace)
		if GetObjectName(id) == null or GetObjectName(id) == "" then
			set ret = -2.
		else
			set ret = PreloadSystem_buffLoadTime
		endif
	endif
	return ret
endfunction

function item_getName takes item this_44 returns string
	return GetItemName(this_44)
endfunction

function item_remove takes item this_44 returns nothing
	call RemoveItem(this_44)
endfunction

function closure_impl_50 takes integer this_44, integer i, string wurstStackTrace returns real
	local real ret = 0.
	local integer id
	local item ite
	if i >= dispatch_HashList_getSize(PreloadSystem_itemsToPreload, "\n   PreloadSystem, line 108" + wurstStackTrace) then
		set ret = -1.
	else
		set id = dispatch_HashList_get(PreloadSystem_itemsToPreload, i, "\n   PreloadSystem, line 111" + wurstStackTrace)
		set ite = CreateItem(id, 0., 0.)
		if item_getName(ite) == null or item_getName(ite) == "" then
			set ret = -2.
		else
			call item_remove(ite)
			set ret = PreloadSystem_itemLoadTime
		endif
	endif
	set ite = null
	return ret
endfunction

function ObjectDefinition_setInt takes integer this_key, string modification, integer value returns nothing
endfunction

function ObjectDefinition_setReal takes integer this_key, string modification, real value returns nothing
endfunction

function ObjectDefinition_setString takes integer this_key, string modification, string value returns nothing
endfunction

function ObjectDefinition_setUnreal takes integer this_key, string modification, real value returns nothing
endfunction

function HashList_add takes integer this_44, integer elem returns nothing
	call hashtable_saveInt(HashList_ht, this_44, HashList_size[this_44], elem)
	set HashList_size[this_44] = HashList_size[this_44] + 1
endfunction

function dispatch_HashList_add takes integer this_44, integer elem, string wurstStackTrace returns nothing
	if HashList_typeId[this_44] == 0 then
		if this_44 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling HashList.add" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called HashList.add on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call HashList_add(this_44, elem)
endfunction

function addDestructableToPreload takes integer id, string wurstStackTrace returns nothing
	call dispatch_HashList_add(PreloadSystem_destructablesToPreload, id, "\n   PreloadSystem, line 53" + wurstStackTrace)
endfunction

function createObjectDefinition takes string fileType, integer newId, integer deriveFrom returns integer
	return 0
endfunction

function IdGenerator_next takes integer this_44, string wurstStackTrace returns integer
	if IdGenerator_i1[this_44] < 126 then
		set IdGenerator_i1[this_44] = IdGenerator_i1[this_44] + 1
		if IdGenerator_i1[this_44] == 95 then
			set IdGenerator_i1[this_44] = IdGenerator_i1[this_44] + 1
		endif
	elseif IdGenerator_i2[this_44] < 126 then
		set IdGenerator_i1[this_44] = 33
		set IdGenerator_i2[this_44] = IdGenerator_i2[this_44] + 1
		if IdGenerator_i2[this_44] == 95 then
			set IdGenerator_i2[this_44] = IdGenerator_i2[this_44] + 1
		endif
	elseif IdGenerator_i3[this_44] < 126 then
		set IdGenerator_i1[this_44] = 33
		set IdGenerator_i2[this_44] = 33
		set IdGenerator_i3[this_44] = IdGenerator_i3[this_44] + 1
		if IdGenerator_i3[this_44] == 95 then
			set IdGenerator_i3[this_44] = IdGenerator_i3[this_44] + 1
		endif
	elseif IdGenerator_i4[this_44] < 126 then
		set IdGenerator_i1[this_44] = 33
		set IdGenerator_i2[this_44] = 33
		set IdGenerator_i3[this_44] = 33
		set IdGenerator_i4[this_44] = IdGenerator_i4[this_44] + 1
		if IdGenerator_i4[this_44] == 95 then
			set IdGenerator_i4[this_44] = IdGenerator_i4[this_44] + 1
		endif
	else
		call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "No vaild id left" + wurstStackTrace)
		call I2S(1 / 0)
		return 0
	endif
	return IdGenerator_i1[this_44] + IdGenerator_i2[this_44] * 256 + IdGenerator_i3[this_44] * 65536 + IdGenerator_i4[this_44] * 16777216
endfunction

function dispatch_IdGenerator_next takes integer this_44, string wurstStackTrace returns integer
	local integer next_result
	if IdGenerator_typeId[this_44] == 0 then
		if this_44 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling IdGenerator.next" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called IdGenerator.next on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	set next_result = IdGenerator_next(this_44, "\n   ObjectIdGenerator, line 16" + wurstStackTrace)
	return next_result
endfunction

function real_toInt takes real this_44 returns integer
	return R2I(this_44)
endfunction

function addIconType takes string name, string iconPath, string wurstStackTrace returns nothing
	local integer icon1 = dispatch_IdGenerator_next(IconType_ids, "\n   IconType, line 1072" + wurstStackTrace)
	local integer icon2 = dispatch_IdGenerator_next(IconType_ids, "\n   IconType, line 1073" + wurstStackTrace)
	local integer u_key
	if  not IconType_compiletime then
		call dispatch_HashMap_put(IconType_iconMap1, StringHash(name), icon1, "\n   IconType, line 1075" + wurstStackTrace)
		call dispatch_HashMap_put(IconType_iconMap2, StringHash(name), icon2, "\n   IconType, line 1076" + wurstStackTrace)
		call addDestructableToPreload(icon1, "\n   IconType, line 1077" + wurstStackTrace)
		call addDestructableToPreload(icon2, "\n   IconType, line 1078" + wurstStackTrace)
	else
		set u_key = createObjectDefinition("w3b", icon1, 1498704994)
		call ObjectDefinition_setReal(u_key, "bgsc", 0.0)
		call ObjectDefinition_setString(u_key, "bshd", "")
		call ObjectDefinition_setInt(u_key, "bcpd", 0)
		call ObjectDefinition_setString(u_key, "bsuf", "Icon")
		call ObjectDefinition_setUnreal(u_key, "boch", 0.0)
		call ObjectDefinition_setUnreal(u_key, "bsel", 0.0)
		call ObjectDefinition_setString(u_key, "bfil", "war3mapImported\\ButtonC.mdl")
		call ObjectDefinition_setString(u_key, "bnam", name)
		call ObjectDefinition_setString(u_key, "barm", "Ethereal")
		call ObjectDefinition_setString(u_key, "btar", "")
		call ObjectDefinition_setInt(u_key, "bcpr", 0)
		call ObjectDefinition_setString(u_key, "bptx", "")
		call ObjectDefinition_setInt(u_key, "btxi", 31)
		call ObjectDefinition_setString(u_key, "btxf", iconPath)
		set u_key = createObjectDefinition("w3b", icon2, 1498704994)
		call ObjectDefinition_setReal(u_key, "bgsc", 0.0)
		call ObjectDefinition_setString(u_key, "bshd", "")
		call ObjectDefinition_setInt(u_key, "bcpd", 0)
		call ObjectDefinition_setString(u_key, "bsuf", "Icon")
		call ObjectDefinition_setUnreal(u_key, "boch", 0.0)
		call ObjectDefinition_setUnreal(u_key, "bsel", 0.0)
		call ObjectDefinition_setString(u_key, "bfil", "war3mapImported\\ButtonC.mdl")
		call ObjectDefinition_setString(u_key, "bnam", name)
		call ObjectDefinition_setString(u_key, "barm", "Ethereal")
		call ObjectDefinition_setString(u_key, "btar", "")
		call ObjectDefinition_setInt(u_key, "bcpr", 0)
		call ObjectDefinition_setString(u_key, "bptx", "")
		call ObjectDefinition_setInt(u_key, "btxi", 31)
		call ObjectDefinition_setString(u_key, "btxf", iconPath)
		call ObjectDefinition_setInt(u_key, "bvcr", real_toInt(255. * IconType_restColor))
		call ObjectDefinition_setInt(u_key, "bvcg", real_toInt(255. * IconType_restColor))
		call ObjectDefinition_setInt(u_key, "bvcb", real_toInt(255. * IconType_restColor))
	endif
endfunction

function types takes string wurstStackTrace returns nothing
	call addIconType("RingDesCrigges", "ReplaceableTextures\\CommandButtons\\BTNSlow.blp", "\n   IconType, line 13" + wurstStackTrace)
	call addIconType("3M1", "ReplaceableTextures\\CommandButtons\\BTN3M1.blp", "\n   IconType, line 14" + wurstStackTrace)
	call addIconType("3M2", "ReplaceableTextures\\CommandButtons\\BTN3M2.blp", "\n   IconType, line 15" + wurstStackTrace)
	call addIconType("3M3", "ReplaceableTextures\\CommandButtons\\BTN3M3.blp", "\n   IconType, line 16" + wurstStackTrace)
	call addIconType("Abomination", "ReplaceableTextures\\CommandButtons\\BTNAbomination.blp", "\n   IconType, line 17" + wurstStackTrace)
	call addIconType("AbsorbMagic", "ReplaceableTextures\\CommandButtons\\BTNAbsorbMagic.blp", "\n   IconType, line 18" + wurstStackTrace)
	call addIconType("AcidBomb", "ReplaceableTextures\\CommandButtons\\BTNAcidBomb.blp", "\n   IconType, line 19" + wurstStackTrace)
	call addIconType("Acolyte", "ReplaceableTextures\\CommandButtons\\BTNAcolyte.blp", "\n   IconType, line 20" + wurstStackTrace)
	call addIconType("Acorn.png", "ReplaceableTextures\\CommandButtons\\BTNAcorn.png", "\n   IconType, line 21" + wurstStackTrace)
	call addIconType("AdvancedDeathTower", "ReplaceableTextures\\CommandButtons\\BTNAdvancedDeathTower.blp", "\n   IconType, line 22" + wurstStackTrace)
	call addIconType("AdvancedEnergyTower", "ReplaceableTextures\\CommandButtons\\BTNAdvancedEnergyTower.blp", "\n   IconType, line 23" + wurstStackTrace)
	call addIconType("AdvancedFlameTower", "ReplaceableTextures\\CommandButtons\\BTNAdvancedFlameTower.blp", "\n   IconType, line 24" + wurstStackTrace)
	call addIconType("AdvancedFrostTower", "ReplaceableTextures\\CommandButtons\\BTNAdvancedFrostTower.blp", "\n   IconType, line 25" + wurstStackTrace)
	call addIconType("AdvancedRockTower", "ReplaceableTextures\\CommandButtons\\BTNAdvancedRockTower.blp", "\n   IconType, line 26" + wurstStackTrace)
	call addIconType("Akama", "ReplaceableTextures\\CommandButtons\\BTNAkama.blp", "\n   IconType, line 27" + wurstStackTrace)
	call addIconType("Albatross", "ReplaceableTextures\\CommandButtons\\BTNAlbatross.blp", "\n   IconType, line 28" + wurstStackTrace)
	call addIconType("AltarOfDepths", "ReplaceableTextures\\CommandButtons\\BTNAltarOfDepths.blp", "\n   IconType, line 29" + wurstStackTrace)
	call addIconType("AmuletOftheWild", "ReplaceableTextures\\CommandButtons\\BTNAmuletOftheWild.blp", "\n   IconType, line 30" + wurstStackTrace)
	call addIconType("AncestralSpirit", "ReplaceableTextures\\CommandButtons\\BTNAncestralSpirit.blp", "\n   IconType, line 31" + wurstStackTrace)
	call addIconType("AncientOfWonders", "ReplaceableTextures\\CommandButtons\\BTNAncientOfWonders.blp", "\n   IconType, line 32" + wurstStackTrace)
	call addIconType("Arachnathid", "ReplaceableTextures\\CommandButtons\\BTNArachnathid.blp", "\n   IconType, line 33" + wurstStackTrace)
	call addIconType("ArachnathidGreen", "ReplaceableTextures\\CommandButtons\\BTNArachnathidGreen.blp", "\n   IconType, line 34" + wurstStackTrace)
	call addIconType("Arachnathidpurple", "ReplaceableTextures\\CommandButtons\\BTNArachnathidpurple.blp", "\n   IconType, line 35" + wurstStackTrace)
	call addIconType("ArcaneObservatory", "ReplaceableTextures\\CommandButtons\\BTNArcaneObservatory.blp", "\n   IconType, line 36" + wurstStackTrace)
	call addIconType("ArcaneTower", "ReplaceableTextures\\CommandButtons\\BTNArcaneTower.blp", "\n   IconType, line 37" + wurstStackTrace)
	call addIconType("ArcaneVault", "ReplaceableTextures\\CommandButtons\\BTNArcaneVault.blp", "\n   IconType, line 38" + wurstStackTrace)
	call addIconType("ArmoredOge", "ReplaceableTextures\\CommandButtons\\BTNArmoredOge.blp", "\n   IconType, line 39" + wurstStackTrace)
	call addIconType("AdvancedCreatureAttack", "ReplaceableTextures\\CommandButtons\\BTNAdvancedCreatureAttack.blp", "\n   IconType, line 40" + wurstStackTrace)
	call addIconType("AdvancedCreatureCarapace", "ReplaceableTextures\\CommandButtons\\BTNAdvancedCreatureCarapace.blp", "\n   IconType, line 41" + wurstStackTrace)
	call addIconType("AdvancedMoonArmor", "ReplaceableTextures\\CommandButtons\\BTNAdvancedMoonArmor.blp", "\n   IconType, line 42" + wurstStackTrace)
	call addIconType("AdvancedReinforcedHides", "ReplaceableTextures\\CommandButtons\\BTNAdvancedReinforcedHides.blp", "\n   IconType, line 43" + wurstStackTrace)
	call addIconType("AdvancedSpikedBarricades", "ReplaceableTextures\\CommandButtons\\BTNAdvancedSpikedBarricades.blp", "\n   IconType, line 44" + wurstStackTrace)
	call addIconType("AdvancedStrengthOfTheMoon", "ReplaceableTextures\\CommandButtons\\BTNAdvancedStrengthOfTheMoon.blp", "\n   IconType, line 45" + wurstStackTrace)
	call addIconType("AdvancedStrengthOfTheWild", "ReplaceableTextures\\CommandButtons\\BTNAdvancedStrengthOfTheWild.blp", "\n   IconType, line 46" + wurstStackTrace)
	call addIconType("AdvancedUnholyArmor", "ReplaceableTextures\\CommandButtons\\BTNAdvancedUnholyArmor.blp", "\n   IconType, line 47" + wurstStackTrace)
	call addIconType("AdvancedUnholyStrength", "ReplaceableTextures\\CommandButtons\\BTNAdvancedUnholyStrength.blp", "\n   IconType, line 48" + wurstStackTrace)
	call addIconType("AdvStruct", "ReplaceableTextures\\CommandButtons\\BTNAdvStruct.blp", "\n   IconType, line 49" + wurstStackTrace)
	call addIconType("AlleriaFlute", "ReplaceableTextures\\CommandButtons\\BTNAlleriaFlute.blp", "\n   IconType, line 50" + wurstStackTrace)
	call addIconType("AltarOfDarkness", "ReplaceableTextures\\CommandButtons\\BTNAltarOfDarkness.blp", "\n   IconType, line 51" + wurstStackTrace)
	call addIconType("AltarOfElders", "ReplaceableTextures\\CommandButtons\\BTNAltarOfElders.blp", "\n   IconType, line 52" + wurstStackTrace)
	call addIconType("AltarOfKings", "ReplaceableTextures\\CommandButtons\\BTNAltarOfKings.blp", "\n   IconType, line 53" + wurstStackTrace)
	call addIconType("AltarOfStorms", "ReplaceableTextures\\CommandButtons\\BTNAltarOfStorms.blp", "\n   IconType, line 54" + wurstStackTrace)
	call addIconType("Ambush", "ReplaceableTextures\\CommandButtons\\BTNAmbush.blp", "\n   IconType, line 55" + wurstStackTrace)
	call addIconType("AmmoDump", "ReplaceableTextures\\CommandButtons\\BTNAmmoDump.blp", "\n   IconType, line 56" + wurstStackTrace)
	call addIconType("Amulet", "ReplaceableTextures\\CommandButtons\\BTNAmulet.blp", "\n   IconType, line 57" + wurstStackTrace)
	call addIconType("AncientOfLore", "ReplaceableTextures\\CommandButtons\\BTNAncientOfLore.blp", "\n   IconType, line 58" + wurstStackTrace)
	call addIconType("AncientOfTheEarth", "ReplaceableTextures\\CommandButtons\\BTNAncientOfTheEarth.blp", "\n   IconType, line 59" + wurstStackTrace)
	call addIconType("AncientOfTheMoon", "ReplaceableTextures\\CommandButtons\\BTNAncientOfTheMoon.blp", "\n   IconType, line 60" + wurstStackTrace)
	call addIconType("AnimalWarTraining", "ReplaceableTextures\\CommandButtons\\BTNAnimalWarTraining.blp", "\n   IconType, line 61" + wurstStackTrace)
	call addIconType("AnimateDead", "ReplaceableTextures\\CommandButtons\\BTNAnimateDead.blp", "\n   IconType, line 62" + wurstStackTrace)
	call addIconType("Ankh", "ReplaceableTextures\\CommandButtons\\BTNAnkh.blp", "\n   IconType, line 63" + wurstStackTrace)
	call addIconType("AntiMagicShell", "ReplaceableTextures\\CommandButtons\\BTNAntiMagicShell.blp", "\n   IconType, line 64" + wurstStackTrace)
	call addIconType("ArcaneSanctum", "ReplaceableTextures\\CommandButtons\\BTNArcaneSanctum.blp", "\n   IconType, line 65" + wurstStackTrace)
	call addIconType("ArcaneSanctum", "ReplaceableTextures\\CommandButtons\\BTNArcaneSanctum.blp", "\n   IconType, line 66" + wurstStackTrace)
	call addIconType("ArcaniteArmor", "ReplaceableTextures\\CommandButtons\\BTNArcaniteArmor.blp", "\n   IconType, line 67" + wurstStackTrace)
	call addIconType("ArcaniteMelee", "ReplaceableTextures\\CommandButtons\\BTNArcaniteMelee.blp", "\n   IconType, line 68" + wurstStackTrace)
	call addIconType("ArcaniteRanged", "ReplaceableTextures\\CommandButtons\\BTNArcaniteRanged.blp", "\n   IconType, line 69" + wurstStackTrace)
	call addIconType("Archer", "ReplaceableTextures\\CommandButtons\\BTNArcher.blp", "\n   IconType, line 70" + wurstStackTrace)
	call addIconType("Archimonde", "ReplaceableTextures\\CommandButtons\\BTNArchimonde.blp", "\n   IconType, line 71" + wurstStackTrace)
	call addIconType("ArmorGolem", "ReplaceableTextures\\CommandButtons\\BTNArmorGolem.blp", "\n   IconType, line 72" + wurstStackTrace)
	call addIconType("Arthas", "ReplaceableTextures\\CommandButtons\\BTNArthas.blp", "\n   IconType, line 73" + wurstStackTrace)
	call addIconType("Assassin", "ReplaceableTextures\\CommandButtons\\BTNAssassin.blp", "\n   IconType, line 74" + wurstStackTrace)
	call addIconType("Attack", "ReplaceableTextures\\CommandButtons\\BTNAttack.blp", "\n   IconType, line 75" + wurstStackTrace)
	call addIconType("AttackGround", "ReplaceableTextures\\CommandButtons\\BTNAttackGround.blp", "\n   IconType, line 76" + wurstStackTrace)
	call addIconType("AuraOfDarkness", "ReplaceableTextures\\CommandButtons\\BTNAuraOfDarkness.blp", "\n   IconType, line 77" + wurstStackTrace)
	call addIconType("Avatar", "ReplaceableTextures\\CommandButtons\\BTNAvatar.blp", "\n   IconType, line 78" + wurstStackTrace)
	call addIconType("AvatarOff", "ReplaceableTextures\\CommandButtons\\BTNAvatarOff.blp", "\n   IconType, line 79" + wurstStackTrace)
	call addIconType("AvatarOn", "ReplaceableTextures\\CommandButtons\\BTNAvatarOn.blp", "\n   IconType, line 80" + wurstStackTrace)
	call addIconType("AvengingAssassin", "ReplaceableTextures\\CommandButtons\\BTNAvengingAssassin.blp", "\n   IconType, line 81" + wurstStackTrace)
	call addIconType("AvengingWatcher", "ReplaceableTextures\\CommandButtons\\BTNAvengingWatcher.blp", "\n   IconType, line 82" + wurstStackTrace)
	call addIconType("AvengingWatcherOff", "ReplaceableTextures\\CommandButtons\\BTNAvengingWatcherOff.blp", "\n   IconType, line 83" + wurstStackTrace)
	call addIconType("AvengingWatcherOn", "ReplaceableTextures\\CommandButtons\\BTNAvengingWatcherOn.blp", "\n   IconType, line 84" + wurstStackTrace)
	call addIconType("AzureDragon", "ReplaceableTextures\\CommandButtons\\BTNAzureDragon.blp", "\n   IconType, line 85" + wurstStackTrace)
	call addIconType("BacktoWork", "ReplaceableTextures\\CommandButtons\\BTNBacktoWork.blp", "\n   IconType, line 86" + wurstStackTrace)
	call addIconType("Ballista", "ReplaceableTextures\\CommandButtons\\BTNBallista.blp", "\n   IconType, line 87" + wurstStackTrace)
	call addIconType("Bandit", "ReplaceableTextures\\CommandButtons\\BTNBandit.blp", "\n   IconType, line 88" + wurstStackTrace)
	call addIconType("BanditLord", "ReplaceableTextures\\CommandButtons\\BTNBanditLord.blp", "\n   IconType, line 89" + wurstStackTrace)
	call addIconType("BanditMage", "ReplaceableTextures\\CommandButtons\\BTNBanditMage.blp", "\n   IconType, line 90" + wurstStackTrace)
	call addIconType("BanditSpearThrower", "ReplaceableTextures\\CommandButtons\\BTNBanditSpearThrower.blp", "\n   IconType, line 91" + wurstStackTrace)
	call addIconType("Banish", "ReplaceableTextures\\CommandButtons\\BTNBanish.blp", "\n   IconType, line 92" + wurstStackTrace)
	call addIconType("Banshee", "ReplaceableTextures\\CommandButtons\\BTNBanshee.blp", "\n   IconType, line 93" + wurstStackTrace)
	call addIconType("BansheeAdept", "ReplaceableTextures\\CommandButtons\\BTNBansheeAdept.blp", "\n   IconType, line 94" + wurstStackTrace)
	call addIconType("BansheeMaster", "ReplaceableTextures\\CommandButtons\\BTNBansheeMaster.blp", "\n   IconType, line 95" + wurstStackTrace)
	call addIconType("BansheeRanger", "ReplaceableTextures\\CommandButtons\\BTNBansheeRanger.blp", "\n   IconType, line 96" + wurstStackTrace)
	call addIconType("BarkSkin", "ReplaceableTextures\\CommandButtons\\BTNBarkSkin.blp", "\n   IconType, line 97" + wurstStackTrace)
	call addIconType("BarkSkinOff", "ReplaceableTextures\\CommandButtons\\BTNBarkSkinOff.blp", "\n   IconType, line 98" + wurstStackTrace)
	call addIconType("BarkSkinOn", "ReplaceableTextures\\CommandButtons\\BTNBarkSkinOn.blp", "\n   IconType, line 99" + wurstStackTrace)
	call addIconType("Barracks", "ReplaceableTextures\\CommandButtons\\BTNBarracks.blp", "\n   IconType, line 100" + wurstStackTrace)
	call addIconType("Barrel", "ReplaceableTextures\\CommandButtons\\BTNBarrel.blp", "\n   IconType, line 101" + wurstStackTrace)
	call addIconType("Bash", "ReplaceableTextures\\CommandButtons\\BTNBash.blp", "\n   IconType, line 102" + wurstStackTrace)
	call addIconType("BasicStruct", "ReplaceableTextures\\CommandButtons\\BTNBasicStruct.blp", "\n   IconType, line 103" + wurstStackTrace)
	call addIconType("BattleRoar", "ReplaceableTextures\\CommandButtons\\BTNBattleRoar.blp", "\n   IconType, line 104" + wurstStackTrace)
	call addIconType("BattleShip", "ReplaceableTextures\\CommandButtons\\BTNBattleShip.blp", "\n   IconType, line 105" + wurstStackTrace)
	call addIconType("BattleStations", "ReplaceableTextures\\CommandButtons\\BTNBattleStations.blp", "\n   IconType, line 106" + wurstStackTrace)
	call addIconType("BearBlink", "ReplaceableTextures\\CommandButtons\\BTNBearBlink.blp", "\n   IconType, line 107" + wurstStackTrace)
	call addIconType("BearDen", "ReplaceableTextures\\CommandButtons\\BTNBearDen.blp", "\n   IconType, line 108" + wurstStackTrace)
	call addIconType("BearForm", "ReplaceableTextures\\CommandButtons\\BTNBearForm.blp", "\n   IconType, line 109" + wurstStackTrace)
	call addIconType("Beastiary", "ReplaceableTextures\\CommandButtons\\BTNBeastiary.blp", "\n   IconType, line 110" + wurstStackTrace)
	call addIconType("BeastMaster", "ReplaceableTextures\\CommandButtons\\BTNBeastMaster.blp", "\n   IconType, line 111" + wurstStackTrace)
	call addIconType("Belt", "ReplaceableTextures\\CommandButtons\\BTNBelt.blp", "\n   IconType, line 112" + wurstStackTrace)
	call addIconType("Berserk", "ReplaceableTextures\\CommandButtons\\BTNBerserk.blp", "\n   IconType, line 113" + wurstStackTrace)
	call addIconType("BerserkForTrolls", "ReplaceableTextures\\CommandButtons\\BTNBerserkForTrolls.blp", "\n   IconType, line 114" + wurstStackTrace)
	call addIconType("BigBadVoodooSpell", "ReplaceableTextures\\CommandButtons\\BTNBigBadVoodooSpell.blp", "\n   IconType, line 115" + wurstStackTrace)
	call addIconType("BlackCitadel", "ReplaceableTextures\\CommandButtons\\BTNBlackCitadel.blp", "\n   IconType, line 116" + wurstStackTrace)
	call addIconType("BlackDragon", "ReplaceableTextures\\CommandButtons\\BTNBlackDragon.blp", "\n   IconType, line 117" + wurstStackTrace)
	call addIconType("BlackDragonRoost", "ReplaceableTextures\\CommandButtons\\BTNBlackDragonRoost.blp", "\n   IconType, line 118" + wurstStackTrace)
	call addIconType("BlackMammoth", "ReplaceableTextures\\CommandButtons\\BTNBlackMammoth.blp", "\n   IconType, line 119" + wurstStackTrace)
	call addIconType("BlackMarket", "ReplaceableTextures\\CommandButtons\\BTNBlackMarket.blp", "\n   IconType, line 120" + wurstStackTrace)
	call addIconType("Blacksmith", "ReplaceableTextures\\CommandButtons\\BTNBlacksmith.blp", "\n   IconType, line 121" + wurstStackTrace)
	call addIconType("Blink", "ReplaceableTextures\\CommandButtons\\BTNBlink.blp", "\n   IconType, line 122" + wurstStackTrace)
	call addIconType("Blizzard", "ReplaceableTextures\\CommandButtons\\BTNBlizzard.blp", "\n   IconType, line 123" + wurstStackTrace)
	call addIconType("BloodKey", "ReplaceableTextures\\CommandButtons\\BTNBloodKey.blp", "\n   IconType, line 124" + wurstStackTrace)
	call addIconType("Blood&GhostKey", "ReplaceableTextures\\CommandButtons\\BTNBlood&GhostKey.blp", "\n   IconType, line 125" + wurstStackTrace)
	call addIconType("BloodElfPeasant", "ReplaceableTextures\\CommandButtons\\BTNBloodElfPeasant.blp", "\n   IconType, line 126" + wurstStackTrace)
	call addIconType("BloodElfSupplyWagon", "ReplaceableTextures\\CommandButtons\\BTNBloodElfSupplyWagon.blp", "\n   IconType, line 127" + wurstStackTrace)
	call addIconType("BloodLust", "ReplaceableTextures\\CommandButtons\\BTNBloodLust.blp", "\n   IconType, line 128" + wurstStackTrace)
	call addIconType("BloodLustOff", "ReplaceableTextures\\CommandButtons\\BTNBloodLustOff.blp", "\n   IconType, line 129" + wurstStackTrace)
	call addIconType("BloodLustOn", "ReplaceableTextures\\CommandButtons\\BTNBloodLustOn.blp", "\n   IconType, line 130" + wurstStackTrace)
	call addIconType("BLoodMage2", "ReplaceableTextures\\CommandButtons\\BTNBLoodMage2.blp", "\n   IconType, line 131" + wurstStackTrace)
	call addIconType("BlueDemoness", "ReplaceableTextures\\CommandButtons\\BTNBlueDemoness.blp", "\n   IconType, line 132" + wurstStackTrace)
	call addIconType("BlueDragonRoost", "ReplaceableTextures\\CommandButtons\\BTNBlueDragonRoost.blp", "\n   IconType, line 133" + wurstStackTrace)
	call addIconType("BlueDragonSpawn", "ReplaceableTextures\\CommandButtons\\BTNBlueDragonSpawn.blp", "\n   IconType, line 134" + wurstStackTrace)
	call addIconType("BlueMagnataur", "ReplaceableTextures\\CommandButtons\\BTNBlueMagnataur.blp", "\n   IconType, line 135" + wurstStackTrace)
	call addIconType("BoneChimes", "ReplaceableTextures\\CommandButtons\\BTNBoneChimes.blp", "\n   IconType, line 136" + wurstStackTrace)
	call addIconType("BoneYard", "ReplaceableTextures\\CommandButtons\\BTNBoneYard.blp", "\n   IconType, line 137" + wurstStackTrace)
	call addIconType("BookOfSummoning", "ReplaceableTextures\\CommandButtons\\BTNBookOfSummoning.blp", "\n   IconType, line 138" + wurstStackTrace)
	call addIconType("BookOfTheDead", "ReplaceableTextures\\CommandButtons\\BTNBookOfTheDead.blp", "\n   IconType, line 139" + wurstStackTrace)
	call addIconType("Boots", "ReplaceableTextures\\CommandButtons\\BTNBoots.blp", "\n   IconType, line 140" + wurstStackTrace)
	call addIconType("BootsOfSpeed", "ReplaceableTextures\\CommandButtons\\BTNBootsOfSpeed.blp", "\n   IconType, line 141" + wurstStackTrace)
	call addIconType("Box", "ReplaceableTextures\\CommandButtons\\BTNBox.blp", "\n   IconType, line 142" + wurstStackTrace)
	call addIconType("BreathOfFire", "ReplaceableTextures\\CommandButtons\\BTNBreathOfFire.blp", "\n   IconType, line 143" + wurstStackTrace)
	call addIconType("BreathOfFrost", "ReplaceableTextures\\CommandButtons\\BTNBreathOfFrost.blp", "\n   IconType, line 144" + wurstStackTrace)
	call addIconType("Brilliance", "ReplaceableTextures\\CommandButtons\\BTNBrilliance.blp", "\n   IconType, line 145" + wurstStackTrace)
	call addIconType("BronzeBowl", "ReplaceableTextures\\CommandButtons\\BTNBronzeBowl.blp", "\n   IconType, line 146" + wurstStackTrace)
	call addIconType("BronzeBowlFull", "ReplaceableTextures\\CommandButtons\\BTNBronzeBowlFull.blp", "\n   IconType, line 147" + wurstStackTrace)
	call addIconType("BronzeDragon", "ReplaceableTextures\\CommandButtons\\BTNBronzeDragon.blp", "\n   IconType, line 148" + wurstStackTrace)
	call addIconType("BundleOfLumber", "ReplaceableTextures\\CommandButtons\\BTNBundleOfLumber.blp", "\n   IconType, line 149" + wurstStackTrace)
	call addIconType("Cage", "ReplaceableTextures\\CommandButtons\\BTNCage.blp", "\n   IconType, line 150" + wurstStackTrace)
	call addIconType("CagedIllidan", "ReplaceableTextures\\CommandButtons\\BTNCagedIllidan.blp", "\n   IconType, line 151" + wurstStackTrace)
	call addIconType("CallToArms", "ReplaceableTextures\\CommandButtons\\BTNCallToArms.blp", "\n   IconType, line 152" + wurstStackTrace)
	call addIconType("Cancel", "ReplaceableTextures\\CommandButtons\\BTNCancel.blp", "\n   IconType, line 153" + wurstStackTrace)
	call addIconType("Cannibalize", "ReplaceableTextures\\CommandButtons\\BTNCannibalize.blp", "\n   IconType, line 154" + wurstStackTrace)
	call addIconType("CannonTower", "ReplaceableTextures\\CommandButtons\\BTNCannonTower.blp", "\n   IconType, line 155" + wurstStackTrace)
	call addIconType("CarrionSwarm", "ReplaceableTextures\\CommandButtons\\BTNCarrionSwarm.blp", "\n   IconType, line 156" + wurstStackTrace)
	call addIconType("CarrionScarabs", "ReplaceableTextures\\CommandButtons\\BTNCarrionScarabs.blp", "\n   IconType, line 157" + wurstStackTrace)
	call addIconType("CarrionScarabsOff", "ReplaceableTextures\\CommandButtons\\BTNCarrionScarabsOff.blp", "\n   IconType, line 158" + wurstStackTrace)
	call addIconType("CarrionScarabsOn", "ReplaceableTextures\\CommandButtons\\BTNCarrionScarabsOn.blp", "\n   IconType, line 159" + wurstStackTrace)
	call addIconType("Castle", "ReplaceableTextures\\CommandButtons\\BTNCastle.blp", "\n   IconType, line 160" + wurstStackTrace)
	call addIconType("Catapult", "ReplaceableTextures\\CommandButtons\\BTNCatapult.blp", "\n   IconType, line 161" + wurstStackTrace)
	call addIconType("Centaur", "ReplaceableTextures\\CommandButtons\\BTNCentaur.blp", "\n   IconType, line 162" + wurstStackTrace)
	call addIconType("CentaurArcher", "ReplaceableTextures\\CommandButtons\\BTNCentaurArcher.blp", "\n   IconType, line 163" + wurstStackTrace)
	call addIconType("CentaurKhan", "ReplaceableTextures\\CommandButtons\\BTNCentaurKhan.blp", "\n   IconType, line 164" + wurstStackTrace)
	call addIconType("ChainLightning", "ReplaceableTextures\\CommandButtons\\BTNChainLightning.blp", "\n   IconType, line 165" + wurstStackTrace)
	call addIconType("ChaosBlademaster", "ReplaceableTextures\\CommandButtons\\BTNChaosBlademaster.blp", "\n   IconType, line 166" + wurstStackTrace)
	call addIconType("ChaosGrom", "ReplaceableTextures\\CommandButtons\\BTNChaosGrom.blp", "\n   IconType, line 167" + wurstStackTrace)
	call addIconType("ChaosGrunt", "ReplaceableTextures\\CommandButtons\\BTNChaosGrunt.blp", "\n   IconType, line 168" + wurstStackTrace)
	call addIconType("ChaosKotoBeast", "ReplaceableTextures\\CommandButtons\\BTNChaosKotoBeast.blp", "\n   IconType, line 169" + wurstStackTrace)
	call addIconType("ChaosPeon", "ReplaceableTextures\\CommandButtons\\BTNChaosPeon.blp", "\n   IconType, line 170" + wurstStackTrace)
	call addIconType("ChaosSpaceOrc", "ReplaceableTextures\\CommandButtons\\BTNChaosSpaceOrc.blp", "\n   IconType, line 171" + wurstStackTrace)
	call addIconType("ChaosWarlock", "ReplaceableTextures\\CommandButtons\\BTNChaosWarlock.blp", "\n   IconType, line 172" + wurstStackTrace)
	call addIconType("ChaosWarlockGreen", "ReplaceableTextures\\CommandButtons\\BTNChaosWarlockGreen.blp", "\n   IconType, line 173" + wurstStackTrace)
	call addIconType("ChaosWarlord", "ReplaceableTextures\\CommandButtons\\BTNChaosWarlord.blp", "\n   IconType, line 174" + wurstStackTrace)
	call addIconType("ChaosWolfRider", "ReplaceableTextures\\CommandButtons\\BTNChaosWolfRider.blp", "\n   IconType, line 175" + wurstStackTrace)
	call addIconType("Charm", "ReplaceableTextures\\CommandButtons\\BTNCharm.blp", "\n   IconType, line 176" + wurstStackTrace)
	call addIconType("Charm", "ReplaceableTextures\\CommandButtons\\BTNCharm.blp", "\n   IconType, line 177" + wurstStackTrace)
	call addIconType("Cheese", "ReplaceableTextures\\CommandButtons\\BTNCheese.blp", "\n   IconType, line 178" + wurstStackTrace)
	call addIconType("ChemicalRage", "ReplaceableTextures\\CommandButtons\\BTNChemicalRage.blp", "\n   IconType, line 179" + wurstStackTrace)
	call addIconType("ChestOfGold", "ReplaceableTextures\\CommandButtons\\BTNChestOfGold.blp", "\n   IconType, line 180" + wurstStackTrace)
	call addIconType("Chimaera", "ReplaceableTextures\\CommandButtons\\BTNChimaera.blp", "\n   IconType, line 181" + wurstStackTrace)
	call addIconType("ChimaeraRoost", "ReplaceableTextures\\CommandButtons\\BTNChimaeraRoost.blp", "\n   IconType, line 182" + wurstStackTrace)
	call addIconType("Chime", "ReplaceableTextures\\CommandButtons\\BTNChime.blp", "\n   IconType, line 183" + wurstStackTrace)
	call addIconType("Circlet", "ReplaceableTextures\\CommandButtons\\BTNCirclet.blp", "\n   IconType, line 184" + wurstStackTrace)
	call addIconType("ClawsOfAttack", "ReplaceableTextures\\CommandButtons\\BTNClawsOfAttack.blp", "\n   IconType, line 185" + wurstStackTrace)
	call addIconType("ClayFigurine", "ReplaceableTextures\\CommandButtons\\BTNClayFigurine.blp", "\n   IconType, line 186" + wurstStackTrace)
	call addIconType("CleavingAttack", "ReplaceableTextures\\CommandButtons\\BTNCleavingAttack.blp", "\n   IconType, line 187" + wurstStackTrace)
	call addIconType("Cloak", "ReplaceableTextures\\CommandButtons\\BTNCloak.blp", "\n   IconType, line 188" + wurstStackTrace)
	call addIconType("CloakOfFlames", "ReplaceableTextures\\CommandButtons\\BTNCloakOfFlames.blp", "\n   IconType, line 189" + wurstStackTrace)
	call addIconType("ClockWerkGoblin", "ReplaceableTextures\\CommandButtons\\BTNClockWerkGoblin.blp", "\n   IconType, line 190" + wurstStackTrace)
	call addIconType("CloudOfFog", "ReplaceableTextures\\CommandButtons\\BTNCloudOfFog.blp", "\n   IconType, line 191" + wurstStackTrace)
	call addIconType("ClusterRockets", "ReplaceableTextures\\CommandButtons\\BTNClusterRockets.blp", "\n   IconType, line 192" + wurstStackTrace)
	call addIconType("ColdArrows", "ReplaceableTextures\\CommandButtons\\BTNColdArrows.blp", "\n   IconType, line 193" + wurstStackTrace)
	call addIconType("ColdArrowsOff", "ReplaceableTextures\\CommandButtons\\BTNColdArrowsOff.blp", "\n   IconType, line 194" + wurstStackTrace)
	call addIconType("ColdArrowsOn", "ReplaceableTextures\\CommandButtons\\BTNColdArrowsOn.blp", "\n   IconType, line 195" + wurstStackTrace)
	call addIconType("ColdTower", "ReplaceableTextures\\CommandButtons\\BTNColdTower.blp", "\n   IconType, line 196" + wurstStackTrace)
	call addIconType("Command", "ReplaceableTextures\\CommandButtons\\BTNCommand.blp", "\n   IconType, line 197" + wurstStackTrace)
	call addIconType("ControlMagic", "ReplaceableTextures\\CommandButtons\\BTNControlMagic.blp", "\n   IconType, line 198" + wurstStackTrace)
	call addIconType("COP", "ReplaceableTextures\\CommandButtons\\BTNCOP.blp", "\n   IconType, line 199" + wurstStackTrace)
	call addIconType("CoralBed", "ReplaceableTextures\\CommandButtons\\BTNCoralBed.blp", "\n   IconType, line 200" + wurstStackTrace)
	call addIconType("CorpseExplode", "ReplaceableTextures\\CommandButtons\\BTNCorpseExplode.blp", "\n   IconType, line 201" + wurstStackTrace)
	call addIconType("CorrosiveBreath", "ReplaceableTextures\\CommandButtons\\BTNCorrosiveBreath.blp", "\n   IconType, line 202" + wurstStackTrace)
	call addIconType("CorruptedAncientOfWar", "ReplaceableTextures\\CommandButtons\\BTNCorruptedAncientOfWar.blp", "\n   IconType, line 203" + wurstStackTrace)
	call addIconType("CorruptedAncientProtector", "ReplaceableTextures\\CommandButtons\\BTNCorruptedAncientProtector.blp", "\n   IconType, line 204" + wurstStackTrace)
	call addIconType("CorruptedEnt", "ReplaceableTextures\\CommandButtons\\BTNCorruptedEnt.blp", "\n   IconType, line 205" + wurstStackTrace)
	call addIconType("CorruptedMoonWell", "ReplaceableTextures\\CommandButtons\\BTNCorruptedMoonWell.blp", "\n   IconType, line 206" + wurstStackTrace)
	call addIconType("CorruptedTreeOfLife", "ReplaceableTextures\\CommandButtons\\BTNCorruptedTreeOfLife.blp", "\n   IconType, line 207" + wurstStackTrace)
	call addIconType("Crate", "ReplaceableTextures\\CommandButtons\\BTNCrate.blp", "\n   IconType, line 208" + wurstStackTrace)
	call addIconType("CrushingWave", "ReplaceableTextures\\CommandButtons\\BTNCrushingWave.blp", "\n   IconType, line 209" + wurstStackTrace)
	call addIconType("CreatureAttack", "ReplaceableTextures\\CommandButtons\\BTNCreatureAttack.blp", "\n   IconType, line 210" + wurstStackTrace)
	call addIconType("CreatureCarapace", "ReplaceableTextures\\CommandButtons\\BTNCreatureCarapace.blp", "\n   IconType, line 211" + wurstStackTrace)
	call addIconType("Cripple", "ReplaceableTextures\\CommandButtons\\BTNCripple.blp", "\n   IconType, line 212" + wurstStackTrace)
	call addIconType("CriticalStrike", "ReplaceableTextures\\CommandButtons\\BTNCriticalStrike.blp", "\n   IconType, line 213" + wurstStackTrace)
	call addIconType("CritterChicken", "ReplaceableTextures\\CommandButtons\\BTNCritterChicken.blp", "\n   IconType, line 214" + wurstStackTrace)
	call addIconType("CritterRabbit", "ReplaceableTextures\\CommandButtons\\BTNCritterRabbit.blp", "\n   IconType, line 215" + wurstStackTrace)
	call addIconType("Crypt", "ReplaceableTextures\\CommandButtons\\BTNCrypt.blp", "\n   IconType, line 216" + wurstStackTrace)
	call addIconType("CryptFiend", "ReplaceableTextures\\CommandButtons\\BTNCryptFiend.blp", "\n   IconType, line 217" + wurstStackTrace)
	call addIconType("CryptFiendBurrow", "ReplaceableTextures\\CommandButtons\\BTNCryptFiendBurrow.blp", "\n   IconType, line 218" + wurstStackTrace)
	call addIconType("CryptFiendUnBurrow", "ReplaceableTextures\\CommandButtons\\BTNCryptFiendUnBurrow.blp", "\n   IconType, line 219" + wurstStackTrace)
	call addIconType("CrystalBall", "ReplaceableTextures\\CommandButtons\\BTNCrystalBall.blp", "\n   IconType, line 220" + wurstStackTrace)
	call addIconType("Curse", "ReplaceableTextures\\CommandButtons\\BTNCurse.blp", "\n   IconType, line 221" + wurstStackTrace)
	call addIconType("CurseOff", "ReplaceableTextures\\CommandButtons\\BTNCurseOff.blp", "\n   IconType, line 222" + wurstStackTrace)
	call addIconType("CurseOn", "ReplaceableTextures\\CommandButtons\\BTNCurseOn.blp", "\n   IconType, line 223" + wurstStackTrace)
	call addIconType("Cyclone", "ReplaceableTextures\\CommandButtons\\BTNCyclone.blp", "\n   IconType, line 224" + wurstStackTrace)
	call addIconType("DaggerOfEscape", "ReplaceableTextures\\CommandButtons\\BTNDaggerOfEscape.blp", "\n   IconType, line 225" + wurstStackTrace)
	call addIconType("DalaranGuardTower", "ReplaceableTextures\\CommandButtons\\BTNDalaranGuardTower.blp", "\n   IconType, line 226" + wurstStackTrace)
	call addIconType("DalaranMutant", "ReplaceableTextures\\CommandButtons\\BTNDalaranMutant.blp", "\n   IconType, line 227" + wurstStackTrace)
	call addIconType("DalaranReject", "ReplaceableTextures\\CommandButtons\\BTNDalaranReject.blp", "\n   IconType, line 228" + wurstStackTrace)
	call addIconType("DarkPortal", "ReplaceableTextures\\CommandButtons\\BTNDarkPortal.blp", "\n   IconType, line 229" + wurstStackTrace)
	call addIconType("DarkRitual", "ReplaceableTextures\\CommandButtons\\BTNDarkRitual.blp", "\n   IconType, line 230" + wurstStackTrace)
	call addIconType("DarkSummoning", "ReplaceableTextures\\CommandButtons\\BTNDarkSummoning.blp", "\n   IconType, line 231" + wurstStackTrace)
	call addIconType("DarkTroll", "ReplaceableTextures\\CommandButtons\\BTNDarkTroll.blp", "\n   IconType, line 232" + wurstStackTrace)
	call addIconType("DarkTrollShadowPriest", "ReplaceableTextures\\CommandButtons\\BTNDarkTrollShadowPriest.blp", "\n   IconType, line 233" + wurstStackTrace)
	call addIconType("DarkTrollTrapper", "ReplaceableTextures\\CommandButtons\\BTNDarkTrollTrapper.blp", "\n   IconType, line 234" + wurstStackTrace)
	call addIconType("DeathAndDecay", "ReplaceableTextures\\CommandButtons\\BTNDeathAndDecay.blp", "\n   IconType, line 235" + wurstStackTrace)
	call addIconType("DeathCoil", "ReplaceableTextures\\CommandButtons\\BTNDeathCoil.blp", "\n   IconType, line 236" + wurstStackTrace)
	call addIconType("DeathPact", "ReplaceableTextures\\CommandButtons\\BTNDeathPact.blp", "\n   IconType, line 237" + wurstStackTrace)
	call addIconType("DeathTower", "ReplaceableTextures\\CommandButtons\\BTNDeathTower.blp", "\n   IconType, line 238" + wurstStackTrace)
	call addIconType("DeepLordRevenant", "ReplaceableTextures\\CommandButtons\\BTNDeepLordRevenant.blp", "\n   IconType, line 239" + wurstStackTrace)
	call addIconType("Defend", "ReplaceableTextures\\CommandButtons\\BTNDefend.blp", "\n   IconType, line 240" + wurstStackTrace)
	call addIconType("DefendStop", "ReplaceableTextures\\CommandButtons\\BTNDefendStop.blp", "\n   IconType, line 241" + wurstStackTrace)
	call addIconType("Demolish", "ReplaceableTextures\\CommandButtons\\BTNDemolish.blp", "\n   IconType, line 242" + wurstStackTrace)
	call addIconType("Demolisher", "ReplaceableTextures\\CommandButtons\\BTNDemolisher.blp", "\n   IconType, line 243" + wurstStackTrace)
	call addIconType("Demoness", "ReplaceableTextures\\CommandButtons\\BTNDemoness.blp", "\n   IconType, line 244" + wurstStackTrace)
	call addIconType("DemonGate", "ReplaceableTextures\\CommandButtons\\BTNDemonGate.blp", "\n   IconType, line 245" + wurstStackTrace)
	call addIconType("DenOfWonders", "ReplaceableTextures\\CommandButtons\\BTNDenOfWonders.blp", "\n   IconType, line 246" + wurstStackTrace)
	call addIconType("Destroyer", "ReplaceableTextures\\CommandButtons\\BTNDestroyer.blp", "\n   IconType, line 247" + wurstStackTrace)
	call addIconType("Devotion", "ReplaceableTextures\\CommandButtons\\BTNDevotion.blp", "\n   IconType, line 248" + wurstStackTrace)
	call addIconType("Devour", "ReplaceableTextures\\CommandButtons\\BTNDevour.blp", "\n   IconType, line 249" + wurstStackTrace)
	call addIconType("DevourMagic", "ReplaceableTextures\\CommandButtons\\BTNDevourMagic.blp", "\n   IconType, line 250" + wurstStackTrace)
	call addIconType("DiabloCar", "ReplaceableTextures\\CommandButtons\\BTNDiabloCar.blp", "\n   IconType, line 251" + wurstStackTrace)
	call addIconType("DireWolf", "ReplaceableTextures\\CommandButtons\\BTNDireWolf.blp", "\n   IconType, line 252" + wurstStackTrace)
	call addIconType("Disenchant", "ReplaceableTextures\\CommandButtons\\BTNDisenchant.blp", "\n   IconType, line 253" + wurstStackTrace)
	call addIconType("DispelMagic", "ReplaceableTextures\\CommandButtons\\BTNDispelMagic.blp", "\n   IconType, line 254" + wurstStackTrace)
	call addIconType("DivineIntervention", "ReplaceableTextures\\CommandButtons\\BTNDivineIntervention.blp", "\n   IconType, line 255" + wurstStackTrace)
	call addIconType("DivineShieldOff", "ReplaceableTextures\\CommandButtons\\BTNDivineShieldOff.blp", "\n   IconType, line 256" + wurstStackTrace)
	call addIconType("Dizzy", "ReplaceableTextures\\CommandButtons\\BTNDizzy.blp", "\n   IconType, line 257" + wurstStackTrace)
	call addIconType("DOCAdeptTraining", "ReplaceableTextures\\CommandButtons\\BTNDOCAdeptTraining.blp", "\n   IconType, line 258" + wurstStackTrace)
	call addIconType("DOCMasterTraining", "ReplaceableTextures\\CommandButtons\\BTNDOCMasterTraining.blp", "\n   IconType, line 259" + wurstStackTrace)
	call addIconType("Doom", "ReplaceableTextures\\CommandButtons\\BTNDoom.blp", "\n   IconType, line 260" + wurstStackTrace)
	call addIconType("DoomGuard", "ReplaceableTextures\\CommandButtons\\BTNDoomGuard.blp", "\n   IconType, line 261" + wurstStackTrace)
	call addIconType("DOTAdeptTraining", "ReplaceableTextures\\CommandButtons\\BTNDOTAdeptTraining.blp", "\n   IconType, line 262" + wurstStackTrace)
	call addIconType("DOTMasterTraining", "ReplaceableTextures\\CommandButtons\\BTNDOTMasterTraining.blp", "\n   IconType, line 263" + wurstStackTrace)
	call addIconType("Drain", "ReplaceableTextures\\CommandButtons\\BTNDrain.blp", "\n   IconType, line 264" + wurstStackTrace)
	call addIconType("DragonHawk", "ReplaceableTextures\\CommandButtons\\BTNDragonHawk.blp", "\n   IconType, line 265" + wurstStackTrace)
	call addIconType("DragonRoost", "ReplaceableTextures\\CommandButtons\\BTNDragonRoost.blp", "\n   IconType, line 266" + wurstStackTrace)
	call addIconType("Dranai", "ReplaceableTextures\\CommandButtons\\BTNDranai.blp", "\n   IconType, line 267" + wurstStackTrace)
	call addIconType("DranaiAkama", "ReplaceableTextures\\CommandButtons\\BTNDranaiAkama.blp", "\n   IconType, line 268" + wurstStackTrace)
	call addIconType("DranaiChiefHut", "ReplaceableTextures\\CommandButtons\\BTNDranaiChiefHut.blp", "\n   IconType, line 269" + wurstStackTrace)
	call addIconType("DranaiHut", "ReplaceableTextures\\CommandButtons\\BTNDranaiHut.blp", "\n   IconType, line 270" + wurstStackTrace)
	call addIconType("DranaiMage", "ReplaceableTextures\\CommandButtons\\BTNDranaiMage.blp", "\n   IconType, line 271" + wurstStackTrace)
	call addIconType("DruidOfTheClaw", "ReplaceableTextures\\CommandButtons\\BTNDruidOfTheClaw.blp", "\n   IconType, line 272" + wurstStackTrace)
	call addIconType("DruidOfTheTalon", "ReplaceableTextures\\CommandButtons\\BTNDruidOfTheTalon.blp", "\n   IconType, line 273" + wurstStackTrace)
	call addIconType("DrunkenDodge", "ReplaceableTextures\\CommandButtons\\BTNDrunkenDodge.blp", "\n   IconType, line 274" + wurstStackTrace)
	call addIconType("Drum", "ReplaceableTextures\\CommandButtons\\BTNDrum.blp", "\n   IconType, line 275" + wurstStackTrace)
	call addIconType("Dryad", "ReplaceableTextures\\CommandButtons\\BTNDryad.blp", "\n   IconType, line 276" + wurstStackTrace)
	call addIconType("DryadDispelMagic", "ReplaceableTextures\\CommandButtons\\BTNDryadDispelMagic.blp", "\n   IconType, line 277" + wurstStackTrace)
	call addIconType("DryadDispelMagicOff", "ReplaceableTextures\\CommandButtons\\BTNDryadDispelMagicOff.blp", "\n   IconType, line 278" + wurstStackTrace)
	call addIconType("DryadDispelMagicOn", "ReplaceableTextures\\CommandButtons\\BTNDryadDispelMagicOn.blp", "\n   IconType, line 279" + wurstStackTrace)
	call addIconType("DuneWorm", "ReplaceableTextures\\CommandButtons\\BTNDuneWorm.blp", "\n   IconType, line 280" + wurstStackTrace)
	call addIconType("Dust", "ReplaceableTextures\\CommandButtons\\BTNDust.blp", "\n   IconType, line 281" + wurstStackTrace)
	call addIconType("DustOfAppearance", "ReplaceableTextures\\CommandButtons\\BTNDustOfAppearance.blp", "\n   IconType, line 282" + wurstStackTrace)
	call addIconType("DwarfCar", "ReplaceableTextures\\CommandButtons\\BTNDwarfCar.blp", "\n   IconType, line 283" + wurstStackTrace)
	call addIconType("DwarvenLongRifle", "ReplaceableTextures\\CommandButtons\\BTNDwarvenLongRifle.blp", "\n   IconType, line 284" + wurstStackTrace)
	call addIconType("EarthBrewMaster", "ReplaceableTextures\\CommandButtons\\BTNEarthBrewMaster.blp", "\n   IconType, line 285" + wurstStackTrace)
	call addIconType("Earthquake", "ReplaceableTextures\\CommandButtons\\BTNEarthquake.blp", "\n   IconType, line 286" + wurstStackTrace)
	call addIconType("EatTree", "ReplaceableTextures\\CommandButtons\\BTNEatTree.blp", "\n   IconType, line 287" + wurstStackTrace)
	call addIconType("ElfVillager", "ReplaceableTextures\\CommandButtons\\BTNElfVillager.blp", "\n   IconType, line 288" + wurstStackTrace)
	call addIconType("ElunesBlessing", "ReplaceableTextures\\CommandButtons\\BTNElunesBlessing.blp", "\n   IconType, line 289" + wurstStackTrace)
	call addIconType("ElvenFarm", "ReplaceableTextures\\CommandButtons\\BTNElvenFarm.blp", "\n   IconType, line 290" + wurstStackTrace)
	call addIconType("ElvenGuardTower", "ReplaceableTextures\\CommandButtons\\BTNElvenGuardTower.blp", "\n   IconType, line 291" + wurstStackTrace)
	call addIconType("EnchantedBears", "ReplaceableTextures\\CommandButtons\\BTNEnchantedBears.blp", "\n   IconType, line 292" + wurstStackTrace)
	call addIconType("EnchantedCrows", "ReplaceableTextures\\CommandButtons\\BTNEnchantedCrows.blp", "\n   IconType, line 293" + wurstStackTrace)
	call addIconType("EnchantedGemstone", "ReplaceableTextures\\CommandButtons\\BTNEnchantedGemstone.blp", "\n   IconType, line 294" + wurstStackTrace)
	call addIconType("EnergyTower", "ReplaceableTextures\\CommandButtons\\BTNEnergyTower.blp", "\n   IconType, line 295" + wurstStackTrace)
	call addIconType("EngineeringUpgrade", "ReplaceableTextures\\CommandButtons\\BTNEngineeringUpgrade.blp", "\n   IconType, line 296" + wurstStackTrace)
	call addIconType("Ensnare", "ReplaceableTextures\\CommandButtons\\BTNEnsnare.blp", "\n   IconType, line 297" + wurstStackTrace)
	call addIconType("Ent", "ReplaceableTextures\\CommandButtons\\BTNEnt.blp", "\n   IconType, line 298" + wurstStackTrace)
	call addIconType("EntangleMine", "ReplaceableTextures\\CommandButtons\\BTNEntangleMine.blp", "\n   IconType, line 299" + wurstStackTrace)
	call addIconType("EntanglingRoots", "ReplaceableTextures\\CommandButtons\\BTNEntanglingRoots.blp", "\n   IconType, line 300" + wurstStackTrace)
	call addIconType("EntrapmentWard", "ReplaceableTextures\\CommandButtons\\BTNEntrapmentWard.blp", "\n   IconType, line 301" + wurstStackTrace)
	call addIconType("EntrapmentWard", "ReplaceableTextures\\CommandButtons\\BTNEntrapmentWard.blp", "\n   IconType, line 302" + wurstStackTrace)
	call addIconType("EnvenomedSpear", "ReplaceableTextures\\CommandButtons\\BTNEnvenomedSpear.blp", "\n   IconType, line 303" + wurstStackTrace)
	call addIconType("eredarRed", "ReplaceableTextures\\CommandButtons\\BTNeredarRed.blp", "\n   IconType, line 304" + wurstStackTrace)
	call addIconType("EredarWarlockPurple", "ReplaceableTextures\\CommandButtons\\BTNEredarWarlockPurple.blp", "\n   IconType, line 305" + wurstStackTrace)
	call addIconType("EtherealFormOn", "ReplaceableTextures\\CommandButtons\\BTNEtherealFormOn.blp", "\n   IconType, line 306" + wurstStackTrace)
	call addIconType("Evasion", "ReplaceableTextures\\CommandButtons\\BTNEvasion.blp", "\n   IconType, line 307" + wurstStackTrace)
	call addIconType("EvilIllidan", "ReplaceableTextures\\CommandButtons\\BTNEvilIllidan.blp", "\n   IconType, line 308" + wurstStackTrace)
	call addIconType("ExhumeCorpses", "ReplaceableTextures\\CommandButtons\\BTNExhumeCorpses.blp", "\n   IconType, line 309" + wurstStackTrace)
	call addIconType("ExpandedView", "ReplaceableTextures\\CommandButtons\\BTNExpandedView.blp", "\n   IconType, line 310" + wurstStackTrace)
	call addIconType("FacelessOne", "ReplaceableTextures\\CommandButtons\\BTNFacelessOne.blp", "\n   IconType, line 311" + wurstStackTrace)
	call addIconType("FaerieDragon", "ReplaceableTextures\\CommandButtons\\BTNFaerieDragon.blp", "\n   IconType, line 312" + wurstStackTrace)
	call addIconType("FaerieFire", "ReplaceableTextures\\CommandButtons\\BTNFaerieFire.blp", "\n   IconType, line 313" + wurstStackTrace)
	call addIconType("FaerieFireOff", "ReplaceableTextures\\CommandButtons\\BTNFaerieFireOff.blp", "\n   IconType, line 314" + wurstStackTrace)
	call addIconType("FaerieFireOn", "ReplaceableTextures\\CommandButtons\\BTNFaerieFireOn.blp", "\n   IconType, line 315" + wurstStackTrace)
	call addIconType("FanOfKnives", "ReplaceableTextures\\CommandButtons\\BTNFanOfKnives.blp", "\n   IconType, line 316" + wurstStackTrace)
	call addIconType("Farm", "ReplaceableTextures\\CommandButtons\\BTNFarm.blp", "\n   IconType, line 317" + wurstStackTrace)
	call addIconType("FarSight", "ReplaceableTextures\\CommandButtons\\BTNFarSight.blp", "\n   IconType, line 318" + wurstStackTrace)
	call addIconType("FeedBack", "ReplaceableTextures\\CommandButtons\\BTNFeedBack.blp", "\n   IconType, line 319" + wurstStackTrace)
	call addIconType("FelBoar", "ReplaceableTextures\\CommandButtons\\BTNFelBoar.blp", "\n   IconType, line 320" + wurstStackTrace)
	call addIconType("FelGuard", "ReplaceableTextures\\CommandButtons\\BTNFelGuard.blp", "\n   IconType, line 321" + wurstStackTrace)
	call addIconType("FelGuardBlue", "ReplaceableTextures\\CommandButtons\\BTNFelGuardBlue.blp", "\n   IconType, line 322" + wurstStackTrace)
	call addIconType("FelHound", "ReplaceableTextures\\CommandButtons\\BTNFelHound.blp", "\n   IconType, line 323" + wurstStackTrace)
	call addIconType("FemaleElfVillager", "ReplaceableTextures\\CommandButtons\\BTNFemaleElfVillager.blp", "\n   IconType, line 324" + wurstStackTrace)
	call addIconType("Fire", "ReplaceableTextures\\CommandButtons\\BTNFire.blp", "\n   IconType, line 325" + wurstStackTrace)
	call addIconType("FireBolt", "ReplaceableTextures\\CommandButtons\\BTNFireBolt.blp", "\n   IconType, line 326" + wurstStackTrace)
	call addIconType("FireBrewMaster", "ReplaceableTextures\\CommandButtons\\BTNFireBrewMaster.blp", "\n   IconType, line 327" + wurstStackTrace)
	call addIconType("FireForTheCannon", "ReplaceableTextures\\CommandButtons\\BTNFireForTheCannon.blp", "\n   IconType, line 328" + wurstStackTrace)
	call addIconType("FireRocks", "ReplaceableTextures\\CommandButtons\\BTNFireRocks.blp", "\n   IconType, line 329" + wurstStackTrace)
	call addIconType("FlakCannons", "ReplaceableTextures\\CommandButtons\\BTNFlakCannons.blp", "\n   IconType, line 330" + wurstStackTrace)
	call addIconType("FlameTower", "ReplaceableTextures\\CommandButtons\\BTNFlameTower.blp", "\n   IconType, line 331" + wurstStackTrace)
	call addIconType("FlamingArrows", "ReplaceableTextures\\CommandButtons\\BTNFlamingArrows.blp", "\n   IconType, line 332" + wurstStackTrace)
	call addIconType("Flare", "ReplaceableTextures\\CommandButtons\\BTNFlare.blp", "\n   IconType, line 333" + wurstStackTrace)
	call addIconType("FleshGolem", "ReplaceableTextures\\CommandButtons\\BTNFleshGolem.blp", "\n   IconType, line 334" + wurstStackTrace)
	call addIconType("Flute", "ReplaceableTextures\\CommandButtons\\BTNFlute.blp", "\n   IconType, line 335" + wurstStackTrace)
	call addIconType("FlyingMachine", "ReplaceableTextures\\CommandButtons\\BTNFlyingMachine.blp", "\n   IconType, line 336" + wurstStackTrace)
	call addIconType("ForestTrollTrapper", "ReplaceableTextures\\CommandButtons\\BTNForestTrollTrapper.blp", "\n   IconType, line 337" + wurstStackTrace)
	call addIconType("Footman", "ReplaceableTextures\\CommandButtons\\BTNFootman.blp", "\n   IconType, line 338" + wurstStackTrace)
	call addIconType("ForceOfNature", "ReplaceableTextures\\CommandButtons\\BTNForceOfNature.blp", "\n   IconType, line 339" + wurstStackTrace)
	call addIconType("ForestTroll", "ReplaceableTextures\\CommandButtons\\BTNForestTroll.blp", "\n   IconType, line 340" + wurstStackTrace)
	call addIconType("ForestTrollShadowPriest", "ReplaceableTextures\\CommandButtons\\BTNForestTrollShadowPriest.blp", "\n   IconType, line 341" + wurstStackTrace)
	call addIconType("Forge", "ReplaceableTextures\\CommandButtons\\BTNForge.blp", "\n   IconType, line 342" + wurstStackTrace)
	call addIconType("ForgottenOne", "ReplaceableTextures\\CommandButtons\\BTNForgottenOne.blp", "\n   IconType, line 343" + wurstStackTrace)
	call addIconType("Fortress", "ReplaceableTextures\\CommandButtons\\BTNFortress.blp", "\n   IconType, line 344" + wurstStackTrace)
	call addIconType("FountainOfLife", "ReplaceableTextures\\CommandButtons\\BTNFountainOfLife.blp", "\n   IconType, line 345" + wurstStackTrace)
	call addIconType("FountainOfLifeBlood", "ReplaceableTextures\\CommandButtons\\BTNFountainOfLifeBlood.blp", "\n   IconType, line 346" + wurstStackTrace)
	call addIconType("FountainOfLifeDefiled", "ReplaceableTextures\\CommandButtons\\BTNFountainOfLifeDefiled.blp", "\n   IconType, line 347" + wurstStackTrace)
	call addIconType("FragmentationBombs", "ReplaceableTextures\\CommandButtons\\BTNFragmentationBombs.blp", "\n   IconType, line 348" + wurstStackTrace)
	call addIconType("FreezingBreath", "ReplaceableTextures\\CommandButtons\\BTNFreezingBreath.blp", "\n   IconType, line 349" + wurstStackTrace)
	call addIconType("Frost", "ReplaceableTextures\\CommandButtons\\BTNFrost.blp", "\n   IconType, line 350" + wurstStackTrace)
	call addIconType("FrostArmor", "ReplaceableTextures\\CommandButtons\\BTNFrostArmor.blp", "\n   IconType, line 351" + wurstStackTrace)
	call addIconType("FrostArmorOff", "ReplaceableTextures\\CommandButtons\\BTNFrostArmorOff.blp", "\n   IconType, line 352" + wurstStackTrace)
	call addIconType("FrostArmorOn", "ReplaceableTextures\\CommandButtons\\BTNFrostArmorOn.blp", "\n   IconType, line 353" + wurstStackTrace)
	call addIconType("FrostBear", "ReplaceableTextures\\CommandButtons\\BTNFrostBear.blp", "\n   IconType, line 354" + wurstStackTrace)
	call addIconType("FrostBolt", "ReplaceableTextures\\CommandButtons\\BTNFrostBolt.blp", "\n   IconType, line 355" + wurstStackTrace)
	call addIconType("FrostMourne", "ReplaceableTextures\\CommandButtons\\BTNFrostMourne.blp", "\n   IconType, line 356" + wurstStackTrace)
	call addIconType("FrostTower", "ReplaceableTextures\\CommandButtons\\BTNFrostTower.blp", "\n   IconType, line 357" + wurstStackTrace)
	call addIconType("FrostWyrm", "ReplaceableTextures\\CommandButtons\\BTNFrostWyrm.blp", "\n   IconType, line 358" + wurstStackTrace)
	call addIconType("Furbolg", "ReplaceableTextures\\CommandButtons\\BTNFurbolg.blp", "\n   IconType, line 359" + wurstStackTrace)
	call addIconType("FurbolgElder", "ReplaceableTextures\\CommandButtons\\BTNFurbolgElder.blp", "\n   IconType, line 360" + wurstStackTrace)
	call addIconType("FurbolgPanda", "ReplaceableTextures\\CommandButtons\\BTNFurbolgPanda.blp", "\n   IconType, line 361" + wurstStackTrace)
	call addIconType("FurbolgShaman", "ReplaceableTextures\\CommandButtons\\BTNFurbolgShaman.blp", "\n   IconType, line 362" + wurstStackTrace)
	call addIconType("FurbolgTracker", "ReplaceableTextures\\CommandButtons\\BTNFurbolgTracker.blp", "\n   IconType, line 363" + wurstStackTrace)
	call addIconType("Furion", "ReplaceableTextures\\CommandButtons\\BTNFurion.blp", "\n   IconType, line 364" + wurstStackTrace)
	call addIconType("Gargoyle", "ReplaceableTextures\\CommandButtons\\BTNGargoyle.blp", "\n   IconType, line 365" + wurstStackTrace)
	call addIconType("Garithos", "ReplaceableTextures\\CommandButtons\\BTNGarithos.blp", "\n   IconType, line 366" + wurstStackTrace)
	call addIconType("GatherGold", "ReplaceableTextures\\CommandButtons\\BTNGatherGold.blp", "\n   IconType, line 367" + wurstStackTrace)
	call addIconType("GauntletsOfOgrePower", "ReplaceableTextures\\CommandButtons\\BTNGauntletsOfOgrePower.blp", "\n   IconType, line 368" + wurstStackTrace)
	call addIconType("Gem", "ReplaceableTextures\\CommandButtons\\BTNGem.blp", "\n   IconType, line 369" + wurstStackTrace)
	call addIconType("GenericCreepBuilding", "ReplaceableTextures\\CommandButtons\\BTNGenericCreepBuilding.blp", "\n   IconType, line 370" + wurstStackTrace)
	call addIconType("GenericHumanBuilding", "ReplaceableTextures\\CommandButtons\\BTNGenericHumanBuilding.blp", "\n   IconType, line 371" + wurstStackTrace)
	call addIconType("GenericSpellImmunity", "ReplaceableTextures\\CommandButtons\\BTNGenericSpellImmunity.blp", "\n   IconType, line 372" + wurstStackTrace)
	call addIconType("Ghost", "ReplaceableTextures\\CommandButtons\\BTNGhost.blp", "\n   IconType, line 373" + wurstStackTrace)
	call addIconType("GhostKey", "ReplaceableTextures\\CommandButtons\\BTNGhostKey.blp", "\n   IconType, line 374" + wurstStackTrace)
	call addIconType("GhostOfKelThuzad", "ReplaceableTextures\\CommandButtons\\BTNGhostOfKelThuzad.blp", "\n   IconType, line 375" + wurstStackTrace)
	call addIconType("GhostMage", "ReplaceableTextures\\CommandButtons\\BTNGhostMage.blp", "\n   IconType, line 376" + wurstStackTrace)
	call addIconType("Ghoul", "ReplaceableTextures\\CommandButtons\\BTNGhoul.blp", "\n   IconType, line 377" + wurstStackTrace)
	call addIconType("GhoulFrenzy", "ReplaceableTextures\\CommandButtons\\BTNGhoulFrenzy.blp", "\n   IconType, line 378" + wurstStackTrace)
	call addIconType("Glacier", "ReplaceableTextures\\CommandButtons\\BTNGlacier.blp", "\n   IconType, line 379" + wurstStackTrace)
	call addIconType("GlaiveThrower", "ReplaceableTextures\\CommandButtons\\BTNGlaiveThrower.blp", "\n   IconType, line 380" + wurstStackTrace)
	call addIconType("GLExchange", "ReplaceableTextures\\CommandButtons\\BTNGLExchange.blp", "\n   IconType, line 381" + wurstStackTrace)
	call addIconType("Glove", "ReplaceableTextures\\CommandButtons\\BTNGlove.blp", "\n   IconType, line 382" + wurstStackTrace)
	call addIconType("Glyph", "ReplaceableTextures\\CommandButtons\\BTNGlyph.blp", "\n   IconType, line 383" + wurstStackTrace)
	call addIconType("Glyph", "ReplaceableTextures\\CommandButtons\\BTNGlyph.blp", "\n   IconType, line 384" + wurstStackTrace)
	call addIconType("GMExchange", "ReplaceableTextures\\CommandButtons\\BTNGMExchange.blp", "\n   IconType, line 385" + wurstStackTrace)
	call addIconType("Gnoll", "ReplaceableTextures\\CommandButtons\\BTNGnoll.blp", "\n   IconType, line 386" + wurstStackTrace)
	call addIconType("GnollArcher", "ReplaceableTextures\\CommandButtons\\BTNGnollArcher.blp", "\n   IconType, line 387" + wurstStackTrace)
	call addIconType("GnollCommandAura", "ReplaceableTextures\\CommandButtons\\BTNGnollCommandAura.blp", "\n   IconType, line 388" + wurstStackTrace)
	call addIconType("GnollKing", "ReplaceableTextures\\CommandButtons\\BTNGnollKing.blp", "\n   IconType, line 389" + wurstStackTrace)
	call addIconType("GnollWarden", "ReplaceableTextures\\CommandButtons\\BTNGnollWarden.blp", "\n   IconType, line 390" + wurstStackTrace)
	call addIconType("GoblinLandMine", "ReplaceableTextures\\CommandButtons\\BTNGoblinLandMine.blp", "\n   IconType, line 391" + wurstStackTrace)
	call addIconType("GoblinSapper", "ReplaceableTextures\\CommandButtons\\BTNGoblinSapper.blp", "\n   IconType, line 392" + wurstStackTrace)
	call addIconType("GoblinShipyard", "ReplaceableTextures\\CommandButtons\\BTNGoblinShipyard.blp", "\n   IconType, line 393" + wurstStackTrace)
	call addIconType("GoblinZeppelin", "ReplaceableTextures\\CommandButtons\\BTNGoblinZeppelin.blp", "\n   IconType, line 394" + wurstStackTrace)
	call addIconType("Goldmine", "ReplaceableTextures\\CommandButtons\\BTNGoldmine.blp", "\n   IconType, line 395" + wurstStackTrace)
	call addIconType("GoldRing", "ReplaceableTextures\\CommandButtons\\BTNGoldRing.blp", "\n   IconType, line 396" + wurstStackTrace)
	call addIconType("GolemStormBolt", "ReplaceableTextures\\CommandButtons\\BTNGolemStormBolt.blp", "\n   IconType, line 397" + wurstStackTrace)
	call addIconType("GolemThunderClap", "ReplaceableTextures\\CommandButtons\\BTNGolemThunderClap.blp", "\n   IconType, line 398" + wurstStackTrace)
	call addIconType("GrabTree", "ReplaceableTextures\\CommandButtons\\BTNGrabTree.blp", "\n   IconType, line 399" + wurstStackTrace)
	call addIconType("GraveYard", "ReplaceableTextures\\CommandButtons\\BTNGraveYard.blp", "\n   IconType, line 400" + wurstStackTrace)
endfunction

function types2 takes string wurstStackTrace returns nothing
	call addIconType("GreaterInvisibility", "ReplaceableTextures\\CommandButtons\\BTNGreaterInvisibility.blp", "\n   IconType, line 403" + wurstStackTrace)
	call addIconType("GreaterInvulneralbility", "ReplaceableTextures\\CommandButtons\\BTNGreaterInvulneralbility.blp", "\n   IconType, line 404" + wurstStackTrace)
	call addIconType("GreaterRejuvPotion", "ReplaceableTextures\\CommandButtons\\BTNGreaterRejuvPotion.blp", "\n   IconType, line 405" + wurstStackTrace)
	call addIconType("GreaterRejuvScroll", "ReplaceableTextures\\CommandButtons\\BTNGreaterRejuvScroll.blp", "\n   IconType, line 406" + wurstStackTrace)
	call addIconType("GreatHall", "ReplaceableTextures\\CommandButtons\\BTNGreatHall.blp", "\n   IconType, line 407" + wurstStackTrace)
	call addIconType("GreenDragon", "ReplaceableTextures\\CommandButtons\\BTNGreenDragon.blp", "\n   IconType, line 408" + wurstStackTrace)
	call addIconType("GreenDragonRoost", "ReplaceableTextures\\CommandButtons\\BTNGreenDragonRoost.blp", "\n   IconType, line 409" + wurstStackTrace)
	call addIconType("GreenDragonSpawn", "ReplaceableTextures\\CommandButtons\\BTNGreenDragonSpawn.blp", "\n   IconType, line 410" + wurstStackTrace)
	call addIconType("GreenHydra", "ReplaceableTextures\\CommandButtons\\BTNGreenHydra.blp", "\n   IconType, line 411" + wurstStackTrace)
	call addIconType("GrimWard", "ReplaceableTextures\\CommandButtons\\BTNGrimWard.blp", "\n   IconType, line 412" + wurstStackTrace)
	call addIconType("GrizzlyBear", "ReplaceableTextures\\CommandButtons\\BTNGrizzlyBear.blp", "\n   IconType, line 413" + wurstStackTrace)
	call addIconType("Grunt", "ReplaceableTextures\\CommandButtons\\BTNGrunt.blp", "\n   IconType, line 414" + wurstStackTrace)
	call addIconType("GryphonAviary", "ReplaceableTextures\\CommandButtons\\BTNGryphonAviary.blp", "\n   IconType, line 415" + wurstStackTrace)
	call addIconType("GryphonRider", "ReplaceableTextures\\CommandButtons\\BTNGryphonRider.blp", "\n   IconType, line 416" + wurstStackTrace)
	call addIconType("GuardianWard", "ReplaceableTextures\\CommandButtons\\BTNGuardianWard.blp", "\n   IconType, line 417" + wurstStackTrace)
	call addIconType("GuardTower", "ReplaceableTextures\\CommandButtons\\BTNGuardTower.blp", "\n   IconType, line 418" + wurstStackTrace)
	call addIconType("Guldan", "ReplaceableTextures\\CommandButtons\\BTNGuldan.blp", "\n   IconType, line 419" + wurstStackTrace)
	call addIconType("GuldanSkull", "ReplaceableTextures\\CommandButtons\\BTNGuldanSkull.blp", "\n   IconType, line 420" + wurstStackTrace)
	call addIconType("Gyrocopter", "ReplaceableTextures\\CommandButtons\\BTNGyrocopter.blp", "\n   IconType, line 421" + wurstStackTrace)
	call addIconType("HallOfTheDead", "ReplaceableTextures\\CommandButtons\\BTNHallOfTheDead.blp", "\n   IconType, line 422" + wurstStackTrace)
	call addIconType("Hammer", "ReplaceableTextures\\CommandButtons\\BTNHammer.blp", "\n   IconType, line 423" + wurstStackTrace)
	call addIconType("HardenedSkin", "ReplaceableTextures\\CommandButtons\\BTNHardenedSkin.blp", "\n   IconType, line 424" + wurstStackTrace)
	call addIconType("Harpy", "ReplaceableTextures\\CommandButtons\\BTNHarpy.blp", "\n   IconType, line 425" + wurstStackTrace)
	call addIconType("HarpyQueen", "ReplaceableTextures\\CommandButtons\\BTNHarpyQueen.blp", "\n   IconType, line 426" + wurstStackTrace)
	call addIconType("HarpyWitch", "ReplaceableTextures\\CommandButtons\\BTNHarpyWitch.blp", "\n   IconType, line 427" + wurstStackTrace)
	call addIconType("HauntedMine", "ReplaceableTextures\\CommandButtons\\BTNHauntedMine.blp", "\n   IconType, line 428" + wurstStackTrace)
	call addIconType("Headhunter", "ReplaceableTextures\\CommandButtons\\BTNHeadhunter.blp", "\n   IconType, line 429" + wurstStackTrace)
	call addIconType("HeadHunterBerserker", "ReplaceableTextures\\CommandButtons\\BTNHeadHunterBerserker.blp", "\n   IconType, line 430" + wurstStackTrace)
	call addIconType("Heal", "ReplaceableTextures\\CommandButtons\\BTNHeal.blp", "\n   IconType, line 431" + wurstStackTrace)
	call addIconType("HealingSalve", "ReplaceableTextures\\CommandButtons\\BTNHealingSalve.blp", "\n   IconType, line 432" + wurstStackTrace)
	call addIconType("HealingSpray", "ReplaceableTextures\\CommandButtons\\BTNHealingSpray.blp", "\n   IconType, line 433" + wurstStackTrace)
	call addIconType("HealingWard", "ReplaceableTextures\\CommandButtons\\BTNHealingWard.blp", "\n   IconType, line 434" + wurstStackTrace)
	call addIconType("HealingWave", "ReplaceableTextures\\CommandButtons\\BTNHealingWave.blp", "\n   IconType, line 435" + wurstStackTrace)
	call addIconType("HealOff", "ReplaceableTextures\\CommandButtons\\BTNHealOff.blp", "\n   IconType, line 436" + wurstStackTrace)
	call addIconType("HealOn", "ReplaceableTextures\\CommandButtons\\BTNHealOn.blp", "\n   IconType, line 437" + wurstStackTrace)
	call addIconType("HealthStone", "ReplaceableTextures\\CommandButtons\\BTNHealthStone.blp", "\n   IconType, line 438" + wurstStackTrace)
	call addIconType("HeartOfAszune", "ReplaceableTextures\\CommandButtons\\BTNHeartOfAszune.blp", "\n   IconType, line 439" + wurstStackTrace)
	call addIconType("HeartOfSearinox", "ReplaceableTextures\\CommandButtons\\BTNHeartOfSearinox.blp", "\n   IconType, line 440" + wurstStackTrace)
	call addIconType("HellScream", "ReplaceableTextures\\CommandButtons\\BTNHellScream.blp", "\n   IconType, line 441" + wurstStackTrace)
	call addIconType("HelmOfValor", "ReplaceableTextures\\CommandButtons\\BTNHelmOfValor.blp", "\n   IconType, line 442" + wurstStackTrace)
	call addIconType("HelmutPurple", "ReplaceableTextures\\CommandButtons\\BTNHelmutPurple.blp", "\n   IconType, line 443" + wurstStackTrace)
	call addIconType("HermitCrab", "ReplaceableTextures\\CommandButtons\\BTNHermitCrab.blp", "\n   IconType, line 444" + wurstStackTrace)
	call addIconType("HeroAlchemist", "ReplaceableTextures\\CommandButtons\\BTNHeroAlchemist.blp", "\n   IconType, line 445" + wurstStackTrace)
	call addIconType("HeroArchMage", "ReplaceableTextures\\CommandButtons\\BTNHeroArchMage.blp", "\n   IconType, line 446" + wurstStackTrace)
	call addIconType("HeroAvatarOfFlame", "ReplaceableTextures\\CommandButtons\\BTNHeroAvatarOfFlame.blp", "\n   IconType, line 447" + wurstStackTrace)
	call addIconType("HeroBlademaster", "ReplaceableTextures\\CommandButtons\\BTNHeroBlademaster.blp", "\n   IconType, line 448" + wurstStackTrace)
	call addIconType("HeroBloodElfPrince", "ReplaceableTextures\\CommandButtons\\BTNHeroBloodElfPrince.blp", "\n   IconType, line 449" + wurstStackTrace)
	call addIconType("HeroCryptLord", "ReplaceableTextures\\CommandButtons\\BTNHeroCryptLord.blp", "\n   IconType, line 450" + wurstStackTrace)
	call addIconType("HeroDeathKnight", "ReplaceableTextures\\CommandButtons\\BTNHeroDeathKnight.blp", "\n   IconType, line 451" + wurstStackTrace)
	call addIconType("HeroDemonHunter", "ReplaceableTextures\\CommandButtons\\BTNHeroDemonHunter.blp", "\n   IconType, line 452" + wurstStackTrace)
	call addIconType("HeroDreadLord", "ReplaceableTextures\\CommandButtons\\BTNHeroDreadLord.blp", "\n   IconType, line 453" + wurstStackTrace)
	call addIconType("HeroFarseer", "ReplaceableTextures\\CommandButtons\\BTNHeroFarseer.blp", "\n   IconType, line 454" + wurstStackTrace)
	call addIconType("HeroLich", "ReplaceableTextures\\CommandButtons\\BTNHeroLich.blp", "\n   IconType, line 455" + wurstStackTrace)
	call addIconType("HeroMoonPriestess", "ReplaceableTextures\\CommandButtons\\BTNHeroMoonPriestess.blp", "\n   IconType, line 456" + wurstStackTrace)
	call addIconType("HeroMountainKing", "ReplaceableTextures\\CommandButtons\\BTNHeroMountainKing.blp", "\n   IconType, line 457" + wurstStackTrace)
	call addIconType("HeroPaladin", "ReplaceableTextures\\CommandButtons\\BTNHeroPaladin.blp", "\n   IconType, line 458" + wurstStackTrace)
	call addIconType("HeroTaurenChieftain", "ReplaceableTextures\\CommandButtons\\BTNHeroTaurenChieftain.blp", "\n   IconType, line 459" + wurstStackTrace)
	call addIconType("HeroTinker", "ReplaceableTextures\\CommandButtons\\BTNHeroTinker.blp", "\n   IconType, line 460" + wurstStackTrace)
	call addIconType("HeroWarden", "ReplaceableTextures\\CommandButtons\\BTNHeroWarden.blp", "\n   IconType, line 461" + wurstStackTrace)
	call addIconType("Hex", "ReplaceableTextures\\CommandButtons\\BTNHex.blp", "\n   IconType, line 462" + wurstStackTrace)
	call addIconType("HighElvenArcher", "ReplaceableTextures\\CommandButtons\\BTNHighElvenArcher.blp", "\n   IconType, line 463" + wurstStackTrace)
	call addIconType("Hippogriff", "ReplaceableTextures\\CommandButtons\\BTNHippogriff.blp", "\n   IconType, line 464" + wurstStackTrace)
	call addIconType("HippogriffRider", "ReplaceableTextures\\CommandButtons\\BTNHippogriffRider.blp", "\n   IconType, line 465" + wurstStackTrace)
	call addIconType("Hire", "ReplaceableTextures\\CommandButtons\\BTNHire.blp", "\n   IconType, line 466" + wurstStackTrace)
	call addIconType("HoldPosition", "ReplaceableTextures\\CommandButtons\\BTNHoldPosition.blp", "\n   IconType, line 467" + wurstStackTrace)
	call addIconType("HolyBolt", "ReplaceableTextures\\CommandButtons\\BTNHolyBolt.blp", "\n   IconType, line 468" + wurstStackTrace)
	call addIconType("HolyWater", "ReplaceableTextures\\CommandButtons\\BTNHolyWater.blp", "\n   IconType, line 469" + wurstStackTrace)
	call addIconType("HoodOfCunning", "ReplaceableTextures\\CommandButtons\\BTNHoodOfCunning.blp", "\n   IconType, line 470" + wurstStackTrace)
	call addIconType("HornOfCenarius", "ReplaceableTextures\\CommandButtons\\BTNHornOfCenarius.blp", "\n   IconType, line 471" + wurstStackTrace)
	call addIconType("HornOfDoom", "ReplaceableTextures\\CommandButtons\\BTNHornOfDoom.blp", "\n   IconType, line 472" + wurstStackTrace)
	call addIconType("HornOfFog", "ReplaceableTextures\\CommandButtons\\BTNHornOfFog.blp", "\n   IconType, line 473" + wurstStackTrace)
	call addIconType("HowlOfTerror", "ReplaceableTextures\\CommandButtons\\BTNHowlOfTerror.blp", "\n   IconType, line 474" + wurstStackTrace)
	call addIconType("HumanArcaneTower", "ReplaceableTextures\\CommandButtons\\BTNHumanArcaneTower.blp", "\n   IconType, line 475" + wurstStackTrace)
	call addIconType("HumanArmorUpOne", "ReplaceableTextures\\CommandButtons\\BTNHumanArmorUpOne.blp", "\n   IconType, line 476" + wurstStackTrace)
	call addIconType("HumanArmorUpThree", "ReplaceableTextures\\CommandButtons\\BTNHumanArmorUpThree.blp", "\n   IconType, line 477" + wurstStackTrace)
	call addIconType("HumanArmorUpTwo", "ReplaceableTextures\\CommandButtons\\BTNHumanArmorUpTwo.blp", "\n   IconType, line 478" + wurstStackTrace)
	call addIconType("HumanArtilleryUpOne", "ReplaceableTextures\\CommandButtons\\BTNHumanArtilleryUpOne.blp", "\n   IconType, line 479" + wurstStackTrace)
	call addIconType("HumanBarracks", "ReplaceableTextures\\CommandButtons\\BTNHumanBarracks.blp", "\n   IconType, line 480" + wurstStackTrace)
	call addIconType("HumanBattleShip", "ReplaceableTextures\\CommandButtons\\BTNHumanBattleShip.blp", "\n   IconType, line 481" + wurstStackTrace)
	call addIconType("HumanBuild", "ReplaceableTextures\\CommandButtons\\BTNHumanBuild.blp", "\n   IconType, line 482" + wurstStackTrace)
	call addIconType("HumanCaptureFlag", "ReplaceableTextures\\CommandButtons\\BTNHumanCaptureFlag.blp", "\n   IconType, line 483" + wurstStackTrace)
	call addIconType("HumanDestroyer", "ReplaceableTextures\\CommandButtons\\BTNHumanDestroyer.blp", "\n   IconType, line 484" + wurstStackTrace)
	call addIconType("HumanLumberMill", "ReplaceableTextures\\CommandButtons\\BTNHumanLumberMill.blp", "\n   IconType, line 485" + wurstStackTrace)
	call addIconType("HumanLumberUpgrade1", "ReplaceableTextures\\CommandButtons\\BTNHumanLumberUpgrade1.blp", "\n   IconType, line 486" + wurstStackTrace)
	call addIconType("HumanLumberUpgrade2", "ReplaceableTextures\\CommandButtons\\BTNHumanLumberUpgrade2.blp", "\n   IconType, line 487" + wurstStackTrace)
	call addIconType("HumanMissileUpOne", "ReplaceableTextures\\CommandButtons\\BTNHumanMissileUpOne.blp", "\n   IconType, line 488" + wurstStackTrace)
	call addIconType("HumanMissileUpThree", "ReplaceableTextures\\CommandButtons\\BTNHumanMissileUpThree.blp", "\n   IconType, line 489" + wurstStackTrace)
	call addIconType("HumanMissileUpTwo", "ReplaceableTextures\\CommandButtons\\BTNHumanMissileUpTwo.blp", "\n   IconType, line 490" + wurstStackTrace)
	call addIconType("HumanShipyard", "ReplaceableTextures\\CommandButtons\\BTNHumanShipyard.blp", "\n   IconType, line 491" + wurstStackTrace)
	call addIconType("HumanTransport", "ReplaceableTextures\\CommandButtons\\BTNHumanTransport.blp", "\n   IconType, line 492" + wurstStackTrace)
	call addIconType("HumanWatchTower", "ReplaceableTextures\\CommandButtons\\BTNHumanWatchTower.blp", "\n   IconType, line 493" + wurstStackTrace)
	call addIconType("HuntersHall", "ReplaceableTextures\\CommandButtons\\BTNHuntersHall.blp", "\n   IconType, line 494" + wurstStackTrace)
	call addIconType("Huntress", "ReplaceableTextures\\CommandButtons\\BTNHuntress.blp", "\n   IconType, line 495" + wurstStackTrace)
	call addIconType("Hydra", "ReplaceableTextures\\CommandButtons\\BTNHydra.blp", "\n   IconType, line 496" + wurstStackTrace)
	call addIconType("Hydralisk", "ReplaceableTextures\\CommandButtons\\BTNHydralisk.blp", "\n   IconType, line 497" + wurstStackTrace)
	call addIconType("HydraWarStomp", "ReplaceableTextures\\CommandButtons\\BTNHydraWarStomp.blp", "\n   IconType, line 498" + wurstStackTrace)
	call addIconType("IceCrownObelisk", "ReplaceableTextures\\CommandButtons\\BTNIceCrownObelisk.blp", "\n   IconType, line 499" + wurstStackTrace)
	call addIconType("IceShard", "ReplaceableTextures\\CommandButtons\\BTNIceShard.blp", "\n   IconType, line 500" + wurstStackTrace)
	call addIconType("IceTroll", "ReplaceableTextures\\CommandButtons\\BTNIceTroll.blp", "\n   IconType, line 501" + wurstStackTrace)
	call addIconType("IceTrollBeserker", "ReplaceableTextures\\CommandButtons\\BTNIceTrollBeserker.blp", "\n   IconType, line 502" + wurstStackTrace)
	call addIconType("IceTrollShadowPriest", "ReplaceableTextures\\CommandButtons\\BTNIceTrollShadowPriest.blp", "\n   IconType, line 503" + wurstStackTrace)
	call addIconType("IceTrollShaman", "ReplaceableTextures\\CommandButtons\\BTNIceTrollShaman.blp", "\n   IconType, line 504" + wurstStackTrace)
	call addIconType("IcyTreasureBox", "ReplaceableTextures\\CommandButtons\\BTNIcyTreasureBox.blp", "\n   IconType, line 505" + wurstStackTrace)
	call addIconType("IllidanPrisonWagon", "ReplaceableTextures\\CommandButtons\\BTNIllidanPrisonWagon.blp", "\n   IconType, line 506" + wurstStackTrace)
	call addIconType("ImbuedMasonry", "ReplaceableTextures\\CommandButtons\\BTNImbuedMasonry.blp", "\n   IconType, line 507" + wurstStackTrace)
	call addIconType("ImmolationOff", "ReplaceableTextures\\CommandButtons\\BTNImmolationOff.blp", "\n   IconType, line 508" + wurstStackTrace)
	call addIconType("ImmolationOn", "ReplaceableTextures\\CommandButtons\\BTNImmolationOn.blp", "\n   IconType, line 509" + wurstStackTrace)
	call addIconType("Impale", "ReplaceableTextures\\CommandButtons\\BTNImpale.blp", "\n   IconType, line 510" + wurstStackTrace)
	call addIconType("ImpalingBolt", "ReplaceableTextures\\CommandButtons\\BTNImpalingBolt.blp", "\n   IconType, line 511" + wurstStackTrace)
	call addIconType("ImprovedBows", "ReplaceableTextures\\CommandButtons\\BTNImprovedBows.blp", "\n   IconType, line 512" + wurstStackTrace)
	call addIconType("ImprovedCreatureAttack", "ReplaceableTextures\\CommandButtons\\BTNImprovedCreatureAttack.blp", "\n   IconType, line 513" + wurstStackTrace)
	call addIconType("ImprovedCreatureCarapace", "ReplaceableTextures\\CommandButtons\\BTNImprovedCreatureCarapace.blp", "\n   IconType, line 514" + wurstStackTrace)
	call addIconType("ImprovedMining", "ReplaceableTextures\\CommandButtons\\BTNImprovedMining.blp", "\n   IconType, line 515" + wurstStackTrace)
	call addIconType("ImprovedMoonArmor", "ReplaceableTextures\\CommandButtons\\BTNImprovedMoonArmor.blp", "\n   IconType, line 516" + wurstStackTrace)
	call addIconType("ImprovedReinforcedHides", "ReplaceableTextures\\CommandButtons\\BTNImprovedReinforcedHides.blp", "\n   IconType, line 517" + wurstStackTrace)
	call addIconType("ImprovedSpikedBarricades", "ReplaceableTextures\\CommandButtons\\BTNImprovedSpikedBarricades.blp", "\n   IconType, line 518" + wurstStackTrace)
	call addIconType("ImprovedStrengthOfTheMoon", "ReplaceableTextures\\CommandButtons\\BTNImprovedStrengthOfTheMoon.blp", "\n   IconType, line 519" + wurstStackTrace)
	call addIconType("ImprovedStrengthOfTheWild", "ReplaceableTextures\\CommandButtons\\BTNImprovedStrengthOfTheWild.blp", "\n   IconType, line 520" + wurstStackTrace)
	call addIconType("ImprovedUnholyArmor", "ReplaceableTextures\\CommandButtons\\BTNImprovedUnholyArmor.blp", "\n   IconType, line 521" + wurstStackTrace)
	call addIconType("ImprovedUnholyStrength", "ReplaceableTextures\\CommandButtons\\BTNImprovedUnholyStrength.blp", "\n   IconType, line 522" + wurstStackTrace)
	call addIconType("Incinerate", "ReplaceableTextures\\CommandButtons\\BTNIncinerate.blp", "\n   IconType, line 523" + wurstStackTrace)
	call addIconType("IncinerateOff", "ReplaceableTextures\\CommandButtons\\BTNIncinerateOff.blp", "\n   IconType, line 524" + wurstStackTrace)
	call addIconType("IncinerateOn", "ReplaceableTextures\\CommandButtons\\BTNIncinerateOn.blp", "\n   IconType, line 525" + wurstStackTrace)
	call addIconType("Infernal", "ReplaceableTextures\\CommandButtons\\BTNInfernal.blp", "\n   IconType, line 526" + wurstStackTrace)
	call addIconType("InfernalCannon", "ReplaceableTextures\\CommandButtons\\BTNInfernalCannon.blp", "\n   IconType, line 527" + wurstStackTrace)
	call addIconType("InfernalFlameCannon", "ReplaceableTextures\\CommandButtons\\BTNInfernalFlameCannon.blp", "\n   IconType, line 528" + wurstStackTrace)
	call addIconType("InfernalStone", "ReplaceableTextures\\CommandButtons\\BTNInfernalStone.blp", "\n   IconType, line 529" + wurstStackTrace)
	call addIconType("Inn", "ReplaceableTextures\\CommandButtons\\BTNInn.blp", "\n   IconType, line 530" + wurstStackTrace)
	call addIconType("InnerFire", "ReplaceableTextures\\CommandButtons\\BTNInnerFire.blp", "\n   IconType, line 531" + wurstStackTrace)
	call addIconType("InnerFireOff", "ReplaceableTextures\\CommandButtons\\BTNInnerFireOff.blp", "\n   IconType, line 532" + wurstStackTrace)
	call addIconType("InnerFireOn", "ReplaceableTextures\\CommandButtons\\BTNInnerFireOn.blp", "\n   IconType, line 533" + wurstStackTrace)
	call addIconType("Invisibility", "ReplaceableTextures\\CommandButtons\\BTNInvisibility.blp", "\n   IconType, line 534" + wurstStackTrace)
	call addIconType("Invulnerable", "ReplaceableTextures\\CommandButtons\\BTNInvulnerable.blp", "\n   IconType, line 535" + wurstStackTrace)
	call addIconType("Jaina", "ReplaceableTextures\\CommandButtons\\BTNJaina.blp", "\n   IconType, line 536" + wurstStackTrace)
	call addIconType("Janggo", "ReplaceableTextures\\CommandButtons\\BTNJanggo.blp", "\n   IconType, line 537" + wurstStackTrace)
	call addIconType("Juggernaut", "ReplaceableTextures\\CommandButtons\\BTNJuggernaut.blp", "\n   IconType, line 538" + wurstStackTrace)
	call addIconType("JungleBeast", "ReplaceableTextures\\CommandButtons\\BTNJungleBeast.blp", "\n   IconType, line 539" + wurstStackTrace)
	call addIconType("JunkGolem", "ReplaceableTextures\\CommandButtons\\BTNJunkGolem.blp", "\n   IconType, line 540" + wurstStackTrace)
	call addIconType("Keep", "ReplaceableTextures\\CommandButtons\\BTNKeep.blp", "\n   IconType, line 541" + wurstStackTrace)
	call addIconType("KeeperGhostBlue", "ReplaceableTextures\\CommandButtons\\BTNKeeperGhostBlue.blp", "\n   IconType, line 542" + wurstStackTrace)
	call addIconType("KeeperOfTheGrove", "ReplaceableTextures\\CommandButtons\\BTNKeeperOfTheGrove.blp", "\n   IconType, line 543" + wurstStackTrace)
	call addIconType("KelThuzad", "ReplaceableTextures\\CommandButtons\\BTNKelThuzad.blp", "\n   IconType, line 544" + wurstStackTrace)
	call addIconType("Kiljaedin", "ReplaceableTextures\\CommandButtons\\BTNKiljaedin.blp", "\n   IconType, line 545" + wurstStackTrace)
	call addIconType("Knight", "ReplaceableTextures\\CommandButtons\\BTNKnight.blp", "\n   IconType, line 546" + wurstStackTrace)
	call addIconType("Kobold", "ReplaceableTextures\\CommandButtons\\BTNKobold.blp", "\n   IconType, line 547" + wurstStackTrace)
	call addIconType("KoboldGeomancer", "ReplaceableTextures\\CommandButtons\\BTNKoboldGeomancer.blp", "\n   IconType, line 548" + wurstStackTrace)
	call addIconType("KotoBeast", "ReplaceableTextures\\CommandButtons\\BTNKotoBeast.blp", "\n   IconType, line 549" + wurstStackTrace)
	call addIconType("Lament", "ReplaceableTextures\\CommandButtons\\BTNLament.blp", "\n   IconType, line 550" + wurstStackTrace)
	call addIconType("Lamp", "ReplaceableTextures\\CommandButtons\\BTNLamp.blp", "\n   IconType, line 551" + wurstStackTrace)
	call addIconType("LavaSpawn", "ReplaceableTextures\\CommandButtons\\BTNLavaSpawn.blp", "\n   IconType, line 552" + wurstStackTrace)
	call addIconType("LeatherUpgradeOne", "ReplaceableTextures\\CommandButtons\\BTNLeatherUpgradeOne.blp", "\n   IconType, line 553" + wurstStackTrace)
	call addIconType("LeatherUpgradeThree", "ReplaceableTextures\\CommandButtons\\BTNLeatherUpgradeThree.blp", "\n   IconType, line 554" + wurstStackTrace)
	call addIconType("LeatherUpgradeTwo", "ReplaceableTextures\\CommandButtons\\BTNLeatherUpgradeTwo.blp", "\n   IconType, line 555" + wurstStackTrace)
	call addIconType("LesserClarityPotion", "ReplaceableTextures\\CommandButtons\\BTNLesserClarityPotion.blp", "\n   IconType, line 556" + wurstStackTrace)
	call addIconType("LesserInvisibility", "ReplaceableTextures\\CommandButtons\\BTNLesserInvisibility.blp", "\n   IconType, line 557" + wurstStackTrace)
	call addIconType("LesserInvulneralbility", "ReplaceableTextures\\CommandButtons\\BTNLesserInvulneralbility.blp", "\n   IconType, line 558" + wurstStackTrace)
	call addIconType("LesserRejuvPotion", "ReplaceableTextures\\CommandButtons\\BTNLesserRejuvPotion.blp", "\n   IconType, line 559" + wurstStackTrace)
	call addIconType("LesserRejuvScroll", "ReplaceableTextures\\CommandButtons\\BTNLesserRejuvScroll.blp", "\n   IconType, line 560" + wurstStackTrace)
	call addIconType("LGExchange", "ReplaceableTextures\\CommandButtons\\BTNLGExchange.blp", "\n   IconType, line 561" + wurstStackTrace)
	call addIconType("LichVersion2", "ReplaceableTextures\\CommandButtons\\BTNLichVersion2.blp", "\n   IconType, line 562" + wurstStackTrace)
	call addIconType("LifeDrain", "ReplaceableTextures\\CommandButtons\\BTNLifeDrain.blp", "\n   IconType, line 563" + wurstStackTrace)
	call addIconType("LightningShield", "ReplaceableTextures\\CommandButtons\\BTNLightningShield.blp", "\n   IconType, line 564" + wurstStackTrace)
	call addIconType("LiquidFire", "ReplaceableTextures\\CommandButtons\\BTNLiquidFire.blp", "\n   IconType, line 565" + wurstStackTrace)
	call addIconType("LightningShield", "ReplaceableTextures\\CommandButtons\\BTNLightningShield.blp", "\n   IconType, line 566" + wurstStackTrace)
	call addIconType("Load", "ReplaceableTextures\\CommandButtons\\BTNLoad.blp", "\n   IconType, line 567" + wurstStackTrace)
	call addIconType("LoadDwarf", "ReplaceableTextures\\CommandButtons\\BTNLoadDwarf.blp", "\n   IconType, line 568" + wurstStackTrace)
	call addIconType("LoadPeon", "ReplaceableTextures\\CommandButtons\\BTNLoadPeon.blp", "\n   IconType, line 569" + wurstStackTrace)
	call addIconType("LobstrokkBlue", "ReplaceableTextures\\CommandButtons\\BTNLobstrokkBlue.blp", "\n   IconType, line 570" + wurstStackTrace)
	call addIconType("LobstrokkGreen", "ReplaceableTextures\\CommandButtons\\BTNLobstrokkGreen.blp", "\n   IconType, line 571" + wurstStackTrace)
	call addIconType("LobstrokkRed", "ReplaceableTextures\\CommandButtons\\BTNLobstrokkRed.blp", "\n   IconType, line 572" + wurstStackTrace)
	call addIconType("LocustSwarm", "ReplaceableTextures\\CommandButtons\\BTNLocustSwarm.blp", "\n   IconType, line 573" + wurstStackTrace)
	call addIconType("MageTower", "ReplaceableTextures\\CommandButtons\\BTNMageTower.blp", "\n   IconType, line 574" + wurstStackTrace)
	call addIconType("MagicalSentry", "ReplaceableTextures\\CommandButtons\\BTNMagicalSentry.blp", "\n   IconType, line 575" + wurstStackTrace)
	call addIconType("MagicImmunity", "ReplaceableTextures\\CommandButtons\\BTNMagicImmunity.blp", "\n   IconType, line 576" + wurstStackTrace)
	call addIconType("MagicLariet", "ReplaceableTextures\\CommandButtons\\BTNMagicLariet.blp", "\n   IconType, line 577" + wurstStackTrace)
	call addIconType("MagicVault", "ReplaceableTextures\\CommandButtons\\BTNMagicVault.blp", "\n   IconType, line 578" + wurstStackTrace)
	call addIconType("Magnataur", "ReplaceableTextures\\CommandButtons\\BTNMagnataur.blp", "\n   IconType, line 579" + wurstStackTrace)
	call addIconType("MagnataurBrown", "ReplaceableTextures\\CommandButtons\\BTNMagnataurBrown.blp", "\n   IconType, line 580" + wurstStackTrace)
	call addIconType("Mammoth", "ReplaceableTextures\\CommandButtons\\BTNMammoth.blp", "\n   IconType, line 581" + wurstStackTrace)
	call addIconType("ManaBurn", "ReplaceableTextures\\CommandButtons\\BTNManaBurn.blp", "\n   IconType, line 582" + wurstStackTrace)
	call addIconType("ManaDrain", "ReplaceableTextures\\CommandButtons\\BTNManaDrain.blp", "\n   IconType, line 583" + wurstStackTrace)
	call addIconType("ManaFlare", "ReplaceableTextures\\CommandButtons\\BTNManaFlare.blp", "\n   IconType, line 584" + wurstStackTrace)
	call addIconType("ManaFlareOff", "ReplaceableTextures\\CommandButtons\\BTNManaFlareOff.blp", "\n   IconType, line 585" + wurstStackTrace)
	call addIconType("ManaRecharge", "ReplaceableTextures\\CommandButtons\\BTNManaRecharge.blp", "\n   IconType, line 586" + wurstStackTrace)
	call addIconType("ManaRechargeOn", "ReplaceableTextures\\CommandButtons\\BTNManaRechargeOn.blp", "\n   IconType, line 587" + wurstStackTrace)
	call addIconType("ManaRechargeOff", "ReplaceableTextures\\CommandButtons\\BTNManaRechargeOff.blp", "\n   IconType, line 588" + wurstStackTrace)
	call addIconType("ManaShield", "ReplaceableTextures\\CommandButtons\\BTNManaShield.blp", "\n   IconType, line 589" + wurstStackTrace)
	call addIconType("ManaStone", "ReplaceableTextures\\CommandButtons\\BTNManaStone.blp", "\n   IconType, line 590" + wurstStackTrace)
	call addIconType("Mannoroth", "ReplaceableTextures\\CommandButtons\\BTNMannoroth.blp", "\n   IconType, line 591" + wurstStackTrace)
	call addIconType("Mantle", "ReplaceableTextures\\CommandButtons\\BTNMantle.blp", "\n   IconType, line 592" + wurstStackTrace)
	call addIconType("MantleOfIntelligence", "ReplaceableTextures\\CommandButtons\\BTNMantleOfIntelligence.blp", "\n   IconType, line 593" + wurstStackTrace)
	call addIconType("Manual", "ReplaceableTextures\\CommandButtons\\BTNManual.blp", "\n   IconType, line 594" + wurstStackTrace)
	call addIconType("Manual2", "ReplaceableTextures\\CommandButtons\\BTNManual2.blp", "\n   IconType, line 595" + wurstStackTrace)
	call addIconType("Manual3", "ReplaceableTextures\\CommandButtons\\BTNManual3.blp", "\n   IconType, line 596" + wurstStackTrace)
	call addIconType("Marine", "ReplaceableTextures\\CommandButtons\\BTNMarine.blp", "\n   IconType, line 597" + wurstStackTrace)
	call addIconType("MarketPlace", "ReplaceableTextures\\CommandButtons\\BTNMarketPlace.blp", "\n   IconType, line 598" + wurstStackTrace)
	call addIconType("Marksmanship", "ReplaceableTextures\\CommandButtons\\BTNMarksmanship.blp", "\n   IconType, line 599" + wurstStackTrace)
	call addIconType("MarkOfFire", "ReplaceableTextures\\CommandButtons\\BTNMarkOfFire.blp", "\n   IconType, line 600" + wurstStackTrace)
	call addIconType("MaskOfDeath", "ReplaceableTextures\\CommandButtons\\BTNMaskOfDeath.blp", "\n   IconType, line 601" + wurstStackTrace)
	call addIconType("MassTeleport", "ReplaceableTextures\\CommandButtons\\BTNMassTeleport.blp", "\n   IconType, line 602" + wurstStackTrace)
	call addIconType("Meatapult", "ReplaceableTextures\\CommandButtons\\BTNMeatapult.blp", "\n   IconType, line 603" + wurstStackTrace)
	call addIconType("MeatWagon", "ReplaceableTextures\\CommandButtons\\BTNMeatWagon.blp", "\n   IconType, line 604" + wurstStackTrace)
	call addIconType("MechanicalCritter", "ReplaceableTextures\\CommandButtons\\BTNMechanicalCritter.blp", "\n   IconType, line 605" + wurstStackTrace)
	call addIconType("MedalionOfCourage", "ReplaceableTextures\\CommandButtons\\BTNMedalionOfCourage.blp", "\n   IconType, line 606" + wurstStackTrace)
	call addIconType("Medivh", "ReplaceableTextures\\CommandButtons\\BTNMedivh.blp", "\n   IconType, line 607" + wurstStackTrace)
	call addIconType("MercenaryCamp", "ReplaceableTextures\\CommandButtons\\BTNMercenaryCamp.blp", "\n   IconType, line 608" + wurstStackTrace)
	call addIconType("Merchant", "ReplaceableTextures\\CommandButtons\\BTNMerchant.blp", "\n   IconType, line 609" + wurstStackTrace)
	call addIconType("Metamorphosis", "ReplaceableTextures\\CommandButtons\\BTNMetamorphosis.blp", "\n   IconType, line 610" + wurstStackTrace)
	call addIconType("MedalionOfCourage", "ReplaceableTextures\\CommandButtons\\BTNMedalionOfCourage.blp", "\n   IconType, line 611" + wurstStackTrace)
	call addIconType("Militia", "ReplaceableTextures\\CommandButtons\\BTNMilitia.blp", "\n   IconType, line 612" + wurstStackTrace)
	call addIconType("MinorRejuvPotion", "ReplaceableTextures\\CommandButtons\\BTNMinorRejuvPotion.blp", "\n   IconType, line 613" + wurstStackTrace)
	call addIconType("MirrorImage", "ReplaceableTextures\\CommandButtons\\BTNMirrorImage.blp", "\n   IconType, line 614" + wurstStackTrace)
	call addIconType("Monsoon", "ReplaceableTextures\\CommandButtons\\BTNMonsoon.blp", "\n   IconType, line 615" + wurstStackTrace)
	call addIconType("MonsterLure", "ReplaceableTextures\\CommandButtons\\BTNMonsterLure.blp", "\n   IconType, line 616" + wurstStackTrace)
	call addIconType("MoonArmor", "ReplaceableTextures\\CommandButtons\\BTNMoonArmor.blp", "\n   IconType, line 617" + wurstStackTrace)
	call addIconType("MoonKey", "ReplaceableTextures\\CommandButtons\\BTNMoonKey.blp", "\n   IconType, line 618" + wurstStackTrace)
	call addIconType("MoonStone", "ReplaceableTextures\\CommandButtons\\BTNMoonStone.blp", "\n   IconType, line 619" + wurstStackTrace)
	call addIconType("MoonWell", "ReplaceableTextures\\CommandButtons\\BTNMoonWell.blp", "\n   IconType, line 620" + wurstStackTrace)
	call addIconType("MortarTeam", "ReplaceableTextures\\CommandButtons\\BTNMortarTeam.blp", "\n   IconType, line 621" + wurstStackTrace)
	call addIconType("MountainGiant", "ReplaceableTextures\\CommandButtons\\BTNMountainGiant.blp", "\n   IconType, line 622" + wurstStackTrace)
	call addIconType("Move", "ReplaceableTextures\\CommandButtons\\BTNMove.blp", "\n   IconType, line 623" + wurstStackTrace)
	call addIconType("MurgalSlave", "ReplaceableTextures\\CommandButtons\\BTNMurgalSlave.blp", "\n   IconType, line 624" + wurstStackTrace)
	call addIconType("MurgulBloodGill", "ReplaceableTextures\\CommandButtons\\BTNMurgulBloodGill.blp", "\n   IconType, line 625" + wurstStackTrace)
	call addIconType("MurgulShadowCaster", "ReplaceableTextures\\CommandButtons\\BTNMurgulShadowCaster.blp", "\n   IconType, line 626" + wurstStackTrace)
	call addIconType("MurgulTideWarrior", "ReplaceableTextures\\CommandButtons\\BTNMurgulTideWarrior.blp", "\n   IconType, line 627" + wurstStackTrace)
	call addIconType("Murloc", "ReplaceableTextures\\CommandButtons\\BTNMurloc.blp", "\n   IconType, line 628" + wurstStackTrace)
	call addIconType("MurlocFleshEater", "ReplaceableTextures\\CommandButtons\\BTNMurlocFleshEater.blp", "\n   IconType, line 629" + wurstStackTrace)
	call addIconType("MurlocMutant", "ReplaceableTextures\\CommandButtons\\BTNMurlocMutant.blp", "\n   IconType, line 630" + wurstStackTrace)
	call addIconType("MurlocNightCrawler", "ReplaceableTextures\\CommandButtons\\BTNMurlocNightCrawler.blp", "\n   IconType, line 631" + wurstStackTrace)
endfunction

function closure_impl_51 takes integer this_44, integer i, string wurstStackTrace returns real
	local real ret = 0.2
	local integer temp = i
	if temp == 0 then
		call types("\n   IconType, line 1128" + wurstStackTrace)
	elseif temp == 1 then
		call types2("\n   IconType, line 1130" + wurstStackTrace)
	else
		set ret = -1.
	endif
	return ret
endfunction

function unit_getAbilityLevel takes unit this_44, integer id returns integer
	return GetUnitAbilityLevel(this_44, id)
endfunction

function closure_impl_52 takes integer this_44, integer i, string wurstStackTrace returns real
	local real ret = 0.
	local integer a
	if i >= dispatch_HashList_getSize(PreloadSystem_abilitysToPreload, "\n   PreloadSystem, line 66" + wurstStackTrace) then
		call unit_remove(PreloadSystem_preloadDummy)
		set ret = -1.
	else
		set a = dispatch_HashList_get(PreloadSystem_abilitysToPreload, i, "\n   PreloadSystem, line 70" + wurstStackTrace)
		call unit_addAbility(PreloadSystem_preloadDummy, Ability_id[a])
		if unit_getAbilityLevel(PreloadSystem_preloadDummy, Ability_id[a]) == 0 then
			call printError("Could not load the ability " + idInteger2IdString(Ability_id[a]))
			set ret = -2.
		else
			set ret = PreloadSystem_abilityLoadTime + PreloadSystem_abilityLoadTimeLvlBonus * (Ability_lvl[a] - 1)
		endif
	endif
	return ret
endfunction

function dispatch_PreloadAction_run takes integer this_44, integer i, string wurstStackTrace returns real
	local real run_result
	if PreloadAction_typeId[this_44] == 0 then
		if this_44 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling PreloadAction.run" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called PreloadAction.run on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	if PreloadAction_typeId[this_44] <= 662 then
		if PreloadAction_typeId[this_44] <= 659 then
			if PreloadAction_typeId[this_44] <= 658 then
				set run_result = closure_impl_52(this_44, i, "\n   PreloadSystem, line 29" + wurstStackTrace)
			else
				set run_result = closure_impl_45(this_44, i, "\n   PreloadSystem, line 29" + wurstStackTrace)
			endif
		elseif PreloadAction_typeId[this_44] <= 661 then
			set run_result = closure_impl_49(this_44, i, "\n   PreloadSystem, line 29" + wurstStackTrace)
		else
			set run_result = closure_impl_50(this_44, i, "\n   PreloadSystem, line 29" + wurstStackTrace)
		endif
	elseif PreloadAction_typeId[this_44] <= 790 then
		if PreloadAction_typeId[this_44] <= 663 then
			set run_result = closure_impl_48(this_44, i, "\n   PreloadSystem, line 29" + wurstStackTrace)
		else
			set run_result = closure_impl_47(this_44, i, "\n   PreloadSystem, line 29" + wurstStackTrace)
		endif
	elseif PreloadAction_typeId[this_44] <= 808 then
		set run_result = closure_impl_51(this_44, i, "\n   PreloadSystem, line 29" + wurstStackTrace)
	else
		set run_result = closure_impl_46(this_44, i, "\n   PreloadSystem, line 29" + wurstStackTrace)
	endif
	return run_result
endfunction

function preloadAction takes string name, integer i, string wurstStackTrace returns real
	return dispatch_PreloadAction_run(dispatch_HashMap_get(PreloadSystem_preloadActions, StringHash(name), "\n   PreloadSystem, line 35" + wurstStackTrace), i, "\n   PreloadSystem, line 35" + wurstStackTrace)
endfunction

function Preload_preload takes string wurstStackTrace returns nothing
	local real check
	call print("1")
	if Preload_initOrder[Preload_preloadStatus] == null then
		call ClearTextMessages()
		call print("Preload done in " + real_toString(Preload_progress) + " sec!")
		call dispatch_Event_callActions(Preload_preloadEnd, 0, "\n   GameStart, line 157" + wurstStackTrace)
		call timer_release(GetExpiredTimer(), "\n   GameStart, line 158" + wurstStackTrace)
		return
	endif
	call print("2")
	set check = preloadAction(Preload_initOrder[Preload_preloadStatus], Preload_loopCounter, "\n   GameStart, line 161" + wurstStackTrace)
	call print("3")
	set Preload_loopCounter = Preload_loopCounter + 1
	call print("4")
	if check == -2. then
		call printError("An error while Preloading has ocurred")
		return
	elseif check == -1. then
		call print("5")
		set Preload_loopCounter = 0
		set Preload_preloadStatus = Preload_preloadStatus + 1
		call timer_start(GetExpiredTimer(), 0.05, ref_function_bridge_Preload_preload_2)
		set Preload_progress = Preload_progress + 0.05
	else
		call timer_start(GetExpiredTimer(), check, ref_function_bridge_Preload_preload_3)
		set Preload_progress = Preload_progress + check
	endif
	if Preload_showProgress then
		call ClearTextMessages()
		call print("Loading " + Preload_initOrder[Preload_preloadStatus] + ": " + real_toString(100. * (Preload_progress / Preload_maxProgress)) + "%")
	endif
endfunction

function bridge_Preload_preload takes nothing returns nothing
	call Preload_preload("\n   GameStart, line 175")
endfunction

function bridge_Preload_preload_2 takes nothing returns nothing
	call Preload_preload("\n   GameStart, line 172")
endfunction

function bridge_Preload_preload_3 takes nothing returns nothing
	call Preload_preload("\n   GameStart, line 150")
endfunction

function Unit_addKnock takes integer this_44, real x, real y, string wurstStackTrace returns nothing
	local integer tempIndex = this_44
	local integer tempIndex_2
	local integer tempIndex_3
	local integer temp
	set Unit_wallLoc[tempIndex] = 0.
	set Unit_wallLoc_2[tempIndex] = 0.
	set tempIndex_2 = this_44
	set temp = tempIndex_2
	set tempIndex_3 = this_44
	set Unit_knockSpeed[temp] = vec2_op_plus(Unit_knockSpeed[tempIndex_3], Unit_knockSpeed_2[tempIndex_3], x, y)
	set Unit_knockSpeed_2[tempIndex_2] = vec2_op_plus_return_y
	if  not Unit_hasKnockback[this_44] then
		set Unit_hasKnockback[this_44] = true
		call dispatch_LinkedList_add(UnitClass_knocklist, this_44, "\n   UnitClass, line 278" + wurstStackTrace)
	endif
	set Unit_lastCollision[this_44] = 0
endfunction

function dispatch_Unit_addKnock takes integer this_44, real x, real y, string wurstStackTrace returns nothing
	if Unit_typeId[this_44] == 0 then
		if this_44 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Unit.addKnock" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Unit.addKnock on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	if Unit_typeId[this_44] <= 695 then
		call Unit_addKnock(this_44, x, y, "\n   UnitClass, line 273" + wurstStackTrace)
	else
		call Unit_addKnock(this_44, x, y, "\n   UnitClass, line 273" + wurstStackTrace)
	endif
endfunction

function distanceBetweenCoords takes real x1, real y1, real x2, real y2 returns real
	return SquareRoot((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1))
endfunction

function item_getX takes item this_44 returns real
	return GetItemX(this_44)
endfunction

function item_getY takes item this_44 returns real
	return GetItemY(this_44)
endfunction

function item_getPos takes item this_44 returns real
	set item_getPos_return_x = item_getX(this_44)
	set item_getPos_return_y = item_getY(this_44)
	return item_getPos_return_x
endfunction

function isTerrainWalkable takes real x, real y returns boolean
	local real temp_Terrain_tempPos_x
	local real temp_Terrain_tempPos_y
	call MoveRectTo(Terrain_find, x, y)
	call EnumItemsInRect(Terrain_find, null, ref_function_hideItem)
	call SetItemPosition(Terrain_dItem, x, y)
	set temp_Terrain_tempPos_x = item_getPos(Terrain_dItem)
	set temp_Terrain_tempPos_y = item_getPos_return_y
	set Terrain_tempPos_x = temp_Terrain_tempPos_x
	set Terrain_tempPos_y = temp_Terrain_tempPos_y
	call SetItemVisible(Terrain_dItem, false)
	loop
		exitwhen  not (Terrain_hidMax > 0)
		set Terrain_hidMax = Terrain_hidMax - 1
		call SetItemVisible(Terrain_hid[Terrain_hidMax], true)
		set Terrain_hid[Terrain_hidMax] = null
	endloop
	return (Terrain_tempPos_x - x) * (Terrain_tempPos_x - x) + (Terrain_tempPos_y - y) * (Terrain_tempPos_y - y) <= Terrain_MAX_RANGE * Terrain_MAX_RANGE and ( not IsTerrainPathable(x, y, PATHING_TYPE_WALKABILITY))
endfunction

function Pull2_theSpell takes integer this_44, string wurstStackTrace returns nothing
	local real dist
	local real x
	local real y
	local integer tempIndex
	local integer tempIndex_2
	local integer temp
	set Pull2_i[this_44] = Pull2_i[this_44] - 1
	call SetLightningColor(Pull2_l[this_44], Pull2_i[this_44] * 1. / Pull2_imax[this_44], Pull2_i[this_44] * 1. / Pull2_imax[this_44], Pull2_i[this_44] * 1. / Pull2_imax[this_44], 1.)
	call MoveLightningEx(Pull2_l[this_44], true, unit_getX(Pull2_u[this_44]), unit_getY(Pull2_u[this_44]), 50., unit_getX(Pull2_ut[this_44]), unit_getY(Pull2_ut[this_44]), 50.)
	set dist = distanceBetweenCoords(unit_getX(Pull2_u[this_44]), unit_getY(Pull2_u[this_44]), unit_getX(Pull2_ut[this_44]), unit_getY(Pull2_ut[this_44]))
	if Pull2_i[this_44] <= 0 then
		call timer_release(Pull2_t[this_44], "\n   Pull2, line 60" + wurstStackTrace)
		call DestroyLightning(Pull2_l[this_44])
	elseif dist > 100. then
		set tempIndex = Pull2_uut[this_44]
		set temp = tempIndex
		set tempIndex_2 = Pull2_uut[this_44]
		set Unit_knockSpeed[temp] = vec2_op_mult(Unit_knockSpeed[tempIndex_2], Unit_knockSpeed_2[tempIndex_2], 0.5)
		set Unit_knockSpeed_2[tempIndex] = vec2_op_mult_return_y
		set x = 0.
		set y = 0.
		if isTerrainWalkable(unit_getX(Pull2_ut[this_44]) + x, unit_getY(Pull2_ut[this_44]) + y) == true then
			call print(R2S(RAbsBJ(x) + RAbsBJ(y)))
			set Unit_lastKnocker[Pull2_uut[this_44]] = unit_getUserData(Pull2_u[this_44])
			call dispatch_Unit_addKnock(Pull2_uut[this_44], x, y, "\n   Pull2, line 70" + wurstStackTrace)
		else
			set Pull2_i[this_44] = 0
		endif
	else
		set Pull2_i[this_44] = 0
	endif
endfunction

function dispatch_Pull2_theSpell takes integer this_44, string wurstStackTrace returns nothing
	if Pull2_typeId[this_44] == 0 then
		if this_44 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Pull2.theSpell" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Pull2.theSpell on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call Pull2_theSpell(this_44, "\n   Pull2, line 53" + wurstStackTrace)
endfunction

function Pull2_blackHCall takes string wurstStackTrace returns nothing
	call dispatch_Pull2_theSpell(timer_getData(GetExpiredTimer(), "\n   Pull2, line 51" + wurstStackTrace), "\n   Pull2, line 51" + wurstStackTrace)
endfunction

function bridge_Pull2_blackHCall takes nothing returns nothing
	call Pull2_blackHCall("\n   Pull2, line 48")
endfunction

function getTerrainZ takes real x, real y returns real
	call MoveLocation(Terrain_tempLoc, x, y)
	return GetLocationZ(Terrain_tempLoc)
endfunction

function RockThrow_rockMove takes integer this_44, string wurstStackTrace returns nothing
	local real terrainZ
	local group wurst__iterator0
	local unit u_2
	local integer rocky
	set RockThrow_i[this_44] = RockThrow_i[this_44] - 1
	set RockThrow_c[this_44] = RockThrow_c[this_44] + 1
	call SetUnitPosition(RockThrow_dummy[this_44], unit_getX(RockThrow_dummy[this_44]) + RockThrow_x[this_44], unit_getY(RockThrow_dummy[this_44]) + RockThrow_y[this_44])
	call SetUnitFacing(RockThrow_dummy[this_44], I2R(RockThrow_c[this_44]))
	set RockThrow_currentZ[this_44] = RockThrow_currentZ[this_44] + RockThrow_z[this_44]
	set terrainZ = getTerrainZ(unit_getX(RockThrow_dummy[this_44]), unit_getY(RockThrow_dummy[this_44]))
	call SetUnitFlyHeight(RockThrow_dummy[this_44], RockThrow_currentZ[this_44] - terrainZ, 0.)
	set RockThrow_z[this_44] = RockThrow_z[this_44] - RockThrow_grav[this_44]
	if RockThrow_i[this_44] <= 0 then
		set RockThrow_e[this_44] = AddSpecialEffect("Abilities\\Spells\\Orc\\WarStomp\\WarStompCaster.mdl", unit_getX(RockThrow_dummy[this_44]), unit_getY(RockThrow_dummy[this_44]))
		call effect_destr(RockThrow_e[this_44])
		set RockThrow_g[this_44] = CreateGroup()
		call GroupEnumUnitsInRange(RockThrow_g[this_44], unit_getX(RockThrow_dummy[this_44]), unit_getY(RockThrow_dummy[this_44]), RockThrow_range[this_44], null)
		set wurst__iterator0 = group_iterator(RockThrow_g[this_44])
		loop
			exitwhen  not group_hasNext(wurst__iterator0)
			set u_2 = group_next(wurst__iterator0)
			set RockThrow_x[this_44] = 1.
			set RockThrow_y[this_44] = 1.
			set rocky = GetUnitUserData(u_2)
			call dispatch_Unit_addKnock(rocky, RockThrow_x[this_44], RockThrow_y[this_44], "\n   RockThrow, line 92" + wurstStackTrace)
			set Unit_lastKnocker[rocky] = unit_getUserData(RockThrow_u[this_44])
		endloop
		call group_close(wurst__iterator0)
		call DestroyGroup(RockThrow_g[this_44])
		call RemoveUnit(RockThrow_dummy[this_44])
		call timer_release(RockThrow_t[this_44], "\n   RockThrow, line 96" + wurstStackTrace)
	endif
	set wurst__iterator0 = null
	set u_2 = null
endfunction

function dispatch_RockThrow_rockMove takes integer this_44, string wurstStackTrace returns nothing
	if RockThrow_typeId[this_44] == 0 then
		if this_44 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling RockThrow.rockMove" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called RockThrow.rockMove on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call RockThrow_rockMove(this_44, "\n   RockThrow, line 70" + wurstStackTrace)
endfunction

function RockThrow_rockMoveCall takes string wurstStackTrace returns nothing
	local timer t = GetExpiredTimer()
	local integer i = timer_getData(t, "\n   RockThrow, line 65" + wurstStackTrace)
	local integer tempObject = i
	call dispatch_RockThrow_rockMove(tempObject, "\n   RockThrow, line 67" + wurstStackTrace)
	set t = null
endfunction

function bridge_RockThrow_rockMoveCall takes nothing returns nothing
	call RockThrow_rockMoveCall("\n   RockThrow, line 51")
endfunction

function SamplePointSpell_callback takes integer this_44 returns nothing
endfunction

function dispatch_SamplePointSpell_callback takes integer this_44, string wurstStackTrace returns nothing
	if SamplePointSpell_typeId[this_44] == 0 then
		if this_44 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling SamplePointSpell.callback" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called SamplePointSpell.callback on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call SamplePointSpell_callback(this_44)
endfunction

function SamplePointSpell_callCallback takes string wurstStackTrace returns nothing
	call dispatch_SamplePointSpell_callback(timer_getData(GetExpiredTimer(), "\n   SpellTemplate, line 66" + wurstStackTrace), "\n   SpellTemplate, line 66" + wurstStackTrace)
endfunction

function bridge_SamplePointSpell_callCallback takes nothing returns nothing
	call SamplePointSpell_callCallback("\n   SpellTemplate, line 63")
endfunction

function Shield_onExpire takes string wurstStackTrace returns nothing
	call dispatch_Shield_destroyShield(timer_getData(GetExpiredTimer(), "\n   Shield, line 90" + wurstStackTrace), "\n   Shield, line 90" + wurstStackTrace)
endfunction

function bridge_Shield_onExpire takes nothing returns nothing
	call Shield_onExpire("\n   Shield, line 79")
endfunction

function Spell_timedDisableCastDummy takes string wurstStackTrace returns nothing
	local timer t = GetExpiredTimer()
	local integer s = timer_getData(t, "\n   Spell, line 170" + wurstStackTrace)
	call SetPlayerAbilityAvailable(Unit_owner[Spell_owner[s]], Spell_castDummy[s], false)
	call timer_release(t, "\n   Spell, line 172" + wurstStackTrace)
	set t = null
	set t = null
endfunction

function bridge_Spell_timedDisableCastDummy takes nothing returns nothing
	call Spell_timedDisableCastDummy("\n   Spell, line 179")
endfunction

function Stun_onDestroy takes integer this_44, string wurstStackTrace returns nothing
	call UnitRemoveAbility(Unit_u[Stun_u[this_44]], 1112560453)
	call timer_release(Stun_t[this_44], "\n   Stun, line 34" + wurstStackTrace)
endfunction

function dealloc_Stun takes integer obj, string wurstStackTrace returns nothing
	if Stun_typeId[obj] == 0 then
		call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Double free: object of type Stun" + wurstStackTrace)
		call I2S(1 / 0)
	else
		set Stun_firstFree = Stun_firstFree + 1
		set Stun_typeId[obj] = 0
	endif
endfunction

function destroyStun takes integer this_44, string wurstStackTrace returns nothing
	call Stun_onDestroy(this_44, "\n   Stun, line 31" + wurstStackTrace)
	call dealloc_Stun(this_44, "\n   Stun, line 31" + wurstStackTrace)
endfunction

function dispatch_Stun_destroyStun takes integer this_44, string wurstStackTrace returns nothing
	if Stun_typeId[this_44] == 0 then
		if this_44 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Stun.destroyStun" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Stun.destroyStun on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call destroyStun(this_44, "\n   Stun, line 6" + wurstStackTrace)
endfunction

function Stun_destroyStun takes string wurstStackTrace returns nothing
	call dispatch_Stun_destroyStun(timer_getData(GetExpiredTimer(), "\n   Stun, line 29" + wurstStackTrace), "\n   Stun, line 29" + wurstStackTrace)
endfunction

function bridge_Stun_destroyStun takes nothing returns nothing
	call Stun_destroyStun("\n   Stun, line 18")
endfunction

function bridge_Stun_destroyStun_2 takes nothing returns nothing
	call Stun_destroyStun("\n   Stun, line 25")
endfunction

function Queue_getSize takes integer this_44 returns integer
	return Queue_size[this_44]
endfunction

function dispatch_Queue_getSize takes integer this_44, string wurstStackTrace returns integer
	local integer getSize_result
	if Queue_typeId[this_44] == 0 then
		if this_44 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Queue.getSize" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Queue.getSize on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	set getSize_result = Queue_getSize(this_44)
	return getSize_result
endfunction

function Spellcast_onDestroy takes integer this_44 returns nothing
endfunction

function dealloc_Spellcast takes integer obj, string wurstStackTrace returns nothing
	if Spellcast_typeId[obj] == 0 then
		call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Double free: object of type Spellcast" + wurstStackTrace)
		call I2S(1 / 0)
	else
		set Spellcast_nextFree[Spellcast_firstFree] = obj
		set Spellcast_firstFree = Spellcast_firstFree + 1
		set Spellcast_typeId[obj] = 0
	endif
endfunction

function destroySpellcast takes integer this_44, string wurstStackTrace returns nothing
	call Spellcast_onDestroy(this_44)
	call dealloc_Spellcast(this_44, "\n   Spell, line 112" + wurstStackTrace)
endfunction

function dispatch_Spellcast_destroySpellcast takes integer this_44, string wurstStackTrace returns nothing
	if Spellcast_typeId[this_44] == 0 then
		if this_44 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Spellcast.destroySpellcast" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Spellcast.destroySpellcast on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call destroySpellcast(this_44, "\n   Spell, line 112" + wurstStackTrace)
endfunction

function SpellType_toOrderId takes integer this_44 returns integer
	local integer temp = this_44
	if temp == 0 then
		return Spell_qSpellId
	elseif temp == 1 then
		return Spell_wSpellId
	elseif temp == 2 then
		return Spell_eSpellId
	elseif temp == 3 then
		return Spell_rSpellId
	elseif temp == 4 then
		return Spell_dSpellId
	elseif temp == 5 then
		return Spell_fSpellId
	else
		return -1
	endif
endfunction

function Spell_disableCastDummyTimed takes integer this_44, string wurstStackTrace returns nothing
	local timer receiver = getTimer("\n   Spell, line 179" + wurstStackTrace)
	call timer_setData(receiver, this_44, "\n   Spell, line 179" + wurstStackTrace)
	call timer_start(receiver, 0.0, ref_function_bridge_Spell_timedDisableCastDummy)
	set receiver = null
endfunction

function dispatch_Spell_disableCastDummyTimed takes integer this_44, string wurstStackTrace returns nothing
	if Spell_typeId[this_44] == 0 then
		if this_44 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Spell.disableCastDummyTimed" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Spell.disableCastDummyTimed on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	if Spell_typeId[this_44] <= 816 then
		if Spell_typeId[this_44] <= 694 then
			call Spell_disableCastDummyTimed(this_44, "\n   Spell, line 178" + wurstStackTrace)
		else
			call Spell_disableCastDummyTimed(this_44, "\n   Spell, line 178" + wurstStackTrace)
		endif
	else
		call Spell_disableCastDummyTimed(this_44, "\n   Spell, line 178" + wurstStackTrace)
	endif
endfunction

function Spell_enableCastDummy takes integer this_44 returns nothing
	call SetPlayerAbilityAvailable(Unit_owner[Spell_owner[this_44]], Spell_castDummy[this_44], true)
endfunction

function dispatch_Spell_enableCastDummy takes integer this_44, string wurstStackTrace returns nothing
	if Spell_typeId[this_44] == 0 then
		if this_44 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Spell.enableCastDummy" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Spell.enableCastDummy on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	if Spell_typeId[this_44] <= 816 then
		if Spell_typeId[this_44] <= 694 then
			call Spell_enableCastDummy(this_44)
		else
			call Spell_enableCastDummy(this_44)
		endif
	else
		call Spell_enableCastDummy(this_44)
	endif
endfunction

function InstantSpell_forceCast takes integer this_44, integer sc, string wurstStackTrace returns nothing
	call dispatch_Spell_enableCastDummy(this_44, "\n   Spell, line 222" + wurstStackTrace)
	call IssueImmediateOrderById(Unit_u[Spell_owner[this_44]], SpellType_toOrderId(Spell_st[this_44]))
	call dispatch_Spell_disableCastDummyTimed(this_44, "\n   Spell, line 224" + wurstStackTrace)
endfunction

function PointOrUnitSpell_forceCast takes integer this_44, integer sc, string wurstStackTrace returns nothing
	local integer tempIndex
	local real tempTupleSelectionResult_1
	local real temp_tempTupleSelectionResult_1
	local real temp_tempTupleSelectionResult_2
	local integer tempIndex_2
	local real tempTupleSelectionResult_2
	local real temp_tempTupleSelectionResult_1_2
	local real temp_tempTupleSelectionResult_2_2
	local unit temp
	local integer temp_2
	local real temp_3
	call dispatch_Spell_enableCastDummy(this_44, "\n   Spell, line 280" + wurstStackTrace)
	if Spellcast_target[sc] == null then
		set temp = Unit_u[Spell_owner[this_44]]
		set temp_2 = SpellType_toOrderId(Spell_st[this_44])
		set tempIndex = sc
		set temp_tempTupleSelectionResult_1 = Spellcast_pos[tempIndex]
		set temp_tempTupleSelectionResult_2 = Spellcast_pos_2[tempIndex]
		set tempTupleSelectionResult_1 = temp_tempTupleSelectionResult_1
		set temp_3 = tempTupleSelectionResult_1
		set tempIndex_2 = sc
		set temp_tempTupleSelectionResult_1_2 = Spellcast_pos[tempIndex_2]
		set temp_tempTupleSelectionResult_2_2 = Spellcast_pos_2[tempIndex_2]
		set tempTupleSelectionResult_2 = temp_tempTupleSelectionResult_2_2
		call IssuePointOrderById(temp, temp_2, temp_3, tempTupleSelectionResult_2)
	else
		call IssueTargetOrderById(Unit_u[Spell_owner[this_44]], SpellType_toOrderId(Spell_st[this_44]), Spellcast_target[sc])
	endif
	call dispatch_Spell_disableCastDummyTimed(this_44, "\n   Spell, line 285" + wurstStackTrace)
	set temp = null
endfunction

function PointSpell_forceCast takes integer this_44, integer sc returns nothing
	local unit temp = Unit_u[Spell_owner[this_44]]
	local integer temp_2 = SpellType_toOrderId(Spell_st[this_44])
	local integer tempIndex = sc
	local real temp_tempTupleSelectionResult_1 = Spellcast_pos[tempIndex]
	local real temp_tempTupleSelectionResult_2 = Spellcast_pos_2[tempIndex]
	local real tempTupleSelectionResult_1 = temp_tempTupleSelectionResult_1
	local real temp_3 = tempTupleSelectionResult_1
	local integer tempIndex_2 = sc
	local real temp_tempTupleSelectionResult_1_2 = Spellcast_pos[tempIndex_2]
	local real temp_tempTupleSelectionResult_2_2 = Spellcast_pos_2[tempIndex_2]
	local real tempTupleSelectionResult_2 = temp_tempTupleSelectionResult_2_2
	call IssuePointOrderById(temp, temp_2, temp_3, tempTupleSelectionResult_2)
	set temp = null
endfunction

function UnitSpell_forceCast takes integer this_44, integer sc, string wurstStackTrace returns nothing
	call dispatch_Spell_enableCastDummy(this_44, "\n   Spell, line 259" + wurstStackTrace)
	call IssueTargetOrderById(Unit_u[Spell_owner[this_44]], SpellType_toOrderId(Spell_st[this_44]), Spellcast_target[sc])
	call dispatch_Spell_disableCastDummyTimed(this_44, "\n   Spell, line 261" + wurstStackTrace)
endfunction

function dispatch_Spell_forceCast takes integer this_44, integer sc, string wurstStackTrace returns nothing
	if Spell_typeId[this_44] == 0 then
		if this_44 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Spell.forceCast" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Spell.forceCast on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	if Spell_typeId[this_44] <= 693 then
		if Spell_typeId[this_44] <= 692 then
			if Spell_typeId[this_44] <= 691 then
				call InstantSpell_forceCast(this_44, sc, "\n   Spell, line 198" + wurstStackTrace)
			else
				call PointSpell_forceCast(this_44, sc)
			endif
		else
			call UnitSpell_forceCast(this_44, sc, "\n   Spell, line 198" + wurstStackTrace)
		endif
	elseif Spell_typeId[this_44] <= 816 then
		if Spell_typeId[this_44] <= 694 then
			call PointOrUnitSpell_forceCast(this_44, sc, "\n   Spell, line 198" + wurstStackTrace)
		else
			call PointSpell_forceCast(this_44, sc)
		endif
	else
		call PointSpell_forceCast(this_44, sc)
	endif
endfunction

function Spellcast_forceC takes integer this_44, string wurstStackTrace returns nothing
	call dispatch_Spell_forceCast(Spellcast_spell[this_44], this_44, "\n   Spell, line 118" + wurstStackTrace)
endfunction

function dispatch_Spellcast_forceC takes integer this_44, string wurstStackTrace returns nothing
	if Spellcast_typeId[this_44] == 0 then
		if this_44 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Spellcast.forceC" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Spellcast.forceC on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call Spellcast_forceC(this_44, "\n   Spell, line 117" + wurstStackTrace)
endfunction

function Hero_nextOrder takes integer this_44, string wurstStackTrace returns nothing
	local integer sc
	if dispatch_Queue_getSize(Hero_castQueue[this_44], "\n   HeroClass, line 213" + wurstStackTrace) <= 0 then
		if Hero_mainOrder[this_44] != 0 and Hero_mainOrder[this_44] != Hero_lastOrdered[this_44] then
			set Hero_lastOrdered[this_44] = Hero_mainOrder[this_44]
			if dispatch_Order_issueToUnit(Hero_mainOrder[this_44], Unit_u[this_44], "\n   HeroClass, line 216" + wurstStackTrace) then
				call dispatch_Hero_setMainOrder(this_44, 0, "\n   HeroClass, line 217" + wurstStackTrace)
			endif
		endif
	else
		set sc = dispatch_Queue_dequeue(Hero_castQueue[this_44], "\n   HeroClass, line 219" + wurstStackTrace)
		call dispatch_Spellcast_forceC(sc, "\n   HeroClass, line 220" + wurstStackTrace)
		call dispatch_Spellcast_destroySpellcast(sc, "\n   HeroClass, line 221" + wurstStackTrace)
	endif
endfunction

function dispatch_Hero_nextOrder takes integer this_44, string wurstStackTrace returns nothing
	if Unit_typeId[this_44] == 0 then
		if this_44 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Hero.nextOrder" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Hero.nextOrder on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call Hero_nextOrder(this_44, "\n   HeroClass, line 212" + wurstStackTrace)
endfunction

function Hero_spellEnd takes integer this_44, string wurstStackTrace returns nothing
	set Hero_acceptOrders[this_44] = true
	call dispatch_Hero_nextOrder(this_44, "\n   HeroClass, line 210" + wurstStackTrace)
endfunction

function dispatch_Hero_spellEnd takes integer this_44, string wurstStackTrace returns nothing
	if Unit_typeId[this_44] == 0 then
		if this_44 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Hero.spellEnd" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Hero.spellEnd on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call Hero_spellEnd(this_44, "\n   HeroClass, line 208" + wurstStackTrace)
endfunction

function TestSpell1_onDestroy takes integer this_44 returns nothing
endfunction

function dealloc_TestSpell1 takes integer obj, string wurstStackTrace returns nothing
	if TestSpell1_typeId[obj] == 0 then
		call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Double free: object of type TestSpell1" + wurstStackTrace)
		call I2S(1 / 0)
	else
		set TestSpell1_nextFree[TestSpell1_firstFree] = obj
		set TestSpell1_firstFree = TestSpell1_firstFree + 1
		set TestSpell1_typeId[obj] = 0
	endif
endfunction

function destroyTestSpell1 takes integer this_44, string wurstStackTrace returns nothing
	call TestSpell1_onDestroy(this_44)
	call dealloc_TestSpell1(this_44, "\n   SampleSpells, line 30" + wurstStackTrace)
endfunction

function dispatch_TestSpell1_destroyTestSpell1 takes integer this_44, string wurstStackTrace returns nothing
	if TestSpell1_typeId[this_44] == 0 then
		if this_44 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling TestSpell1.destroyTestSpell1" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called TestSpell1.destroyTestSpell1 on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call destroyTestSpell1(this_44, "\n   SampleSpells, line 30" + wurstStackTrace)
endfunction

function TestSpell1_callback takes integer this_44, string wurstStackTrace returns nothing
	call ResetUnitAnimation(Unit_u[TestSpell1_caster[this_44]])
	call dispatch_Hero_spellEnd(TestSpell1_caster[this_44], "\n   SampleSpells, line 56" + wurstStackTrace)
	call dispatch_TestSpell1_destroyTestSpell1(this_44, "\n   SampleSpells, line 57" + wurstStackTrace)
endfunction

function dispatch_TestSpell1_callback takes integer this_44, string wurstStackTrace returns nothing
	if TestSpell1_typeId[this_44] == 0 then
		if this_44 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling TestSpell1.callback" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called TestSpell1.callback on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call TestSpell1_callback(this_44, "\n   SampleSpells, line 54" + wurstStackTrace)
endfunction

function TestSpell1_callCallback takes string wurstStackTrace returns nothing
	call dispatch_TestSpell1_callback(timer_getData(GetExpiredTimer(), "\n   SampleSpells, line 50" + wurstStackTrace), "\n   SampleSpells, line 50" + wurstStackTrace)
endfunction

function bridge_TestSpell1_callCallback takes nothing returns nothing
	call TestSpell1_callCallback("\n   SampleSpells, line 47")
endfunction

function TextTag_onDestroy takes integer this_44, string wurstStackTrace returns nothing
	local multiboarditem mbi
	local multiboarditem receiver
	call timer_release(TextTag_t[this_44], "\n   FloatingText, line 66" + wurstStackTrace)
	call DestroyTextTag(TextTag_tt[this_44])
	if TextTag_tType[this_44] == 0 then
	elseif TextTag_tType[this_44] == 1 then
	elseif TextTag_tType[this_44] == 2 then
	endif
	set InstanceBoard_count[ShowInstances_classId] = InstanceBoard_count[ShowInstances_classId] - 1
	set mbi = multiboard_getItem(InstanceBoard_mb, ShowInstances_classId, 1)
	set receiver = mbi
	call multiboarditem_setValue(receiver, int_toString(InstanceBoard_count[ShowInstances_classId]))
	call multiboarditem_release(receiver)
	set mbi = null
	set receiver = null
endfunction

function dealloc_TextTag takes integer obj, string wurstStackTrace returns nothing
	if TextTag_typeId[obj] == 0 then
		call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Double free: object of type TextTag" + wurstStackTrace)
		call I2S(1 / 0)
	else
		set TextTag_firstFree = TextTag_firstFree + 1
		set TextTag_typeId[obj] = 0
	endif
endfunction

function destroyTextTag takes integer this_44, string wurstStackTrace returns nothing
	call TextTag_onDestroy(this_44, "\n   FloatingText, line 65" + wurstStackTrace)
	call dealloc_TextTag(this_44, "\n   FloatingText, line 65" + wurstStackTrace)
endfunction

function dispatch_TextTag_destroyTextTag takes integer this_44, string wurstStackTrace returns nothing
	if TextTag_typeId[this_44] == 0 then
		if this_44 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling TextTag.destroyTextTag" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called TextTag.destroyTextTag on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call destroyTextTag(this_44, "\n   FloatingText, line 7" + wurstStackTrace)
endfunction

function TextTag_destroyTextTag takes string wurstStackTrace returns nothing
	call dispatch_TextTag_destroyTextTag(timer_getData(GetExpiredTimer(), "\n   FloatingText, line 63" + wurstStackTrace), "\n   FloatingText, line 63" + wurstStackTrace)
endfunction

function bridge_TextTag_destroyTextTag takes nothing returns nothing
	call TextTag_destroyTextTag("\n   FloatingText, line 54")
endfunction

function bridge_TextTag_destroyTextTag_2 takes nothing returns nothing
	call TextTag_destroyTextTag("\n   FloatingText, line 60")
endfunction

function bridge_TextTag_destroyTextTag_3 takes nothing returns nothing
	call TextTag_destroyTextTag("\n   FloatingText, line 57")
endfunction

function Unit_makeVunerable takes integer this_44 returns nothing
	set Unit_vunerableCount[this_44] = Unit_vunerableCount[this_44] - 1
	if Unit_vunerableCount[this_44] <= 0 then
		set Unit_vunerable[this_44] = true
		set Unit_vunerableCount[this_44] = 0
	endif
endfunction

function dispatch_Unit_makeVunerable takes integer this_44, string wurstStackTrace returns nothing
	if Unit_typeId[this_44] == 0 then
		if this_44 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Unit.makeVunerable" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Unit.makeVunerable on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	if Unit_typeId[this_44] <= 695 then
		call Unit_makeVunerable(this_44)
	else
		call Unit_makeVunerable(this_44)
	endif
endfunction

function Unit_callMakeVunerable takes string wurstStackTrace returns nothing
	local timer t = GetExpiredTimer()
	call dispatch_Unit_makeVunerable(timer_getData(t, "\n   UnitClass, line 422" + wurstStackTrace), "\n   UnitClass, line 422" + wurstStackTrace)
	call timer_release(t, "\n   UnitClass, line 423" + wurstStackTrace)
	set t = null
	set t = null
endfunction

function bridge_Unit_callMakeVunerable takes nothing returns nothing
	call Unit_callMakeVunerable("\n   UnitClass, line 418")
endfunction

function OnDamageData_onDestroy takes integer this_44 returns nothing
endfunction

function dealloc_OnDamageData takes integer obj, string wurstStackTrace returns nothing
	if OnDamageData_typeId[obj] == 0 then
		call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Double free: object of type OnDamageData" + wurstStackTrace)
		call I2S(1 / 0)
	else
		set OnDamageData_nextFree[OnDamageData_firstFree] = obj
		set OnDamageData_firstFree = OnDamageData_firstFree + 1
		set OnDamageData_typeId[obj] = 0
	endif
endfunction

function destroyOnDamageData takes integer this_44, string wurstStackTrace returns nothing
	call OnDamageData_onDestroy(this_44)
	call dealloc_OnDamageData(this_44, "\n   UnitEvents, line 32" + wurstStackTrace)
endfunction

function dispatch_OnDamageData_destroyOnDamageData takes integer this_44, string wurstStackTrace returns nothing
	if OnDamageData_typeId[this_44] == 0 then
		if this_44 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling OnDamageData.destroyOnDamageData" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called OnDamageData.destroyOnDamageData on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call destroyOnDamageData(this_44, "\n   UnitEvents, line 32" + wurstStackTrace)
endfunction

function alloc_OnDamageData takes nothing returns integer
	local integer this_44
	if OnDamageData_firstFree == 0 then
		set OnDamageData_maxIndex = OnDamageData_maxIndex + 1
		set this_44 = OnDamageData_maxIndex
	else
		set OnDamageData_firstFree = OnDamageData_firstFree - 1
		set this_44 = OnDamageData_nextFree[OnDamageData_firstFree]
	endif
	set OnDamageData_typeId[this_44] = 766
	return this_44
endfunction

function construct_OnDamageData takes integer this_44 returns nothing
	set OnDamageData_stop[this_44] = false
endfunction

function new_OnDamageData takes nothing returns integer
	local integer this_44 = alloc_OnDamageData()
	call construct_OnDamageData(this_44)
	return this_44
endfunction

function OnDamageEvent_fire takes integer this_44, integer source, real dmg, string wurstStackTrace returns real
	local integer data = new_OnDamageData()
	local real finalDmg
	set OnDamageData_damage[data] = dmg
	call Event_callActions(this_44, data, "\n   UnitEvents, line 52" + wurstStackTrace)
	set finalDmg = OnDamageData_damage[data]
	call dispatch_OnDamageData_destroyOnDamageData(data, "\n   UnitEvents, line 54" + wurstStackTrace)
	return finalDmg
endfunction

function dispatch_OnDamageEvent_fire takes integer this_44, integer source, real dmg, string wurstStackTrace returns real
	local real fire_result
	if Event_typeId[this_44] == 0 then
		if this_44 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling OnDamageEvent.fire" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called OnDamageEvent.fire on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	set fire_result = OnDamageEvent_fire(this_44, source, dmg, "\n   UnitEvents, line 47" + wurstStackTrace)
	return fire_result
endfunction

function PreDamageData_onDestroy takes integer this_44 returns nothing
endfunction

function dealloc_PreDamageData takes integer obj, string wurstStackTrace returns nothing
	if PreDamageData_typeId[obj] == 0 then
		call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Double free: object of type PreDamageData" + wurstStackTrace)
		call I2S(1 / 0)
	else
		set PreDamageData_nextFree[PreDamageData_firstFree] = obj
		set PreDamageData_firstFree = PreDamageData_firstFree + 1
		set PreDamageData_typeId[obj] = 0
	endif
endfunction

function destroyPreDamageData takes integer this_44, string wurstStackTrace returns nothing
	call PreDamageData_onDestroy(this_44)
	call dealloc_PreDamageData(this_44, "\n   UnitEvents, line 10" + wurstStackTrace)
endfunction

function dispatch_PreDamageData_destroyPreDamageData takes integer this_44, string wurstStackTrace returns nothing
	if PreDamageData_typeId[this_44] == 0 then
		if this_44 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling PreDamageData.destroyPreDamageData" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called PreDamageData.destroyPreDamageData on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call destroyPreDamageData(this_44, "\n   UnitEvents, line 10" + wurstStackTrace)
endfunction

function alloc_PreDamageData takes nothing returns integer
	local integer this_44
	if PreDamageData_firstFree == 0 then
		set PreDamageData_maxIndex = PreDamageData_maxIndex + 1
		set this_44 = PreDamageData_maxIndex
	else
		set PreDamageData_firstFree = PreDamageData_firstFree - 1
		set this_44 = PreDamageData_nextFree[PreDamageData_firstFree]
	endif
	set PreDamageData_typeId[this_44] = 764
	return this_44
endfunction

function construct_PreDamageData takes integer this_44 returns nothing
endfunction

function new_PreDamageData takes nothing returns integer
	local integer this_44 = alloc_PreDamageData()
	call construct_PreDamageData(this_44)
	return this_44
endfunction

function PreDamageEvent_fire takes integer this_44, integer source, string wurstStackTrace returns nothing
	local integer data = new_PreDamageData()
	call Event_callActions(this_44, data, "\n   UnitEvents, line 27" + wurstStackTrace)
	call dispatch_PreDamageData_destroyPreDamageData(data, "\n   UnitEvents, line 28" + wurstStackTrace)
endfunction

function dispatch_PreDamageEvent_fire takes integer this_44, integer source, string wurstStackTrace returns nothing
	if Event_typeId[this_44] == 0 then
		if this_44 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling PreDamageEvent.fire" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called PreDamageEvent.fire on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call PreDamageEvent_fire(this_44, source, "\n   UnitEvents, line 23" + wurstStackTrace)
endfunction

function Unit_critTT takes integer this_44, real dmg returns nothing
endfunction

function dispatch_Unit_critTT takes integer this_44, real dmg, string wurstStackTrace returns nothing
	if Unit_typeId[this_44] == 0 then
		if this_44 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Unit.critTT" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Unit.critTT on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	if Unit_typeId[this_44] <= 695 then
		call Unit_critTT(this_44, dmg)
	else
		call Unit_critTT(this_44, dmg)
	endif
endfunction

function Unit_absoluteTT takes integer this_44, real dmg returns nothing
endfunction

function dispatch_Unit_absoluteTT takes integer this_44, real dmg, string wurstStackTrace returns nothing
	if Unit_typeId[this_44] == 0 then
		if this_44 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Unit.absoluteTT" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Unit.absoluteTT on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	if Unit_typeId[this_44] <= 695 then
		call Unit_absoluteTT(this_44, dmg)
	else
		call Unit_absoluteTT(this_44, dmg)
	endif
endfunction

function Unit_damageAbs takes integer this_44, integer source, real amount_39, string wurstStackTrace returns nothing
	if dispatch_Unit_dealDamage(this_44, amount_39, source, true, "\n   UnitClass, line 1019" + wurstStackTrace) then
		call dispatch_Unit_absoluteTT(this_44, amount_39, "\n   UnitClass, line 1020" + wurstStackTrace)
	endif
endfunction

function dispatch_Unit_damageAbs takes integer this_44, integer source, real amount_39, string wurstStackTrace returns nothing
	if Unit_typeId[this_44] == 0 then
		if this_44 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Unit.damageAbs" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Unit.damageAbs on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	if Unit_typeId[this_44] <= 695 then
		call Unit_damageAbs(this_44, source, amount_39, "\n   UnitClass, line 1018" + wurstStackTrace)
	else
		call Unit_damageAbs(this_44, source, amount_39, "\n   UnitClass, line 1018" + wurstStackTrace)
	endif
endfunction

function Unit_dodgeTT takes integer this_44 returns nothing
endfunction

function dispatch_Unit_dodgeTT takes integer this_44, string wurstStackTrace returns nothing
	if Unit_typeId[this_44] == 0 then
		if this_44 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Unit.dodgeTT" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Unit.dodgeTT on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	if Unit_typeId[this_44] <= 695 then
		call Unit_dodgeTT(this_44)
	else
		call Unit_dodgeTT(this_44)
	endif
endfunction

function Unit_getArmor takes integer this_44, boolean withBonus returns real
	if withBonus then
		return (Unit_armor[this_44] + Unit_bonusArmor[this_44]) * (1. + Unit_bonusArmorPer[this_44] / 100.)
	else
		return Unit_armor[this_44]
	endif
endfunction

function dispatch_Unit_getArmor takes integer this_44, boolean withBonus, string wurstStackTrace returns real
	local real getArmor_result
	if Unit_typeId[this_44] == 0 then
		if this_44 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Unit.getArmor" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Unit.getArmor on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	if Unit_typeId[this_44] <= 695 then
		set getArmor_result = Unit_getArmor(this_44, withBonus)
	else
		set getArmor_result = Unit_getArmor(this_44, withBonus)
	endif
	return getArmor_result
endfunction

function Unit_getAttack takes integer this_44, boolean withBonus returns real
	if withBonus then
		return (Unit_attack[this_44] + Unit_bonusAttack[this_44]) * (1. + Unit_bonusAttackPer[this_44] / 100.)
	else
		return Unit_attack[this_44]
	endif
endfunction

function dispatch_Unit_getAttack takes integer this_44, boolean withBonus, string wurstStackTrace returns real
	local real getAttack_result
	if Unit_typeId[this_44] == 0 then
		if this_44 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Unit.getAttack" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Unit.getAttack on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	if Unit_typeId[this_44] <= 695 then
		set getAttack_result = Unit_getAttack(this_44, withBonus)
	else
		set getAttack_result = Unit_getAttack(this_44, withBonus)
	endif
	return getAttack_result
endfunction

function Unit_getMaxHP takes integer this_44, boolean withBonus returns real
	if withBonus then
		return (Unit_life[this_44] + Unit_bonusLife[this_44]) * (1. + Unit_bonusLifePer[this_44] / 100.)
	else
		return Unit_life[this_44]
	endif
endfunction

function dispatch_Unit_getMaxHP takes integer this_44, boolean withBonus, string wurstStackTrace returns real
	local real getMaxHP_result
	if Unit_typeId[this_44] == 0 then
		if this_44 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Unit.getMaxHP" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Unit.getMaxHP on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	if Unit_typeId[this_44] <= 695 then
		set getMaxHP_result = Unit_getMaxHP(this_44, withBonus)
	else
		set getMaxHP_result = Unit_getMaxHP(this_44, withBonus)
	endif
	return getMaxHP_result
endfunction

function Unit_causeHeal takes integer this_44, real amount_39, string wurstStackTrace returns real
	local real tHP = unit_getHP(Unit_u[this_44])
	local real currentAmount = amount_39
	if dispatch_Unit_getMaxHP(this_44, true, "\n   UnitClass, line 1152" + wurstStackTrace) - tHP < amount_39 then
		set currentAmount = dispatch_Unit_getMaxHP(this_44, true, "\n   UnitClass, line 1153" + wurstStackTrace) - tHP
	endif
	call unit_setHP(Unit_u[this_44], tHP + amount_39)
	return currentAmount
endfunction

function Hero_causeHeal takes integer this_44, real amount_39, string wurstStackTrace returns real
	call dispatch_Bar_update(Hero_hb[this_44], "\n   HeroClass, line 181" + wurstStackTrace)
	return Unit_causeHeal(this_44, amount_39, "\n   HeroClass, line 182" + wurstStackTrace)
endfunction

function dispatch_Unit_causeHeal takes integer this_44, real amount_39, string wurstStackTrace returns real
	local real causeHeal_result
	if Unit_typeId[this_44] == 0 then
		if this_44 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Unit.causeHeal" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Unit.causeHeal on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	if Unit_typeId[this_44] <= 695 then
		set causeHeal_result = Unit_causeHeal(this_44, amount_39, "\n   UnitClass, line 1149" + wurstStackTrace)
	else
		set causeHeal_result = Hero_causeHeal(this_44, amount_39, "\n   UnitClass, line 1149" + wurstStackTrace)
	endif
	return causeHeal_result
endfunction

function Unit_healSystem takes integer this_44, real takenAmount, string wurstStackTrace returns nothing
	call dispatch_Unit_causeHeal(this_44, takenAmount, "\n   UnitClass, line 1184" + wurstStackTrace)
endfunction

function dispatch_Unit_healSystem takes integer this_44, real takenAmount, string wurstStackTrace returns nothing
	if Unit_typeId[this_44] == 0 then
		if this_44 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Unit.healSystem" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Unit.healSystem on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	if Unit_typeId[this_44] <= 695 then
		call Unit_healSystem(this_44, takenAmount, "\n   UnitClass, line 1183" + wurstStackTrace)
	else
		call Unit_healSystem(this_44, takenAmount, "\n   UnitClass, line 1183" + wurstStackTrace)
	endif
endfunction

function Unit_missTT takes integer this_44 returns nothing
endfunction

function dispatch_Unit_missTT takes integer this_44, string wurstStackTrace returns nothing
	if Unit_typeId[this_44] == 0 then
		if this_44 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Unit.missTT" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Unit.missTT on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	if Unit_typeId[this_44] <= 695 then
		call Unit_missTT(this_44)
	else
		call Unit_missTT(this_44)
	endif
endfunction

function Unit_normalTT takes integer this_44, real dmg returns nothing
endfunction

function dispatch_Unit_normalTT takes integer this_44, real dmg, string wurstStackTrace returns nothing
	if Unit_typeId[this_44] == 0 then
		if this_44 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Unit.normalTT" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Unit.normalTT on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	if Unit_typeId[this_44] <= 695 then
		call Unit_normalTT(this_44, dmg)
	else
		call Unit_normalTT(this_44, dmg)
	endif
endfunction

function Unit_damageAtk takes integer this_44, integer source, string wurstStackTrace returns nothing
	local real rand = GetRandomReal(0., 100.)
	local real amount_39
	local boolean crit
	local real tempArmor
	if Unit_takeHitPre[this_44] != 0 then
		call dispatch_PreDamageEvent_fire(Unit_takeHitPre[this_44], source, "\n   UnitClass, line 1032" + wurstStackTrace)
	endif
	if Unit_causeHitPre[source] != 0 then
		call dispatch_PreDamageEvent_fire(Unit_causeHitPre[source], this_44, "\n   UnitClass, line 1034" + wurstStackTrace)
	endif
	if rand <= Unit_hitchance[source] then
		set rand = GetRandomReal(0., 100.)
		if rand > Unit_evade[this_44] then
			set rand = GetRandomReal(0., 100.)
			set amount_39 = dispatch_Unit_getAttack(source, true, "\n   UnitClass, line 1041" + wurstStackTrace) + GetRandomReal( - (dispatch_Unit_getAttack(source, true, "\n   UnitClass, line 1041" + wurstStackTrace) / 10.), dispatch_Unit_getAttack(source, true, "\n   UnitClass, line 1041" + wurstStackTrace) / 10.)
			set crit = false
			set rand = GetRandomReal(0., 100.)
			if rand <= Unit_critchance[source] then
				set amount_39 = amount_39 * (2. + Unit_critdamage[source] / 100.)
				set crit = true
			endif
			set amount_39 = amount_39 * (1. + Unit_bonusDamage[source])
			set tempArmor = dispatch_Unit_getArmor(this_44, true, "\n   UnitClass, line 1051" + wurstStackTrace)
			if tempArmor < 0. then
				set amount_39 = amount_39 * (1. + (2. - Pow(0.94,  - tempArmor)))
			else
				set amount_39 = amount_39 * (1. - tempArmor * 0.04 / (1. + 0.04 * tempArmor))
			endif
			set amount_39 = amount_39 * (1. - Unit_normalReduction[this_44] / 100.)
			if Unit_takeHitOn[this_44] != 0 then
				set amount_39 = dispatch_OnDamageEvent_fire(Unit_takeHitOn[this_44], source, amount_39, "\n   UnitClass, line 1059" + wurstStackTrace)
			endif
			if Unit_causeHitOn[source] != 0 then
				set amount_39 = dispatch_OnDamageEvent_fire(Unit_causeHitOn[source], this_44, amount_39, "\n   UnitClass, line 1061" + wurstStackTrace)
			endif
			if crit then
				if Unit_takeCritHitOn[this_44] != 0 then
					set amount_39 = dispatch_OnDamageEvent_fire(Unit_takeCritHitOn[this_44], source, amount_39, "\n   UnitClass, line 1064" + wurstStackTrace)
				endif
				if Unit_causeCritHitOn[source] != 0 then
					set amount_39 = dispatch_OnDamageEvent_fire(Unit_causeCritHitOn[source], this_44, amount_39, "\n   UnitClass, line 1066" + wurstStackTrace)
				endif
			endif
			if dispatch_Unit_dealDamage(this_44, amount_39, source, true, "\n   UnitClass, line 1068" + wurstStackTrace) then
				if Unit_isHero[this_44] or Unit_isHero[source] then
					if crit then
						call dispatch_Unit_critTT(this_44, amount_39, "\n   UnitClass, line 1072" + wurstStackTrace)
					else
						call dispatch_Unit_normalTT(this_44, amount_39, "\n   UnitClass, line 1074" + wurstStackTrace)
					endif
				endif
			endif
			if amount_39 > 0. and Unit_lifesteal[this_44] > 0. then
				call dispatch_Unit_healSystem(source, Unit_lifesteal[this_44] / 100. * amount_39, "\n   UnitClass, line 1077" + wurstStackTrace)
			endif
			if amount_39 > 0. and Unit_normalDeflection[this_44] > 0. then
				call dispatch_Unit_damageAbs(source, this_44, amount_39 * (Unit_normalDeflection[this_44] / 100.), "\n   UnitClass, line 1080" + wurstStackTrace)
			endif
		else
			if Unit_isHero[this_44] or Unit_isHero[source] then
				call dispatch_Unit_dodgeTT(this_44, "\n   UnitClass, line 1084" + wurstStackTrace)
			endif
			if Unit_onDodge[this_44] != 0 then
				call dispatch_Unit2Event_fire(Unit_onDodge[this_44], source, this_44, "\n   UnitClass, line 1087" + wurstStackTrace)
			endif
		endif
	else
		if Unit_isHero[this_44] or Unit_isHero[source] then
			call dispatch_Unit_missTT(source, "\n   UnitClass, line 1091" + wurstStackTrace)
		endif
		if Unit_onMiss[source] != 0 then
			call dispatch_Unit2Event_fire(Unit_onMiss[source], source, this_44, "\n   UnitClass, line 1094" + wurstStackTrace)
		endif
	endif
endfunction

function dispatch_Unit_damageAtk takes integer this_44, integer source, string wurstStackTrace returns nothing
	if Unit_typeId[this_44] == 0 then
		if this_44 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Unit.damageAtk" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Unit.damageAtk on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	if Unit_typeId[this_44] <= 695 then
		call Unit_damageAtk(this_44, source, "\n   UnitClass, line 1029" + wurstStackTrace)
	else
		call Unit_damageAtk(this_44, source, "\n   UnitClass, line 1029" + wurstStackTrace)
	endif
endfunction

function Unit_tookDamage takes string wurstStackTrace returns nothing
	if GetEventDamage() == 1. then
		call dispatch_Unit_damageAtk(unit_getUserData(GetTriggerUnit()), unit_getUserData(GetEventDamageSource()), "\n   UnitClass, line 989" + wurstStackTrace)
	endif
endfunction

function bridge_Unit_tookDamage takes nothing returns nothing
	call Unit_tookDamage("\n   UnitClass, line 137")
endfunction

function vec2_dot takes real this_x, real this_y, real v_x, real v_y returns real
	return this_x * v_x + this_y * v_y
endfunction

function vec2_length takes real this_x, real this_y returns real
	return SquareRoot(this_x * this_x + this_y * this_y)
endfunction

function Unit_collision takes integer this_44, integer otherUnit returns nothing
	local real pos1_x
	local real pos1_y
	local real pos2_x
	local real pos2_y
	local real delta_x
	local real delta_y
	local real deltaLen
	local real deltaNorm_x
	local real deltaNorm_y
	local real speed1central
	local real speed2central
	local real futurePos1_x
	local real futurePos1_y
	local real futurePos2_x
	local real futurePos2_y
	local real futureDelta_x
	local real futureDelta_y
	local real vel1central_x
	local real vel1central_y
	local real vel2central_x
	local real vel2central_y
	local real temp_pos1_x
	local real temp_pos1_y
	local real temp_pos2_x
	local real temp_pos2_y
	local real temp_delta_x
	local real temp_delta_y
	local real temp_deltaNorm_x
	local real temp_deltaNorm_y
	local real temp_deltaNorm_x_2
	local real temp_deltaNorm_y_2
	local integer tempIndex
	local integer tempIndex_2
	local integer tempIndex_3
	local real temp_futurePos1_x
	local real temp_futurePos1_y
	local integer tempIndex_4
	local real temp_futurePos2_x
	local real temp_futurePos2_y
	local real temp_futureDelta_x
	local real temp_futureDelta_y
	local real temp_vel1central_x
	local real temp_vel1central_y
	local real temp_vel2central_x
	local real temp_vel2central_y
	local integer tempIndex_5
	local integer tempIndex_6
	local integer tempIndex_7
	local integer tempIndex_8
	local real temp
	local real temp_2
	local real temp_3
	local real temp_4
	local integer temp_5
	local integer temp_6
	set Unit_lastCollision[this_44] = otherUnit
	set Unit_lastCollision[otherUnit] = this_44
	if  not IsUnitAlly(Unit_u[otherUnit], Unit_owner[this_44]) then
		set Unit_lastKnocker[otherUnit] = Unit_lastKnocker[this_44]
	endif
	set temp_pos1_x = unit_getPos(Unit_u[this_44])
	set temp_pos1_y = unit_getPos_return_y
	set pos1_x = temp_pos1_x
	set pos1_y = temp_pos1_y
	set temp_pos2_x = unit_getPos(Unit_u[otherUnit])
	set temp_pos2_y = unit_getPos_return_y
	set pos2_x = temp_pos2_x
	set pos2_y = temp_pos2_y
	set temp_delta_x = vec2_op_minus(pos2_x, pos2_y, pos1_x, pos1_y)
	set temp_delta_y = vec2_op_minus_return_y
	set delta_x = temp_delta_x
	set delta_y = temp_delta_y
	set deltaLen = vec2_length(delta_x, delta_y)
	if deltaLen == 0. then
		set temp_deltaNorm_x = 0.
		set temp_deltaNorm_y = 1.
		set deltaNorm_x = temp_deltaNorm_x
		set deltaNorm_y = temp_deltaNorm_y
	else
		set temp_deltaNorm_x_2 = vec2_op_mult(delta_x, delta_y, 1. / deltaLen)
		set temp_deltaNorm_y_2 = vec2_op_mult_return_y
		set deltaNorm_x = temp_deltaNorm_x_2
		set deltaNorm_y = temp_deltaNorm_y_2
	endif
	set tempIndex = this_44
	set speed1central = vec2_dot(Unit_knockSpeed[tempIndex], Unit_knockSpeed_2[tempIndex], deltaNorm_x, deltaNorm_y)
	set tempIndex_2 = otherUnit
	set speed2central = vec2_dot(Unit_knockSpeed[tempIndex_2], Unit_knockSpeed_2[tempIndex_2], deltaNorm_x, deltaNorm_y)
	set temp = pos1_x
	set temp_2 = pos1_y
	set tempIndex_3 = this_44
	set temp_futurePos1_x = vec2_op_plus(temp, temp_2, vec2_op_mult(Unit_knockSpeed[tempIndex_3], Unit_knockSpeed_2[tempIndex_3], 0.01), vec2_op_mult_return_y)
	set temp_futurePos1_y = vec2_op_plus_return_y
	set futurePos1_x = temp_futurePos1_x
	set futurePos1_y = temp_futurePos1_y
	set temp_3 = pos2_x
	set temp_4 = pos2_y
	set tempIndex_4 = otherUnit
	set temp_futurePos2_x = vec2_op_plus(temp_3, temp_4, vec2_op_mult(Unit_knockSpeed[tempIndex_4], Unit_knockSpeed_2[tempIndex_4], 0.01), vec2_op_mult_return_y)
	set temp_futurePos2_y = vec2_op_plus_return_y
	set futurePos2_x = temp_futurePos2_x
	set futurePos2_y = temp_futurePos2_y
	set temp_futureDelta_x = vec2_op_minus(futurePos2_x, futurePos2_y, futurePos1_x, futurePos1_y)
	set temp_futureDelta_y = vec2_op_minus_return_y
	set futureDelta_x = temp_futureDelta_x
	set futureDelta_y = temp_futureDelta_y
	if vec2_length(futureDelta_x, futureDelta_y) < deltaLen then
		set temp_vel1central_x = vec2_op_mult(deltaNorm_x, deltaNorm_y, speed1central)
		set temp_vel1central_y = vec2_op_mult_return_y
		set vel1central_x = temp_vel1central_x
		set vel1central_y = temp_vel1central_y
		set temp_vel2central_x = vec2_op_mult(deltaNorm_x, deltaNorm_y, speed2central)
		set temp_vel2central_y = vec2_op_mult_return_y
		set vel2central_x = temp_vel2central_x
		set vel2central_y = temp_vel2central_y
		set tempIndex_5 = this_44
		set temp_5 = tempIndex_5
		set tempIndex_6 = this_44
		set Unit_knockSpeed[temp_5] = vec2_op_plus(Unit_knockSpeed[tempIndex_6], Unit_knockSpeed_2[tempIndex_6], vec2_op_mult(vec2_op_minus(vel2central_x, vel2central_y, vel1central_x, vel1central_y), vec2_op_minus_return_y, Unit_bounceFactor), vec2_op_mult_return_y)
		set Unit_knockSpeed_2[tempIndex_5] = vec2_op_plus_return_y
		set tempIndex_7 = otherUnit
		set temp_6 = tempIndex_7
		set tempIndex_8 = otherUnit
		set Unit_knockSpeed[temp_6] = vec2_op_plus(Unit_knockSpeed[tempIndex_8], Unit_knockSpeed_2[tempIndex_8], vec2_op_mult(vec2_op_minus(vel1central_x, vel1central_y, vel2central_x, vel2central_y), vec2_op_minus_return_y, Unit_bounceFactor), vec2_op_mult_return_y)
		set Unit_knockSpeed_2[tempIndex_7] = vec2_op_plus_return_y
	endif
endfunction

function dispatch_Unit_collision takes integer this_44, integer otherUnit, string wurstStackTrace returns nothing
	if Unit_typeId[this_44] == 0 then
		if this_44 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Unit.collision" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Unit.collision on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	if Unit_typeId[this_44] <= 695 then
		call Unit_collision(this_44, otherUnit)
	else
		call Unit_collision(this_44, otherUnit)
	endif
endfunction

function vec2_toVec3 takes real this_x, real this_y returns real
	set vec2_toVec3_return_x = this_x
	set vec2_toVec3_return_y = this_y
	set vec2_toVec3_return_z = 0.
	return vec2_toVec3_return_x
endfunction

function vec3_project takes real this_x, real this_y, real this_z, real direction_x, real direction_y, real direction_z, string wurstStackTrace returns real
	local real l = direction_x * direction_x + direction_y * direction_y + direction_z * direction_z
	if l == 0.0 then
		call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "vector.projectVector error: The length of the direction vector is 0.0!" + wurstStackTrace)
		call I2S(1 / 0)
		set vec3_project_return_x = 0.
		set vec3_project_return_y = 0.
		set vec3_project_return_z = 0.
		return vec3_project_return_x
	endif
	set l = (this_x * direction_x + this_y * direction_y + this_z * direction_z) / l
	set vec3_project_return_x = direction_x * l
	set vec3_project_return_y = direction_y * l
	set vec3_project_return_z = direction_z * l
	return vec3_project_return_x
endfunction

function vec3_toVec2 takes real this_x, real this_y, real this_z returns real
	set vec3_toVec2_return_x = this_x
	set vec3_toVec2_return_y = this_y
	return vec3_toVec2_return_x
endfunction

function getBounceVec takes real vel2_x, real vel2_y, real nor2_x, real nor2_y, string wurstStackTrace returns real
	local real temp_vel3_x = vec2_toVec3(vel2_x, vel2_y)
	local real temp_vel3_y = vec2_toVec3_return_y
	local real temp_vel3_z = vec2_toVec3_return_z
	local real vel3_x = temp_vel3_x
	local real vel3_y = temp_vel3_y
	local real vel3_z = temp_vel3_z
	local real temp_nor3_x = vec2_toVec3(nor2_x, nor2_y)
	local real temp_nor3_y = vec2_toVec3_return_y
	local real temp_nor3_z = vec2_toVec3_return_z
	local real nor3_x = temp_nor3_x
	local real nor3_y = temp_nor3_y
	local real nor3_z = temp_nor3_z
	local real temp_pv3_x = vec3_project(vel3_x, vel3_y, vel3_z, nor3_x, nor3_y, nor3_z, "\n   Helper, line 27" + wurstStackTrace)
	local real temp_pv3_y = vec3_project_return_y
	local real temp_pv3_z = vec3_project_return_z
	local real pv3_x = temp_pv3_x
	local real pv3_y = temp_pv3_y
	local real pv3_z = temp_pv3_z
	local real temp_pv2_x = vec3_toVec2(pv3_x, pv3_y, pv3_z)
	local real temp_pv2_y = vec3_toVec2_return_y
	local real pv2_x = temp_pv2_x
	local real pv2_y = temp_pv2_y
	local real temp_pv2_x_2 = vec2_op_mult(pv2_x, pv2_y,  - 2.)
	local real temp_pv2_y_2 = vec2_op_mult_return_y
	local real nvel2_x
	local real nvel2_y
	local real temp_nvel2_x
	local real temp_nvel2_y
	local real temp_nvel2_x_2
	local real temp_nvel2_y_2
	set pv2_x = temp_pv2_x_2
	set pv2_y = temp_pv2_y_2
	set temp_nvel2_x = vel2_x
	set temp_nvel2_y = vel2_y
	set nvel2_x = temp_nvel2_x
	set nvel2_y = temp_nvel2_y
	set temp_nvel2_x_2 = vec2_op_plus(nvel2_x, nvel2_y, pv2_x, pv2_y)
	set temp_nvel2_y_2 = vec2_op_plus_return_y
	set nvel2_x = temp_nvel2_x_2
	set nvel2_y = temp_nvel2_y_2
	set getBounceVec_return_x = nvel2_x
	set getBounceVec_return_y = nvel2_y
	return getBounceVec_return_x
endfunction

function real_asAngleRadians takes real this_44 returns real
	return this_44
endfunction

function angle_toVec takes real this_radians, real len returns real
	set angle_toVec_return_x = Cos(this_radians) * len
	set angle_toVec_return_y = Sin(this_radians) * len
	return angle_toVec_return_x
endfunction

function vec2_polarOffset takes real this_x, real this_y, real ang_radians, real dist returns real
	set vec2_polarOffset_return_x = vec2_op_plus(this_x, this_y, angle_toVec(ang_radians, dist), angle_toVec_return_y)
	set vec2_polarOffset_return_y = vec2_op_plus_return_y
	return vec2_polarOffset_return_x
endfunction

function vec2_setLength takes real this_x, real this_y, real length, string wurstStackTrace returns real
	local real l = SquareRoot(this_x * this_x + this_y * this_y)
	if l == 0.0 then
		call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "vector.setLength error: The length of the vector is 0.0!" + wurstStackTrace)
		call I2S(1 / 0)
		set vec2_setLength_return_x = 0.
		set vec2_setLength_return_y = 0.
		return vec2_setLength_return_x
	endif
	set l = length / l
	set vec2_setLength_return_x = this_x * l
	set vec2_setLength_return_y = this_y * l
	return vec2_setLength_return_x
endfunction

function getPathingNormal takes real pos_x, real pos_y, string wurstStackTrace returns real
	local integer numberOfTests = 60
	local real radius = 128.
	local real temp_addedVecs_x = 0.
	local real temp_addedVecs_y = 0.
	local real addedVecs_x = temp_addedVecs_x
	local real addedVecs_y = temp_addedVecs_y
	local integer i = 1
	local integer temp = numberOfTests
	local real direction_x
	local real direction_y
	local real testPoint_x
	local real testPoint_y
	local real temp_direction_x
	local real temp_direction_y
	local real temp_testPoint_x
	local real temp_testPoint_y
	local real temp_addedVecs_x_2
	local real temp_addedVecs_y_2
	loop
		exitwhen i > temp
		set temp_direction_x = vec2_polarOffset(0., 0., real_asAngleRadians(i * 2 * bj_PI / numberOfTests), radius)
		set temp_direction_y = vec2_polarOffset_return_y
		set direction_x = temp_direction_x
		set direction_y = temp_direction_y
		set temp_testPoint_x = vec2_op_plus(pos_x, pos_y, direction_x, direction_y)
		set temp_testPoint_y = vec2_op_plus_return_y
		set testPoint_x = temp_testPoint_x
		set testPoint_y = temp_testPoint_y
		if isTerrainWalkable(testPoint_x, testPoint_y) then
			set temp_addedVecs_x_2 = vec2_op_plus(addedVecs_x, addedVecs_y, direction_x, direction_y)
			set temp_addedVecs_y_2 = vec2_op_plus_return_y
			set addedVecs_x = temp_addedVecs_x_2
			set addedVecs_y = temp_addedVecs_y_2
		endif
		set i = i + 1
	endloop
	set getPathingNormal_return_x = vec2_op_mult(vec2_setLength(addedVecs_x, addedVecs_y, 1., "\n   Helper, line 22" + wurstStackTrace), vec2_setLength_return_y,  - 1.)
	set getPathingNormal_return_y = vec2_op_mult_return_y
	return getPathingNormal_return_x
endfunction

function group_enumUnitsInRange takes group this_44, real pos_x, real pos_y, real range, boolexpr filter returns nothing
	call GroupEnumUnitsInRange(this_44, pos_x, pos_y, range, filter)
endfunction

function unit_setPos_2 takes unit this_44, real pos_x, real pos_y returns nothing
	call SetUnitPosition(this_44, pos_x, pos_y)
endfunction

function vec2_lengthSquared takes real this_x, real this_y returns real
	return this_x * this_x + this_y * this_y
endfunction

function Unit_knockback takes integer this_44, string wurstStackTrace returns nothing
	local integer tempIndex = this_44
	local real pos_x
	local real pos_y
	local group g
	local integer u2
	local real pos2_x
	local real pos2_y
	local real speed
	local real nvel_x
	local real nvel_y
	local integer tempIndex_2
	local real temp_pos_x
	local real temp_pos_y
	local integer tempIndex_3
	local real tempTupleSelectionResult_1
	local real temp_tempTupleSelectionResult_1
	local real temp_tempTupleSelectionResult_2
	local integer tempIndex_4
	local real tempTupleSelectionResult_2
	local real temp_tempTupleSelectionResult_1_2
	local real temp_tempTupleSelectionResult_2_2
	local integer tempIndex_5
	local real temp_pos_x_2
	local real temp_pos_y_2
	local integer tempIndex_6
	local integer tempIndex_7
	local integer tempIndex_8
	local integer tempIndex_9
	local real temp_pos_x_3
	local real temp_pos_y_3
	local integer tempIndex_10
	local integer tempIndex_11
	local integer tempIndex_12
	local real temp_pos2_x
	local real temp_pos2_y
	local integer tempIndex_13
	local real temp_pos2_x_2
	local real temp_pos2_y_2
	local integer tempIndex_14
	local integer tempIndex_15
	local integer tempIndex_16
	local integer tempIndex_17
	local real temp_pos_x_4
	local real temp_pos_y_4
	local integer tempIndex_18
	local integer tempIndex_19
	local integer tempIndex_20
	local integer tempIndex_21
	local integer tempIndex_22
	local integer tempIndex_23
	local real temp_nvel_x
	local real temp_nvel_y
	local real temp_pos_x_5
	local real temp_pos_y_5
	local integer tempIndex_24
	local unit temp
	local real temp_2
	local boolean andLeft
	local real temp_3
	local real temp_4
	local real temp_5
	local real temp_6
	local integer temp_7
	local real temp_8
	local real temp_9
	local real temp_10
	local real temp_11
	local integer temp_12
	local real temp_13
	local real temp_14
	local real temp_15
	local real temp_16
	local integer temp_17
	local real temp_18
	local real temp_19
	local real temp_20
	local real temp_21
	local integer temp_22
	if vec2_lengthSquared(Unit_knockSpeed[tempIndex], Unit_knockSpeed_2[tempIndex]) <= 0.25 then
		call dispatch_LinkedList_remove(UnitClass_knocklist, this_44, "\n   UnitClass, line 163" + wurstStackTrace)
		set Unit_hasKnockback[this_44] = false
		set tempIndex_2 = this_44
		set Unit_knockSpeed[tempIndex_2] = 0.
		set Unit_knockSpeed_2[tempIndex_2] = 0.
	else
		set temp_pos_x = unit_getPos(Unit_u[this_44])
		set temp_pos_y = unit_getPos_return_y
		set pos_x = temp_pos_x
		set pos_y = temp_pos_y
		if isTerrainWalkable(pos_x, pos_y) == true then
			set andLeft = true
		else
			set temp = Unit_u[this_44]
			set tempIndex_3 = this_44
			set temp_tempTupleSelectionResult_1 = Unit_wallLoc[tempIndex_3]
			set temp_tempTupleSelectionResult_2 = Unit_wallLoc_2[tempIndex_3]
			set tempTupleSelectionResult_1 = temp_tempTupleSelectionResult_1
			set temp_2 = tempTupleSelectionResult_1
			set tempIndex_4 = this_44
			set temp_tempTupleSelectionResult_1_2 = Unit_wallLoc[tempIndex_4]
			set temp_tempTupleSelectionResult_2_2 = Unit_wallLoc_2[tempIndex_4]
			set tempTupleSelectionResult_2 = temp_tempTupleSelectionResult_2_2
			set andLeft = IsUnitInRangeXY(temp, temp_2, tempTupleSelectionResult_2, 30.) == true
		endif
		if andLeft then
			set g = CreateGroup()
			set Filter_filterCheckUnit = Unit_u[this_44]
			call group_enumUnitsInRange(g, pos_x, pos_y, Unit_radius[this_44], Condition(ref_function_notUnit))
			if FirstOfGroup(g) == null then
				set temp_3 = pos_x
				set temp_4 = pos_y
				set tempIndex_5 = this_44
				set temp_pos_x_2 = vec2_op_plus(temp_3, temp_4, Unit_knockSpeed[tempIndex_5], Unit_knockSpeed_2[tempIndex_5])
				set temp_pos_y_2 = vec2_op_plus_return_y
				set pos_x = temp_pos_x_2
				set pos_y = temp_pos_y_2
				call unit_setPos_2(Unit_u[this_44], pos_x, pos_y)
				set tempIndex_6 = this_44
				set temp_7 = tempIndex_6
				set tempIndex_7 = this_44
				set temp_5 = Unit_knockSpeed[tempIndex_7]
				set temp_6 = Unit_knockSpeed_2[tempIndex_7]
				set tempIndex_8 = this_44
				set Unit_knockSpeed[temp_7] = vec2_op_minus(temp_5, temp_6, vec2_op_mult(Unit_knockSpeed[tempIndex_8], Unit_knockSpeed_2[tempIndex_8], Unit_mass[this_44] / Unit_knockbackFactor), vec2_op_mult_return_y)
				set Unit_knockSpeed_2[tempIndex_6] = vec2_op_minus_return_y
			else
				set u2 = unit_getUserData(FirstOfGroup(g))
				if  not (u2 == Unit_lastCollision[this_44]) then
					call dispatch_Unit_collision(this_44, u2, "\n   UnitClass, line 179" + wurstStackTrace)
					set temp_8 = pos_x
					set temp_9 = pos_y
					set tempIndex_9 = this_44
					set temp_pos_x_3 = vec2_op_plus(temp_8, temp_9, Unit_knockSpeed[tempIndex_9], Unit_knockSpeed_2[tempIndex_9])
					set temp_pos_y_3 = vec2_op_plus_return_y
					set pos_x = temp_pos_x_3
					set pos_y = temp_pos_y_3
					call unit_setPos_2(Unit_u[this_44], pos_x, pos_y)
					set tempIndex_10 = this_44
					set temp_12 = tempIndex_10
					set tempIndex_11 = this_44
					set temp_10 = Unit_knockSpeed[tempIndex_11]
					set temp_11 = Unit_knockSpeed_2[tempIndex_11]
					set tempIndex_12 = this_44
					set Unit_knockSpeed[temp_12] = vec2_op_minus(temp_10, temp_11, vec2_op_mult(Unit_knockSpeed[tempIndex_12], Unit_knockSpeed_2[tempIndex_12], Unit_mass[this_44] / Unit_knockbackFactor), vec2_op_mult_return_y)
					set Unit_knockSpeed_2[tempIndex_10] = vec2_op_minus_return_y
					set temp_pos2_x = unit_getPos(Unit_u[u2])
					set temp_pos2_y = unit_getPos_return_y
					set pos2_x = temp_pos2_x
					set pos2_y = temp_pos2_y
					set temp_13 = pos2_x
					set temp_14 = pos2_y
					set tempIndex_13 = this_44
					set temp_pos2_x_2 = vec2_op_plus(temp_13, temp_14, Unit_knockSpeed[tempIndex_13], Unit_knockSpeed_2[tempIndex_13])
					set temp_pos2_y_2 = vec2_op_plus_return_y
					set pos2_x = temp_pos2_x_2
					set pos2_y = temp_pos2_y_2
					call unit_setPos_2(Unit_u[u2], pos2_x, pos2_y)
					set tempIndex_14 = u2
					set temp_17 = tempIndex_14
					set tempIndex_15 = u2
					set temp_15 = Unit_knockSpeed[tempIndex_15]
					set temp_16 = Unit_knockSpeed_2[tempIndex_15]
					set tempIndex_16 = u2
					set Unit_knockSpeed[temp_17] = vec2_op_minus(temp_15, temp_16, vec2_op_mult(Unit_knockSpeed[tempIndex_16], Unit_knockSpeed_2[tempIndex_16], Unit_mass[this_44] / Unit_knockbackFactor), vec2_op_mult_return_y)
					set Unit_knockSpeed_2[tempIndex_14] = vec2_op_minus_return_y
				else
					set temp_18 = pos_x
					set temp_19 = pos_y
					set tempIndex_17 = this_44
					set temp_pos_x_4 = vec2_op_plus(temp_18, temp_19, Unit_knockSpeed[tempIndex_17], Unit_knockSpeed_2[tempIndex_17])
					set temp_pos_y_4 = vec2_op_plus_return_y
					set pos_x = temp_pos_x_4
					set pos_y = temp_pos_y_4
					call unit_setPos_2(Unit_u[this_44], pos_x, pos_y)
					set tempIndex_18 = this_44
					set temp_22 = tempIndex_18
					set tempIndex_19 = this_44
					set temp_20 = Unit_knockSpeed[tempIndex_19]
					set temp_21 = Unit_knockSpeed_2[tempIndex_19]
					set tempIndex_20 = this_44
					set Unit_knockSpeed[temp_22] = vec2_op_minus(temp_20, temp_21, vec2_op_mult(Unit_knockSpeed[tempIndex_20], Unit_knockSpeed_2[tempIndex_20], Unit_mass[this_44] / Unit_knockbackFactor), vec2_op_mult_return_y)
					set Unit_knockSpeed_2[tempIndex_18] = vec2_op_minus_return_y
				endif
			endif
			call DestroyGroup(g)
			set g = null
		else
			set tempIndex_21 = this_44
			set Unit_wallLoc[tempIndex_21] = pos_x
			set Unit_wallLoc_2[tempIndex_21] = pos_y
			set tempIndex_22 = this_44
			set speed = vec2_length(Unit_knockSpeed[tempIndex_22], Unit_knockSpeed_2[tempIndex_22])
			call dispatch_Unit_damageAbs(this_44, Unit_lastKnocker[this_44], unit_getState(Unit_u[this_44], UNIT_STATE_MAX_LIFE) * (speed / 200.), "\n   UnitClass, line 197" + wurstStackTrace)
			set tempIndex_23 = this_44
			set temp_nvel_x = getBounceVec(Unit_knockSpeed[tempIndex_23], Unit_knockSpeed_2[tempIndex_23], getPathingNormal(pos_x, pos_y, "\n   UnitClass, line 198" + wurstStackTrace), getPathingNormal_return_y, "\n   UnitClass, line 198" + wurstStackTrace)
			set temp_nvel_y = getBounceVec_return_y
			set nvel_x = temp_nvel_x
			set nvel_y = temp_nvel_y
			set temp_pos_x_5 = vec2_op_plus(pos_x, pos_y, nvel_x, nvel_y)
			set temp_pos_y_5 = vec2_op_plus_return_y
			set pos_x = temp_pos_x_5
			set pos_y = temp_pos_y_5
			call unit_setPos_2(Unit_u[this_44], pos_x, pos_y)
			set tempIndex_24 = this_44
			set Unit_knockSpeed[tempIndex_24] = vec2_op_minus(nvel_x, nvel_y, vec2_op_mult(nvel_x, nvel_y, Unit_mass[this_44] / Unit_knockbackFactor), vec2_op_mult_return_y)
			set Unit_knockSpeed_2[tempIndex_24] = vec2_op_minus_return_y
			set Unit_lastCollision[this_44] = 0
		endif
	endif
	set g = null
	set temp = null
endfunction

function dispatch_Unit_knockback takes integer this_44, string wurstStackTrace returns nothing
	if Unit_typeId[this_44] == 0 then
		if this_44 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Unit.knockback" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Unit.knockback on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	if Unit_typeId[this_44] <= 695 then
		call Unit_knockback(this_44, "\n   UnitClass, line 161" + wurstStackTrace)
	else
		call Unit_knockback(this_44, "\n   UnitClass, line 161" + wurstStackTrace)
	endif
endfunction

function callKnockback takes string wurstStackTrace returns nothing
	local integer wurst__iterator0 = dispatch_LinkedList_iterator(UnitClass_knocklist, "\n   UnitClass, line 22" + wurstStackTrace)
	local integer obj
	loop
		exitwhen  not dispatch_LLIterator_hasNext(wurst__iterator0, "\n   UnitClass, line 22" + wurstStackTrace)
		set obj = dispatch_LLIterator_next(wurst__iterator0, "\n   UnitClass, line 22" + wurstStackTrace)
		call dispatch_Unit_knockback(obj, "\n   UnitClass, line 23" + wurstStackTrace)
	endloop
	call dispatch_LLIterator_close(wurst__iterator0, "\n   UnitClass, line 22" + wurstStackTrace)
endfunction

function bridge_callKnockback takes nothing returns nothing
	call callKnockback("\n   GameStart, line 89")
endfunction

function Unit_manaTT takes integer this_44, real dmg returns nothing
endfunction

function dispatch_Unit_manaTT takes integer this_44, real dmg, string wurstStackTrace returns nothing
	if Unit_typeId[this_44] == 0 then
		if this_44 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Unit.manaTT" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Unit.manaTT on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	if Unit_typeId[this_44] <= 695 then
		call Unit_manaTT(this_44, dmg)
	else
		call Unit_manaTT(this_44, dmg)
	endif
endfunction

function camTest takes string wurstStackTrace returns nothing
	call dispatch_Unit_manaTT(UnitClass_last, 1., "\n   GameStart, line 526" + wurstStackTrace)
	call dispatch_Unit_dodgeTT(UnitClass_last, "\n   GameStart, line 527" + wurstStackTrace)
	call dispatch_Unit_goldTT(UnitClass_last, 1., Player(0), "\n   GameStart, line 528" + wurstStackTrace)
	call dispatch_Unit_normalTT(UnitClass_last, 1., "\n   GameStart, line 529" + wurstStackTrace)
endfunction

function bridge_camTest takes nothing returns nothing
	call camTest("\n   GameStart, line 92")
endfunction

function booleanFromIndex takes integer index returns boolean
	return index > 0
endfunction

function Stack_peek takes integer this_44 returns integer
	return SEntry_elem_2[Stack_top[this_44]]
endfunction

function dispatch_Stack_peek takes integer this_44, string wurstStackTrace returns integer
	local integer peek_result
	if Stack_typeId[this_44] == 0 then
		if this_44 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Stack.peek" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Stack.peek on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	set peek_result = Stack_peek(this_44)
	return peek_result
endfunction

function Stack_pop takes integer this_44 returns integer
	local integer val = Stack_top[this_44]
	set Stack_top[this_44] = SEntry_prev[Stack_top[this_44]]
	set Stack_size[this_44] = Stack_size[this_44] - 1
	return SEntry_elem_2[val]
endfunction

function dispatch_Stack_pop takes integer this_44, string wurstStackTrace returns integer
	local integer pop_result
	if Stack_typeId[this_44] == 0 then
		if this_44 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Stack.pop" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Stack.pop on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	set pop_result = Stack_pop(this_44)
	return pop_result
endfunction

function Icon_hideDirect takes integer this_44, player p, string wurstStackTrace returns nothing
	local destructable d_2 = Icon_structs_get(this_44, player_getId(p), "\n   Icon, line 29" + wurstStackTrace)
	if d_2 != null then
		call RemoveDestructable(d_2)
		call Icon_structs_set(this_44, player_getId(p), null, "\n   Icon, line 32" + wurstStackTrace)
	endif
	set d_2 = null
endfunction

function image_hide takes image this_44, player p returns nothing
	if GetLocalPlayer() == p then
		call SetImageRenderAlways(this_44, false)
	endif
endfunction

function ImageEx_hideDirect takes integer this_44, player p returns nothing
	call image_hide(ImageEx_content[this_44], p)
endfunction

function Model_hideDirect takes integer this_44, player p returns nothing
	local unit temp = Model_u[this_44]
	local integer tempIndex = this_44
	call unit_setVertexColor(temp, color_withAlpha(Model_col[tempIndex], Model_col_2[tempIndex], Model_col_3[tempIndex], 0), color_withAlpha_return_green, color_withAlpha_return_blue, color_withAlpha_return_alpha)
	set temp = null
endfunction

function TextBox_hideDirect takes integer this_44, player p, string wurstStackTrace returns nothing
	call dispatch_TextSplat_clear(TextBox_splat[this_44], p, "\n   TextBox, line 38" + wurstStackTrace)
endfunction

function image_hide_2 takes image this_44 returns nothing
	call SetImageRenderAlways(this_44, false)
endfunction

function cyc_cyc_dispatch_Widget_hideDirect takes integer funcChoice, integer funcChoice_2, integer this_44, player p, string wurstStackTrace returns nothing
	local integer wurst__iterator3
	local image img
	local integer wurst__iterator4
	local integer w_2
	if funcChoice == 0 then
		if funcChoice_2 == 0 then
			if Widget_typeId[this_44] == 0 then
				if this_44 == 0 then
					call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Widget.hideDirect" + wurstStackTrace)
					call I2S(1 / 0)
				else
					call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Widget.hideDirect on invalid object." + wurstStackTrace)
					call I2S(1 / 0)
				endif
			endif
			if Widget_typeId[this_44] <= 799 then
				if Widget_typeId[this_44] <= 794 then
					if Widget_typeId[this_44] <= 786 then
						call cyc_cyc_dispatch_Widget_hideDirect(0, 2, this_44, p, "\n   Menu, line 30" + wurstStackTrace)
					else
						call TextBox_hideDirect(this_44, p, "\n   Menu, line 30" + wurstStackTrace)
					endif
				elseif Widget_typeId[this_44] <= 795 then
					call ImageEx_hideDirect(this_44, p)
				else
					call cyc_cyc_dispatch_Widget_hideDirect(1, this_44, 0, p, "\n   Menu, line 30" + wurstStackTrace)
				endif
			elseif Widget_typeId[this_44] <= 809 then
				if Widget_typeId[this_44] <= 805 then
					call Model_hideDirect(this_44, p)
				else
					call Icon_hideDirect(this_44, p, "\n   Menu, line 30" + wurstStackTrace)
				endif
			else
				call cyc_cyc_dispatch_Widget_hideDirect(0, 1, this_44, p, "\n   Menu, line 30" + wurstStackTrace)
			endif
		elseif funcChoice_2 == 1 then
			call dispatch_TextSplat_clear(Button_splat[this_44], p, "\n   Button, line 30" + wurstStackTrace)
			call cyc_cyc_dispatch_Widget_hideDirect(0, 2, this_44, p, "\n   Button, line 31" + wurstStackTrace)
		elseif funcChoice_2 == 2 then
			call cyc_cyc_dispatch_Widget_hideDirect(0, 0, Observable_content[this_44], p, "\n   Menu, line 59" + wurstStackTrace)
		endif
	elseif funcChoice == 1 then
		if GetLocalPlayer() == p then
			set wurst__iterator3 = dispatch_ImageList_iterator(Pane_list[funcChoice_2], "\n   Pane, line 96" + wurstStackTrace)
			loop
				exitwhen  not dispatch_ImageIterator_hasNext(wurst__iterator3, "\n   Pane, line 96" + wurstStackTrace)
				set img = dispatch_ImageIterator_next(wurst__iterator3, "\n   Pane, line 96" + wurstStackTrace)
				call image_hide_2(img)
			endloop
			call dispatch_ImageIterator_close(wurst__iterator3, "\n   Pane, line 96" + wurstStackTrace)
			set wurst__iterator4 = dispatch_LinkedList_iterator(Pane_content[funcChoice_2], "\n   Pane, line 98" + wurstStackTrace)
			loop
				exitwhen  not dispatch_LLIterator_hasNext(wurst__iterator4, "\n   Pane, line 98" + wurstStackTrace)
				set w_2 = dispatch_LLIterator_next(wurst__iterator4, "\n   Pane, line 98" + wurstStackTrace)
				call cyc_cyc_dispatch_Widget_hideDirect(0, 0, w_2, p, "\n   Pane, line 99" + wurstStackTrace)
			endloop
			call dispatch_LLIterator_close(wurst__iterator4, "\n   Pane, line 98" + wurstStackTrace)
		endif
	endif
	set img = null
endfunction

function Window_hideContent takes integer this_44, player p, string wurstStackTrace returns nothing
	local integer wurst__iterator1 = dispatch_LinkedList_iterator(Window_content[this_44], "\n   Menu, line 174" + wurstStackTrace)
	local integer g
	loop
		exitwhen  not dispatch_LLIterator_hasNext(wurst__iterator1, "\n   Menu, line 174" + wurstStackTrace)
		set g = dispatch_LLIterator_next(wurst__iterator1, "\n   Menu, line 174" + wurstStackTrace)
		call cyc_cyc_dispatch_Widget_hideDirect(0, 0, g, p, "\n   Menu, line 175" + wurstStackTrace)
	endloop
	call dispatch_LLIterator_close(wurst__iterator1, "\n   Menu, line 174" + wurstStackTrace)
endfunction

function dispatch_Window_hideContent takes integer this_44, player p, string wurstStackTrace returns nothing
	if Window_typeId[this_44] == 0 then
		if this_44 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Window.hideContent" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Window.hideContent on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	if Window_typeId[this_44] <= 789 then
		call Window_hideContent(this_44, p, "\n   Menu, line 173" + wurstStackTrace)
	else
		call Window_hideContent(this_44, p, "\n   Menu, line 173" + wurstStackTrace)
	endif
endfunction

function WindowManager_closeTopWindow takes player p, string wurstStackTrace returns nothing
	call dispatch_Window_hideContent(dispatch_Stack_pop(WindowManager_currentWindow[GetPlayerId(p)], "\n   Menu, line 131" + wurstStackTrace), p, "\n   Menu, line 131" + wurstStackTrace)
	loop
		exitwhen  not true
		if booleanFromIndex(dispatch_HashMap_get(Window_wantToClose[dispatch_Stack_peek(WindowManager_currentWindow[GetPlayerId(p)], "\n   Menu, line 133" + wurstStackTrace)], playerToIndex(p), "\n   Menu, line 133" + wurstStackTrace)) then
			call dispatch_Window_hideContent(dispatch_Stack_pop(WindowManager_currentWindow[GetPlayerId(p)], "\n   Menu, line 134" + wurstStackTrace), p, "\n   Menu, line 134" + wurstStackTrace)
		else
			exitwhen true
		endif
	endloop
endfunction

function player_getName takes player this_44 returns string
	return GetPlayerName(this_44)
endfunction

function closure_impl_53 takes integer this_44, player p, string wurstStackTrace returns nothing
	call print("Spieler " + player_getName(p) + " geht in den Score")
	call WindowManager_closeTopWindow(p, "\n   GameStart, line 388" + wurstStackTrace)
	call WindowManager_openWindow(GameStart_scoreWindow, p, "\n   GameStart, line 389" + wurstStackTrace)
endfunction

function closure_impl_54 takes integer this_44, player p, string wurstStackTrace returns nothing
	call print("Spieler " + player_getName(p) + " geht in den Guide")
	call WindowManager_closeTopWindow(p, "\n   GameStart, line 394" + wurstStackTrace)
	call WindowManager_openWindow(GameStart_guideWindow, p, "\n   GameStart, line 395" + wurstStackTrace)
endfunction

function closure_impl_55 takes integer this_44, player p, string wurstStackTrace returns nothing
	call WindowManager_closeTopWindow(p, "\n   GameStart, line 560" + wurstStackTrace)
endfunction

function closure_impl_56 takes integer this_44, player p, string wurstStackTrace returns nothing
	call print("Spieler " + player_getName(p) + " geht raus")
	call WindowManager_closeTopWindow(p, "\n   GameStart, line 400" + wurstStackTrace)
endfunction

function closure_impl_57 takes integer this_44, player p, string wurstStackTrace returns nothing
	call WindowManager_closeTopWindow(p, "\n   GameStart, line 569" + wurstStackTrace)
endfunction

function closure_impl_58 takes integer this_44, player p, string wurstStackTrace returns nothing
	call print("Spieler " + player_getName(p) + " geht in den Shop")
	call WindowManager_closeTopWindow(p, "\n   GameStart, line 382" + wurstStackTrace)
	call WindowManager_openWindow(GameStart_shopWindow, p, "\n   GameStart, line 383" + wurstStackTrace)
endfunction

function dispatch_Pane_hideDirect takes integer this_44, player p, string wurstStackTrace returns nothing
	if Widget_typeId[this_44] == 0 then
		if this_44 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Pane.hideDirect" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Pane.hideDirect on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call cyc_cyc_dispatch_Widget_hideDirect(1, this_44, 0, p, "\n   Pane, line 94" + wurstStackTrace)
endfunction

function cyc_cyc_dispatch_PlayerAction_run takes integer funcChoice, integer funcChoice_2, integer this_44, player p, string wurstStackTrace returns nothing
	if funcChoice == 0 then
		if funcChoice_2 == 0 then
			if PlayerAction_typeId[this_44] == 0 then
				if this_44 == 0 then
					call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling PlayerAction.run" + wurstStackTrace)
					call I2S(1 / 0)
				else
					call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called PlayerAction.run on invalid object." + wurstStackTrace)
					call I2S(1 / 0)
				endif
			endif
			if PlayerAction_typeId[this_44] <= 842 then
				if PlayerAction_typeId[this_44] <= 801 then
					if PlayerAction_typeId[this_44] <= 800 then
						call cyc_cyc_dispatch_PlayerAction_run(1, this_44, 0, p, "\n   Menu, line 118" + wurstStackTrace)
					else
						call cyc_cyc_dispatch_PlayerAction_run(0, 1, this_44, p, "\n   Menu, line 118" + wurstStackTrace)
					endif
				elseif PlayerAction_typeId[this_44] <= 841 then
					call closure_impl_58(this_44, p, "\n   Menu, line 118" + wurstStackTrace)
				else
					call closure_impl_53(this_44, p, "\n   Menu, line 118" + wurstStackTrace)
				endif
			elseif PlayerAction_typeId[this_44] <= 844 then
				if PlayerAction_typeId[this_44] <= 843 then
					call closure_impl_54(this_44, p, "\n   Menu, line 118" + wurstStackTrace)
				else
					call closure_impl_56(this_44, p, "\n   Menu, line 118" + wurstStackTrace)
				endif
			elseif PlayerAction_typeId[this_44] <= 845 then
				call closure_impl_55(this_44, p, "\n   Menu, line 118" + wurstStackTrace)
			else
				call closure_impl_57(this_44, p, "\n   Menu, line 118" + wurstStackTrace)
			endif
		elseif funcChoice_2 == 1 then
			call dispatch_Pane_hideDirect(this_43[this_44], p, "\n   Pane, line 71" + wurstStackTrace)
			if Pane_onExit[this_43[this_44]] != 0 then
				call cyc_cyc_dispatch_PlayerAction_run(0, 0, Pane_onExit[this_43[this_44]], p, "\n   Pane, line 73" + wurstStackTrace)
			endif
		endif
	elseif funcChoice == 1 then
		call dispatch_Pane_hideDirect(this_42[funcChoice_2], p, "\n   Pane, line 44" + wurstStackTrace)
		if Pane_onExit[this_42[funcChoice_2]] != 0 then
			call cyc_cyc_dispatch_PlayerAction_run(0, 0, Pane_onExit[this_42[funcChoice_2]], p, "\n   Pane, line 46" + wurstStackTrace)
		endif
	endif
endfunction

function Button_trackAnimation takes integer this_44, player p returns nothing
endfunction

function Icon_trackAnimation takes integer this_44, player p, string wurstStackTrace returns nothing
	local destructable d_2
	if GetLocalPlayer() == p then
		set d_2 = Icon_structs_get(this_44, player_getId(p), "\n   Icon, line 77" + wurstStackTrace)
		call SetDestructableAnimationSpeed(d_2, Icon_animationSpeedHover)
		call SetDestructableAnimation(d_2, "morph")
	endif
	set d_2 = null
endfunction

function Widget_trackAnimation takes integer this_44, player p returns nothing
endfunction

function dispatch_Widget_trackAnimation takes integer this_44, player p, string wurstStackTrace returns nothing
	if Widget_typeId[this_44] == 0 then
		if this_44 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Widget.trackAnimation" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Widget.trackAnimation on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	if Widget_typeId[this_44] <= 799 then
		if Widget_typeId[this_44] <= 795 then
			if Widget_typeId[this_44] <= 786 then
				call Widget_trackAnimation(this_44, p)
			else
				call Widget_trackAnimation(this_44, p)
			endif
		else
			call Widget_trackAnimation(this_44, p)
		endif
	elseif Widget_typeId[this_44] <= 809 then
		if Widget_typeId[this_44] <= 805 then
			call Widget_trackAnimation(this_44, p)
		else
			call Icon_trackAnimation(this_44, p, "\n   Menu, line 38" + wurstStackTrace)
		endif
	else
		call Button_trackAnimation(this_44, p)
	endif
endfunction

function Observable_onTrack takes integer this_44, player p, string wurstStackTrace returns nothing
	if Observable_track[this_44] != 0 then
		call cyc_cyc_dispatch_PlayerAction_run(0, 0, Observable_track[this_44], p, "\n   Menu, line 102" + wurstStackTrace)
	endif
	if Observable_playHoverAnimation[this_44] then
		call dispatch_Widget_trackAnimation(Observable_content[this_44], p, "\n   Menu, line 104" + wurstStackTrace)
	endif
endfunction

function dispatch_Observable_onTrack takes integer this_44, player p, string wurstStackTrace returns nothing
	if Widget_typeId[this_44] == 0 then
		if this_44 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Observable.onTrack" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Observable.onTrack on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	if Widget_typeId[this_44] <= 786 then
		call Observable_onTrack(this_44, p, "\n   Menu, line 100" + wurstStackTrace)
	else
		call Observable_onTrack(this_44, p, "\n   Menu, line 100" + wurstStackTrace)
	endif
endfunction

function Icon_untrackAnimation takes integer this_44, player p, string wurstStackTrace returns nothing
	local destructable d_2
	if GetLocalPlayer() == p then
		set d_2 = Icon_structs_get(this_44, player_getId(p), "\n   Icon, line 83" + wurstStackTrace)
		call SetDestructableAnimationSpeed(d_2, Icon_animationSpeedHover)
		call SetDestructableAnimation(d_2, "morph alternate")
	endif
	set d_2 = null
endfunction

function Widget_untrackAnimation takes integer this_44, player p returns nothing
endfunction

function dispatch_Widget_untrackAnimation takes integer this_44, player p, string wurstStackTrace returns nothing
	if Widget_typeId[this_44] == 0 then
		if this_44 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Widget.untrackAnimation" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Widget.untrackAnimation on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	if Widget_typeId[this_44] <= 799 then
		if Widget_typeId[this_44] <= 795 then
			if Widget_typeId[this_44] <= 786 then
				call Widget_untrackAnimation(this_44, p)
			else
				call Widget_untrackAnimation(this_44, p)
			endif
		else
			call Widget_untrackAnimation(this_44, p)
		endif
	elseif Widget_typeId[this_44] <= 809 then
		if Widget_typeId[this_44] <= 805 then
			call Widget_untrackAnimation(this_44, p)
		else
			call Icon_untrackAnimation(this_44, p, "\n   Menu, line 40" + wurstStackTrace)
		endif
	else
		call Widget_untrackAnimation(this_44, p)
	endif
endfunction

function Observable_onUnTrack takes integer this_44, player p, string wurstStackTrace returns nothing
	if Observable_unTrack[this_44] != 0 then
		call cyc_cyc_dispatch_PlayerAction_run(0, 0, Observable_unTrack[this_44], p, "\n   Menu, line 108" + wurstStackTrace)
	endif
	if Observable_playHoverAnimation[this_44] then
		call dispatch_Widget_untrackAnimation(Observable_content[this_44], p, "\n   Menu, line 110" + wurstStackTrace)
	endif
endfunction

function dispatch_Observable_onUnTrack takes integer this_44, player p, string wurstStackTrace returns nothing
	if Widget_typeId[this_44] == 0 then
		if this_44 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Observable.onUnTrack" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Observable.onUnTrack on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	if Widget_typeId[this_44] <= 786 then
		call Observable_onUnTrack(this_44, p, "\n   Menu, line 106" + wurstStackTrace)
	else
		call Observable_onUnTrack(this_44, p, "\n   Menu, line 106" + wurstStackTrace)
	endif
endfunction

function Window_getObservableAt takes integer this_44, integer tr, string wurstStackTrace returns integer
	return dispatch_HashMap_get(Window_trackMap[this_44], tr, "\n   Menu, line 186" + wurstStackTrace)
endfunction

function dispatch_Window_getObservableAt takes integer this_44, integer tr, string wurstStackTrace returns integer
	local integer getObservableAt_result
	if Window_typeId[this_44] == 0 then
		if this_44 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Window.getObservableAt" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Window.getObservableAt on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	if Window_typeId[this_44] <= 789 then
		set getObservableAt_result = Window_getObservableAt(this_44, tr, "\n   Menu, line 185" + wurstStackTrace)
	else
		set getObservableAt_result = Window_getObservableAt(this_44, tr, "\n   Menu, line 185" + wurstStackTrace)
	endif
	return getObservableAt_result
endfunction

function WindowManager_trackableTrack takes integer tr, player p, string wurstStackTrace returns nothing
	local integer ob = dispatch_Window_getObservableAt(dispatch_Stack_peek(WindowManager_currentWindow[GetPlayerId(p)], "\n   Menu, line 154" + wurstStackTrace), tr, "\n   Menu, line 154" + wurstStackTrace)
	local integer curr = WindowManager_currentObservable[GetPlayerId(p)]
	if ob != curr then
		if ob != 0 then
			call dispatch_Observable_onTrack(ob, p, "\n   Menu, line 158" + wurstStackTrace)
		endif
		if curr != 0 then
			call dispatch_Observable_onUnTrack(curr, p, "\n   Menu, line 160" + wurstStackTrace)
		endif
		set WindowManager_currentObservable[GetPlayerId(p)] = ob
	endif
endfunction

function closure_impl_59 takes integer this_44, integer track, player p, string wurstStackTrace returns nothing
	call WindowManager_trackableTrack(track, p, "\n   Menu, line 216" + wurstStackTrace)
endfunction

function Icon_clickAnimation takes integer this_44, player p, string wurstStackTrace returns nothing
	local destructable d_2
	if GetLocalPlayer() == p then
		set d_2 = Icon_structs_get(this_44, player_getId(p), "\n   Icon, line 70" + wurstStackTrace)
		call SetDestructableAnimationSpeed(d_2, Icon_animationSpeedHit)
		call SetDestructableAnimation(d_2, "morph alternate")
		call QueueDestructableAnimation(d_2, "morph")
	endif
	set d_2 = null
endfunction

function Widget_clickAnimation takes integer this_44, player p returns nothing
endfunction

function dispatch_Widget_clickAnimation takes integer this_44, player p, string wurstStackTrace returns nothing
	if Widget_typeId[this_44] == 0 then
		if this_44 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Widget.clickAnimation" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Widget.clickAnimation on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	if Widget_typeId[this_44] <= 799 then
		if Widget_typeId[this_44] <= 795 then
			if Widget_typeId[this_44] <= 786 then
				call Widget_clickAnimation(this_44, p)
			else
				call Widget_clickAnimation(this_44, p)
			endif
		else
			call Widget_clickAnimation(this_44, p)
		endif
	elseif Widget_typeId[this_44] <= 809 then
		if Widget_typeId[this_44] <= 805 then
			call Widget_clickAnimation(this_44, p)
		else
			call Icon_clickAnimation(this_44, p, "\n   Menu, line 36" + wurstStackTrace)
		endif
	else
		call Widget_clickAnimation(this_44, p)
	endif
endfunction

function Observable_onDoubleClick takes integer this_44, player p, string wurstStackTrace returns nothing
	if Observable_dClick[this_44] != 0 then
		call cyc_cyc_dispatch_PlayerAction_run(0, 0, Observable_dClick[this_44], p, "\n   Menu, line 96" + wurstStackTrace)
	endif
	if ( not Observable_playClickAnimation[this_44]) and Observable_playDoubleClickAnimation[this_44] then
		call dispatch_Widget_clickAnimation(Observable_content[this_44], p, "\n   Menu, line 98" + wurstStackTrace)
	endif
endfunction

function dispatch_Observable_onDoubleClick takes integer this_44, player p, string wurstStackTrace returns nothing
	if Widget_typeId[this_44] == 0 then
		if this_44 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Observable.onDoubleClick" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Observable.onDoubleClick on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	if Widget_typeId[this_44] <= 786 then
		call Observable_onDoubleClick(this_44, p, "\n   Menu, line 94" + wurstStackTrace)
	else
		call Observable_onDoubleClick(this_44, p, "\n   Menu, line 94" + wurstStackTrace)
	endif
endfunction

function WindowManager_trackableDoubleHit takes integer tr, player p, string wurstStackTrace returns nothing
	local integer t = dispatch_Window_getObservableAt(dispatch_Stack_peek(WindowManager_currentWindow[GetPlayerId(p)], "\n   Menu, line 149" + wurstStackTrace), tr, "\n   Menu, line 149" + wurstStackTrace)
	if t != 0 then
		call dispatch_Observable_onDoubleClick(t, p, "\n   Menu, line 151" + wurstStackTrace)
	endif
endfunction

function closure_impl_60 takes integer this_44, integer track, player p, string wurstStackTrace returns nothing
	call WindowManager_trackableDoubleHit(track, p, "\n   Menu, line 215" + wurstStackTrace)
endfunction

function Observable_onClick takes integer this_44, player p, string wurstStackTrace returns nothing
	if Observable_click[this_44] != 0 then
		call cyc_cyc_dispatch_PlayerAction_run(0, 0, Observable_click[this_44], p, "\n   Menu, line 90" + wurstStackTrace)
	endif
	if Observable_playClickAnimation[this_44] then
		call dispatch_Widget_clickAnimation(Observable_content[this_44], p, "\n   Menu, line 92" + wurstStackTrace)
	endif
endfunction

function dispatch_Observable_onClick takes integer this_44, player p, string wurstStackTrace returns nothing
	if Widget_typeId[this_44] == 0 then
		if this_44 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Observable.onClick" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Observable.onClick on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	if Widget_typeId[this_44] <= 786 then
		call Observable_onClick(this_44, p, "\n   Menu, line 88" + wurstStackTrace)
	else
		call Observable_onClick(this_44, p, "\n   Menu, line 88" + wurstStackTrace)
	endif
endfunction

function Window_voidClick_2 takes integer this_44, player p, string wurstStackTrace returns nothing
	if Window_voidClick[this_44] != 0 then
		call cyc_cyc_dispatch_PlayerAction_run(0, 0, Window_voidClick[this_44], p, "\n   Menu, line 190" + wurstStackTrace)
	endif
endfunction

function dispatch_Window_voidClick takes integer this_44, player p, string wurstStackTrace returns nothing
	if Window_typeId[this_44] == 0 then
		if this_44 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Window.voidClick" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Window.voidClick on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	if Window_typeId[this_44] <= 789 then
		call Window_voidClick_2(this_44, p, "\n   Menu, line 188" + wurstStackTrace)
	else
		call Window_voidClick_2(this_44, p, "\n   Menu, line 188" + wurstStackTrace)
	endif
endfunction

function WindowManager_trackableHit takes integer tr, player p, string wurstStackTrace returns nothing
	local integer t = dispatch_Window_getObservableAt(dispatch_Stack_peek(WindowManager_currentWindow[GetPlayerId(p)], "\n   Menu, line 142" + wurstStackTrace), tr, "\n   Menu, line 142" + wurstStackTrace)
	if t != 0 then
		call dispatch_Observable_onClick(t, p, "\n   Menu, line 144" + wurstStackTrace)
	else
		call dispatch_Window_voidClick(dispatch_Stack_peek(WindowManager_currentWindow[GetPlayerId(p)], "\n   Menu, line 146" + wurstStackTrace), p, "\n   Menu, line 146" + wurstStackTrace)
	endif
endfunction

function closure_impl_61 takes integer this_44, integer track, player p, string wurstStackTrace returns nothing
	call WindowManager_trackableHit(track, p, "\n   Menu, line 214" + wurstStackTrace)
endfunction

function dispatch_TrackableAction_run takes integer this_44, integer clickedTrackable, player clickingPlayer, string wurstStackTrace returns nothing
	if TrackableAction_typeId[this_44] == 0 then
		if this_44 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling TrackableAction.run" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called TrackableAction.run on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	if TrackableAction_typeId[this_44] <= 792 then
		if TrackableAction_typeId[this_44] <= 791 then
			call closure_impl_61(this_44, clickedTrackable, clickingPlayer, "\n   Trackable, line 20" + wurstStackTrace)
		else
			call closure_impl_60(this_44, clickedTrackable, clickingPlayer, "\n   Trackable, line 20" + wurstStackTrace)
		endif
	else
		call closure_impl_59(this_44, clickedTrackable, clickingPlayer, "\n   Trackable, line 20" + wurstStackTrace)
	endif
endfunction

function TrackableEx_clickHandler takes integer this_44, player p, string wurstStackTrace returns nothing
	if TrackableEx_onDoubleClick[this_44] != 0 then
		if TrackableEx_playerClickBefore[player_getId(p)] then
			call dispatch_TrackableAction_run(TrackableEx_onDoubleClick[this_44], this_44, p, "\n   Trackable, line 56" + wurstStackTrace)
			set TrackableEx_playerClickBefore[player_getId(p)] = false
			call timer_pause(TrackableEx_playerDoubleClickTimer[player_getId(p)])
		else
			call timer_start(TrackableEx_playerDoubleClickTimer[player_getId(p)], TrackableEx_doubleClickSpeed, ref_function_bridge_closure_impl)
			set TrackableEx_playerClickBefore[player_getId(p)] = true
			call dispatch_TrackableAction_run(TrackableEx_onClick[this_44], this_44, p, "\n   Trackable, line 64" + wurstStackTrace)
		endif
	elseif TrackableEx_onClick[this_44] != 0 then
		call dispatch_TrackableAction_run(TrackableEx_onClick[this_44], this_44, p, "\n   Trackable, line 67" + wurstStackTrace)
	endif
endfunction

function dispatch_TrackableEx_clickHandler takes integer this_44, player p, string wurstStackTrace returns nothing
	if TrackableEx_typeId[this_44] == 0 then
		if this_44 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling TrackableEx.clickHandler" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called TrackableEx.clickHandler on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call TrackableEx_clickHandler(this_44, p, "\n   Trackable, line 53" + wurstStackTrace)
endfunction

function hashtable_loadPlayerHandle takes hashtable this_44, integer parentKey, integer childKey returns player
	return LoadPlayerHandle(this_44, parentKey, childKey)
endfunction

function Table_loadPlayer takes integer this_44, integer parentKey returns player
	return hashtable_loadPlayerHandle(Table_ht, this_44, parentKey)
endfunction

function dispatch_Table_loadPlayer takes integer this_44, integer parentKey, string wurstStackTrace returns player
	local player loadPlayer_result
	if Table_typeId[this_44] == 0 then
		if this_44 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Table.loadPlayer" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Table.loadPlayer on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	set loadPlayer_result = Table_loadPlayer(this_44, parentKey)
	set dispatch_Table_loadPlayertempReturn = loadPlayer_result
	set loadPlayer_result = null
	return dispatch_Table_loadPlayertempReturn
endfunction

function hashtable_saveFogStateHandle takes hashtable this_44, integer parentKey, integer childKey, fogstate value returns nothing
	call SaveFogStateHandle(this_44, parentKey, childKey, value)
endfunction

function Table_saveFogState takes integer this_44, integer parentKey, fogstate value returns nothing
	call hashtable_saveFogStateHandle(Table_ht, this_44, parentKey, value)
endfunction

function dispatch_Table_saveFogState takes integer this_44, integer parentKey, fogstate value, string wurstStackTrace returns nothing
	if Table_typeId[this_44] == 0 then
		if this_44 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Table.saveFogState" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Table.saveFogState on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call Table_saveFogState(this_44, parentKey, value)
endfunction

function playerFromIndex takes integer index, string wurstStackTrace returns player
	call dispatch_Table_saveFogState(TypeCasting_typecastdata, 0, ConvertFogState(index), "\n   TypeCasting, line 10" + wurstStackTrace)
	return dispatch_Table_loadPlayer(TypeCasting_typecastdata, 0, "\n   TypeCasting, line 11" + wurstStackTrace)
endfunction

function closure_impl_62 takes string wurstStackTrace returns nothing
	call dispatch_TrackableEx_clickHandler(dispatch_HashMap_get(TrackableEx_trackableObjects, trackableToIndex(GetTriggeringTrackable()), "\n   Trackable, line 30" + wurstStackTrace), playerFromIndex(dispatch_HashMap_get(TrackableEx_trackableOwner, trackableToIndex(GetTriggeringTrackable()), "\n   Trackable, line 30" + wurstStackTrace), "\n   Trackable, line 30" + wurstStackTrace), "\n   Trackable, line 30" + wurstStackTrace)
endfunction

function bridge_closure_impl takes nothing returns nothing
	call closure_impl_62("\n   Trackable, line 30")
endfunction

function TrackableEx_trackHandler takes integer this_44, player p, string wurstStackTrace returns nothing
	if TrackableEx_onTrack[this_44] != 0 then
		call dispatch_TrackableAction_run(TrackableEx_onTrack[this_44], this_44, p, "\n   Trackable, line 51" + wurstStackTrace)
	endif
endfunction

function dispatch_TrackableEx_trackHandler takes integer this_44, player p, string wurstStackTrace returns nothing
	if TrackableEx_typeId[this_44] == 0 then
		if this_44 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling TrackableEx.trackHandler" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called TrackableEx.trackHandler on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call TrackableEx_trackHandler(this_44, p, "\n   Trackable, line 49" + wurstStackTrace)
endfunction

function closure_impl_63 takes string wurstStackTrace returns nothing
	call dispatch_TrackableEx_trackHandler(dispatch_HashMap_get(TrackableEx_trackableObjects, trackableToIndex(GetTriggeringTrackable()), "\n   Trackable, line 29" + wurstStackTrace), playerFromIndex(dispatch_HashMap_get(TrackableEx_trackableOwner, trackableToIndex(GetTriggeringTrackable()), "\n   Trackable, line 29" + wurstStackTrace), "\n   Trackable, line 29" + wurstStackTrace), "\n   Trackable, line 29" + wurstStackTrace)
endfunction

function bridge_closure_impl_2 takes nothing returns nothing
	call closure_impl_63("\n   Trackable, line 29")
endfunction

function Missle_onDestroy_2 takes integer this_44, string wurstStackTrace returns nothing
	call dispatch_Fx_destroyFx(Missle_missle[this_44], "\n   RamisHomingMissle, line 66" + wurstStackTrace)
	call timer_release(Missle_t_2[this_44], "\n   RamisHomingMissle, line 67" + wurstStackTrace)
	call timer_release(Missle_destroyTimer[this_44], "\n   RamisHomingMissle, line 68" + wurstStackTrace)
endfunction

function dealloc_Missle_2 takes integer obj, string wurstStackTrace returns nothing
	if Missle_typeId_2[obj] == 0 then
		call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Double free: object of type Missle" + wurstStackTrace)
		call I2S(1 / 0)
	else
		set Missle_nextFree_2[Missle_firstFree_2] = obj
		set Missle_firstFree_2 = Missle_firstFree_2 + 1
		set Missle_typeId_2[obj] = 0
	endif
endfunction

function destroyMissle_2 takes integer this_44, string wurstStackTrace returns nothing
	call Missle_onDestroy_2(this_44, "\n   RamisHomingMissle, line 65" + wurstStackTrace)
	call dealloc_Missle_2(this_44, "\n   RamisHomingMissle, line 65" + wurstStackTrace)
endfunction

function dispatch_Missle_destroyMissle_2 takes integer this_44, string wurstStackTrace returns nothing
	if Missle_typeId_2[this_44] == 0 then
		if this_44 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Missle.destroyMissle" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Missle.destroyMissle on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call destroyMissle_2(this_44, "\n   RamisHomingMissle, line 10" + wurstStackTrace)
endfunction

function Unit_addKnock_2 takes integer this_44, real momentum_x, real momentum_y, string wurstStackTrace returns nothing
	call dispatch_Unit_addKnock(this_44, momentum_x, momentum_y, "\n   UnitClass, line 271" + wurstStackTrace)
endfunction

function dispatch_Unit_addKnock_2 takes integer this_44, real momentum_x, real momentum_y, string wurstStackTrace returns nothing
	if Unit_typeId[this_44] == 0 then
		if this_44 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Unit.addKnock" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Unit.addKnock on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	if Unit_typeId[this_44] <= 695 then
		call Unit_addKnock_2(this_44, momentum_x, momentum_y, "\n   UnitClass, line 270" + wurstStackTrace)
	else
		call Unit_addKnock_2(this_44, momentum_x, momentum_y, "\n   UnitClass, line 270" + wurstStackTrace)
	endif
endfunction

function group_enumUnitsInRange_2 takes group this_44, real pos_x, real pos_y, real range returns nothing
	call GroupEnumUnitsInRange(this_44, pos_x, pos_y, range, null)
endfunction

function vec2_angleTo takes real this_x, real this_y, real v_x, real v_y returns real
	return real_asAngleRadians(Atan2(v_y - this_y, v_x - this_x))
endfunction

function Missle_move_2 takes integer this_44, string wurstStackTrace returns nothing
	local integer tempIndex = this_44
	local integer temp = tempIndex
	local integer tempIndex_2 = this_44
	local real posmissle_x
	local real posmissle_y
	local real speedtemp_x
	local real speedtemp_y
	local boolean wasHit
	local group wurst__iterator0
	local group receiver
	local unit u_2
	local unit u_3
	local real temp_posmissle_x
	local real temp_posmissle_y
	local real temp_speedtemp_x
	local real temp_speedtemp_y
	local integer tempIndex_3
	local integer tempIndex_4
	local integer tempIndex_5
	local integer tempIndex_6
	local integer temp_2
	local real temp_3
	local real temp_4
	local integer temp_5
	local real temp_6
	local real temp_7
	local group temp_8
	set Missle_speed[temp] = vec2_op_mult(Missle_speed[tempIndex_2], Missle_speed_2[tempIndex_2], Missle_speedLost)
	set Missle_speed_2[tempIndex] = vec2_op_mult_return_y
	set temp_posmissle_x = dispatch_Fx_getPos2(Missle_missle[this_44], "\n   RamisHomingMissle, line 44" + wurstStackTrace)
	set temp_posmissle_y = dispatch_Fx_getPos2_return_y
	set posmissle_x = temp_posmissle_x
	set posmissle_y = temp_posmissle_y
	if ( not Missle_canHitCaster[this_44]) and vec2_distToVec(posmissle_x, posmissle_y, unit_getPos(Unit_u[Missle_owner[this_44]]), unit_getPos_return_y) > Missle_missleRadius then
		set Missle_canHitCaster[this_44] = true
	endif
	set temp_speedtemp_x = vec2_polarOffset(0., 0., vec2_angleTo(posmissle_x, posmissle_y, unit_getPos(Unit_u[Missle_target[this_44]]), unit_getPos_return_y), Missle_speedAccel)
	set temp_speedtemp_y = vec2_polarOffset_return_y
	set speedtemp_x = temp_speedtemp_x
	set speedtemp_y = temp_speedtemp_y
	set tempIndex_3 = this_44
	set temp_2 = tempIndex_3
	set tempIndex_4 = this_44
	set Missle_speed[temp_2] = vec2_op_plus(Missle_speed[tempIndex_4], Missle_speed_2[tempIndex_4], speedtemp_x, speedtemp_y)
	set Missle_speed_2[tempIndex_3] = vec2_op_plus_return_y
	set temp_5 = Missle_missle[this_44]
	set temp_3 = posmissle_x
	set temp_4 = posmissle_y
	set tempIndex_5 = this_44
	call dispatch_Fx_setPos(temp_5, vec2_op_plus(temp_3, temp_4, Missle_speed[tempIndex_5], Missle_speed_2[tempIndex_5]), vec2_op_plus_return_y, "\n   RamisHomingMissle, line 49" + wurstStackTrace)
	set wasHit = false
	set temp_8 = TempGroups_ENUM_GROUP
	set temp_6 = posmissle_x
	set temp_7 = posmissle_y
	set tempIndex_6 = this_44
	call group_enumUnitsInRange_2(temp_8, vec2_op_plus(temp_6, temp_7, Missle_speed[tempIndex_6], Missle_speed_2[tempIndex_6]), vec2_op_plus_return_y, Missle_missleRadius)
	if Missle_canHitCaster[this_44] and IsUnitInGroup(Unit_u[Missle_owner[this_44]], TempGroups_ENUM_GROUP) then
		set receiver = TempGroups_ENUM_GROUP
		call group_enumUnitsInRange_2(receiver, unit_getPos(Unit_u[Missle_owner[this_44]]), unit_getPos_return_y, Missle_knockbackRange)
		set wurst__iterator0 = receiver
		loop
			exitwhen  not group_hasNext(wurst__iterator0)
			set u_2 = group_next(wurst__iterator0)
			if u_2 != Unit_u[Missle_owner[this_44]] then
				call dispatch_Unit_addKnock_2(unit_getUserData(u_2), angle_toVec(vec2_angleTo(unit_getPos(Unit_u[Missle_owner[this_44]]), unit_getPos_return_y, unit_getPos(u_2), unit_getPos_return_y), (1. - vec2_distToVec(unit_getPos(Unit_u[Missle_owner[this_44]]), unit_getPos_return_y, unit_getPos(u_2), unit_getPos_return_y) / Missle_knockbackRange) * Missle_knockback), angle_toVec_return_y, "\n   RamisHomingMissle, line 55" + wurstStackTrace)
			endif
		endloop
		call dispatch_Missle_destroyMissle_2(this_44, "\n   RamisHomingMissle, line 56" + wurstStackTrace)
		set wurst__iterator0 = null
		set receiver = null
		set u_2 = null
		set u_3 = null
		set temp_8 = null
		return
	endif
	loop
		exitwhen  not group_hasNext(TempGroups_ENUM_GROUP)
		set u_3 = group_next(TempGroups_ENUM_GROUP)
		if Unit_u[Missle_owner[this_44]] != u_3 then
			call dispatch_Unit_addKnock_2(unit_getUserData(u_3), angle_toVec(vec2_angleTo(posmissle_x, posmissle_y, unit_getPos(u_3), unit_getPos_return_y), Missle_knockback), angle_toVec_return_y, "\n   RamisHomingMissle, line 60" + wurstStackTrace)
			set wasHit = true
		endif
	endloop
	if wasHit then
		call dispatch_Missle_destroyMissle_2(this_44, "\n   RamisHomingMissle, line 63" + wurstStackTrace)
	endif
	set wurst__iterator0 = null
	set receiver = null
	set u_2 = null
	set u_3 = null
	set temp_8 = null
endfunction

function dispatch_Missle_move_2 takes integer this_44, string wurstStackTrace returns nothing
	if Missle_typeId_2[this_44] == 0 then
		if this_44 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Missle.move" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Missle.move on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call Missle_move_2(this_44, "\n   RamisHomingMissle, line 42" + wurstStackTrace)
endfunction

function closure_impl_64 takes string wurstStackTrace returns nothing
	call dispatch_Missle_move_2(timer_getData(GetExpiredTimer(), "\n   RamisHomingMissle, line 36" + wurstStackTrace), "\n   RamisHomingMissle, line 36" + wurstStackTrace)
endfunction

function bridge_closure_impl_3 takes nothing returns nothing
	call closure_impl_64("\n   RamisHomingMissle, line 36")
endfunction

function closure_impl_65 takes string wurstStackTrace returns nothing
	set TrackableEx_playerClickBefore[timer_getData(GetExpiredTimer(), "\n   Trackable, line 61" + wurstStackTrace)] = false
endfunction

function bridge_closure_impl_4 takes nothing returns nothing
	call closure_impl_65("\n   Trackable, line 60")
endfunction

function real_asAngleDegrees takes real this_44 returns real
	return this_44 * Maths_DEGTORAD
endfunction

function unit_getFacingAngle takes unit this_44 returns real
	return real_asAngleDegrees(GetUnitFacing(this_44))
endfunction

function unit_setXY takes unit this_44, real pos_x, real pos_y returns nothing
	call SetUnitX(this_44, pos_x)
	call SetUnitY(this_44, pos_y)
endfunction

function closure_impl_66 takes string wurstStackTrace returns nothing
	local integer wurst__iterator0 = dispatch_LinkedList_iterator(Hero_toMove, "\n   HeroClass, line 24" + wurstStackTrace)
	local integer h
	loop
		exitwhen  not dispatch_LLIterator_hasNext(wurst__iterator0, "\n   HeroClass, line 24" + wurstStackTrace)
		set h = dispatch_LLIterator_next(wurst__iterator0, "\n   HeroClass, line 24" + wurstStackTrace)
		call unit_setXY(Unit_u[h], vec2_polarOffset(unit_getPos(Unit_u[h]), unit_getPos_return_y, unit_getFacingAngle(Unit_u[h]), 0.5), vec2_polarOffset_return_y)
	endloop
	call dispatch_LLIterator_close(wurst__iterator0, "\n   HeroClass, line 24" + wurstStackTrace)
endfunction

function bridge_closure_impl_5 takes nothing returns nothing
	call closure_impl_66("\n   HeroClass, line 23")
endfunction

function closure_impl_67 takes string wurstStackTrace returns nothing
	call dispatch_Missle_destroyMissle_2(timer_getData(GetExpiredTimer(), "\n   RamisHomingMissle, line 40" + wurstStackTrace), "\n   RamisHomingMissle, line 40" + wurstStackTrace)
endfunction

function bridge_closure_impl_6 takes nothing returns nothing
	call closure_impl_67("\n   RamisHomingMissle, line 37")
endfunction

function hashtable_loadEffectHandle takes hashtable this_44, integer parentKey, integer childKey returns effect
	return LoadEffectHandle(this_44, parentKey, childKey)
endfunction

function Table_loadEffect takes integer this_44, integer parentKey returns effect
	return hashtable_loadEffectHandle(Table_ht, this_44, parentKey)
endfunction

function dispatch_Table_loadEffect takes integer this_44, integer parentKey, string wurstStackTrace returns effect
	local effect loadEffect_result
	if Table_typeId[this_44] == 0 then
		if this_44 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Table.loadEffect" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Table.loadEffect on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	set loadEffect_result = Table_loadEffect(this_44, parentKey)
	set dispatch_Table_loadEffecttempReturn = loadEffect_result
	set loadEffect_result = null
	return dispatch_Table_loadEffecttempReturn
endfunction

function destroyTimedEffect takes string wurstStackTrace returns nothing
	call effect_destr(dispatch_Table_loadEffect(TimedEffect_effectData, GetHandleId(GetExpiredTimer()), "\n   TimedEffect, line 12" + wurstStackTrace))
endfunction

function bridge_destroyTimedEffect takes nothing returns nothing
	call destroyTimedEffect("\n   TimedEffect, line 9")
endfunction

function destroyTimedFx takes string wurstStackTrace returns nothing
	local timer t = GetExpiredTimer()
	call dispatch_Fx_destroyFx(timer_getData(t, "\n   TimedEffect, line 21" + wurstStackTrace), "\n   TimedEffect, line 21" + wurstStackTrace)
	call timer_release(t, "\n   TimedEffect, line 22" + wurstStackTrace)
	set t = null
endfunction

function bridge_destroyTimedFx takes nothing returns nothing
	call destroyTimedFx("\n   TimedEffect, line 16")
endfunction

function dispatch_OnCast_run takes integer this_44, unit caster, integer lvl returns nothing
endfunction

function dispatch_OnPointCast_run takes integer this_44, unit caster, integer lvl, real pos_x, real pos_y returns nothing
endfunction

function alloc_Missle takes nothing returns integer
	local integer this_44
	if Missle_firstFree_2 == 0 then
		set Missle_maxIndex_2 = Missle_maxIndex_2 + 1
		set this_44 = Missle_maxIndex_2
	else
		set Missle_firstFree_2 = Missle_firstFree_2 - 1
		set this_44 = Missle_nextFree_2[Missle_firstFree_2]
	endif
	set Missle_typeId_2[this_44] = 829
	return this_44
endfunction

function alloc_Fx takes nothing returns integer
	local integer this_44
	if Fx_firstFree == 0 then
		set Fx_maxIndex = Fx_maxIndex + 1
		set this_44 = Fx_maxIndex
	else
		set Fx_firstFree = Fx_firstFree - 1
		set this_44 = Fx_nextFree[Fx_firstFree]
	endif
	set Fx_typeId[this_44] = 21
	return this_44
endfunction

function angle_degrees takes real this_radians returns real
	return this_radians * Maths_RADTODEG
endfunction

function createUnit takes player p, integer unitId, real pos_x, real pos_y, real facing_radians returns unit
	return CreateUnit(p, unitId, pos_x, pos_y, angle_degrees(facing_radians))
endfunction

function createDummy takes real pos_x, real pos_y, player owner, real facing_radians returns unit
	local unit u_2 = createUnit(owner, Basics_DUMMY_UNIT_ID, pos_x, pos_y, facing_radians)
	local unit receiver = u_2
	local unit receiver_2
	local unit receiver_3
	local unit receiver_4
	call unit_setPos_2(receiver, pos_x, pos_y)
	set receiver_2 = receiver
	call unit_addAbility(receiver_2, Basics_HEIGHT_ENABLER)
	set receiver_3 = receiver_2
	call unit_removeAbility(receiver_3, Basics_HEIGHT_ENABLER)
	set receiver_4 = receiver_3
	call unit_addAbility(receiver_4, Basics_LOCUST_ID)
	set createDummytempReturn = u_2
	set u_2 = null
	set receiver = null
	set receiver_2 = null
	set receiver_3 = null
	set receiver_4 = null
	return createDummytempReturn
endfunction

function ArrayQueue_units_get takes integer index1, integer index2, string wurstStackTrace returns unit
	local unit returnVal
	if index2 < 0 or index2 >= 6 then
		call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Index out of Bounds" + wurstStackTrace)
		call I2S(1 / 0)
	elseif index2 <= 2 then
		if index2 <= 1 then
			if index2 <= 0 then
				set returnVal = ArrayQueue_units_0[index1]
			else
				set returnVal = ArrayQueue_units_1[index1]
			endif
		else
			set returnVal = ArrayQueue_units_2[index1]
		endif
	elseif index2 <= 4 then
		if index2 <= 3 then
			set returnVal = ArrayQueue_units_3[index1]
		else
			set returnVal = ArrayQueue_units_4[index1]
		endif
	else
		set returnVal = ArrayQueue_units_5[index1]
	endif
	set ArrayQueue_units_gettempReturn = returnVal
	set returnVal = null
	return ArrayQueue_units_gettempReturn
endfunction

function ArrayQueue_dequeue takes integer this_44, string wurstStackTrace returns unit
	if ArrayQueue_size[this_44] > 0 then
		set ArrayQueue_size[this_44] = ArrayQueue_size[this_44] - 1
		set ArrayQueue_fp[this_44] = ModuloInteger(ArrayQueue_fp[this_44] + 1, NewDummyRecycler_SAVED_UNITS_PER_ANGLE)
		return ArrayQueue_units_get(this_44, ArrayQueue_fp[this_44], "\n   NewDummyRecycler, line 54" + wurstStackTrace)
	else
		call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Queue empty" + wurstStackTrace)
		call I2S(1 / 0)
		return null
	endif
endfunction

function dispatch_ArrayQueue_dequeue takes integer this_44, string wurstStackTrace returns unit
	local unit dequeue_result
	if ArrayQueue_typeId[this_44] == 0 then
		if this_44 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling ArrayQueue.dequeue" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called ArrayQueue.dequeue on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	set dequeue_result = ArrayQueue_dequeue(this_44, "\n   NewDummyRecycler, line 50" + wurstStackTrace)
	set dispatch_ArrayQueue_dequeuetempReturn = dequeue_result
	set dequeue_result = null
	return dispatch_ArrayQueue_dequeuetempReturn
endfunction

function unit_unpause takes unit this_44 returns nothing
	call PauseUnit(this_44, false)
endfunction

function DummyRecycler_get takes real pos_x, real pos_y, real a_radians, string wurstStackTrace returns unit
	local integer angleIndex = real_toInt(ModuloReal(angle_degrees(a_radians), 360.)) / NewDummyRecycler_DIFFERENT_ANGLES
	local unit receiver
	local unit receiver_2
	if ArrayQueue_size[NewDummyRecycler_angleQueues[angleIndex]] > 0 then
		set receiver = dispatch_ArrayQueue_dequeue(NewDummyRecycler_angleQueues[angleIndex], "\n   NewDummyRecycler, line 14" + wurstStackTrace)
		call unit_setPos_2(receiver, pos_x, pos_y)
		set receiver_2 = receiver
		call unit_unpause(receiver_2)
		set DummyRecycler_gettempReturn = receiver_2
		set receiver = null
		set receiver_2 = null
		return DummyRecycler_gettempReturn
	else
		set receiver = null
		set receiver_2 = null
		return createDummy(pos_x, pos_y, Basics_DUMMY_PLAYER, a_radians)
	endif
endfunction

function Fx_setFx takes integer this_44, string newpath returns nothing
	if Fx_fx[this_44] != null then
		call effect_destr(Fx_fx[this_44])
	endif
	if newpath == "" then
		set Fx_fx[this_44] = null
	else
		set Fx_fx[this_44] = unit_addEffect(Fx_dummy[this_44], newpath, "origin")
	endif
endfunction

function dispatch_Fx_setFx takes integer this_44, string newpath, string wurstStackTrace returns nothing
	if Fx_typeId[this_44] == 0 then
		if this_44 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Fx.setFx" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Fx.setFx on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call Fx_setFx(this_44, newpath)
endfunction

function unit_setFlyHeight takes unit this_44, real height, real rate returns nothing
	call SetUnitFlyHeight(this_44, height, rate)
endfunction

function Fx_setZ takes integer this_44, real z returns nothing
	call unit_setFlyHeight(Fx_dummy[this_44], z, 0.)
endfunction

function dispatch_Fx_setZ takes integer this_44, real z, string wurstStackTrace returns nothing
	if Fx_typeId[this_44] == 0 then
		if this_44 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Fx.setZ" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Fx.setZ on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call Fx_setZ(this_44, z)
endfunction

function construct_Fx takes integer this_44, real pos_x, real pos_y, real pos_z, real facing_radians, string fxpath, string wurstStackTrace returns nothing
	set Fx_dummy[this_44] = null
	set Fx_fx[this_44] = null
	set Fx_dummy[this_44] = DummyRecycler_get(vec3_toVec2(pos_x, pos_y, pos_z), vec3_toVec2_return_y, facing_radians, "\n   Fx, line 45" + wurstStackTrace)
	call dispatch_Fx_setZ(this_44, pos_z, "\n   Fx, line 46" + wurstStackTrace)
	call dispatch_Fx_setFx(this_44, fxpath, "\n   Fx, line 47" + wurstStackTrace)
endfunction

function new_Fx takes real pos_x, real pos_y, real pos_z, real facing_radians, string fxpath, string wurstStackTrace returns integer
	local integer this_44 = alloc_Fx()
	call construct_Fx(this_44, pos_x, pos_y, pos_z, facing_radians, fxpath, "\n   Fx, line 44" + wurstStackTrace)
	return this_44
endfunction

function vec2_withZ takes real this_x, real this_y, real z returns real
	set vec2_withZ_return_x = this_x
	set vec2_withZ_return_y = this_y
	set vec2_withZ_return_z = z
	return vec2_withZ_return_x
endfunction

function construct_Missle takes integer this_44, integer owner, integer target, string wurstStackTrace returns nothing
	local real pos_x
	local real pos_y
	local real posT_x
	local real posT_y
	local timer receiver
	local timer receiver_2
	local timer receiver_3
	local timer receiver_4
	local real temp_pos_x
	local real temp_pos_y
	local real temp_posT_x
	local real temp_posT_y
	local integer tempIndex
	set Missle_canHitCaster[this_44] = false
	set Missle_owner[this_44] = owner
	set Missle_target[this_44] = target
	set temp_pos_x = unit_getPos(Unit_u[owner])
	set temp_pos_y = unit_getPos_return_y
	set pos_x = temp_pos_x
	set pos_y = temp_pos_y
	set temp_posT_x = unit_getPos(Unit_u[target])
	set temp_posT_y = unit_getPos_return_y
	set posT_x = temp_posT_x
	set posT_y = temp_posT_y
	set tempIndex = this_44
	set Missle_speed[tempIndex] = vec2_polarOffset(0., 0., vec2_angleTo(pos_x, pos_y, posT_x, posT_y), Missle_missleStartSpeed)
	set Missle_speed_2[tempIndex] = vec2_polarOffset_return_y
	set Missle_missle[this_44] = new_Fx(vec2_withZ(pos_x, pos_y, 70.), vec2_withZ_return_y, vec2_withZ_return_z, vec2_angleTo(pos_x, pos_y, posT_x, posT_y), "Abilities\\Weapons\\LordofFlameMissile\\LordofFlameMissile.mdl", "\n   RamisHomingMissle, line 35" + wurstStackTrace)
	set receiver = getTimer("\n   RamisHomingMissle, line 36" + wurstStackTrace)
	call timer_setData(receiver, this_44, "\n   RamisHomingMissle, line 36" + wurstStackTrace)
	set receiver_2 = receiver
	call timer_startPeriodic(receiver_2, 0.03, ref_function_bridge_closure_impl_2)
	set Missle_t_2[this_44] = receiver_2
	set receiver_3 = getTimer("\n   RamisHomingMissle, line 37" + wurstStackTrace)
	call timer_setData(receiver_3, this_44, "\n   RamisHomingMissle, line 37" + wurstStackTrace)
	set receiver_4 = receiver_3
	call timer_start(receiver_4, 10., ref_function_bridge_closure_impl_3)
	set Missle_destroyTimer[this_44] = receiver_4
	set receiver = null
	set receiver_2 = null
	set receiver_3 = null
	set receiver_4 = null
endfunction

function new_Missle takes integer owner, integer target, string wurstStackTrace returns integer
	local integer this_44 = alloc_Missle()
	call construct_Missle(this_44, owner, target, "\n   RamisHomingMissle, line 28" + wurstStackTrace)
	return this_44
endfunction

function closure_impl_68 takes integer this_44, unit caster, integer level, unit target, string wurstStackTrace returns integer
	return new_Missle(unit_getUserData(caster), unit_getUserData(target), "\n   RamisHomingMissle, line 72" + wurstStackTrace)
endfunction

function dispatch_OnUnitCast_run takes integer this_44, unit caster, integer lvl, unit target, string wurstStackTrace returns nothing
	if Cast_typeId[this_44] == 0 then
		if this_44 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling OnUnitCast.run" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called OnUnitCast.run on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call closure_impl_68(this_44, caster, lvl, target, "\n   ClosureEvents, line 71" + wurstStackTrace)
endfunction

function handleCasts takes string wurstStackTrace returns nothing
	local unit caster = GetTriggerUnit()
	local integer lvl = GetUnitAbilityLevel(caster, GetSpellAbilityId())
	local integer c = dispatch_HashMap_get(Cast_casts, GetSpellAbilityId(), "\n   ClosureEvents, line 77" + wurstStackTrace)
	local integer instanceOfTemp
	if c != 0 then
		if Cast_typeId[c] == 825 then
			call dispatch_OnCast_run(c, caster, lvl)
		endif
		if Cast_typeId[c] == 826 then
			call dispatch_OnPointCast_run(c, caster, lvl, GetSpellTargetX(), GetSpellTargetY())
		endif
		set instanceOfTemp = Cast_typeId[c]
		if instanceOfTemp == 827 or instanceOfTemp == 830 then
			call dispatch_OnUnitCast_run(c, caster, lvl, GetSpellTargetUnit(), "\n   ClosureEvents, line 84" + wurstStackTrace)
		endif
	endif
	set caster = null
endfunction

function bridge_handleCasts takes nothing returns nothing
	call handleCasts("\n   ClosureEvents, line 10")
endfunction

function playAnimation takes string wurstStackTrace returns nothing
	local integer h = timer_getData(GetExpiredTimer(), "\n   CaptureAnimation, line 29" + wurstStackTrace)
	call SetUnitAnimationByIndex(Unit_u[h], Hero_animationIndex[h])
endfunction

function bridge_playAnimation takes nothing returns nothing
	call playAnimation("\n   CaptureAnimation, line 13")
endfunction

function resetCam takes string wurstStackTrace returns nothing
	local timer t = GetExpiredTimer()
	call CameraClearNoiseForPlayer(Player(timer_getData(t, "\n   Camera, line 87" + wurstStackTrace)))
	call timer_release(t, "\n   Camera, line 88" + wurstStackTrace)
	set t = null
endfunction

function bridge_resetCam takes nothing returns nothing
	call resetCam("\n   Camera, line 67")
endfunction

function bridge_resetCam_2 takes nothing returns nothing
	call resetCam("\n   Camera, line 72")
endfunction

function bridge_resetCam_3 takes nothing returns nothing
	call resetCam("\n   Camera, line 81")
endfunction

function alloc_Closure_12 takes nothing returns integer
	local integer this_44
	if PlayerAction_firstFree == 0 then
		set PlayerAction_maxIndex = PlayerAction_maxIndex + 1
		set this_44 = PlayerAction_maxIndex
	else
		set PlayerAction_firstFree = PlayerAction_firstFree - 1
		set this_44 = PlayerAction_nextFree[PlayerAction_firstFree]
	endif
	set PlayerAction_typeId[this_44] = 845
	return this_44
endfunction

function alloc_Closure_13 takes nothing returns integer
	local integer this_44
	if PlayerAction_firstFree == 0 then
		set PlayerAction_maxIndex = PlayerAction_maxIndex + 1
		set this_44 = PlayerAction_maxIndex
	else
		set PlayerAction_firstFree = PlayerAction_firstFree - 1
		set this_44 = PlayerAction_nextFree[PlayerAction_firstFree]
	endif
	set PlayerAction_typeId[this_44] = 846
	return this_44
endfunction

function Bar_enable takes integer this_44, string wurstStackTrace returns nothing
	call texttag_setVisibility(Bar_tt[this_44], true)
	set Bar_check[this_44] = true
	call dispatch_Bar_update(this_44, "\n   HeroBar, line 53" + wurstStackTrace)
endfunction

function dispatch_Bar_enable takes integer this_44, string wurstStackTrace returns nothing
	if Bar_typeId[this_44] == 0 then
		if this_44 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Bar.enable" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Bar.enable on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call Bar_enable(this_44, "\n   HeroBar, line 50" + wurstStackTrace)
endfunction

function Hero_revive takes integer this_44, real pos_x, real pos_y, string wurstStackTrace returns nothing
	local integer i
	call ReviveHero(Unit_u[this_44], pos_x, pos_y, true)
	call dispatch_Bar_enable(Hero_hb[this_44], "\n   HeroClass, line 94" + wurstStackTrace)
	call unit_removeAbility(Unit_u[this_44], 1684365668)
	set Unit_isDead[this_44] = false
	set i = 0
	loop
		exitwhen i > 11
		call dispatch_Table_saveReal(Unit_playerDamage[this_44], i, 0., "\n   HeroClass, line 98" + wurstStackTrace)
		set i = i + 1
	endloop
endfunction

function dispatch_Hero_revive takes integer this_44, real pos_x, real pos_y, string wurstStackTrace returns nothing
	if Unit_typeId[this_44] == 0 then
		if this_44 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Hero.revive" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Hero.revive on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call Hero_revive(this_44, pos_x, pos_y, "\n   HeroClass, line 92" + wurstStackTrace)
endfunction

function dispatch_Icon_showDirect takes integer this_44, player p, string wurstStackTrace returns nothing
	if Widget_typeId[this_44] == 0 then
		if this_44 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Icon.showDirect" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Icon.showDirect on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call Icon_showDirect(this_44, p, "\n   Icon, line 34" + wurstStackTrace)
endfunction

function Shield_getRemainingTime takes integer this_44 returns real
	return TimerGetRemaining(Shield_t[this_44])
endfunction

function dispatch_Shield_getRemainingTime takes integer this_44, string wurstStackTrace returns real
	local real getRemainingTime_result
	if Shield_typeId[this_44] == 0 then
		if this_44 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Shield.getRemainingTime" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Shield.getRemainingTime on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	set getRemainingTime_result = Shield_getRemainingTime(this_44)
	return getRemainingTime_result
endfunction

function ShieldList_add takes integer this_44, integer s, string wurstStackTrace returns nothing
	local real time
	local integer pos
	local integer buffer
	set ShieldList_shieldSum[this_44] = ShieldList_shieldSum[this_44] + Shield_amount[s]
	if ShieldList_first[this_44] == 0 then
		set ShieldList_first[this_44] = s
		set ShieldList_last[this_44] = s
	else
		set time = dispatch_Shield_getRemainingTime(s, "\n   Shield, line 44" + wurstStackTrace)
		set pos = ShieldList_first[this_44]
		loop
			exitwhen  not (pos != 0)
			if dispatch_Shield_getRemainingTime(ShieldList_first[this_44], "\n   Shield, line 47" + wurstStackTrace) > time then
				set buffer = Shield_prev[pos]
				set Shield_prev[pos] = s
				set Shield_next[buffer] = s
				set Shield_prev[s] = buffer
				set Shield_next[s] = pos
				exitwhen true
			else
				set pos = Shield_next[pos]
			endif
		endloop
	endif
endfunction

function dispatch_ShieldList_add takes integer this_44, integer s, string wurstStackTrace returns nothing
	if ShieldList_typeId[this_44] == 0 then
		if this_44 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling ShieldList.add" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called ShieldList.add on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call ShieldList_add(this_44, s, "\n   Shield, line 38" + wurstStackTrace)
endfunction

function alloc_Shield takes nothing returns integer
	local integer this_44
	if Shield_firstFree == 0 then
		set Shield_maxIndex = Shield_maxIndex + 1
		set this_44 = Shield_maxIndex
	else
		set Shield_firstFree = Shield_firstFree - 1
		set this_44 = Shield_nextFree[Shield_firstFree]
	endif
	set Shield_typeId[this_44] = 678
	return this_44
endfunction

function construct_Shield takes integer this_44, integer u_2, real amount_39, real time, integer referingList, string wurstStackTrace returns nothing
	set Shield_t[this_44] = getTimer("\n   Shield, line 69" + wurstStackTrace)
	set Shield_shieldDestroyed[this_44] = 0
	set Shield_target[this_44] = u_2
	set Shield_amount[this_44] = amount_39
	set Shield_referingList[this_44] = referingList
	call timer_setData(Shield_t[this_44], this_44, "\n   Shield, line 78" + wurstStackTrace)
	call timer_start(Shield_t[this_44], time, ref_function_bridge_Shield_onExpire)
endfunction

function new_Shield takes integer u_2, real amount_39, real time, integer referingList, string wurstStackTrace returns integer
	local integer this_44 = alloc_Shield()
	call construct_Shield(this_44, u_2, amount_39, time, referingList, "\n   Shield, line 74" + wurstStackTrace)
	return this_44
endfunction

function Unit_addShield takes integer this_44, real amount_39, real duration, string wurstStackTrace returns integer
	local integer s = new_Shield(this_44, amount_39, duration, Unit_shieldList[this_44], "\n   UnitClass, line 427" + wurstStackTrace)
	call dispatch_ShieldList_add(Unit_shieldList[this_44], s, "\n   UnitClass, line 428" + wurstStackTrace)
	return s
endfunction

function dispatch_Unit_addShield takes integer this_44, real amount_39, real duration, string wurstStackTrace returns integer
	local integer addShield_result
	if Unit_typeId[this_44] == 0 then
		if this_44 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Unit.addShield" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Unit.addShield on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	if Unit_typeId[this_44] <= 695 then
		set addShield_result = Unit_addShield(this_44, amount_39, duration, "\n   UnitClass, line 426" + wurstStackTrace)
	else
		set addShield_result = Unit_addShield(this_44, amount_39, duration, "\n   UnitClass, line 426" + wurstStackTrace)
	endif
	return addShield_result
endfunction

function alloc_Closure_14 takes nothing returns integer
	local integer this_44
	if Bonus_firstFree == 0 then
		set Bonus_maxIndex = Bonus_maxIndex + 1
		set this_44 = Bonus_maxIndex
	else
		set Bonus_firstFree = Bonus_firstFree - 1
		set this_44 = Bonus_nextFree[Bonus_firstFree]
	endif
	set Bonus_typeId[this_44] = 719
	return this_44
endfunction

function Unit_bonusLife_2 takes integer this_44, real amount_39, string wurstStackTrace returns integer
	local integer clVar
	set Unit_bonusLife[this_44] = Unit_bonusLife[this_44] + amount_39
	call dispatch_Unit_updateLife(this_44, "\n   UnitClass, line 662" + wurstStackTrace)
	set clVar = alloc_Closure_14()
	set this_25[clVar] = this_44
	set amount_23[clVar] = amount_39
	return clVar
endfunction

function dispatch_Unit_bonusLife takes integer this_44, real amount_39, string wurstStackTrace returns integer
	local integer bonusLife_result
	if Unit_typeId[this_44] == 0 then
		if this_44 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Unit.bonusLife" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Unit.bonusLife on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	if Unit_typeId[this_44] <= 695 then
		set bonusLife_result = Unit_bonusLife_2(this_44, amount_39, "\n   UnitClass, line 660" + wurstStackTrace)
	else
		set bonusLife_result = Unit_bonusLife_2(this_44, amount_39, "\n   UnitClass, line 660" + wurstStackTrace)
	endif
	return bonusLife_result
endfunction

function Window_onVoidClick takes integer this_44, integer a returns nothing
	set Window_voidClick[this_44] = a
endfunction

function dispatch_Window_onVoidClick takes integer this_44, integer a, string wurstStackTrace returns nothing
	if Window_typeId[this_44] == 0 then
		if this_44 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Window.onVoidClick" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Window.onVoidClick on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	if Window_typeId[this_44] <= 789 then
		call Window_onVoidClick(this_44, a)
	else
		call Window_onVoidClick(this_44, a)
	endif
endfunction

function setCallLimit takes string wurstStackTrace returns nothing
	local string chatString = GetEventPlayerChatString()
	local string cuttet
	local string temp
	local integer w_2
	local integer receiver
	local integer receiver_2
	local integer clVar
	local integer w_3
	local integer receiver_3
	local integer receiver_4
	local integer clVar_2
	local integer temp_2
	local integer temp_3
	local integer temp_4
	local integer temp_5
	if SubString(chatString, 0, 1) == "a" then
		set cuttet = SubString(chatString, 1, 5)
		call SetUnitAnimationByIndex(Unit_u[UnitClass_last], S2I(cuttet))
	endif
	set temp = chatString
	if temp == "w1" then
		call WindowManager_openWindow(GameStart_shopWindow, Player(0), "\n   GameStart, line 552" + wurstStackTrace)
	elseif temp == "w2" then
		set w_2 = new_Window()
		set receiver_2 = w_2
		set temp_2 = receiver_2
		set receiver = new_Icon("RingDesCrigges", 10, 5, 2, "\n   GameStart, line 558" + wurstStackTrace)
		call dispatch_Icon_showDirect(receiver, Player(0), "\n   GameStart, line 558" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, temp_2, new_Observable(receiver), "\n   GameStart, line 556" + wurstStackTrace)
		call WindowManager_openWindow(receiver_2, Player(0), "\n   GameStart, line 555" + wurstStackTrace)
		set temp_3 = w_2
		set clVar = alloc_Closure_12()
		call dispatch_Window_onVoidClick(temp_3, clVar, "\n   GameStart, line 560" + wurstStackTrace)
	elseif temp == "w3" then
		set w_3 = new_Window()
		set receiver_4 = w_3
		set temp_4 = receiver_4
		set receiver_3 = new_Icon("RingDesCrigges", 15, 5, 2, "\n   GameStart, line 567" + wurstStackTrace)
		call dispatch_Icon_showDirect(receiver_3, Player(0), "\n   GameStart, line 567" + wurstStackTrace)
		call cyc_dispatch_Window_add(0, temp_4, new_Observable(receiver_3), "\n   GameStart, line 565" + wurstStackTrace)
		call WindowManager_openWindow(receiver_4, Player(0), "\n   GameStart, line 564" + wurstStackTrace)
		set temp_5 = w_3
		set clVar_2 = alloc_Closure_13()
		call dispatch_Window_onVoidClick(temp_5, clVar_2, "\n   GameStart, line 569" + wurstStackTrace)
	elseif temp == "hideF" then
	elseif temp == "dis" then
	elseif temp == "en" then
	elseif temp == "click" then
	elseif temp == "dclick" then
	elseif temp == "hoover" then
	elseif temp == "unhoover" then
	elseif temp == "size+" then
	elseif temp == "size-" then
	elseif temp == "drag t t" then
		call EnableDragSelect(true, true)
	elseif temp == "drag t f" then
		call EnableDragSelect(true, false)
	elseif temp == "drag f t" then
		call EnableDragSelect(false, true)
	elseif temp == "drag f f" then
		call EnableDragSelect(false, false)
	elseif temp == "pre t t" then
		call EnablePreSelect(true, true)
	elseif temp == "pre t f" then
		call EnablePreSelect(true, false)
	elseif temp == "pre f t" then
		call EnablePreSelect(false, true)
	elseif temp == "pre f f" then
		call EnablePreSelect(false, false)
	elseif temp == "sel t t" then
		call EnableSelect(true, true)
	elseif temp == "sel t f" then
		call EnableSelect(true, false)
	elseif temp == "sel f t" then
		call EnableSelect(false, true)
	elseif temp == "sel f f" then
		call EnableSelect(false, false)
	elseif temp == "last" then
		call SelectUnitForPlayerSingle(Unit_u[UnitClass_last], Player(0))
	elseif temp == "hp+" then
		call dispatch_Unit_bonusLife(UnitClass_last, 10., "\n   GameStart, line 622" + wurstStackTrace)
	elseif temp == "hp++" then
		call dispatch_Unit_bonusLife(UnitClass_last, 100., "\n   GameStart, line 624" + wurstStackTrace)
	elseif temp == "hp+++" then
		call dispatch_Unit_bonusLife(UnitClass_last, 1000., "\n   GameStart, line 626" + wurstStackTrace)
	elseif temp == "hp-" then
		call dispatch_Unit_bonusLife(UnitClass_last, -10., "\n   GameStart, line 628" + wurstStackTrace)
	elseif temp == "hp--" then
		call dispatch_Unit_bonusLife(UnitClass_last, -100., "\n   GameStart, line 630" + wurstStackTrace)
	elseif temp == "hp---" then
		call dispatch_Unit_bonusLife(UnitClass_last, -1000., "\n   GameStart, line 632" + wurstStackTrace)
	elseif temp == "rev" then
		call dispatch_Hero_revive(UnitClass_last, 100., 100., "\n   GameStart, line 634" + wurstStackTrace)
	elseif temp == "shield1" then
		call dispatch_Unit_addShield(UnitClass_last, 10., 10., "\n   GameStart, line 636" + wurstStackTrace)
	elseif temp == "shield2" then
		call dispatch_Unit_addShield(UnitClass_last, 100., 10., "\n   GameStart, line 638" + wurstStackTrace)
	elseif temp == "shield3" then
		call dispatch_Unit_addShield(UnitClass_last, 1000., 10., "\n   GameStart, line 640" + wurstStackTrace)
	elseif temp == "canMove f" then
		set Hero_acceptOrders[UnitClass_last] = false
	elseif temp == "canMove t" then
		set Hero_acceptOrders[UnitClass_last] = true
	elseif temp == "swap" then
		call SetPlayerAbilityAvailable(Player(0), 1094269238, false)
		call SetPlayerAbilityAvailable(Player(0), 1094269241, true)
	elseif temp == "bswap" then
		call SetPlayerAbilityAvailable(Player(0), 1094269238, true)
		call SetPlayerAbilityAvailable(Player(0), 1094269241, false)
	elseif temp == "slot" then
		call SetPlayerAbilityAvailable(Player(0), 1935896434, false)
	elseif temp == "key" then
		call print(int_toString(GetLocalizedHotkey("ESC")))
	elseif temp == "abi" then
		call print(int_toString(GetUnitAbilityLevel(Unit_u[UnitClass_last], 1935896434)))
		call SetUnitAbilityLevel(Unit_u[UnitClass_last], 1935896434, 2)
		call print(int_toString(GetUnitAbilityLevel(Unit_u[UnitClass_last], 1935896434)))
	elseif temp == "cast" then
		call IssueInstantPointOrder(Unit_u[UnitClass_last], "ancestralspirit", 0., 0., null)
	endif
endfunction

function bridge_setCallLimit takes nothing returns nothing
	call setCallLimit("\n   GameStart, line 52")
endfunction

function alloc_Pull2 takes nothing returns integer
	local integer this_44
	if Pull2_firstFree == 0 then
		set Pull2_maxIndex = Pull2_maxIndex + 1
		set this_44 = Pull2_maxIndex
	else
		set Pull2_firstFree = Pull2_firstFree - 1
		set this_44 = Pull2_nextFree[Pull2_firstFree]
	endif
	set Pull2_typeId[this_44] = 821
	return this_44
endfunction

function construct_Pull2 takes integer this_44, unit u_2, unit ut, string wurstStackTrace returns nothing
	set Pull2_u[this_44] = u_2
	set Pull2_ut[this_44] = ut
	set Pull2_uut[this_44] = GetUnitUserData(ut)
	set Pull2_i[this_44] = R2I(distanceBetweenCoords(unit_getX(u_2), unit_getY(u_2), unit_getX(ut), unit_getY(ut)) / 20.)
	set Pull2_imax[this_44] = Pull2_i[this_44]
	set Pull2_l[this_44] = AddLightningEx("LEAS", true, unit_getX(u_2), unit_getY(u_2), 50., unit_getX(ut), unit_getY(ut), 50.)
	set Pull2_t[this_44] = getTimer("\n   Pull2, line 46" + wurstStackTrace)
	call timer_setData(Pull2_t[this_44], this_44, "\n   Pull2, line 47" + wurstStackTrace)
	call timer_startPeriodic(Pull2_t[this_44], 0.03, ref_function_bridge_Pull2_blackHCall)
endfunction

function new_Pull2 takes unit u_2, unit ut, string wurstStackTrace returns integer
	local integer this_44 = alloc_Pull2()
	call construct_Pull2(this_44, u_2, ut, "\n   Pull2, line 36" + wurstStackTrace)
	return this_44
endfunction

function spellStart takes string wurstStackTrace returns nothing
	call new_Pull2(GetTriggerUnit(), GetSpellTargetUnit(), "\n   Pull2, line 22" + wurstStackTrace)
endfunction

function bridge_spellStart takes nothing returns nothing
	call spellStart("\n   Pull2, line 11")
endfunction

function callback takes nothing returns nothing
	call LeaderboardSetItemValue(HandleCounter_board, 0, getHandleCount())
	call LeaderboardSetItemValue(HandleCounter_board, 1, getTime())
endfunction

function multiboard_display takes multiboard this_44, boolean show returns nothing
	call MultiboardDisplay(this_44, show)
endfunction

function multiboard_setColumnCount takes multiboard this_44, integer count returns nothing
	call MultiboardSetColumnCount(this_44, count)
endfunction

function multiboard_setItemsStyle takes multiboard this_44, boolean showValues, boolean showIcons returns nothing
	call MultiboardSetItemsStyle(this_44, showValues, showIcons)
endfunction

function multiboard_setItemsWidth takes multiboard this_44, real width returns nothing
	call MultiboardSetItemsWidth(this_44, width)
endfunction

function multiboard_setRowCount takes multiboard this_44, integer count returns nothing
	call MultiboardSetRowCount(this_44, count)
endfunction

function multiboard_setTitle takes multiboard this_44, string label returns nothing
	call MultiboardSetTitleText(this_44, label)
endfunction

function createMultiboard takes nothing returns nothing
	local multiboarditem mbi
	local integer i
	local integer temp
	local string s
	set InstanceBoard_mb = CreateMultiboard()
	call multiboard_setColumnCount(InstanceBoard_mb, 2)
	call multiboard_setRowCount(InstanceBoard_mb, InstanceBoard_classes + 1)
	call multiboard_setItemsStyle(InstanceBoard_mb, true, false)
	call multiboard_setItemsWidth(InstanceBoard_mb, 0.10)
	call multiboard_setTitle(InstanceBoard_mb, "Instance Board")
	set mbi = multiboard_getItem(InstanceBoard_mb, 0, 0)
	call multiboarditem_setValue(mbi, "ClassName")
	set mbi = multiboard_getItem(InstanceBoard_mb, 0, 1)
	call multiboarditem_setValue(mbi, "Instance count")
	set i = 1
	set temp = InstanceBoard_classes
	loop
		exitwhen i > temp
		set s = InstanceBoard_nameOfClass[i]
		if s != null then
			set mbi = multiboard_getItem(InstanceBoard_mb, i, 0)
			call multiboarditem_setValue(mbi, s)
			set mbi = multiboard_getItem(InstanceBoard_mb, i, 1)
			call multiboarditem_setValue(mbi, int_toString(InstanceBoard_count[i]))
		endif
		set i = i + 1
	endloop
	call multiboard_display(InstanceBoard_mb, true)
	set mbi = null
endfunction

function group_destr takes group this_44 returns nothing
	call DestroyGroup(this_44)
endfunction

function finishPreload takes nothing returns nothing
	local group wurst__iterator0
	local unit u_2
	call RemoveUnit(PreloadHandler_dum)
	set wurst__iterator0 = group_iterator(PreloadHandler_dumg)
	loop
		exitwhen  not group_hasNext(wurst__iterator0)
		set u_2 = group_next(wurst__iterator0)
		call unit_remove(u_2)
	endloop
	call group_close(wurst__iterator0)
	call group_destr(PreloadHandler_dumg)
	if GetExpiredTimer() != null then
		call DestroyTimer(GetExpiredTimer())
	endif
	set wurst__iterator0 = null
	set u_2 = null
endfunction

function hideItem takes nothing returns nothing
	if IsItemVisible(GetEnumItem()) then
		set Terrain_hid[Terrain_hidMax] = GetEnumItem()
		call SetItemVisible(Terrain_hid[Terrain_hidMax], false)
		set Terrain_hidMax = Terrain_hidMax + 1
	endif
endfunction

function notUnit takes nothing returns boolean
	return ( not IsUnitType(GetFilterUnit(), UNIT_TYPE_UNDEAD)) and Filter_filterCheckUnit != GetFilterUnit()
endfunction

function createImage_4 takes string path, real pos_x, real pos_y, real sizeX, real sizeY returns image
	local image temp = CreateImage(path, sizeX, sizeY, 0., pos_x, pos_y, 0., 0., 0., 0., 1)
	set createImagetempReturn = temp
	set temp = null
	return createImagetempReturn
endfunction

function onEsc takes nothing returns nothing
	call print("onEsc")
	call image_show_2(createImage_4("ecke.blp", 1010., 10., 10., 10.))
endfunction

function spellCondition takes nothing returns boolean
	if GetSpellAbilityId() == 1096115059 then
		return true
	else
		return false
	endif
endfunction

function switchDebug takes nothing returns nothing
	local player p = GetTriggerPlayer()
	local integer id = player_getId(p)
	if PrintingHelper_wantDebug[id] then
		set PrintingHelper_wantDebug[id] = false
		call DisplayTimedTextToPlayer(p, 0., 0., 20., "|cff9C9C9CDEBUG-View|r |cffB55208deactivated")
	else
		set PrintingHelper_wantDebug[id] = true
		call DisplayTimedTextToPlayer(p, 0., 0., 20., "|cff9C9C9CDEBUG-View|r |cff3AAD42activated")
	endif
	set p = null
endfunction

function updateTime takes nothing returns nothing
	set HandleCounter_seconds = HandleCounter_seconds + 1
endfunction

function initGlobals takes nothing returns nothing
	set gg_cam_Camera_001 = null
	set gg_trg_Unbezeichneter_Ausl__ser_003 = null
	set LinkedList_firstFree = 0
	set LinkedList_maxIndex = 0
	set LLEntry_firstFree = 0
	set LLEntry_maxIndex = 0
	set LLIterator_firstFree = 0
	set LLIterator_maxIndex = 0
	set Table_firstFree = 0
	set Table_maxIndex = 0
	set ArrayQueue_firstFree = 0
	set ArrayQueue_maxIndex = 0
	set DelayNode_firstFree = 0
	set DelayNode_maxIndex = 0
	set Fx_firstFree = 0
	set Fx_maxIndex = 0
	set DebugFile_firstFree = 0
	set DebugFile_maxIndex = 0
	set AbilityDefinition_firstFree = 0
	set AbilityDefinition_maxIndex = 0
	set BuffDefinition_firstFree = 0
	set BuffDefinition_maxIndex = 0
	set HashMap_firstFree = 0
	set HashMap_maxIndex = 0
	set HashList_firstFree = 0
	set HashList_maxIndex = 0
	set CallbackSingle_firstFree = 0
	set CallbackSingle_maxIndex = 0
	set CallbackCounted_firstFree = 0
	set PreloadAction_firstFree = 0
	set PreloadAction_maxIndex = 0
	set Ability_firstFree = 0
	set Ability_maxIndex = 0
	set TrackableAction_firstFree = 0
	set TrackableAction_maxIndex = 0
	set TrackableEx_firstFree = 0
	set TrackableEx_maxIndex = 0
	set Event_firstFree = 0
	set Event_maxIndex = 0
	set Action_firstFree = 0
	set Action_maxIndex = 0
	set ElementLoop_firstFree = 0
	set ElementLoop_maxIndex = 0
	set Dot_firstFree = 0
	set Buff_firstFree = 0
	set TextTag_firstFree = 0
	set Shield_firstFree = 0
	set Shield_maxIndex = 0
	set SEntry_firstFree = 0
	set SEntry_maxIndex = 0
	set Order_firstFree = 0
	set Order_maxIndex = 0
	set ObjId_firstFree = 0
	set ObjId_maxIndex = 0
	set SpellSetup_firstFree = 0
	set SpellSetup_maxIndex = 0
	set Spellcast_firstFree = 0
	set Spellcast_maxIndex = 0
	set Bonus_firstFree = 0
	set Bonus_maxIndex = 0
	set Stun_firstFree = 0
	set PreDamageData_firstFree = 0
	set PreDamageData_maxIndex = 0
	set OnDamageData_firstFree = 0
	set OnDamageData_maxIndex = 0
	set Units_firstFree = 0
	set Units_maxIndex = 0
	set AreaMarker_firstFree = 0
	set TextSplat_firstFree = 0
	set TextSplat_maxIndex = 0
	set ImageListEntry_firstFree = 0
	set ImageListEntry_maxIndex = 0
	set ImageList_firstFree = 0
	set ImageList_maxIndex = 0
	set Stack_firstFree = 0
	set Stack_maxIndex = 0
	set SEntry_firstFree_2 = 0
	set SEntry_maxIndex_2 = 0
	set Widget_firstFree = 0
	set Widget_maxIndex = 0
	set PlayerAction_firstFree = 0
	set PlayerAction_maxIndex = 0
	set Window_firstFree = 0
	set Window_maxIndex = 0
	set ImageList_firstFree_2 = 0
	set ImageList_maxIndex_2 = 0
	set ListImage_firstFree = 0
	set ListImage_maxIndex = 0
	set ImageIterator_firstFree = 0
	set ImageIterator_maxIndex = 0
	set FreeNode_firstFree = 0
	set FreeNode_maxIndex = 0
	set IdGenerator_firstFree = 0
	set IdGenerator_maxIndex = 0
	set SamplePointSpell_firstFree = 0
	set SamplePointSpell_maxIndex = 0
	set TestSpell1_firstFree = 0
	set TestSpell1_maxIndex = 0
	set Pull2_firstFree = 0
	set Pull2_maxIndex = 0
	set Missle_firstFree = 0
	set Cast_firstFree = 0
	set Cast_maxIndex = 0
	set Missle_firstFree_2 = 0
	set Missle_maxIndex_2 = 0
	set Player_firstFree = 0
	set Player_maxIndex = 0
	set StringList_firstFree = 0
	set StringList_maxIndex = 0
	set CustomBar_firstFree = 0
	set ref_function_DelayedSuspendDecayStopAnimEnum = function DelayedSuspendDecayStopAnimEnum
	set ref_function_DelayedSuspendDecayStopAnimEnum_2 = function DelayedSuspendDecayStopAnimEnum
	set ref_function_DelayedSuspendDecayFleshEnum = function DelayedSuspendDecayFleshEnum
	set ref_function_DelayedSuspendDecayBoneEnum = function DelayedSuspendDecayBoneEnum
	set ref_function_DelayedSuspendDecayStopAnimEnum_3 = function DelayedSuspendDecayStopAnimEnum
	set ref_function_DelayedSuspendDecay = function DelayedSuspendDecay
	set ref_function_MakeUnitsPassiveForPlayerEnum = function MakeUnitsPassiveForPlayerEnum
	set ref_function_TriggerActionUnitRescuedBJ = function TriggerActionUnitRescuedBJ
	set ref_function_MeleeDoDefeatEnum = function MeleeDoDefeatEnum
	set ref_function_MeleeDoVictoryEnum = function MeleeDoVictoryEnum
	set ref_function_MeleeCrippledPlayerTimeout = function MeleeCrippledPlayerTimeout
	set ref_function_MeleeDoDrawEnum = function MeleeDoDrawEnum
	set ref_function_MeleeDoDefeatEnum_2 = function MeleeDoDefeatEnum
	set ref_function_MeleeDoVictoryEnum_2 = function MeleeDoVictoryEnum
	set ref_function_SetDNCSoundsDawn = function SetDNCSoundsDawn
	set ref_function_SetDNCSoundsDusk = function SetDNCSoundsDusk
	set ref_function_SetDNCSoundsDay = function SetDNCSoundsDay
	set ref_function_SetDNCSoundsNight = function SetDNCSoundsNight
	set ref_function_IssueHauntOrderAtLocBJFilter = function IssueHauntOrderAtLocBJFilter
	set ref_function_EnumDestructablesInCircleBJFilter = function EnumDestructablesInCircleBJFilter
	set ref_function_GetUnitsInRectOfPlayerFilter = function GetUnitsInRectOfPlayerFilter
	set ref_function_GetUnitsOfTypeIdAllFilter = function GetUnitsOfTypeIdAllFilter
	set ref_function_GetUnitsOfPlayerAndTypeIdFilter = function GetUnitsOfPlayerAndTypeIdFilter
	set ref_function_MeleeTrainedUnitIsHeroBJFilter = function MeleeTrainedUnitIsHeroBJFilter
	set ref_function_LivingPlayerUnitsOfTypeIdFilter = function LivingPlayerUnitsOfTypeIdFilter
	set ref_function_QueuedTriggerDoneBJ = function QueuedTriggerDoneBJ
	set ref_function_UpdateEachStockBuildingEnum = function UpdateEachStockBuildingEnum
	set ref_function_PerformStockUpdates = function PerformStockUpdates
	set ref_function_StartStockUpdates = function StartStockUpdates
	set ref_function_RemovePurchasedItem = function RemovePurchasedItem
	set ref_function_MarkGameStarted = function MarkGameStarted
	set ref_function_Trig_Unbezeichneter_Ausl__ser_003_Actions = function Trig_Unbezeichneter_Ausl__ser_003_Actions
	set ref_function_hideItem = function hideItem
	set ref_function_GroupAddGroupEnum_2 = function GroupAddGroupEnum
	set ref_function_bridge_DelayNode_recycle = function bridge_DelayNode_recycle_2
	set ref_function_bridge_DelayNode_recycle_2 = function bridge_DelayNode_recycle
	set ref_function_bridge_DelayNode_recycle_3 = function bridge_DelayNode_recycle_3
	set ref_function_callback = function callback
	set ref_function_bridge_CallbackSingle_staticCallback = function bridge_CallbackSingle_staticCallback
	set ref_function_bridge_closure_impl = function bridge_closure_impl_4
	set ref_function_bridge_Shield_onExpire = function bridge_Shield_onExpire
	set ref_function_bridge_Bar_callUpdateEx = function bridge_Bar_callUpdateEx
	set ref_function_bridge_Spell_timedDisableCastDummy = function bridge_Spell_timedDisableCastDummy
	set ref_function_notUnit = function notUnit
	set ref_function_bridge_Hero_enableAbilityTimed = function bridge_Hero_enableAbilityTimed
	set ref_function_bridge_SamplePointSpell_callCallback = function bridge_SamplePointSpell_callCallback
	set ref_function_TestSpell1_bla = function TestSpell1_bla
	set ref_function_bridge_TestSpell1_callCallback = function bridge_TestSpell1_callCallback
	set ref_function_bridge_Pull2_blackHCall = function bridge_Pull2_blackHCall
	set ref_function_bridge_closure_impl_2 = function bridge_closure_impl_3
	set ref_function_bridge_closure_impl_3 = function bridge_closure_impl_6
	set ref_function_bridge_Player_setCam = function bridge_Player_setCam
	set ref_function_bridge_Preload_preload = function bridge_Preload_preload_3
	set ref_function_bridge_Preload_preload_2 = function bridge_Preload_preload_2
	set ref_function_bridge_Preload_preload_3 = function bridge_Preload_preload
	set ref_function_switchDebug = function switchDebug
	set ref_function_createMultiboard = function createMultiboard
	set ref_function_updateTime = function updateTime
	set ref_function_bridge_closure_impl_4 = function bridge_closure_impl_2
	set ref_function_bridge_closure_impl_5 = function bridge_closure_impl
	set ref_function_bridge_Bar_updatePos = function bridge_Bar_updatePos
	set ref_function_bridge_Bar_updateVision = function bridge_Bar_updateVision
	set ref_function_finishPreload = function finishPreload
	set ref_function_bridge_Hero_handleCasts = function bridge_Hero_handleCasts
	set ref_function_bridge_closure_impl_6 = function bridge_closure_impl_5
	set ref_function_bridge_GetOrders_callOnOrder = function bridge_GetOrders_callOnOrder
	set ref_function_bridge_Unit_tookDamage = function bridge_Unit_tookDamage
	set ref_function_spellCondition = function spellCondition
	set ref_function_bridge_spellStart = function bridge_spellStart
	set ref_function_bridge_handleCasts = function bridge_handleCasts
	set ref_function_bridge_setCallLimit = function bridge_setCallLimit
	set ref_function_bridge_Dot_loopList = function bridge_Dot_loopList
	set ref_function_bridge_callKnockback = function bridge_callKnockback
	set ref_function_bridge_camTest = function bridge_camTest
	set ref_function_onEsc = function onEsc
endfunction

function init_Array takes nothing returns nothing
endfunction

function alloc_FreeNode takes nothing returns integer
	local integer this_44
	if FreeNode_firstFree == 0 then
		set FreeNode_maxIndex = FreeNode_maxIndex + 1
		set this_44 = FreeNode_maxIndex
	else
		set FreeNode_firstFree = FreeNode_firstFree - 1
		set this_44 = FreeNode_nextFree[FreeNode_firstFree]
	endif
	return this_44
endfunction

function construct_FreeNode takes integer this_44, integer dataPos, integer size returns nothing
endfunction

function new_FreeNode takes integer dataPos, integer size returns integer
	local integer this_44 = alloc_FreeNode()
	call construct_FreeNode(this_44, dataPos, size)
	return this_44
endfunction

function init_ArrayList takes nothing returns nothing
	call new_FreeNode(0, 8191)
endfunction

function init_Basics takes nothing returns nothing
	set Basics_DUMMY_UNIT_ID = 2019849581
	set Basics_HEIGHT_ENABLER = 1097691750
	set Basics_LOCUST_ID = 1097625443
	set Basics_DUMMY_PLAYER = Player(15)
	call Player(12)
endfunction

function alloc_Ability takes nothing returns integer
	local integer this_44
	if Ability_firstFree == 0 then
		set Ability_maxIndex = Ability_maxIndex + 1
		set this_44 = Ability_maxIndex
	else
		set Ability_firstFree = Ability_firstFree - 1
		set this_44 = Ability_nextFree[Ability_firstFree]
	endif
	return this_44
endfunction

function construct_Ability takes integer this_44, integer id, integer lvl returns nothing
	set Ability_id[this_44] = id
	set Ability_lvl[this_44] = lvl
endfunction

function new_Ability takes integer id, integer lvl returns integer
	local integer this_44 = alloc_Ability()
	call construct_Ability(this_44, id, lvl)
	return this_44
endfunction

function addAbilityToPreload takes integer id, integer lvl, string wurstStackTrace returns nothing
	call dispatch_HashList_add(PreloadSystem_abilitysToPreload, new_Ability(id, lvl), "\n   PreloadSystem, line 41" + wurstStackTrace)
endfunction

function addBuffToPreload takes integer id, string wurstStackTrace returns nothing
	call dispatch_HashList_add(PreloadSystem_buffsToPreload, id, "\n   PreloadSystem, line 47" + wurstStackTrace)
endfunction

function ObjectDefinition_setLvlDataUnreal takes integer this_key, string modification, integer lvl, integer dataPointer, real value returns nothing
endfunction

function AbilityDefinitionAuraSlow_setAttackSpeedFactor takes integer this_44, integer level, real value returns nothing
	local integer tempIndex = this_44
	call ObjectDefinition_setLvlDataUnreal(AbilityDefinition_def[tempIndex], "Slo2", level, 2, value)
endfunction

function dispatch_AbilityDefinitionAuraSlow_setAttackSpeedFactor takes integer this_44, integer level, real value, string wurstStackTrace returns nothing
	if AbilityDefinition_typeId[this_44] == 0 then
		if this_44 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling AbilityDefinitionAuraSlow.setAttackSpeedFactor" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called AbilityDefinitionAuraSlow.setAttackSpeedFactor on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call AbilityDefinitionAuraSlow_setAttackSpeedFactor(this_44, level, value)
endfunction

function AbilityDefinitionAuraSlow_setMovementSpeedFactor takes integer this_44, integer level, real value returns nothing
	local integer tempIndex = this_44
	call ObjectDefinition_setLvlDataUnreal(AbilityDefinition_def[tempIndex], "Slo1", level, 1, value)
endfunction

function dispatch_AbilityDefinitionAuraSlow_setMovementSpeedFactor takes integer this_44, integer level, real value, string wurstStackTrace returns nothing
	if AbilityDefinition_typeId[this_44] == 0 then
		if this_44 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling AbilityDefinitionAuraSlow.setMovementSpeedFactor" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called AbilityDefinitionAuraSlow.setMovementSpeedFactor on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call AbilityDefinitionAuraSlow_setMovementSpeedFactor(this_44, level, value)
endfunction

function ObjectDefinition_setLvlDataString takes integer this_key, string modification, integer lvl, integer dataPointer, string value returns nothing
endfunction

function AbilityDefinition_setBuffs takes integer this_44, integer level, string value returns nothing
	local integer tempIndex = this_44
	call ObjectDefinition_setLvlDataString(AbilityDefinition_def[tempIndex], "abuf", level, 0, value)
endfunction

function dispatch_AbilityDefinition_setBuffs takes integer this_44, integer level, string value, string wurstStackTrace returns nothing
	if AbilityDefinition_typeId[this_44] == 0 then
		if this_44 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling AbilityDefinition.setBuffs" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called AbilityDefinition.setBuffs on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	if AbilityDefinition_typeId[this_44] <= 646 then
		call AbilityDefinition_setBuffs(this_44, level, value)
	else
		call AbilityDefinition_setBuffs(this_44, level, value)
	endif
endfunction

function AbilityDefinition_setName takes integer this_44, string value returns nothing
	local integer tempIndex = this_44
	call ObjectDefinition_setLvlDataString(AbilityDefinition_def[tempIndex], "anam", 0, 0, value)
endfunction

function dispatch_AbilityDefinition_setName takes integer this_44, string value, string wurstStackTrace returns nothing
	if AbilityDefinition_typeId[this_44] == 0 then
		if this_44 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling AbilityDefinition.setName" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called AbilityDefinition.setName on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	if AbilityDefinition_typeId[this_44] <= 646 then
		call AbilityDefinition_setName(this_44, value)
	else
		call AbilityDefinition_setName(this_44, value)
	endif
endfunction

function AbilityDefinition_setTargetsAllowed takes integer this_44, integer level, string value returns nothing
	local integer tempIndex = this_44
	call ObjectDefinition_setLvlDataString(AbilityDefinition_def[tempIndex], "atar", level, 0, value)
endfunction

function dispatch_AbilityDefinition_setTargetsAllowed takes integer this_44, integer level, string value, string wurstStackTrace returns nothing
	if AbilityDefinition_typeId[this_44] == 0 then
		if this_44 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling AbilityDefinition.setTargetsAllowed" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called AbilityDefinition.setTargetsAllowed on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	if AbilityDefinition_typeId[this_44] <= 646 then
		call AbilityDefinition_setTargetsAllowed(this_44, level, value)
	else
		call AbilityDefinition_setTargetsAllowed(this_44, level, value)
	endif
endfunction

function BuffDefinition_setIconNormal takes integer this_44, integer level, string value returns nothing
	local integer tempIndex = this_44
	call ObjectDefinition_setLvlDataString(BuffDefinition_def[tempIndex], "fart", level, 0, value)
endfunction

function dispatch_BuffDefinition_setIconNormal takes integer this_44, integer level, string value, string wurstStackTrace returns nothing
	if BuffDefinition_typeId[this_44] == 0 then
		if this_44 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling BuffDefinition.setIconNormal" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called BuffDefinition.setIconNormal on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call BuffDefinition_setIconNormal(this_44, level, value)
endfunction

function BuffDefinition_setTooltipNormal takes integer this_44, integer level, string value returns nothing
	local integer tempIndex = this_44
	call ObjectDefinition_setLvlDataString(BuffDefinition_def[tempIndex], "ftip", level, 0, value)
endfunction

function dispatch_BuffDefinition_setTooltipNormal takes integer this_44, integer level, string value, string wurstStackTrace returns nothing
	if BuffDefinition_typeId[this_44] == 0 then
		if this_44 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling BuffDefinition.setTooltipNormal" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called BuffDefinition.setTooltipNormal on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call BuffDefinition_setTooltipNormal(this_44, level, value)
endfunction

function BuffDefinition_setTooltipNormalExtended takes integer this_44, integer level, string value returns nothing
	local integer tempIndex = this_44
	call ObjectDefinition_setLvlDataString(BuffDefinition_def[tempIndex], "fube", level, 0, value)
endfunction

function dispatch_BuffDefinition_setTooltipNormalExtended takes integer this_44, integer level, string value, string wurstStackTrace returns nothing
	if BuffDefinition_typeId[this_44] == 0 then
		if this_44 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling BuffDefinition.setTooltipNormalExtended" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called BuffDefinition.setTooltipNormalExtended on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call BuffDefinition_setTooltipNormalExtended(this_44, level, value)
endfunction

function alloc_AbilityDefinitionAuraSlow takes nothing returns integer
	local integer this_44
	if AbilityDefinition_firstFree == 0 then
		set AbilityDefinition_maxIndex = AbilityDefinition_maxIndex + 1
		set this_44 = AbilityDefinition_maxIndex
	else
		set AbilityDefinition_firstFree = AbilityDefinition_firstFree - 1
		set this_44 = AbilityDefinition_nextFree[AbilityDefinition_firstFree]
	endif
	set AbilityDefinition_typeId[this_44] = 197
	return this_44
endfunction

function construct_AbilityDefinition takes integer this_44, integer newAbilityId, integer origAbilityId returns nothing
	set AbilityDefinition_def[this_44] = createObjectDefinition("w3a", newAbilityId, origAbilityId)
endfunction

function construct_AbilityDefinitionAuraSlow takes integer this_44, integer newAbilityId returns nothing
	call construct_AbilityDefinition(this_44, newAbilityId, 1096905580)
endfunction

function new_AbilityDefinitionAuraSlow takes integer newAbilityId returns integer
	local integer this_44 = alloc_AbilityDefinitionAuraSlow()
	call construct_AbilityDefinitionAuraSlow(this_44, newAbilityId)
	return this_44
endfunction

function alloc_BuffDefinition takes nothing returns integer
	local integer this_44
	if BuffDefinition_firstFree == 0 then
		set BuffDefinition_maxIndex = BuffDefinition_maxIndex + 1
		set this_44 = BuffDefinition_maxIndex
	else
		set BuffDefinition_firstFree = BuffDefinition_firstFree - 1
		set this_44 = BuffDefinition_nextFree[BuffDefinition_firstFree]
	endif
	set BuffDefinition_typeId[this_44] = 647
	return this_44
endfunction

function construct_BuffDefinition takes integer this_44, integer newAbilityId, integer origAbilityId returns nothing
	set BuffDefinition_def[this_44] = createObjectDefinition("w3h", newAbilityId, origAbilityId)
endfunction

function new_BuffDefinition takes integer newAbilityId, integer origAbilityId returns integer
	local integer this_44 = alloc_BuffDefinition()
	call construct_BuffDefinition(this_44, newAbilityId, origAbilityId)
	return this_44
endfunction

function addBuffType takes string buffName, string iconPath, string tooltip, string tooltipEx, string wurstStackTrace returns nothing
	local integer bf
	local integer af
	if  not BuffTypes_compiletime then
		call dispatch_HashMap_put(BuffTypes_buffMap, StringHash(buffName), BuffTypes_buffCount, "\n   BuffTypes, line 22" + wurstStackTrace)
		call addBuffToPreload(BuffTypes_buffCount, "\n   BuffTypes, line 23" + wurstStackTrace)
		call addAbilityToPreload(BuffTypes_buffCount + 1, 1, "\n   BuffTypes, line 24" + wurstStackTrace)
	else
		set bf = new_BuffDefinition(BuffTypes_buffCount, 1112437615)
		call dispatch_BuffDefinition_setIconNormal(bf, 1, iconPath, "\n   BuffTypes, line 27" + wurstStackTrace)
		call dispatch_BuffDefinition_setTooltipNormal(bf, 1, tooltip, "\n   BuffTypes, line 28" + wurstStackTrace)
		call dispatch_BuffDefinition_setTooltipNormalExtended(bf, 1, tooltipEx, "\n   BuffTypes, line 29" + wurstStackTrace)
		set af = new_AbilityDefinitionAuraSlow(BuffTypes_buffCount + 1)
		call dispatch_AbilityDefinition_setName(af, buffName, "\n   BuffTypes, line 31" + wurstStackTrace)
		call dispatch_AbilityDefinitionAuraSlow_setMovementSpeedFactor(af, 1, 0., "\n   BuffTypes, line 32" + wurstStackTrace)
		call dispatch_AbilityDefinitionAuraSlow_setAttackSpeedFactor(af, 1, 0., "\n   BuffTypes, line 33" + wurstStackTrace)
		call dispatch_AbilityDefinition_setTargetsAllowed(af, 1, "invulnerable,self,vulnerable", "\n   BuffTypes, line 34" + wurstStackTrace)
		call dispatch_AbilityDefinition_setBuffs(af, 1, idInteger2IdString(BuffTypes_buffCount), "\n   BuffTypes, line 35" + wurstStackTrace)
	endif
	set BuffTypes_buffCount = BuffTypes_buffCount + 2
endfunction

function types_2 takes string wurstStackTrace returns nothing
	call addBuffType("slow", "ReplaceableTextures\\CommandButtons\\BTNSlow.blp", "Slow", "This unit moves slower than normal", "\n   BuffTypes, line 12" + wurstStackTrace)
endfunction

function init_BuffTypes takes string wurstStackTrace returns nothing
	set BuffTypes_buffMap = new_HashMap()
	set BuffTypes_buffCount = 556806192
	set BuffTypes_compiletime = true
	set BuffTypes_compiletime = false
	call types_2("\n   BuffTypes, line 48" + wurstStackTrace)
endfunction

function init_Button takes nothing returns nothing
	local real temp_Button_sizeFix_x
	local real temp_Button_sizeFix_y
	local real temp_Button_posFix_x
	local real temp_Button_posFix_y
	set Button_buttonTexture = "SorvButton.blp"
	set temp_Button_sizeFix_x = 20.
	set temp_Button_sizeFix_y = 20.
	set Button_sizeFix_x = temp_Button_sizeFix_x
	set Button_sizeFix_y = temp_Button_sizeFix_y
	set temp_Button_posFix_x = 10.
	set temp_Button_posFix_y = 10.
	set Button_posFix_x = temp_Button_posFix_x
	set Button_posFix_y = temp_Button_posFix_y
endfunction

function alloc_Table takes nothing returns integer
	local integer this_44
	if Table_firstFree == 0 then
		set Table_maxIndex = Table_maxIndex + 1
		set this_44 = Table_maxIndex
	else
		set Table_firstFree = Table_firstFree - 1
		set this_44 = Table_nextFree[Table_firstFree]
	endif
	set Table_typeId[this_44] = 8
	return this_44
endfunction

function construct_Table takes integer this_44 returns nothing
endfunction

function new_Table takes nothing returns integer
	local integer this_44 = alloc_Table()
	call construct_Table(this_44)
	return this_44
endfunction

function init_CaptureAnimation takes nothing returns nothing
	call new_Table()
endfunction

function init_ChannelSpellPreset takes nothing returns nothing
endfunction

function c2sInit takes nothing returns nothing
	set Char_c2s[0] = ""
	set Char_c2s[1] = ""
	set Char_c2s[2] = ""
	set Char_c2s[3] = ""
	set Char_c2s[4] = ""
	set Char_c2s[5] = ""
	set Char_c2s[6] = ""
	set Char_c2s[7] = ""
	set Char_c2s[8] = ""
	set Char_c2s[9] = "\t"
	set Char_c2s[10] = "\n"
	set Char_c2s[11] = ""
	set Char_c2s[12] = ""
	set Char_c2s[13] = "\r"
	set Char_c2s[14] = ""
	set Char_c2s[15] = ""
	set Char_c2s[16] = ""
	set Char_c2s[17] = ""
	set Char_c2s[18] = ""
	set Char_c2s[19] = ""
	set Char_c2s[20] = ""
	set Char_c2s[21] = ""
	set Char_c2s[22] = ""
	set Char_c2s[23] = ""
	set Char_c2s[24] = ""
	set Char_c2s[25] = ""
	set Char_c2s[26] = ""
	set Char_c2s[27] = ""
	set Char_c2s[28] = ""
	set Char_c2s[29] = ""
	set Char_c2s[30] = ""
	set Char_c2s[31] = ""
	set Char_c2s[32] = " "
	set Char_c2s[33] = "!"
	set Char_c2s[34] = "\""
	set Char_c2s[35] = "#"
	set Char_c2s[36] = "$"
	set Char_c2s[37] = "%"
	set Char_c2s[38] = "&"
	set Char_c2s[39] = "'"
	set Char_c2s[40] = "("
	set Char_c2s[41] = ")"
	set Char_c2s[42] = "*"
	set Char_c2s[43] = "+"
	set Char_c2s[44] = ","
	set Char_c2s[45] = "-"
	set Char_c2s[46] = "."
	set Char_c2s[47] = "/"
	set Char_c2s[48] = "0"
	set Char_c2s[49] = "1"
	set Char_c2s[50] = "2"
	set Char_c2s[51] = "3"
	set Char_c2s[52] = "4"
	set Char_c2s[53] = "5"
	set Char_c2s[54] = "6"
	set Char_c2s[55] = "7"
	set Char_c2s[56] = "8"
	set Char_c2s[57] = "9"
	set Char_c2s[58] = ":"
	set Char_c2s[59] = ";"
	set Char_c2s[60] = "<"
	set Char_c2s[61] = "="
	set Char_c2s[62] = ">"
	set Char_c2s[63] = "?"
	set Char_c2s[64] = "@"
	set Char_c2s[65] = "A"
	set Char_c2s[66] = "B"
	set Char_c2s[67] = "C"
	set Char_c2s[68] = "D"
	set Char_c2s[69] = "E"
	set Char_c2s[70] = "F"
	set Char_c2s[71] = "G"
	set Char_c2s[72] = "H"
	set Char_c2s[73] = "I"
	set Char_c2s[74] = "J"
	set Char_c2s[75] = "K"
	set Char_c2s[76] = "L"
	set Char_c2s[77] = "M"
	set Char_c2s[78] = "N"
	set Char_c2s[79] = "O"
	set Char_c2s[80] = "P"
	set Char_c2s[81] = "Q"
	set Char_c2s[82] = "R"
	set Char_c2s[83] = "S"
	set Char_c2s[84] = "T"
	set Char_c2s[85] = "U"
	set Char_c2s[86] = "V"
	set Char_c2s[87] = "W"
	set Char_c2s[88] = "X"
	set Char_c2s[89] = "Y"
	set Char_c2s[90] = "Z"
	set Char_c2s[91] = "["
	set Char_c2s[92] = "\\"
	set Char_c2s[93] = "]"
	set Char_c2s[94] = "^"
	set Char_c2s[95] = "_"
	set Char_c2s[96] = "`"
	set Char_c2s[97] = "a"
	set Char_c2s[98] = "b"
	set Char_c2s[99] = "c"
	set Char_c2s[100] = "d"
	set Char_c2s[101] = "e"
	set Char_c2s[102] = "f"
	set Char_c2s[103] = "g"
	set Char_c2s[104] = "h"
	set Char_c2s[105] = "i"
	set Char_c2s[106] = "j"
	set Char_c2s[107] = "k"
	set Char_c2s[108] = "l"
	set Char_c2s[109] = "m"
	set Char_c2s[110] = "n"
	set Char_c2s[111] = "o"
	set Char_c2s[112] = "p"
	set Char_c2s[113] = "q"
	set Char_c2s[114] = "r"
	set Char_c2s[115] = "s"
	set Char_c2s[116] = "t"
	set Char_c2s[117] = "u"
	set Char_c2s[118] = "v"
	set Char_c2s[119] = "w"
	set Char_c2s[120] = "x"
	set Char_c2s[121] = "y"
	set Char_c2s[122] = "z"
	set Char_c2s[123] = "{"
	set Char_c2s[124] = "|"
	set Char_c2s[125] = "}"
	set Char_c2s[126] = "~"
	set Char_c2s[127] = ""
endfunction

function string_toUpperCase takes string this_44 returns string
	return StringCase(this_44, true)
endfunction

function s2cInit takes nothing returns nothing
	local integer i = 0
	local integer temp = Char_MAX_INDEX
	loop
		exitwhen i > temp
		if string_toUpperCase(Char_c2s[i]) == Char_c2s[i] then
			set Char_s2c[StringHash(Char_c2s[i]) / 2033480 + 1002] = i
		endif
		set i = i + 1
	endloop
endfunction

function widthInit takes nothing returns nothing
endfunction

function init_Char takes nothing returns nothing
	set Char_MAX_INDEX = 126 + 1
	call c2sInit()
	call s2cInit()
	call widthInit()
endfunction

function trigger_addAction takes trigger this_44, code actionFunc returns nothing
	call TriggerAddAction(this_44, actionFunc)
endfunction

function trigger_registerAnyUnitEvent takes trigger this_44, playerunitevent whichEvent returns nothing
	call TriggerRegisterAnyUnitEventBJ(this_44, whichEvent)
endfunction

function init_ClosureEvents takes nothing returns nothing
	local trigger receiver = CreateTrigger()
	local trigger receiver_2
	call trigger_registerAnyUnitEvent(receiver, EVENT_PLAYER_UNIT_SPELL_CAST)
	set receiver_2 = receiver
	call trigger_addAction(receiver_2, ref_function_bridge_handleCasts)
	set Cast_casts = new_HashMap()
	set OnDamage_damageActions = new_HashMap()
	set receiver = null
	set receiver_2 = null
endfunction

function init_Colors takes string wurstStackTrace returns nothing
	local integer i = 0
	local integer i2
	local integer tempIndex
	local integer tempIndex_2
	local integer tempIndex_3
	local integer tempIndex_4
	local integer tempIndex_5
	local integer tempIndex_6
	local integer tempIndex_7
	local integer tempIndex_8
	local integer tempIndex_9
	local integer tempIndex_10
	local integer tempIndex_11
	local integer tempIndex_12
	local integer tempIndex_13
	loop
		exitwhen i > 9
		call int_toString(i)
		set i = i + 1
	endloop
	set Colors_decs = new_Table()
	set i2 = 0
	loop
		exitwhen i2 > 9
		call dispatch_Table_saveInt(Colors_decs, StringHash(int_toString(i2)), i2, "\n   Colors, line 151" + wurstStackTrace)
		set i2 = i2 + 1
	endloop
	call dispatch_Table_saveInt(Colors_decs, StringHash("A"), 10, "\n   Colors, line 153" + wurstStackTrace)
	call dispatch_Table_saveInt(Colors_decs, StringHash("B"), 11, "\n   Colors, line 154" + wurstStackTrace)
	call dispatch_Table_saveInt(Colors_decs, StringHash("C"), 12, "\n   Colors, line 155" + wurstStackTrace)
	call dispatch_Table_saveInt(Colors_decs, StringHash("D"), 13, "\n   Colors, line 156" + wurstStackTrace)
	call dispatch_Table_saveInt(Colors_decs, StringHash("E"), 14, "\n   Colors, line 157" + wurstStackTrace)
	call dispatch_Table_saveInt(Colors_decs, StringHash("F"), 15, "\n   Colors, line 158" + wurstStackTrace)
	set tempIndex = 0
	set tempIndex_2 = 1
	set tempIndex_3 = 2
	set tempIndex_4 = 3
	set tempIndex_5 = 4
	set tempIndex_6 = 5
	set tempIndex_7 = 6
	set tempIndex_8 = 7
	set tempIndex_9 = 8
	set tempIndex_10 = 9
	set tempIndex_11 = 10
	set tempIndex_12 = 11
	set tempIndex_13 = 12
endfunction

function init_ControlPoint takes nothing returns nothing
endfunction

function init_CustomBar takes nothing returns nothing
	set CustomBar_count = 0
	set CustomBar_animationTimer = CreateTimer()
endfunction

function init_DebugFile takes nothing returns nothing
	call PreloadGenClear()
endfunction

function init_DelayedDestroy takes nothing returns nothing
	set DelayedDestroy_numberOfThings = 0
	call CreateTimer()
endfunction

function init_Dot takes nothing returns nothing
	set LinkedListModule_first = 0
	set LinkedListModule_last = 0
	set LinkedListModule_size = 0
endfunction

function TextTag_classname takes nothing returns string
	return "TextTag"
endfunction

function registerNewInstanceEntry takes string name returns integer
	set InstanceBoard_classes = InstanceBoard_classes + 1
	set InstanceBoard_nameOfClass[InstanceBoard_classes] = name
	return InstanceBoard_classes
endfunction

function init_FloatingText takes nothing returns nothing
	set ShowInstances_classId = registerNewInstanceEntry(TextTag_classname())
endfunction

function initFont takes string path returns nothing
	set FontArial_paths[33] = path + "char1.blp"
	set FontArial_paths[46] = path + "char2.blp"
	set FontArial_paths[35] = path + "char3.blp"
	set FontArial_paths[36] = path + "char4.blp"
	set FontArial_paths[37] = path + "char5.blp"
	set FontArial_paths[38] = path + "char6.blp"
	set FontArial_paths[39] = path + "char7.blp"
	set FontArial_paths[40] = path + "char8.blp"
	set FontArial_paths[41] = path + "char9.blp"
	set FontArial_paths[42] = path + "char10.blp"
	set FontArial_paths[43] = path + "char11.blp"
	set FontArial_paths[44] = path + "char12.blp"
	set FontArial_paths[45] = path + "char13.blp"
	set FontArial_paths[46] = path + "char14.blp"
	set FontArial_paths[47] = path + "char15.blp"
	set FontArial_paths[48] = path + "char16.blp"
	set FontArial_paths[49] = path + "char17.blp"
	set FontArial_paths[50] = path + "char18.blp"
	set FontArial_paths[51] = path + "char19.blp"
	set FontArial_paths[52] = path + "char20.blp"
	set FontArial_paths[53] = path + "char21.blp"
	set FontArial_paths[54] = path + "char22.blp"
	set FontArial_paths[55] = path + "char23.blp"
	set FontArial_paths[56] = path + "char24.blp"
	set FontArial_paths[57] = path + "char25.blp"
	set FontArial_paths[58] = path + "char26.blp"
	set FontArial_paths[59] = path + "char27.blp"
	set FontArial_paths[60] = path + "char28.blp"
	set FontArial_paths[61] = path + "char29.blp"
	set FontArial_paths[62] = path + "char30.blp"
	set FontArial_paths[46] = path + "char31.blp"
	set FontArial_paths[64] = path + "char32.blp"
	set FontArial_paths[65] = path + "char33.blp"
	set FontArial_paths[66] = path + "char34.blp"
	set FontArial_paths[67] = path + "char35.blp"
	set FontArial_paths[68] = path + "char36.blp"
	set FontArial_paths[69] = path + "char37.blp"
	set FontArial_paths[70] = path + "char38.blp"
	set FontArial_paths[71] = path + "char39.blp"
	set FontArial_paths[72] = path + "char40.blp"
	set FontArial_paths[73] = path + "char41.blp"
	set FontArial_paths[74] = path + "char42.blp"
	set FontArial_paths[75] = path + "char43.blp"
	set FontArial_paths[76] = path + "char44.blp"
	set FontArial_paths[77] = path + "char45.blp"
	set FontArial_paths[78] = path + "char46.blp"
	set FontArial_paths[79] = path + "char47.blp"
	set FontArial_paths[80] = path + "char48.blp"
	set FontArial_paths[81] = path + "char49.blp"
	set FontArial_paths[82] = path + "char50.blp"
	set FontArial_paths[83] = path + "char51.blp"
	set FontArial_paths[84] = path + "char52.blp"
	set FontArial_paths[85] = path + "char53.blp"
	set FontArial_paths[86] = path + "char54.blp"
	set FontArial_paths[87] = path + "char55.blp"
	set FontArial_paths[88] = path + "char56.blp"
	set FontArial_paths[89] = path + "char57.blp"
	set FontArial_paths[90] = path + "char58.blp"
	set FontArial_paths[91] = path + "char59.blp"
	set FontArial_paths[46] = path + "char60.blp"
	set FontArial_paths[93] = path + "char61.blp"
	set FontArial_paths[94] = path + "char62.blp"
	set FontArial_paths[95] = path + "char63.blp"
	set FontArial_paths[96] = path + "char64.blp"
	set FontArial_paths[97] = path + "char65.blp"
	set FontArial_paths[98] = path + "char66.blp"
	set FontArial_paths[99] = path + "char67.blp"
	set FontArial_paths[100] = path + "char68.blp"
	set FontArial_paths[101] = path + "char69.blp"
	set FontArial_paths[102] = path + "char70.blp"
	set FontArial_paths[103] = path + "char71.blp"
	set FontArial_paths[104] = path + "char72.blp"
	set FontArial_paths[105] = path + "char73.blp"
	set FontArial_paths[106] = path + "char74.blp"
	set FontArial_paths[107] = path + "char75.blp"
	set FontArial_paths[108] = path + "char76.blp"
	set FontArial_paths[109] = path + "char77.blp"
	set FontArial_paths[110] = path + "char78.blp"
	set FontArial_paths[111] = path + "char79.blp"
	set FontArial_paths[112] = path + "char80.blp"
	set FontArial_paths[113] = path + "char81.blp"
	set FontArial_paths[114] = path + "char82.blp"
	set FontArial_paths[115] = path + "char83.blp"
	set FontArial_paths[116] = path + "char84.blp"
	set FontArial_paths[117] = path + "char85.blp"
	set FontArial_paths[118] = path + "char86.blp"
	set FontArial_paths[119] = path + "char87.blp"
	set FontArial_paths[120] = path + "char88.blp"
	set FontArial_paths[121] = path + "char89.blp"
	set FontArial_paths[122] = path + "char90.blp"
	set FontArial_paths[123] = path + "char91.blp"
	set FontArial_paths[124] = path + "char92.blp"
	set FontArial_paths[125] = path + "char93.blp"
	set FontArial_paths[126] = path + "char94.blp"
	set FontArial_widths[33] = 13
	set FontArial_widths[46] = 14
	set FontArial_widths[35] = 29
	set FontArial_widths[36] = 28
	set FontArial_widths[37] = 45
	set FontArial_widths[38] = 33
	set FontArial_widths[39] = 9
	set FontArial_widths[40] = 17
	set FontArial_widths[41] = 16
	set FontArial_widths[42] = 19
	set FontArial_widths[43] = 30
	set FontArial_widths[44] = 14
	set FontArial_widths[45] = 18
	set FontArial_widths[46] = 14
	set FontArial_widths[47] = 13
	set FontArial_widths[48] = 28
	set FontArial_widths[49] = 28
	set FontArial_widths[50] = 27
	set FontArial_widths[51] = 27
	set FontArial_widths[52] = 28
	set FontArial_widths[53] = 28
	set FontArial_widths[54] = 28
	set FontArial_widths[55] = 27
	set FontArial_widths[56] = 28
	set FontArial_widths[57] = 28
	set FontArial_widths[58] = 14
	set FontArial_widths[59] = 13
	set FontArial_widths[60] = 29
	set FontArial_widths[61] = 30
	set FontArial_widths[62] = 29
	set FontArial_widths[46] = 14
	set FontArial_widths[64] = 51
	set FontArial_widths[65] = 33
	set FontArial_widths[66] = 34
	set FontArial_widths[67] = 35
	set FontArial_widths[68] = 36
	set FontArial_widths[69] = 33
	set FontArial_widths[70] = 30
	set FontArial_widths[71] = 39
	set FontArial_widths[72] = 36
	set FontArial_widths[73] = 14
	set FontArial_widths[74] = 24
	set FontArial_widths[75] = 33
	set FontArial_widths[76] = 28
	set FontArial_widths[77] = 42
	set FontArial_widths[78] = 36
	set FontArial_widths[79] = 38
	set FontArial_widths[80] = 33
	set FontArial_widths[81] = 39
	set FontArial_widths[82] = 36
	set FontArial_widths[83] = 34
	set FontArial_widths[84] = 30
	set FontArial_widths[85] = 36
	set FontArial_widths[86] = 32
	set FontArial_widths[87] = 46
	set FontArial_widths[88] = 32
	set FontArial_widths[89] = 32
	set FontArial_widths[90] = 30
	set FontArial_widths[91] = 13
	set FontArial_widths[46] = 14
	set FontArial_widths[93] = 13
	set FontArial_widths[94] = 23
	set FontArial_widths[95] = 27
	set FontArial_widths[96] = 17
	set FontArial_widths[97] = 28
	set FontArial_widths[98] = 28
	set FontArial_widths[99] = 25
	set FontArial_widths[100] = 28
	set FontArial_widths[101] = 28
	set FontArial_widths[102] = 15
	set FontArial_widths[103] = 28
	set FontArial_widths[104] = 27
	set FontArial_widths[105] = 11
	set FontArial_widths[106] = 7
	set FontArial_widths[107] = 25
	set FontArial_widths[108] = 11
	set FontArial_widths[109] = 41
	set FontArial_widths[110] = 27
	set FontArial_widths[111] = 28
	set FontArial_widths[112] = 28
	set FontArial_widths[113] = 28
	set FontArial_widths[114] = 17
	set FontArial_widths[115] = 25
	set FontArial_widths[116] = 14
	set FontArial_widths[117] = 28
	set FontArial_widths[118] = 24
	set FontArial_widths[119] = 35
	set FontArial_widths[120] = 24
	set FontArial_widths[121] = 24
	set FontArial_widths[122] = 25
	set FontArial_widths[123] = 16
	set FontArial_widths[124] = 14
	set FontArial_widths[125] = 16
	set FontArial_widths[126] = 29
	set FontArial_widths[32] = 20
endfunction

function init_FontArial takes nothing returns nothing
	set FontArial_FONT_HEIGHT = 56
	set FontArial_FONT_RESOLUTION = 64
	call initFont("Chars\\")
endfunction

function Preload_classInit takes nothing returns nothing
	set Preload_initOrder[1] = "IconTypes"
	set Preload_initOrder[2] = "Abilitys"
	set Preload_initOrder[3] = "Units"
	set Preload_initOrder[4] = "Items"
	set Preload_initOrder[5] = "Destructables"
	set Preload_initOrder[6] = "Buffs"
	set Preload_initOrder[7] = "Trackables"
	set Preload_initOrder[8] = "Menu"
endfunction

function ClassInit_helper_3 takes nothing returns boolean
	call Preload_classInit()
	return true
endfunction

function Preload_startPreload takes string wurstStackTrace returns nothing
	call timer_start(getTimer("\n   GameStart, line 150" + wurstStackTrace), 1.0, ref_function_bridge_Preload_preload)
endfunction

function alloc_Closure_15 takes nothing returns integer
	local integer this_44
	if Action_firstFree == 0 then
		set Action_maxIndex = Action_maxIndex + 1
		set this_44 = Action_maxIndex
	else
		set Action_firstFree = Action_firstFree - 1
		set this_44 = Action_nextFree[Action_firstFree]
	endif
	set Action_typeId[this_44] = 839
	return this_44
endfunction

function alloc_Closure_16 takes nothing returns integer
	local integer this_44
	if PreloadAction_firstFree == 0 then
		set PreloadAction_maxIndex = PreloadAction_maxIndex + 1
		set this_44 = PreloadAction_maxIndex
	else
		set PreloadAction_firstFree = PreloadAction_firstFree - 1
		set this_44 = PreloadAction_nextFree[PreloadAction_firstFree]
	endif
	set PreloadAction_typeId[this_44] = 840
	return this_44
endfunction

function Event_addAction takes integer this_44, integer a returns integer
	set Action_ev[a] = this_44
	if Event_first[this_44] == 0 then
		set Event_first[this_44] = a
		set Event_last[this_44] = a
		set Action_next[a] = 0
		set Action_prev[a] = 0
	else
		set Action_prev[Event_first[this_44]] = a
		set Action_next[a] = Event_first[this_44]
		set Event_first[this_44] = a
	endif
	return a
endfunction

function dispatch_Event_addAction takes integer this_44, integer a, string wurstStackTrace returns integer
	local integer addAction_result
	if Event_typeId[this_44] == 0 then
		if this_44 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Event.addAction" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Event.addAction on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	if Event_typeId[this_44] <= 767 then
		if Event_typeId[this_44] <= 765 then
			if Event_typeId[this_44] <= 668 then
				set addAction_result = Event_addAction(this_44, a)
			else
				set addAction_result = Event_addAction(this_44, a)
			endif
		else
			set addAction_result = Event_addAction(this_44, a)
		endif
	elseif Event_typeId[this_44] <= 770 then
		set addAction_result = Event_addAction(this_44, a)
	else
		set addAction_result = Event_addAction(this_44, a)
	endif
	return addAction_result
endfunction

function alloc_HashList takes nothing returns integer
	local integer this_44
	if HashList_firstFree == 0 then
		set HashList_maxIndex = HashList_maxIndex + 1
		set this_44 = HashList_maxIndex
	else
		set HashList_firstFree = HashList_firstFree - 1
		set this_44 = HashList_nextFree[HashList_firstFree]
	endif
	set HashList_typeId[this_44] = 651
	return this_44
endfunction

function construct_HashList takes integer this_44 returns nothing
	set HashList_size[this_44] = 0
endfunction

function new_HashList takes nothing returns integer
	local integer this_44 = alloc_HashList()
	call construct_HashList(this_44)
	return this_44
endfunction

function alloc_Player takes nothing returns integer
	local integer this_44
	if Player_firstFree == 0 then
		set Player_maxIndex = Player_maxIndex + 1
		set this_44 = Player_maxIndex
	else
		set Player_firstFree = Player_firstFree - 1
		set this_44 = Player_nextFree[Player_firstFree]
	endif
	return this_44
endfunction

function construct_Player takes integer this_44, player p, string wurstStackTrace returns nothing
	set Player_camSet[this_44] = getTimer("\n   PlayerClass, line 32" + wurstStackTrace)
	call timer_startPeriodic(Player_camSet[this_44], 1., ref_function_bridge_Player_setCam)
	call timer_setData(Player_camSet[this_44], this_44, "\n   PlayerClass, line 40" + wurstStackTrace)
	call dispatch_HashMap_put(PlayerClass_playerData, playerToIndex(p), this_44, "\n   PlayerClass, line 41" + wurstStackTrace)
endfunction

function new_Player takes player p, string wurstStackTrace returns integer
	local integer this_44 = alloc_Player()
	call construct_Player(this_44, p, "\n   PlayerClass, line 36" + wurstStackTrace)
	return this_44
endfunction

function alloc_SimpleEvent takes nothing returns integer
	local integer this_44
	if Event_firstFree == 0 then
		set Event_maxIndex = Event_maxIndex + 1
		set this_44 = Event_maxIndex
	else
		set Event_firstFree = Event_firstFree - 1
		set this_44 = Event_nextFree[Event_firstFree]
	endif
	set Event_typeId[this_44] = 773
	return this_44
endfunction

function construct_Event takes integer this_44 returns nothing
	set Event_first[this_44] = 0
	set Event_last[this_44] = 0
	set Event_checkData[this_44] = false
endfunction

function construct_SimpleEvent takes integer this_44 returns nothing
	call construct_Event(this_44)
endfunction

function new_SimpleEvent takes nothing returns integer
	local integer this_44 = alloc_SimpleEvent()
	call construct_SimpleEvent(this_44)
	return this_44
endfunction

function onPreload takes string name, integer action, string wurstStackTrace returns nothing
	call dispatch_HashMap_put(PreloadSystem_preloadActions, StringHash(name), action, "\n   PreloadSystem, line 32" + wurstStackTrace)
endfunction

function trigger_registerPlayerChatEvent takes trigger this_44, player whichPlayer, string chatMessageToDetect, boolean exactMatchOnly returns nothing
	call TriggerRegisterPlayerChatEvent(this_44, whichPlayer, chatMessageToDetect, exactMatchOnly)
endfunction

function init_GameStart takes string wurstStackTrace returns nothing
	local trigger receiver = CreateTrigger()
	local integer i
	local trigger blub
	local integer wurst__iterator0
	local player p
	local trigger receiver_2
	local integer clVar
	local integer shopB_2
	local integer scoreB_2
	local integer guideB_2
	local integer exitB_2
	local integer buyB_2
	local integer shopT1_2
	local integer shopT2_2
	local integer shopT3_2
	local integer shopT4_2
	local integer shopT5_2
	local integer shopT6_2
	local integer shopT7_2
	local integer shopT8_2
	local integer shopOb_2
	local integer scoreOb_2
	local integer guideOb_2
	local integer exitOb_2
	local integer shopPleft_2
	local integer shopPmiddle_2
	local integer shopPright_2
	local integer shopPleftBot_2
	local integer shopPleftBot2_2
	local integer shop1_2
	local integer shop2_2
	local integer shop3_2
	local integer shop4_2
	local integer shop5_2
	local integer shop6_2
	local integer shop7_2
	local integer shop8_2
	local integer shop9_2
	local integer shop10_2
	local integer shop11_2
	local integer shop12_2
	local integer shop13_2
	local integer shop14_2
	local integer shop15_2
	local integer shop16_2
	local integer shop17_2
	local integer shop18_2
	local integer shop19_2
	local integer shop20_2
	local integer shop21_2
	local integer shop22_2
	local integer shop23_2
	local integer shop24_2
	local integer shop25_2
	local integer shop26_2
	local integer shop27_2
	local integer shop28_2
	local integer shop29_2
	local integer shop30_2
	local integer shop31_2
	local integer shop32_2
	local integer shop25a_2
	local integer shop26a_2
	local integer shop27a_2
	local integer shop28a_2
	local integer shop29a_2
	local integer shop30a_2
	local integer shop31a_2
	local integer shop32a_2
	local integer shop33_2
	local integer shop34_2
	local integer shop35_2
	local integer shop36_2
	local integer shop37_2
	local integer shop38_2
	local integer shop39_2
	local integer shop40_2
	local integer shop41_2
	local integer shop42_2
	local integer shop43_2
	local integer shop44_2
	local integer shop45_2
	local integer shop46_2
	local integer shop47_2
	local integer clVar_2
	local real temp_GameStart_tvec_x
	local real temp_GameStart_tvec_y
	local integer temp
	call trigger_addAction(receiver, ref_function_bridge_setCallLimit)
	set GameStart_testt = receiver
	set temp_GameStart_tvec_x = 0.
	set temp_GameStart_tvec_y = 0.
	call CreateGroup()
	call new_HashList()
	call new_LinkedList()
	set GameStart_shopWindow = new_Window()
	set GameStart_scoreWindow = new_Window()
	set GameStart_guideWindow = new_Window()
	set i = 0
	loop
		exitwhen i > 11
		if GetPlayerSlotState(Player(i)) == PLAYER_SLOT_STATE_PLAYING and GetPlayerController(Player(i)) == MAP_CONTROL_USER then
			call dispatch_LinkedList_add(Setup_allPlayers, playerToIndex(Player(i)), "\n   GameStart, line 81" + wurstStackTrace)
			call SetPlayerAbilityAvailable(Player(i), 1514238056, false)
			call SetPlayerAbilityAvailable(Player(i), 1514234228, false)
			call SetPlayerAbilityAvailable(Player(i), 1514238836, false)
			call SetPlayerAbilityAvailable(Player(i), 1514238819, false)
		endif
		set i = i + 1
	endloop
	call timer_startPeriodic(getTimer("\n   GameStart, line 87" + wurstStackTrace), 0.5, ref_function_bridge_Dot_loopList)
	call timer_startPeriodic(getTimer("\n   GameStart, line 89" + wurstStackTrace), 0.03, ref_function_bridge_callKnockback)
	set blub = CreateTrigger()
	call trigger_addAction(blub, ref_function_bridge_camTest)
	call EnablePreSelect(false, false)
	set wurst__iterator0 = dispatch_LinkedList_iterator(Setup_allPlayers, "\n   GameStart, line 97" + wurstStackTrace)
	loop
		exitwhen  not dispatch_LLIterator_hasNext(wurst__iterator0, "\n   GameStart, line 97" + wurstStackTrace)
		set p = playerFromIndex(dispatch_LLIterator_next(wurst__iterator0, "\n   GameStart, line 97" + wurstStackTrace), "\n   GameStart, line 97" + wurstStackTrace)
		call new_Player(p, "\n   GameStart, line 98" + wurstStackTrace)
	endloop
	call dispatch_LLIterator_close(wurst__iterator0, "\n   GameStart, line 97" + wurstStackTrace)
	call trigger_registerPlayerChatEvent(GameStart_testt, Player(0), "", false)
	set receiver_2 = CreateTrigger()
	call trigger_addAction(receiver_2, ref_function_onEsc)
	call TriggerRegisterPlayerEventEndCinematic(receiver_2, Player(0))
	call Preload_startPreload("\n   GameStart, line 109" + wurstStackTrace)
	set Preload_maxProgress = 10.015
	set Preload_progress = 0.
	set Preload_preloadStatus = 1
	set Preload_preloadEnd = new_SimpleEvent()
	set Preload_showProgress = true
	set Preload_loopCounter = 0
	call ClassInit_helper_3()
	set temp = Preload_preloadEnd
	set clVar = alloc_Closure_15()
	call dispatch_Event_addAction(temp, clVar, "\n   GameStart, line 183" + wurstStackTrace)
	set shopB_2 = 0
	set scoreB_2 = 0
	set guideB_2 = 0
	set exitB_2 = 0
	set buyB_2 = 0
	set shopT1_2 = 0
	set shopT2_2 = 0
	set shopT3_2 = 0
	set shopT4_2 = 0
	set shopT5_2 = 0
	set shopT6_2 = 0
	set shopT7_2 = 0
	set shopT8_2 = 0
	set shopOb_2 = 0
	set scoreOb_2 = 0
	set guideOb_2 = 0
	set exitOb_2 = 0
	set shopPleft_2 = 0
	set shopPmiddle_2 = 0
	set shopPright_2 = 0
	set shopPleftBot_2 = 0
	set shopPleftBot2_2 = 0
	set shop1_2 = 0
	set shop2_2 = 0
	set shop3_2 = 0
	set shop4_2 = 0
	set shop5_2 = 0
	set shop6_2 = 0
	set shop7_2 = 0
	set shop8_2 = 0
	set shop9_2 = 0
	set shop10_2 = 0
	set shop11_2 = 0
	set shop12_2 = 0
	set shop13_2 = 0
	set shop14_2 = 0
	set shop15_2 = 0
	set shop16_2 = 0
	set shop17_2 = 0
	set shop18_2 = 0
	set shop19_2 = 0
	set shop20_2 = 0
	set shop21_2 = 0
	set shop22_2 = 0
	set shop23_2 = 0
	set shop24_2 = 0
	set shop25_2 = 0
	set shop26_2 = 0
	set shop27_2 = 0
	set shop28_2 = 0
	set shop29_2 = 0
	set shop30_2 = 0
	set shop31_2 = 0
	set shop32_2 = 0
	set shop25a_2 = 0
	set shop26a_2 = 0
	set shop27a_2 = 0
	set shop28a_2 = 0
	set shop29a_2 = 0
	set shop30a_2 = 0
	set shop31a_2 = 0
	set shop32a_2 = 0
	set shop33_2 = 0
	set shop34_2 = 0
	set shop35_2 = 0
	set shop36_2 = 0
	set shop37_2 = 0
	set shop38_2 = 0
	set shop39_2 = 0
	set shop40_2 = 0
	set shop41_2 = 0
	set shop42_2 = 0
	set shop43_2 = 0
	set shop44_2 = 0
	set shop45_2 = 0
	set shop46_2 = 0
	set shop47_2 = 0
	set clVar_2 = alloc_Closure_16()
	set shopT1[clVar_2] = shopT1_2
	set shopT2[clVar_2] = shopT2_2
	set shopT3[clVar_2] = shopT3_2
	set shopT4[clVar_2] = shopT4_2
	set shopT5[clVar_2] = shopT5_2
	set shopT6[clVar_2] = shopT6_2
	set shopT7[clVar_2] = shopT7_2
	set shopT8[clVar_2] = shopT8_2
	set shopB[clVar_2] = shopB_2
	set shopOb[clVar_2] = shopOb_2
	set scoreB[clVar_2] = scoreB_2
	set scoreOb[clVar_2] = scoreOb_2
	set guideB[clVar_2] = guideB_2
	set guideOb[clVar_2] = guideOb_2
	set exitB[clVar_2] = exitB_2
	set exitOb[clVar_2] = exitOb_2
	set buyB[clVar_2] = buyB_2
	set shopPright[clVar_2] = shopPright_2
	set shopPmiddle[clVar_2] = shopPmiddle_2
	set shopPleft[clVar_2] = shopPleft_2
	set shopPleftBot[clVar_2] = shopPleftBot_2
	set shopPleftBot2[clVar_2] = shopPleftBot2_2
	set shop1[clVar_2] = shop1_2
	set shop2[clVar_2] = shop2_2
	set shop3[clVar_2] = shop3_2
	set shop4[clVar_2] = shop4_2
	set shop5[clVar_2] = shop5_2
	set shop6[clVar_2] = shop6_2
	set shop7[clVar_2] = shop7_2
	set shop8[clVar_2] = shop8_2
	set shop9[clVar_2] = shop9_2
	set shop10[clVar_2] = shop10_2
	set shop11[clVar_2] = shop11_2
	set shop12[clVar_2] = shop12_2
	set shop13[clVar_2] = shop13_2
	set shop14[clVar_2] = shop14_2
	set shop15[clVar_2] = shop15_2
	set shop16[clVar_2] = shop16_2
	set shop17[clVar_2] = shop17_2
	set shop18[clVar_2] = shop18_2
	set shop19[clVar_2] = shop19_2
	set shop20[clVar_2] = shop20_2
	set shop21[clVar_2] = shop21_2
	set shop22[clVar_2] = shop22_2
	set shop23[clVar_2] = shop23_2
	set shop24[clVar_2] = shop24_2
	set shop25[clVar_2] = shop25_2
	set shop26[clVar_2] = shop26_2
	set shop27[clVar_2] = shop27_2
	set shop28[clVar_2] = shop28_2
	set shop29[clVar_2] = shop29_2
	set shop30[clVar_2] = shop30_2
	set shop31[clVar_2] = shop31_2
	set shop32[clVar_2] = shop32_2
	set shop25a[clVar_2] = shop25a_2
	set shop26a[clVar_2] = shop26a_2
	set shop27a[clVar_2] = shop27a_2
	set shop28a[clVar_2] = shop28a_2
	set shop29a[clVar_2] = shop29a_2
	set shop30a[clVar_2] = shop30a_2
	set shop31a[clVar_2] = shop31a_2
	set shop32a[clVar_2] = shop32a_2
	set shop33[clVar_2] = shop33_2
	set shop34[clVar_2] = shop34_2
	set shop35[clVar_2] = shop35_2
	set shop36[clVar_2] = shop36_2
	set shop37[clVar_2] = shop37_2
	set shop38[clVar_2] = shop38_2
	set shop39[clVar_2] = shop39_2
	set shop40[clVar_2] = shop40_2
	set shop41[clVar_2] = shop41_2
	set shop42[clVar_2] = shop42_2
	set shop43[clVar_2] = shop43_2
	set shop44[clVar_2] = shop44_2
	set shop45[clVar_2] = shop45_2
	set shop46[clVar_2] = shop46_2
	set shop47[clVar_2] = shop47_2
	call onPreload("Menu", clVar_2, "\n   GameStart, line 267" + wurstStackTrace)
	set receiver = null
	set blub = null
	set p = null
	set receiver_2 = null
endfunction

function init_GameTimer takes nothing returns nothing
	set GameTimer_gameTimer = CreateTimer()
	call timer_start(GameTimer_gameTimer, 100000., null)
endfunction

function init_HandleCounter takes string wurstStackTrace returns nothing
	set HandleCounter_TITLE = "HandleCounter"
	set HandleCounter_board = null
	call getTimer("\n   HandleCounter, line 5" + wurstStackTrace)
	set HandleCounter_HANDLE = Player(0)
	set HandleCounter_HANDLE_TEXT = "current handlecount"
	set HandleCounter_MAX_HANDLE = Player(1)
	set HandleCounter_MAX_HANDLE_TEXT = "max handlecount"
	set HandleCounter_TIME_TEXT = "current time"
	set HandleCounter_TIME = Player(2)
	set HandleCounter_updatePeriod = 0.25
	set HandleCounter_stackEndTreshold = 15
	set HandleCounter_clock = getTimer("\n   HandleCounter, line 19" + wurstStackTrace)
	set HandleCounter_seconds = 0
	set HandleCounter_maxHandleCount = 0
	call TimerStart(HandleCounter_clock, 1., true, ref_function_updateTime)
endfunction

function init_HashList takes nothing returns nothing
	set HashList_ht = InitHashtable()
endfunction

function init_HashMap takes nothing returns nothing
	set HashMap_ht = InitHashtable()
endfunction

function init_Helper takes nothing returns nothing
	local integer i = 0
	loop
		exitwhen i > 31
		call R2I(Pow(2., I2R(i)))
		set i = i + 1
	endloop
endfunction

function init_HeroBar takes string wurstStackTrace returns nothing
	local timer receiver
	local timer receiver_2
	set HeroBar_hpColorDead = "|c00003300"
	set HeroBar_shieldColor = "|c00999999"
	set HeroBar_mpColor = "|c000000AA"
	set HeroBar_mpColorDead = "|c00000022"
	set HeroBar_endColor = "|r"
	set HeroBar_marker = "|c00000000|||r"
	set HeroBar_bar = "|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||"
	set HeroBar_realBarCount = 125
	set HeroBar_fakeBarCount = 250
	set HeroBar_seperateAt = 250
	set receiver = getTimer("\n   HeroBar, line 30" + wurstStackTrace)
	call timer_startPeriodic(receiver, 0.01, ref_function_bridge_Bar_updatePos)
	set receiver_2 = getTimer("\n   HeroBar, line 31" + wurstStackTrace)
	call timer_startPeriodic(receiver_2, 0.25, ref_function_bridge_Bar_updateVision)
	set LinkedListModule_first_2 = 0
	set receiver = null
	set receiver_2 = null
endfunction

function init_HeroClass takes string wurstStackTrace returns nothing
	local trigger receiver = CreateTrigger()
	local timer receiver_2
	local trigger receiver_3
	call trigger_addAction(receiver, ref_function_bridge_Hero_handleCasts)
	set Hero_abiIdToSpell = new_HashMap()
	call getTimer("\n   HeroClass, line 21" + wurstStackTrace)
	set Hero_toMove = new_LinkedList()
	set receiver_2 = getTimer("\n   HeroClass, line 23" + wurstStackTrace)
	call timer_startPeriodic(receiver_2, 0.01, ref_function_bridge_closure_impl_6)
	set receiver_3 = CreateTrigger()
	call trigger_addAction(receiver_3, ref_function_bridge_GetOrders_callOnOrder)
	set GetOrders_orderDetect = receiver_3
	set receiver = null
	set receiver_2 = null
	set receiver_3 = null
endfunction

function alloc_IdGenerator takes nothing returns integer
	local integer this_44
	if IdGenerator_firstFree == 0 then
		set IdGenerator_maxIndex = IdGenerator_maxIndex + 1
		set this_44 = IdGenerator_maxIndex
	else
		set IdGenerator_firstFree = IdGenerator_firstFree - 1
		set this_44 = IdGenerator_nextFree[IdGenerator_firstFree]
	endif
	set IdGenerator_typeId[this_44] = 807
	return this_44
endfunction

function construct_IdGenerator takes integer this_44, integer start returns nothing
	set IdGenerator_i1[this_44] = ModuloInteger(start, 256)
	set IdGenerator_i2[this_44] = ModuloInteger(start, 65536) / 256
	set IdGenerator_i3[this_44] = ModuloInteger(start, 16777216) / 65536
	set IdGenerator_i4[this_44] = start / 16777216
endfunction

function new_IdGenerator takes integer start returns integer
	local integer this_44 = alloc_IdGenerator()
	call construct_IdGenerator(this_44, start)
	return this_44
endfunction

function alloc_StringList takes nothing returns integer
	local integer this_44
	if StringList_firstFree == 0 then
		set StringList_maxIndex = StringList_maxIndex + 1
		set this_44 = StringList_maxIndex
	else
		set StringList_firstFree = StringList_firstFree - 1
		set this_44 = StringList_nextFree[StringList_firstFree]
	endif
	return this_44
endfunction

function construct_StringList takes integer this_44 returns nothing
endfunction

function new_StringList takes nothing returns integer
	local integer this_44 = alloc_StringList()
	call construct_StringList(this_44)
	return this_44
endfunction

function init_HeroTypes takes nothing returns nothing
	call new_StringList()
	call new_IdGenerator(640692272)
endfunction

function init_Icon takes nothing returns nothing
	set Icon_animationSpeedHover = 5.
	set Icon_animationSpeedHit = 8.
	set Icon_dummyIcon = 1231253358
endfunction

function alloc_Closure_17 takes nothing returns integer
	local integer this_44
	if PreloadAction_firstFree == 0 then
		set PreloadAction_maxIndex = PreloadAction_maxIndex + 1
		set this_44 = PreloadAction_maxIndex
	else
		set PreloadAction_firstFree = PreloadAction_firstFree - 1
		set this_44 = PreloadAction_nextFree[PreloadAction_firstFree]
	endif
	set PreloadAction_typeId[this_44] = 808
	return this_44
endfunction

function init_IconType takes string wurstStackTrace returns nothing
	local integer clVar
	set IconType_iconMap1 = new_HashMap()
	set IconType_iconMap2 = new_HashMap()
	set IconType_ids = new_IdGenerator(623915056)
	set IconType_compiletime = true
	set IconType_restColor = 0.3
	set IconType_compiletime = false
	set clVar = alloc_Closure_17()
	call onPreload("IconTypes", clVar, "\n   IconType, line 1124" + wurstStackTrace)
endfunction

function init_InstanceBoard takes string wurstStackTrace returns nothing
	set InstanceBoard_classes = 0
	call InitHashtable()
	set InstanceBoard_mb = null
	call timer_start(getTimer("\n   InstanceBoard, line 11" + wurstStackTrace), 0.0, ref_function_createMultiboard)
endfunction

function init_Lightning takes nothing returns nothing
endfunction

function region_addRect takes region this_44, rect r returns nothing
	call RegionAddRect(this_44, r)
endfunction

function init_MapBounds takes nothing returns nothing
	local region receiver
	local real temp_MapBounds_mapCenter_x
	local real temp_MapBounds_mapCenter_y
	set MapBounds_mapRect = GetPlayableMapRect()
	set receiver = CreateRegion()
	call region_addRect(receiver, MapBounds_mapRect)
	set MapBounds_mapMinX = GetRectMinX(MapBounds_mapRect)
	set MapBounds_mapMinY = GetRectMinY(MapBounds_mapRect)
	set MapBounds_mapMaxX = GetRectMaxX(MapBounds_mapRect)
	set MapBounds_mapMaxY = GetRectMaxY(MapBounds_mapRect)
	set temp_MapBounds_mapCenter_x = (MapBounds_mapMaxX + MapBounds_mapMinX) / 2.
	set temp_MapBounds_mapCenter_y = (MapBounds_mapMinY + MapBounds_mapMaxY) / 2.
	set receiver = null
endfunction

function init_Maths takes nothing returns nothing
	set Maths_DEGTORAD = 0.017453293
	set Maths_RADTODEG = 57.295779513
endfunction

function Widget_classInit takes nothing returns nothing
	local integer i = 1
	loop
		exitwhen i > 8
		set Widget_backgroundTexture[i] = "Hintergrund" + int_toString(i) + ".blp"
		set i = i + 1
	endloop
endfunction

function ClassInit_helper_4 takes nothing returns boolean
	call Widget_classInit()
	return true
endfunction

function alloc_Closure_18 takes nothing returns integer
	local integer this_44
	if PreloadAction_firstFree == 0 then
		set PreloadAction_maxIndex = PreloadAction_maxIndex + 1
		set this_44 = PreloadAction_maxIndex
	else
		set PreloadAction_firstFree = PreloadAction_firstFree - 1
		set this_44 = PreloadAction_nextFree[PreloadAction_firstFree]
	endif
	set PreloadAction_typeId[this_44] = 790
	return this_44
endfunction

function alloc_Stack takes nothing returns integer
	local integer this_44
	if Stack_firstFree == 0 then
		set Stack_maxIndex = Stack_maxIndex + 1
		set this_44 = Stack_maxIndex
	else
		set Stack_firstFree = Stack_firstFree - 1
		set this_44 = Stack_nextFree[Stack_firstFree]
	endif
	set Stack_typeId[this_44] = 782
	return this_44
endfunction

function construct_Stack takes integer this_44 returns nothing
	set Stack_size[this_44] = 0
	set Stack_dummy[this_44] = new_SEntry(0, 0)
	set Stack_top[this_44] = Stack_dummy[this_44]
endfunction

function new_Stack takes nothing returns integer
	local integer this_44 = alloc_Stack()
	call construct_Stack(this_44)
	return this_44
endfunction

function init_Menu takes string wurstStackTrace returns nothing
	local integer i
	local integer w_2
	local integer clVar
	call ClassInit_helper_4()
	set i = 0
	loop
		exitwhen i > 11
		set WindowManager_currentWindow[i] = new_Stack()
		set i = i + 1
	endloop
	set w_2 = new_ElementLoop(1, 1, Setup_menuWidth, Setup_menuHeight)
	set clVar = alloc_Closure_18()
	set w[clVar] = w_2
	call onPreload("Trackables", clVar, "\n   Menu, line 200" + wurstStackTrace)
endfunction

function init_Model takes nothing returns nothing
endfunction

function alloc_ArrayQueue takes nothing returns integer
	local integer this_44
	if ArrayQueue_firstFree == 0 then
		set ArrayQueue_maxIndex = ArrayQueue_maxIndex + 1
		set this_44 = ArrayQueue_maxIndex
	else
		set ArrayQueue_firstFree = ArrayQueue_firstFree - 1
		set this_44 = ArrayQueue_nextFree[ArrayQueue_firstFree]
	endif
	set ArrayQueue_typeId[this_44] = 19
	return this_44
endfunction

function construct_ArrayQueue takes integer this_44 returns nothing
	set ArrayQueue_fp[this_44] = 0
	set ArrayQueue_rp[this_44] = 0
	set ArrayQueue_size[this_44] = 0
endfunction

function new_ArrayQueue takes nothing returns integer
	local integer this_44 = alloc_ArrayQueue()
	call construct_ArrayQueue(this_44)
	return this_44
endfunction

function init_NewDummyRecycler takes string wurstStackTrace returns nothing
	local integer i
	local integer temp
	local integer j
	local integer temp_2
	set NewDummyRecycler_DIFFERENT_ANGLES = 8
	set NewDummyRecycler_SAVED_UNITS_PER_ANGLE = 6
	set DelayNode_t = CreateTimer()
	set DelayNode_first = 0
	set i = 0
	set temp = NewDummyRecycler_DIFFERENT_ANGLES - 1
	loop
		exitwhen i > temp
		set NewDummyRecycler_angleQueues[i] = new_ArrayQueue()
		set j = 0
		set temp_2 = NewDummyRecycler_SAVED_UNITS_PER_ANGLE - 1
		loop
			exitwhen j > temp_2
			call dispatch_ArrayQueue_enqueue(NewDummyRecycler_angleQueues[i], createDummy(MapBounds_mapMaxX, MapBounds_mapMaxY, Basics_DUMMY_PLAYER, real_asAngleDegrees(i * (360 * 1. / NewDummyRecycler_DIFFERENT_ANGLES))), "\n   NewDummyRecycler, line 113" + wurstStackTrace)
			set j = j + 1
		endloop
		set i = i + 1
	endloop
endfunction

function init_ObjectIds takes nothing returns nothing
	set ObjectIds_charMap = ".................................!.#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[.]^_`abcdefghijklmnopqrstuvwxyz{|}~................................................................................................................................."
endfunction

function ObjectDefinition_setLvlDataInt takes integer this_key, string modification, integer lvl, integer dataPointer, integer value returns nothing
endfunction

function AbilityDefinitionAgilityBonusPlus1_setAgilityBonus takes integer this_44, integer level, integer value returns nothing
	local integer tempIndex = this_44
	call ObjectDefinition_setLvlDataInt(AbilityDefinition_def[tempIndex], "Iagi", level, 1, value)
endfunction

function dispatch_AbilityDefinitionAgilityBonusPlus1_setAgilityBonus takes integer this_44, integer level, integer value, string wurstStackTrace returns nothing
	if AbilityDefinition_typeId[this_44] == 0 then
		if this_44 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling AbilityDefinitionAgilityBonusPlus1.setAgilityBonus" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called AbilityDefinitionAgilityBonusPlus1.setAgilityBonus on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call AbilityDefinitionAgilityBonusPlus1_setAgilityBonus(this_44, level, value)
endfunction

function ObjectDefinition_setLvlDataBoolean takes integer this_key, string modification, integer lvl, integer dataPointer, boolean value returns nothing
	if value then
		call ObjectDefinition_setLvlDataInt(this_key, modification, lvl, dataPointer, 1)
	else
		call ObjectDefinition_setLvlDataInt(this_key, modification, lvl, dataPointer, 0)
	endif
endfunction

function AbilityDefinitionAgilityBonusPlus1_setHideButton takes integer this_44, integer level, boolean value returns nothing
	local integer tempIndex = this_44
	call ObjectDefinition_setLvlDataBoolean(AbilityDefinition_def[tempIndex], "Ihid", level, 4, value)
endfunction

function dispatch_AbilityDefinitionAgilityBonusPlus1_setHideButton takes integer this_44, integer level, boolean value, string wurstStackTrace returns nothing
	if AbilityDefinition_typeId[this_44] == 0 then
		if this_44 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling AbilityDefinitionAgilityBonusPlus1.setHideButton" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called AbilityDefinitionAgilityBonusPlus1.setHideButton on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call AbilityDefinitionAgilityBonusPlus1_setHideButton(this_44, level, value)
endfunction

function AbilityDefinition_setEditorSuffix takes integer this_44, string value returns nothing
	local integer tempIndex = this_44
	call ObjectDefinition_setLvlDataString(AbilityDefinition_def[tempIndex], "ansf", 0, 0, value)
endfunction

function dispatch_AbilityDefinition_setEditorSuffix takes integer this_44, string value, string wurstStackTrace returns nothing
	if AbilityDefinition_typeId[this_44] == 0 then
		if this_44 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling AbilityDefinition.setEditorSuffix" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called AbilityDefinition.setEditorSuffix on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	if AbilityDefinition_typeId[this_44] <= 646 then
		call AbilityDefinition_setEditorSuffix(this_44, value)
	else
		call AbilityDefinition_setEditorSuffix(this_44, value)
	endif
endfunction

function AbilityDefinition_setItemAbility takes integer this_44, boolean value returns nothing
	local integer tempIndex = this_44
	call ObjectDefinition_setLvlDataBoolean(AbilityDefinition_def[tempIndex], "aite", 0, 0, value)
endfunction

function dispatch_AbilityDefinition_setItemAbility takes integer this_44, boolean value, string wurstStackTrace returns nothing
	if AbilityDefinition_typeId[this_44] == 0 then
		if this_44 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling AbilityDefinition.setItemAbility" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called AbilityDefinition.setItemAbility on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	if AbilityDefinition_typeId[this_44] <= 646 then
		call AbilityDefinition_setItemAbility(this_44, value)
	else
		call AbilityDefinition_setItemAbility(this_44, value)
	endif
endfunction

function int_pow takes integer this_44, integer n returns integer
	local integer result
	local integer i
	local integer temp
	if n == 0 then
		return 1
	endif
	set result = this_44
	set i = 1
	set temp = n - 1
	loop
		exitwhen i > temp
		set result = result * this_44
		set i = i + 1
	endloop
	return result
endfunction

function alloc_AbilityDefinitionAgilityBonusPlus1 takes nothing returns integer
	local integer this_44
	if AbilityDefinition_firstFree == 0 then
		set AbilityDefinition_maxIndex = AbilityDefinition_maxIndex + 1
		set this_44 = AbilityDefinition_maxIndex
	else
		set AbilityDefinition_firstFree = AbilityDefinition_firstFree - 1
		set this_44 = AbilityDefinition_nextFree[AbilityDefinition_firstFree]
	endif
	set AbilityDefinition_typeId[this_44] = 31
	return this_44
endfunction

function construct_AbilityDefinitionAgilityBonusPlus1 takes integer this_44, integer newAbilityId returns nothing
	call construct_AbilityDefinition(this_44, newAbilityId, 1095328049)
endfunction

function new_AbilityDefinitionAgilityBonusPlus1 takes integer newAbilityId returns integer
	local integer this_44 = alloc_AbilityDefinitionAgilityBonusPlus1()
	call construct_AbilityDefinitionAgilityBonusPlus1(this_44, newAbilityId)
	return this_44
endfunction

function agiAbilitys takes string wurstStackTrace returns nothing
	local integer i = 97
	local integer temp = 97 + (Setup_maxBonSize - 1)
	local integer obj
	local integer objN
	loop
		exitwhen i > temp
		if OeSetup_compiletime then
			set obj = new_AbilityDefinitionAgilityBonusPlus1(Setup_agiRaw + i)
			call dispatch_AbilityDefinitionAgilityBonusPlus1_setAgilityBonus(obj, 1, int_pow(2, i - 97), "\n   OeSetup, line 71" + wurstStackTrace)
			call dispatch_AbilityDefinition_setItemAbility(obj, false, "\n   OeSetup, line 72" + wurstStackTrace)
			call dispatch_AbilityDefinition_setName(obj, "Bonus Agi +", "\n   OeSetup, line 73" + wurstStackTrace)
			call dispatch_AbilityDefinition_setEditorSuffix(obj, int_toString(int_pow(2, i - 97)), "\n   OeSetup, line 74" + wurstStackTrace)
		else
			call addAbilityToPreload(Setup_agiRaw + i, 1, "\n   OeSetup, line 76" + wurstStackTrace)
		endif
		set i = i + 1
	endloop
	if OeSetup_compiletime then
		set objN = new_AbilityDefinitionAgilityBonusPlus1(Setup_agiRaw + 45)
		call dispatch_AbilityDefinitionAgilityBonusPlus1_setHideButton(objN, 1, true, "\n   OeSetup, line 79" + wurstStackTrace)
		call dispatch_AbilityDefinitionAgilityBonusPlus1_setAgilityBonus(objN, 1,  - int_pow(2, Setup_maxBonSize), "\n   OeSetup, line 80" + wurstStackTrace)
		call dispatch_AbilityDefinition_setItemAbility(objN, false, "\n   OeSetup, line 81" + wurstStackTrace)
		call dispatch_AbilityDefinition_setName(objN, "Bonus Agi -", "\n   OeSetup, line 82" + wurstStackTrace)
		call dispatch_AbilityDefinition_setEditorSuffix(objN, int_toString(int_pow(2, Setup_maxBonSize)), "\n   OeSetup, line 83" + wurstStackTrace)
	endif
	call addAbilityToPreload(Setup_agiRaw + 45, 1, "\n   OeSetup, line 84" + wurstStackTrace)
endfunction

function AbilityDefinitionDefenseBonusPlus1_setDefenseBonus takes integer this_44, integer level, integer value returns nothing
	local integer tempIndex = this_44
	call ObjectDefinition_setLvlDataInt(AbilityDefinition_def[tempIndex], "Idef", level, 1, value)
endfunction

function dispatch_AbilityDefinitionDefenseBonusPlus1_setDefenseBonus takes integer this_44, integer level, integer value, string wurstStackTrace returns nothing
	if AbilityDefinition_typeId[this_44] == 0 then
		if this_44 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling AbilityDefinitionDefenseBonusPlus1.setDefenseBonus" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called AbilityDefinitionDefenseBonusPlus1.setDefenseBonus on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call AbilityDefinitionDefenseBonusPlus1_setDefenseBonus(this_44, level, value)
endfunction

function alloc_AbilityDefinitionDefenseBonusPlus1 takes nothing returns integer
	local integer this_44
	if AbilityDefinition_firstFree == 0 then
		set AbilityDefinition_maxIndex = AbilityDefinition_maxIndex + 1
		set this_44 = AbilityDefinition_maxIndex
	else
		set AbilityDefinition_firstFree = AbilityDefinition_firstFree - 1
		set this_44 = AbilityDefinition_nextFree[AbilityDefinition_firstFree]
	endif
	set AbilityDefinition_typeId[this_44] = 93
	return this_44
endfunction

function construct_AbilityDefinitionDefenseBonusPlus1 takes integer this_44, integer newAbilityId returns nothing
	call construct_AbilityDefinition(this_44, newAbilityId, 1095328817)
endfunction

function new_AbilityDefinitionDefenseBonusPlus1 takes integer newAbilityId returns integer
	local integer this_44 = alloc_AbilityDefinitionDefenseBonusPlus1()
	call construct_AbilityDefinitionDefenseBonusPlus1(this_44, newAbilityId)
	return this_44
endfunction

function armorAbilitys takes string wurstStackTrace returns nothing
	local integer i = 97
	local integer temp = 97 + (Setup_maxBonSize - 1)
	local integer obj
	local integer objN
	loop
		exitwhen i > temp
		if OeSetup_compiletime then
			set obj = new_AbilityDefinitionDefenseBonusPlus1(Setup_armorRaw + i)
			call dispatch_AbilityDefinitionDefenseBonusPlus1_setDefenseBonus(obj, 1, int_pow(2, i - 97), "\n   OeSetup, line 165" + wurstStackTrace)
			call dispatch_AbilityDefinition_setItemAbility(obj, false, "\n   OeSetup, line 166" + wurstStackTrace)
			call dispatch_AbilityDefinition_setName(obj, "Bonus Armor +", "\n   OeSetup, line 167" + wurstStackTrace)
			call dispatch_AbilityDefinition_setEditorSuffix(obj, int_toString(int_pow(2, i - 97)), "\n   OeSetup, line 168" + wurstStackTrace)
		else
			call addAbilityToPreload(Setup_armorRaw + i, 1, "\n   OeSetup, line 170" + wurstStackTrace)
		endif
		set i = i + 1
	endloop
	if OeSetup_compiletime then
		set objN = new_AbilityDefinitionDefenseBonusPlus1(Setup_armorRaw + 45)
		call dispatch_AbilityDefinitionDefenseBonusPlus1_setDefenseBonus(objN, 1,  - int_pow(2, Setup_maxBonSize), "\n   OeSetup, line 173" + wurstStackTrace)
		call dispatch_AbilityDefinition_setItemAbility(objN, false, "\n   OeSetup, line 174" + wurstStackTrace)
		call dispatch_AbilityDefinition_setName(objN, "Bonus Armor -", "\n   OeSetup, line 175" + wurstStackTrace)
		call dispatch_AbilityDefinition_setEditorSuffix(objN, int_toString(int_pow(2, Setup_maxBonSize)), "\n   OeSetup, line 176" + wurstStackTrace)
	else
		call addAbilityToPreload(Setup_armorRaw + 45, 1, "\n   OeSetup, line 178" + wurstStackTrace)
	endif
endfunction

function AbilityDefinitionAttackBonusAItf_setAttackBonus takes integer this_44, integer level, integer value returns nothing
	local integer tempIndex = this_44
	call ObjectDefinition_setLvlDataInt(AbilityDefinition_def[tempIndex], "Iatt", level, 1, value)
endfunction

function dispatch_AbilityDefinitionAttackBonusAItf_setAttackBonus takes integer this_44, integer level, integer value, string wurstStackTrace returns nothing
	if AbilityDefinition_typeId[this_44] == 0 then
		if this_44 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling AbilityDefinitionAttackBonusAItf.setAttackBonus" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called AbilityDefinitionAttackBonusAItf.setAttackBonus on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call AbilityDefinitionAttackBonusAItf_setAttackBonus(this_44, level, value)
endfunction

function alloc_AbilityDefinitionAttackBonusAItf takes nothing returns integer
	local integer this_44
	if AbilityDefinition_firstFree == 0 then
		set AbilityDefinition_maxIndex = AbilityDefinition_maxIndex + 1
		set this_44 = AbilityDefinition_maxIndex
	else
		set AbilityDefinition_firstFree = AbilityDefinition_firstFree - 1
		set this_44 = AbilityDefinition_nextFree[AbilityDefinition_firstFree]
	endif
	set AbilityDefinition_typeId[this_44] = 555
	return this_44
endfunction

function construct_AbilityDefinitionAttackBonusAItf takes integer this_44, integer newAbilityId returns nothing
	call construct_AbilityDefinition(this_44, newAbilityId, 1095332966)
endfunction

function new_AbilityDefinitionAttackBonusAItf takes integer newAbilityId returns integer
	local integer this_44 = alloc_AbilityDefinitionAttackBonusAItf()
	call construct_AbilityDefinitionAttackBonusAItf(this_44, newAbilityId)
	return this_44
endfunction

function attackAbilitys takes string wurstStackTrace returns nothing
	local integer i = 97
	local integer temp = 97 + (Setup_maxBonSize - 1)
	local integer obj
	local integer objN
	loop
		exitwhen i > temp
		if OeSetup_compiletime then
			set obj = new_AbilityDefinitionAttackBonusAItf(Setup_attackRaw + i)
			call dispatch_AbilityDefinitionAttackBonusAItf_setAttackBonus(obj, 1, int_pow(2, i - 97), "\n   OeSetup, line 127" + wurstStackTrace)
			call dispatch_AbilityDefinition_setItemAbility(obj, false, "\n   OeSetup, line 128" + wurstStackTrace)
			call dispatch_AbilityDefinition_setName(obj, "Bonus Attack +", "\n   OeSetup, line 129" + wurstStackTrace)
			call dispatch_AbilityDefinition_setEditorSuffix(obj, int_toString(int_pow(2, i - 97)), "\n   OeSetup, line 130" + wurstStackTrace)
		else
			call addAbilityToPreload(Setup_attackRaw + i, 1, "\n   OeSetup, line 132" + wurstStackTrace)
		endif
		set i = i + 1
	endloop
	if OeSetup_compiletime then
		set objN = new_AbilityDefinitionAttackBonusAItf(Setup_attackRaw + 45)
		call dispatch_AbilityDefinitionAttackBonusAItf_setAttackBonus(objN, 1,  - int_pow(2, Setup_maxBonSize), "\n   OeSetup, line 135" + wurstStackTrace)
		call dispatch_AbilityDefinition_setItemAbility(objN, false, "\n   OeSetup, line 136" + wurstStackTrace)
		call dispatch_AbilityDefinition_setName(objN, "Bonus Attack -", "\n   OeSetup, line 137" + wurstStackTrace)
		call dispatch_AbilityDefinition_setEditorSuffix(objN, int_toString(int_pow(2, Setup_maxBonSize)), "\n   OeSetup, line 138" + wurstStackTrace)
	else
		call addAbilityToPreload(Setup_attackRaw + 45, 1, "\n   OeSetup, line 140" + wurstStackTrace)
	endif
endfunction

function AbilityDefinitionAttackSpeedIncrease_setAttackSpeedIncrease takes integer this_44, integer level, real value returns nothing
	local integer tempIndex = this_44
	call ObjectDefinition_setLvlDataUnreal(AbilityDefinition_def[tempIndex], "Isx1", level, 1, value)
endfunction

function dispatch_AbilityDefinitionAttackSpeedIncrease_setAttackSpeedIncrease takes integer this_44, integer level, real value, string wurstStackTrace returns nothing
	if AbilityDefinition_typeId[this_44] == 0 then
		if this_44 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling AbilityDefinitionAttackSpeedIncrease.setAttackSpeedIncrease" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called AbilityDefinitionAttackSpeedIncrease.setAttackSpeedIncrease on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call AbilityDefinitionAttackSpeedIncrease_setAttackSpeedIncrease(this_44, level, value)
endfunction

function alloc_AbilityDefinitionAttackSpeedIncrease takes nothing returns integer
	local integer this_44
	if AbilityDefinition_firstFree == 0 then
		set AbilityDefinition_maxIndex = AbilityDefinition_maxIndex + 1
		set this_44 = AbilityDefinition_maxIndex
	else
		set AbilityDefinition_firstFree = AbilityDefinition_firstFree - 1
		set this_44 = AbilityDefinition_nextFree[AbilityDefinition_firstFree]
	endif
	set AbilityDefinition_typeId[this_44] = 541
	return this_44
endfunction

function construct_AbilityDefinitionAttackSpeedIncrease takes integer this_44, integer newAbilityId returns nothing
	call construct_AbilityDefinition(this_44, newAbilityId, 1095332728)
endfunction

function new_AbilityDefinitionAttackSpeedIncrease takes integer newAbilityId returns integer
	local integer this_44 = alloc_AbilityDefinitionAttackSpeedIncrease()
	call construct_AbilityDefinitionAttackSpeedIncrease(this_44, newAbilityId)
	return this_44
endfunction

function attackSpeedAbilitys takes string wurstStackTrace returns nothing
	local integer i = 97
	local integer temp = 97 + (Setup_maxBonSize - 1)
	local integer obj
	local integer objN
	loop
		exitwhen i > temp
		if OeSetup_compiletime then
			set obj = new_AbilityDefinitionAttackSpeedIncrease(Setup_attackSpeedRaw + i)
			call dispatch_AbilityDefinitionAttackSpeedIncrease_setAttackSpeedIncrease(obj, 1, int_pow(2, i - 97) * 1. / 100, "\n   OeSetup, line 146" + wurstStackTrace)
			call dispatch_AbilityDefinition_setItemAbility(obj, false, "\n   OeSetup, line 147" + wurstStackTrace)
			call dispatch_AbilityDefinition_setName(obj, "Bonus AttackSpeed +", "\n   OeSetup, line 148" + wurstStackTrace)
			call dispatch_AbilityDefinition_setEditorSuffix(obj, int_toString(int_pow(2, i - 97)), "\n   OeSetup, line 149" + wurstStackTrace)
		else
			call addAbilityToPreload(Setup_attackSpeedRaw + i, 1, "\n   OeSetup, line 151" + wurstStackTrace)
		endif
		set i = i + 1
	endloop
	if OeSetup_compiletime then
		set objN = new_AbilityDefinitionAttackSpeedIncrease(Setup_attackSpeedRaw + 45)
		call dispatch_AbilityDefinitionAttackSpeedIncrease_setAttackSpeedIncrease(objN, 1,  - (int_pow(2, Setup_maxBonSize) * 1. / 100), "\n   OeSetup, line 154" + wurstStackTrace)
		call dispatch_AbilityDefinition_setItemAbility(objN, false, "\n   OeSetup, line 155" + wurstStackTrace)
		call dispatch_AbilityDefinition_setName(objN, "Bonus AttackSpeed -", "\n   OeSetup, line 156" + wurstStackTrace)
		call dispatch_AbilityDefinition_setEditorSuffix(objN, int_toString(int_pow(2, Setup_maxBonSize)), "\n   OeSetup, line 157" + wurstStackTrace)
	else
		call addAbilityToPreload(Setup_attackSpeedRaw + 45, 1, "\n   OeSetup, line 159" + wurstStackTrace)
	endif
endfunction

function AbilityDefinitionIntelligenceBonusPlus1_setIntelligenceBonus takes integer this_44, integer level, integer value returns nothing
	local integer tempIndex = this_44
	call ObjectDefinition_setLvlDataInt(AbilityDefinition_def[tempIndex], "Iint", level, 2, value)
endfunction

function dispatch_AbilityDefinitionIntelligenceBonusPlus1_setIntelligenceBonus takes integer this_44, integer level, integer value, string wurstStackTrace returns nothing
	if AbilityDefinition_typeId[this_44] == 0 then
		if this_44 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling AbilityDefinitionIntelligenceBonusPlus1.setIntelligenceBonus" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called AbilityDefinitionIntelligenceBonusPlus1.setIntelligenceBonus on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call AbilityDefinitionIntelligenceBonusPlus1_setIntelligenceBonus(this_44, level, value)
endfunction

function alloc_AbilityDefinitionIntelligenceBonusPlus1 takes nothing returns integer
	local integer this_44
	if AbilityDefinition_firstFree == 0 then
		set AbilityDefinition_maxIndex = AbilityDefinition_maxIndex + 1
		set this_44 = AbilityDefinition_maxIndex
	else
		set AbilityDefinition_firstFree = AbilityDefinition_firstFree - 1
		set this_44 = AbilityDefinition_nextFree[AbilityDefinition_firstFree]
	endif
	set AbilityDefinition_typeId[this_44] = 180
	return this_44
endfunction

function construct_AbilityDefinitionIntelligenceBonusPlus1 takes integer this_44, integer newAbilityId returns nothing
	call construct_AbilityDefinition(this_44, newAbilityId, 1095330097)
endfunction

function new_AbilityDefinitionIntelligenceBonusPlus1 takes integer newAbilityId returns integer
	local integer this_44 = alloc_AbilityDefinitionIntelligenceBonusPlus1()
	call construct_AbilityDefinitionIntelligenceBonusPlus1(this_44, newAbilityId)
	return this_44
endfunction

function intAbilitys takes string wurstStackTrace returns nothing
	local integer i = 97
	local integer temp = 97 + (Setup_maxBonSize - 1)
	local integer obj
	local integer objN
	loop
		exitwhen i > temp
		if OeSetup_compiletime then
			set obj = new_AbilityDefinitionIntelligenceBonusPlus1(Setup_intRaw + i)
			call dispatch_AbilityDefinitionIntelligenceBonusPlus1_setIntelligenceBonus(obj, 1, int_pow(2, i - 97), "\n   OeSetup, line 109" + wurstStackTrace)
			call dispatch_AbilityDefinition_setItemAbility(obj, false, "\n   OeSetup, line 110" + wurstStackTrace)
			call dispatch_AbilityDefinition_setName(obj, "Bonus Int +", "\n   OeSetup, line 111" + wurstStackTrace)
			call dispatch_AbilityDefinition_setEditorSuffix(obj, int_toString(int_pow(2, i - 97)), "\n   OeSetup, line 112" + wurstStackTrace)
		else
			call addAbilityToPreload(Setup_intRaw + i, 1, "\n   OeSetup, line 114" + wurstStackTrace)
		endif
		set i = i + 1
	endloop
	if OeSetup_compiletime then
		set objN = new_AbilityDefinitionIntelligenceBonusPlus1(Setup_intRaw + 45)
		call dispatch_AbilityDefinitionIntelligenceBonusPlus1_setIntelligenceBonus(objN, 1,  - int_pow(2, Setup_maxBonSize), "\n   OeSetup, line 117" + wurstStackTrace)
		call dispatch_AbilityDefinition_setItemAbility(objN, false, "\n   OeSetup, line 118" + wurstStackTrace)
		call dispatch_AbilityDefinition_setName(objN, "Bonus Int -", "\n   OeSetup, line 119" + wurstStackTrace)
		call dispatch_AbilityDefinition_setEditorSuffix(objN, int_toString(int_pow(2, Setup_maxBonSize)), "\n   OeSetup, line 120" + wurstStackTrace)
	endif
	call addAbilityToPreload(Setup_intRaw + 45, 1, "\n   OeSetup, line 121" + wurstStackTrace)
endfunction

function AbilityDefinitionMaxLifeBonusLesser_setMaxLifeGained takes integer this_44, integer level, integer value returns nothing
	local integer tempIndex = this_44
	call ObjectDefinition_setLvlDataInt(AbilityDefinition_def[tempIndex], "Ilif", level, 1, value)
endfunction

function dispatch_AbilityDefinitionMaxLifeBonusLesser_setMaxLifeGained takes integer this_44, integer level, integer value, string wurstStackTrace returns nothing
	if AbilityDefinition_typeId[this_44] == 0 then
		if this_44 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling AbilityDefinitionMaxLifeBonusLesser.setMaxLifeGained" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called AbilityDefinitionMaxLifeBonusLesser.setMaxLifeGained on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call AbilityDefinitionMaxLifeBonusLesser_setMaxLifeGained(this_44, level, value)
endfunction

function alloc_AbilityDefinitionMaxLifeBonusLesser takes nothing returns integer
	local integer this_44
	if AbilityDefinition_firstFree == 0 then
		set AbilityDefinition_maxIndex = AbilityDefinition_maxIndex + 1
		set this_44 = AbilityDefinition_maxIndex
	else
		set AbilityDefinition_firstFree = AbilityDefinition_firstFree - 1
		set this_44 = AbilityDefinition_nextFree[AbilityDefinition_firstFree]
	endif
	set AbilityDefinition_typeId[this_44] = 243
	return this_44
endfunction

function construct_AbilityDefinitionMaxLifeBonusLesser takes integer this_44, integer newAbilityId returns nothing
	call construct_AbilityDefinition(this_44, newAbilityId, 1095330865)
endfunction

function new_AbilityDefinitionMaxLifeBonusLesser takes integer newAbilityId returns integer
	local integer this_44 = alloc_AbilityDefinitionMaxLifeBonusLesser()
	call construct_AbilityDefinitionMaxLifeBonusLesser(this_44, newAbilityId)
	return this_44
endfunction

function lifeAbilitys takes string wurstStackTrace returns nothing
	local integer i = 97
	local integer temp = 97 + (Setup_maxBonSize - 1)
	local integer obj
	local integer objN
	loop
		exitwhen i > temp
		if OeSetup_compiletime then
			set obj = new_AbilityDefinitionMaxLifeBonusLesser(Setup_lifeRaw + i)
			call dispatch_AbilityDefinitionMaxLifeBonusLesser_setMaxLifeGained(obj, 1, int_pow(2, i - 97), "\n   OeSetup, line 33" + wurstStackTrace)
			call dispatch_AbilityDefinition_setItemAbility(obj, false, "\n   OeSetup, line 34" + wurstStackTrace)
			call dispatch_AbilityDefinition_setName(obj, "Bonus Life +", "\n   OeSetup, line 35" + wurstStackTrace)
			call dispatch_AbilityDefinition_setEditorSuffix(obj, int_toString(int_pow(2, i - 97)), "\n   OeSetup, line 36" + wurstStackTrace)
		else
			call addAbilityToPreload(Setup_lifeRaw + i, 1, "\n   OeSetup, line 38" + wurstStackTrace)
		endif
		set i = i + 1
	endloop
	if OeSetup_compiletime then
		set objN = new_AbilityDefinitionMaxLifeBonusLesser(Setup_lifeRaw + 45)
		call dispatch_AbilityDefinitionMaxLifeBonusLesser_setMaxLifeGained(objN, 1,  - int_pow(2, Setup_maxBonSize), "\n   OeSetup, line 41" + wurstStackTrace)
		call dispatch_AbilityDefinition_setItemAbility(objN, false, "\n   OeSetup, line 42" + wurstStackTrace)
		call dispatch_AbilityDefinition_setName(objN, "Bonus Life -", "\n   OeSetup, line 43" + wurstStackTrace)
		call dispatch_AbilityDefinition_setEditorSuffix(objN, int_toString(int_pow(2, Setup_maxBonSize)), "\n   OeSetup, line 44" + wurstStackTrace)
	else
		call addAbilityToPreload(Setup_lifeRaw + 45, 1, "\n   OeSetup, line 46" + wurstStackTrace)
	endif
endfunction

function AbilityDefinitionNeutralRegenhealthonly_setAmountofHitPointsRegenerated takes integer this_44, integer level, real value returns nothing
	local integer tempIndex = this_44
	call ObjectDefinition_setLvlDataUnreal(AbilityDefinition_def[tempIndex], "Oar1", level, 1, value)
endfunction

function dispatch_AbilityDefinitionNeutralRegenhealthonly_setAmountofHitPointsRegenerated takes integer this_44, integer level, real value, string wurstStackTrace returns nothing
	if AbilityDefinition_typeId[this_44] == 0 then
		if this_44 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling AbilityDefinitionNeutralRegenhealthonly.setAmountofHitPointsRegenerated" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called AbilityDefinitionNeutralRegenhealthonly.setAmountofHitPointsRegenerated on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call AbilityDefinitionNeutralRegenhealthonly_setAmountofHitPointsRegenerated(this_44, level, value)
endfunction

function AbilityDefinitionNeutralRegenhealthonly_setPercentage takes integer this_44, integer level, boolean value returns nothing
	local integer tempIndex = this_44
	call ObjectDefinition_setLvlDataBoolean(AbilityDefinition_def[tempIndex], "Oar2", level, 2, value)
endfunction

function dispatch_AbilityDefinitionNeutralRegenhealthonly_setPercentage takes integer this_44, integer level, boolean value, string wurstStackTrace returns nothing
	if AbilityDefinition_typeId[this_44] == 0 then
		if this_44 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling AbilityDefinitionNeutralRegenhealthonly.setPercentage" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called AbilityDefinitionNeutralRegenhealthonly.setPercentage on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call AbilityDefinitionNeutralRegenhealthonly_setPercentage(this_44, level, value)
endfunction

function AbilityDefinition_setAreaofEffect takes integer this_44, integer level, real value returns nothing
	local integer tempIndex = this_44
	call ObjectDefinition_setLvlDataUnreal(AbilityDefinition_def[tempIndex], "aare", level, 0, value)
endfunction

function dispatch_AbilityDefinition_setAreaofEffect takes integer this_44, integer level, real value, string wurstStackTrace returns nothing
	if AbilityDefinition_typeId[this_44] == 0 then
		if this_44 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling AbilityDefinition.setAreaofEffect" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called AbilityDefinition.setAreaofEffect on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	if AbilityDefinition_typeId[this_44] <= 646 then
		call AbilityDefinition_setAreaofEffect(this_44, level, value)
	else
		call AbilityDefinition_setAreaofEffect(this_44, level, value)
	endif
endfunction

function AbilityDefinition_setRace takes integer this_44, string value returns nothing
	local integer tempIndex = this_44
	call ObjectDefinition_setLvlDataString(AbilityDefinition_def[tempIndex], "arac", 0, 0, value)
endfunction

function dispatch_AbilityDefinition_setRace takes integer this_44, string value, string wurstStackTrace returns nothing
	if AbilityDefinition_typeId[this_44] == 0 then
		if this_44 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling AbilityDefinition.setRace" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called AbilityDefinition.setRace on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	if AbilityDefinition_typeId[this_44] <= 646 then
		call AbilityDefinition_setRace(this_44, value)
	else
		call AbilityDefinition_setRace(this_44, value)
	endif
endfunction

function alloc_AbilityDefinitionNeutralRegenhealthonly takes nothing returns integer
	local integer this_44
	if AbilityDefinition_firstFree == 0 then
		set AbilityDefinition_maxIndex = AbilityDefinition_maxIndex + 1
		set this_44 = AbilityDefinition_maxIndex
	else
		set AbilityDefinition_firstFree = AbilityDefinition_firstFree - 1
		set this_44 = AbilityDefinition_nextFree[AbilityDefinition_firstFree]
	endif
	set AbilityDefinition_typeId[this_44] = 165
	return this_44
endfunction

function construct_AbilityDefinitionNeutralRegenhealthonly takes integer this_44, integer newAbilityId returns nothing
	call construct_AbilityDefinition(this_44, newAbilityId, 1094938226)
endfunction

function new_AbilityDefinitionNeutralRegenhealthonly takes integer newAbilityId returns integer
	local integer this_44 = alloc_AbilityDefinitionNeutralRegenhealthonly()
	call construct_AbilityDefinitionNeutralRegenhealthonly(this_44, newAbilityId)
	return this_44
endfunction

function lifeRegAbilitys takes string wurstStackTrace returns nothing
	local integer i = 97
	local integer temp = 97 + (Setup_maxBonSize - 1)
	local integer obj
	local integer objN
	loop
		exitwhen i > temp
		if OeSetup_compiletime then
			set obj = new_AbilityDefinitionNeutralRegenhealthonly(Setup_lifeRegRaw + i)
			call dispatch_AbilityDefinition_setRace(obj, "other", "\n   OeSetup, line 184" + wurstStackTrace)
			call dispatch_AbilityDefinitionNeutralRegenhealthonly_setPercentage(obj, 1, false, "\n   OeSetup, line 185" + wurstStackTrace)
			call dispatch_AbilityDefinition_setAreaofEffect(obj, 1, 1., "\n   OeSetup, line 186" + wurstStackTrace)
			call dispatch_AbilityDefinition_setTargetsAllowed(obj, 1, "self", "\n   OeSetup, line 187" + wurstStackTrace)
			call dispatch_AbilityDefinitionNeutralRegenhealthonly_setAmountofHitPointsRegenerated(obj, 1, int_pow(2, i - 97) * 0.05, "\n   OeSetup, line 188" + wurstStackTrace)
			call dispatch_AbilityDefinition_setItemAbility(obj, false, "\n   OeSetup, line 189" + wurstStackTrace)
			call dispatch_AbilityDefinition_setName(obj, "Bonus LifeReg +", "\n   OeSetup, line 190" + wurstStackTrace)
			call dispatch_AbilityDefinition_setEditorSuffix(obj, int_toString(int_pow(2, i - 97)), "\n   OeSetup, line 191" + wurstStackTrace)
		else
			call addAbilityToPreload(Setup_lifeRegRaw + i, 1, "\n   OeSetup, line 193" + wurstStackTrace)
		endif
		set i = i + 1
	endloop
	if OeSetup_compiletime then
		set objN = new_AbilityDefinitionNeutralRegenhealthonly(Setup_lifeRegRaw + 45)
		call dispatch_AbilityDefinition_setRace(objN, "other", "\n   OeSetup, line 196" + wurstStackTrace)
		call dispatch_AbilityDefinitionNeutralRegenhealthonly_setPercentage(objN, 1, false, "\n   OeSetup, line 197" + wurstStackTrace)
		call dispatch_AbilityDefinition_setAreaofEffect(objN, 1, 1., "\n   OeSetup, line 198" + wurstStackTrace)
		call dispatch_AbilityDefinition_setTargetsAllowed(objN, 1, "self", "\n   OeSetup, line 199" + wurstStackTrace)
		call dispatch_AbilityDefinitionNeutralRegenhealthonly_setAmountofHitPointsRegenerated(objN, 1,  - (int_pow(2, Setup_maxBonSize) * 0.05), "\n   OeSetup, line 200" + wurstStackTrace)
		call dispatch_AbilityDefinition_setItemAbility(objN, false, "\n   OeSetup, line 201" + wurstStackTrace)
		call dispatch_AbilityDefinition_setName(objN, "Bonus LifeReg -", "\n   OeSetup, line 202" + wurstStackTrace)
		call dispatch_AbilityDefinition_setEditorSuffix(objN, int_toString(int_pow(2, Setup_maxBonSize)), "\n   OeSetup, line 203" + wurstStackTrace)
	else
		call addAbilityToPreload(Setup_lifeRegRaw + 45, 1, "\n   OeSetup, line 205" + wurstStackTrace)
	endif
endfunction

function AbilityDefinitionMaxManaBonusLeast_setMaxManaGained takes integer this_44, integer level, integer value returns nothing
	local integer tempIndex = this_44
	call ObjectDefinition_setLvlDataInt(AbilityDefinition_def[tempIndex], "Iman", level, 1, value)
endfunction

function dispatch_AbilityDefinitionMaxManaBonusLeast_setMaxManaGained takes integer this_44, integer level, integer value, string wurstStackTrace returns nothing
	if AbilityDefinition_typeId[this_44] == 0 then
		if this_44 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling AbilityDefinitionMaxManaBonusLeast.setMaxManaGained" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called AbilityDefinitionMaxManaBonusLeast.setMaxManaGained on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call AbilityDefinitionMaxManaBonusLeast_setMaxManaGained(this_44, level, value)
endfunction

function alloc_AbilityDefinitionMaxManaBonusLeast takes nothing returns integer
	local integer this_44
	if AbilityDefinition_firstFree == 0 then
		set AbilityDefinition_maxIndex = AbilityDefinition_maxIndex + 1
		set this_44 = AbilityDefinition_maxIndex
	else
		set AbilityDefinition_firstFree = AbilityDefinition_firstFree - 1
		set this_44 = AbilityDefinition_nextFree[AbilityDefinition_firstFree]
	endif
	set AbilityDefinition_typeId[this_44] = 279
	return this_44
endfunction

function construct_AbilityDefinitionMaxManaBonusLeast takes integer this_44, integer newAbilityId returns nothing
	call construct_AbilityDefinition(this_44, newAbilityId, 1095331170)
endfunction

function new_AbilityDefinitionMaxManaBonusLeast takes integer newAbilityId returns integer
	local integer this_44 = alloc_AbilityDefinitionMaxManaBonusLeast()
	call construct_AbilityDefinitionMaxManaBonusLeast(this_44, newAbilityId)
	return this_44
endfunction

function manaAbilitys takes string wurstStackTrace returns nothing
	local integer i = 97
	local integer temp = 97 + (Setup_maxBonSize - 1)
	local integer obj
	local integer objN
	loop
		exitwhen i > temp
		if OeSetup_compiletime then
			set obj = new_AbilityDefinitionMaxManaBonusLeast(Setup_manaRaw + i)
			call dispatch_AbilityDefinitionMaxManaBonusLeast_setMaxManaGained(obj, 1, int_pow(2, i - 97), "\n   OeSetup, line 52" + wurstStackTrace)
			call dispatch_AbilityDefinition_setItemAbility(obj, false, "\n   OeSetup, line 53" + wurstStackTrace)
			call dispatch_AbilityDefinition_setName(obj, "Bonus Mana +", "\n   OeSetup, line 54" + wurstStackTrace)
			call dispatch_AbilityDefinition_setEditorSuffix(obj, int_toString(int_pow(2, i - 97)), "\n   OeSetup, line 55" + wurstStackTrace)
		else
			call addAbilityToPreload(Setup_manaRaw + i, 1, "\n   OeSetup, line 57" + wurstStackTrace)
		endif
		set i = i + 1
	endloop
	if OeSetup_compiletime then
		set objN = new_AbilityDefinitionMaxManaBonusLeast(Setup_manaRaw + 45)
		call dispatch_AbilityDefinitionMaxManaBonusLeast_setMaxManaGained(objN, 1,  - int_pow(2, Setup_maxBonSize), "\n   OeSetup, line 60" + wurstStackTrace)
		call dispatch_AbilityDefinition_setItemAbility(objN, false, "\n   OeSetup, line 61" + wurstStackTrace)
		call dispatch_AbilityDefinition_setName(objN, "Bonus Mana -", "\n   OeSetup, line 62" + wurstStackTrace)
		call dispatch_AbilityDefinition_setEditorSuffix(objN, int_toString(int_pow(2, Setup_maxBonSize)), "\n   OeSetup, line 63" + wurstStackTrace)
	else
		call addAbilityToPreload(Setup_manaRaw + 45, 1, "\n   OeSetup, line 65" + wurstStackTrace)
	endif
endfunction

function AbilityDefinitionNeutralRegenmanaonly_setAmountRegenerated takes integer this_44, integer level, real value returns nothing
	local integer tempIndex = this_44
	call ObjectDefinition_setLvlDataUnreal(AbilityDefinition_def[tempIndex], "Arm1", level, 1, value)
endfunction

function dispatch_AbilityDefinitionNeutralRegenmanaonly_setAmountRegenerated takes integer this_44, integer level, real value, string wurstStackTrace returns nothing
	if AbilityDefinition_typeId[this_44] == 0 then
		if this_44 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling AbilityDefinitionNeutralRegenmanaonly.setAmountRegenerated" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called AbilityDefinitionNeutralRegenmanaonly.setAmountRegenerated on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call AbilityDefinitionNeutralRegenmanaonly_setAmountRegenerated(this_44, level, value)
endfunction

function AbilityDefinitionNeutralRegenmanaonly_setPercentage takes integer this_44, integer level, boolean value returns nothing
	local integer tempIndex = this_44
	call ObjectDefinition_setLvlDataBoolean(AbilityDefinition_def[tempIndex], "Arm2", level, 2, value)
endfunction

function dispatch_AbilityDefinitionNeutralRegenmanaonly_setPercentage takes integer this_44, integer level, boolean value, string wurstStackTrace returns nothing
	if AbilityDefinition_typeId[this_44] == 0 then
		if this_44 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling AbilityDefinitionNeutralRegenmanaonly.setPercentage" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called AbilityDefinitionNeutralRegenmanaonly.setPercentage on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call AbilityDefinitionNeutralRegenmanaonly_setPercentage(this_44, level, value)
endfunction

function alloc_AbilityDefinitionNeutralRegenmanaonly takes nothing returns integer
	local integer this_44
	if AbilityDefinition_firstFree == 0 then
		set AbilityDefinition_maxIndex = AbilityDefinition_maxIndex + 1
		set this_44 = AbilityDefinition_maxIndex
	else
		set AbilityDefinition_firstFree = AbilityDefinition_firstFree - 1
		set this_44 = AbilityDefinition_nextFree[AbilityDefinition_firstFree]
	endif
	set AbilityDefinition_typeId[this_44] = 77
	return this_44
endfunction

function construct_AbilityDefinitionNeutralRegenmanaonly takes integer this_44, integer newAbilityId returns nothing
	call construct_AbilityDefinition(this_44, newAbilityId, 1095660133)
endfunction

function new_AbilityDefinitionNeutralRegenmanaonly takes integer newAbilityId returns integer
	local integer this_44 = alloc_AbilityDefinitionNeutralRegenmanaonly()
	call construct_AbilityDefinitionNeutralRegenmanaonly(this_44, newAbilityId)
	return this_44
endfunction

function manaRegAbilitys takes string wurstStackTrace returns nothing
	local integer i = 97
	local integer temp = 97 + (Setup_maxBonSize - 1)
	local integer obj
	local integer objN
	loop
		exitwhen i > temp
		if OeSetup_compiletime then
			set obj = new_AbilityDefinitionNeutralRegenmanaonly(Setup_manaRegRaw + i)
			call dispatch_AbilityDefinition_setRace(obj, "other", "\n   OeSetup, line 211" + wurstStackTrace)
			call dispatch_AbilityDefinitionNeutralRegenmanaonly_setPercentage(obj, 1, false, "\n   OeSetup, line 212" + wurstStackTrace)
			call dispatch_AbilityDefinition_setAreaofEffect(obj, 1, 1., "\n   OeSetup, line 213" + wurstStackTrace)
			call dispatch_AbilityDefinition_setTargetsAllowed(obj, 1, "self", "\n   OeSetup, line 214" + wurstStackTrace)
			call dispatch_AbilityDefinitionNeutralRegenmanaonly_setAmountRegenerated(obj, 1, int_pow(2, i - 97) * 0.05, "\n   OeSetup, line 215" + wurstStackTrace)
			call dispatch_AbilityDefinition_setItemAbility(obj, false, "\n   OeSetup, line 216" + wurstStackTrace)
			call dispatch_AbilityDefinition_setName(obj, "Bonus ManaReg +", "\n   OeSetup, line 217" + wurstStackTrace)
			call dispatch_AbilityDefinition_setEditorSuffix(obj, int_toString(int_pow(2, i - 97)), "\n   OeSetup, line 218" + wurstStackTrace)
		else
			call addAbilityToPreload(Setup_manaRegRaw + i, 1, "\n   OeSetup, line 220" + wurstStackTrace)
		endif
		set i = i + 1
	endloop
	if OeSetup_compiletime then
		set objN = new_AbilityDefinitionNeutralRegenmanaonly(Setup_manaRegRaw + 45)
		call dispatch_AbilityDefinition_setRace(objN, "other", "\n   OeSetup, line 223" + wurstStackTrace)
		call dispatch_AbilityDefinitionNeutralRegenmanaonly_setPercentage(objN, 1, false, "\n   OeSetup, line 224" + wurstStackTrace)
		call dispatch_AbilityDefinition_setAreaofEffect(objN, 1, 1., "\n   OeSetup, line 225" + wurstStackTrace)
		call dispatch_AbilityDefinition_setTargetsAllowed(objN, 1, "self", "\n   OeSetup, line 226" + wurstStackTrace)
		call dispatch_AbilityDefinitionNeutralRegenmanaonly_setAmountRegenerated(objN, 1,  - (int_pow(2, Setup_maxBonSize) * 0.05), "\n   OeSetup, line 227" + wurstStackTrace)
		call dispatch_AbilityDefinition_setItemAbility(objN, false, "\n   OeSetup, line 228" + wurstStackTrace)
		call dispatch_AbilityDefinition_setName(objN, "Bonus manaReg -", "\n   OeSetup, line 229" + wurstStackTrace)
		call dispatch_AbilityDefinition_setEditorSuffix(objN, int_toString(int_pow(2, Setup_maxBonSize)), "\n   OeSetup, line 230" + wurstStackTrace)
	else
		call addAbilityToPreload(Setup_manaRegRaw + 45, 1, "\n   OeSetup, line 232" + wurstStackTrace)
	endif
endfunction

function AbilityDefinitionStrengthBonusPlus1_setStrengthBonus takes integer this_44, integer level, integer value returns nothing
	local integer tempIndex = this_44
	call ObjectDefinition_setLvlDataInt(AbilityDefinition_def[tempIndex], "Istr", level, 3, value)
endfunction

function dispatch_AbilityDefinitionStrengthBonusPlus1_setStrengthBonus takes integer this_44, integer level, integer value, string wurstStackTrace returns nothing
	if AbilityDefinition_typeId[this_44] == 0 then
		if this_44 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling AbilityDefinitionStrengthBonusPlus1.setStrengthBonus" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called AbilityDefinitionStrengthBonusPlus1.setStrengthBonus on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call AbilityDefinitionStrengthBonusPlus1_setStrengthBonus(this_44, level, value)
endfunction

function alloc_AbilityDefinitionStrengthBonusPlus1 takes nothing returns integer
	local integer this_44
	if AbilityDefinition_firstFree == 0 then
		set AbilityDefinition_maxIndex = AbilityDefinition_maxIndex + 1
		set this_44 = AbilityDefinition_maxIndex
	else
		set AbilityDefinition_firstFree = AbilityDefinition_firstFree - 1
		set this_44 = AbilityDefinition_nextFree[AbilityDefinition_firstFree]
	endif
	set AbilityDefinition_typeId[this_44] = 412
	return this_44
endfunction

function construct_AbilityDefinitionStrengthBonusPlus1 takes integer this_44, integer newAbilityId returns nothing
	call construct_AbilityDefinition(this_44, newAbilityId, 1095332657)
endfunction

function new_AbilityDefinitionStrengthBonusPlus1 takes integer newAbilityId returns integer
	local integer this_44 = alloc_AbilityDefinitionStrengthBonusPlus1()
	call construct_AbilityDefinitionStrengthBonusPlus1(this_44, newAbilityId)
	return this_44
endfunction

function strAbilitys takes string wurstStackTrace returns nothing
	local integer i = 97
	local integer temp = 97 + (Setup_maxBonSize - 1)
	local integer obj
	local integer objN
	loop
		exitwhen i > temp
		if OeSetup_compiletime then
			set obj = new_AbilityDefinitionStrengthBonusPlus1(Setup_strRaw + i)
			call dispatch_AbilityDefinitionStrengthBonusPlus1_setStrengthBonus(obj, 1, int_pow(2, i - 97), "\n   OeSetup, line 90" + wurstStackTrace)
			call dispatch_AbilityDefinition_setItemAbility(obj, false, "\n   OeSetup, line 91" + wurstStackTrace)
			call dispatch_AbilityDefinition_setName(obj, "Bonus Str +", "\n   OeSetup, line 92" + wurstStackTrace)
			call dispatch_AbilityDefinition_setEditorSuffix(obj, int_toString(int_pow(2, i - 97)), "\n   OeSetup, line 93" + wurstStackTrace)
		else
			call addAbilityToPreload(Setup_strRaw + i, 1, "\n   OeSetup, line 95" + wurstStackTrace)
		endif
		set i = i + 1
	endloop
	if OeSetup_compiletime then
		set objN = new_AbilityDefinitionStrengthBonusPlus1(Setup_strRaw + 45)
		call dispatch_AbilityDefinitionStrengthBonusPlus1_setStrengthBonus(objN, 1,  - int_pow(2, Setup_maxBonSize), "\n   OeSetup, line 98" + wurstStackTrace)
		call dispatch_AbilityDefinition_setItemAbility(objN, false, "\n   OeSetup, line 99" + wurstStackTrace)
		call dispatch_AbilityDefinition_setName(objN, "Bonus Str -", "\n   OeSetup, line 100" + wurstStackTrace)
		call dispatch_AbilityDefinition_setEditorSuffix(objN, int_toString(int_pow(2, Setup_maxBonSize)), "\n   OeSetup, line 101" + wurstStackTrace)
	else
		call addAbilityToPreload(Setup_strRaw + 45, 1, "\n   OeSetup, line 103" + wurstStackTrace)
	endif
endfunction

function createObjects takes string wurstStackTrace returns nothing
	call lifeAbilitys("\n   OeSetup, line 18" + wurstStackTrace)
	call manaAbilitys("\n   OeSetup, line 19" + wurstStackTrace)
	call agiAbilitys("\n   OeSetup, line 20" + wurstStackTrace)
	call strAbilitys("\n   OeSetup, line 21" + wurstStackTrace)
	call intAbilitys("\n   OeSetup, line 22" + wurstStackTrace)
	call attackAbilitys("\n   OeSetup, line 23" + wurstStackTrace)
	call attackSpeedAbilitys("\n   OeSetup, line 24" + wurstStackTrace)
	call armorAbilitys("\n   OeSetup, line 25" + wurstStackTrace)
	call lifeRegAbilitys("\n   OeSetup, line 26" + wurstStackTrace)
	call manaRegAbilitys("\n   OeSetup, line 27" + wurstStackTrace)
endfunction

function init_OeSetup takes string wurstStackTrace returns nothing
	set OeSetup_compiletime = true
	set OeSetup_compiletime = false
	call createObjects("\n   OeSetup, line 239" + wurstStackTrace)
endfunction

function Order_classname takes nothing returns string
	return "Order"
endfunction

function init_OrderHandling takes nothing returns nothing
	set OrderHandling_smartId = 851971
	set OrderHandling_stopId = 852529
	set OrderHandling_attackId = 852662
	set OrderHandling_scoreboardId = 852185
	set OrderHandling_exitDetectId = 852131
	set OrderHandling_stopSpell = 1937010544
	set OrderHandling_attackSpell = 1635021931
	set ShowInstances_classId_2 = registerNewInstanceEntry(Order_classname())
	set MoveOrder_moveOrderId = 851986
	set AttackOrder_atkOrderId = 852541
endfunction

function init_Pane takes nothing returns nothing
	local integer temp_Pane_tileDimensions_x
	local integer temp_Pane_tileDimensions_y
	local real temp_Pane_sizeFix_x
	local real temp_Pane_sizeFix_y
	local real temp_Pane_posFixBot_x
	local real temp_Pane_posFixBot_y
	local real temp_Pane_posFixTop_x
	local real temp_Pane_posFixTop_y
	local real temp_Pane_posFixRight_x
	local real temp_Pane_posFixRight_y
	local real temp_Pane_posFixLeft_x
	local real temp_Pane_posFixLeft_y
	set Pane_tileSize = 2
	set temp_Pane_tileDimensions_x = Pane_tileSize
	set temp_Pane_tileDimensions_y = Pane_tileSize
	set Pane_tileDimensions_x = temp_Pane_tileDimensions_x
	set Pane_tileDimensions_y = temp_Pane_tileDimensions_y
	set Pane_horizontalSide = "Seite1.blp"
	set Pane_verticalSide = "Seite2.blp"
	set Pane_leftBotCorner = "Steinecke1.blp"
	set Pane_rightBotCorner = "Steinecke4.blp"
	set Pane_rightTopCorner = "Steinecke3.blp"
	set Pane_leftTopCorner = "Steinecke2.blp"
	set temp_Pane_sizeFix_x = 2.
	set temp_Pane_sizeFix_y = 2.
	set Pane_sizeFix_x = temp_Pane_sizeFix_x
	set Pane_sizeFix_y = temp_Pane_sizeFix_y
	set temp_Pane_posFixBot_x =  - (0.5 / (4 * 1. / Pane_tileSize))
	set temp_Pane_posFixBot_y =  - (26. / (4 * 1. / Pane_tileSize))
	set Pane_posFixBot_x = temp_Pane_posFixBot_x
	set Pane_posFixBot_y = temp_Pane_posFixBot_y
	set temp_Pane_posFixTop_x =  - (0.5 / (4 * 1. / Pane_tileSize))
	set temp_Pane_posFixTop_y = 40. / (4 * 1. / Pane_tileSize)
	set Pane_posFixTop_x = temp_Pane_posFixTop_x
	set Pane_posFixTop_y = temp_Pane_posFixTop_y
	set temp_Pane_posFixRight_x = 32. / (4 * 1. / Pane_tileSize)
	set temp_Pane_posFixRight_y = 0. / (4 * 1. / Pane_tileSize)
	set Pane_posFixRight_x = temp_Pane_posFixRight_x
	set Pane_posFixRight_y = temp_Pane_posFixRight_y
	set temp_Pane_posFixLeft_x =  - (32. / (4 * 1. / Pane_tileSize))
	set temp_Pane_posFixLeft_y = 0.
	set Pane_posFixLeft_x = temp_Pane_posFixLeft_x
	set Pane_posFixLeft_y = temp_Pane_posFixLeft_y
endfunction

function init_Player takes nothing returns nothing
	local integer i = 0
	loop
		exitwhen i > 13
		call Player(i)
		set i = i + 1
	endloop
endfunction

function init_PlayerClass takes nothing returns nothing
	set PlayerClass_playerData = new_HashMap()
	call SetTerrainFogEx(0, 40000., 40000., 0., 0., 0., 0.)
	call SetCameraField(CAMERA_FIELD_FARZ, 100000., 0.)
	call FogMaskEnable(false)
	call FogEnable(false)
endfunction

function init_PreloadHandler takes string wurstStackTrace returns nothing
	set PreloadHandler_autoFinish = false
	set PreloadHandler_dum = CreateUnit(Player(15), Basics_DUMMY_UNIT_ID, 0., 0., 0.)
	if PreloadHandler_dum == null then
		call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "PreloadHandler : DUMMY_UNITID (" + idInteger2IdString(Basics_DUMMY_UNIT_ID) + ") not added correctly to the map." + wurstStackTrace)
		call I2S(1 / 0)
	endif
	if PreloadHandler_autoFinish then
		call TimerStart(CreateTimer(), 0.0, false, ref_function_finishPreload)
	endif
endfunction

function alloc_Closure_19 takes nothing returns integer
	local integer this_44
	if PreloadAction_firstFree == 0 then
		set PreloadAction_maxIndex = PreloadAction_maxIndex + 1
		set this_44 = PreloadAction_maxIndex
	else
		set PreloadAction_firstFree = PreloadAction_firstFree - 1
		set this_44 = PreloadAction_nextFree[PreloadAction_firstFree]
	endif
	set PreloadAction_typeId[this_44] = 662
	return this_44
endfunction

function alloc_Closure_20 takes nothing returns integer
	local integer this_44
	if PreloadAction_firstFree == 0 then
		set PreloadAction_maxIndex = PreloadAction_maxIndex + 1
		set this_44 = PreloadAction_maxIndex
	else
		set PreloadAction_firstFree = PreloadAction_firstFree - 1
		set this_44 = PreloadAction_nextFree[PreloadAction_firstFree]
	endif
	set PreloadAction_typeId[this_44] = 661
	return this_44
endfunction

function alloc_Closure_21 takes nothing returns integer
	local integer this_44
	if PreloadAction_firstFree == 0 then
		set PreloadAction_maxIndex = PreloadAction_maxIndex + 1
		set this_44 = PreloadAction_maxIndex
	else
		set PreloadAction_firstFree = PreloadAction_firstFree - 1
		set this_44 = PreloadAction_nextFree[PreloadAction_firstFree]
	endif
	set PreloadAction_typeId[this_44] = 663
	return this_44
endfunction

function alloc_Closure_22 takes nothing returns integer
	local integer this_44
	if PreloadAction_firstFree == 0 then
		set PreloadAction_maxIndex = PreloadAction_maxIndex + 1
		set this_44 = PreloadAction_maxIndex
	else
		set PreloadAction_firstFree = PreloadAction_firstFree - 1
		set this_44 = PreloadAction_nextFree[PreloadAction_firstFree]
	endif
	set PreloadAction_typeId[this_44] = 658
	return this_44
endfunction

function alloc_Closure_23 takes nothing returns integer
	local integer this_44
	if PreloadAction_firstFree == 0 then
		set PreloadAction_maxIndex = PreloadAction_maxIndex + 1
		set this_44 = PreloadAction_maxIndex
	else
		set PreloadAction_firstFree = PreloadAction_firstFree - 1
		set this_44 = PreloadAction_nextFree[PreloadAction_firstFree]
	endif
	set PreloadAction_typeId[this_44] = 659
	return this_44
endfunction

function init_PreloadSystem takes string wurstStackTrace returns nothing
	local integer clVar
	local integer clVar_2
	local integer clVar_3
	local integer clVar_4
	local integer clVar_5
	set PreloadSystem_preloadActions = new_HashMap()
	set PreloadSystem_abilitysToPreload = new_HashList()
	set PreloadSystem_unitsToPreload = new_HashList()
	set PreloadSystem_buffsToPreload = new_HashList()
	set PreloadSystem_itemsToPreload = new_HashList()
	set PreloadSystem_destructablesToPreload = new_HashList()
	set PreloadSystem_preloadDummy = CreateUnit(Basics_DUMMY_PLAYER, Basics_DUMMY_UNIT_ID, 0., 0., 0.)
	set PreloadSystem_abilityLoadTime = 0.003
	set PreloadSystem_abilityLoadTimeLvlBonus = 0.003
	set PreloadSystem_unitLoadTime = 0.003
	set PreloadSystem_buffLoadTime = 0.003
	set PreloadSystem_itemLoadTime = 0.003
	set PreloadSystem_destructableLoadTime = 0.003
	set clVar = alloc_Closure_22()
	call onPreload("Abilitys", clVar, "\n   PreloadSystem, line 64" + wurstStackTrace)
	set clVar_2 = alloc_Closure_23()
	call onPreload("Units", clVar_2, "\n   PreloadSystem, line 79" + wurstStackTrace)
	set clVar_3 = alloc_Closure_20()
	call onPreload("Buffs", clVar_3, "\n   PreloadSystem, line 94" + wurstStackTrace)
	set clVar_4 = alloc_Closure_19()
	call onPreload("Items", clVar_4, "\n   PreloadSystem, line 106" + wurstStackTrace)
	set clVar_5 = alloc_Closure_21()
	call onPreload("Destructables", clVar_5, "\n   PreloadSystem, line 120" + wurstStackTrace)
endfunction

function init_PrintingHelper takes nothing returns nothing
	local trigger t
	local integer i
	set PrintingHelper_DEBUG_MSG_DURATION = 45.
	set t = CreateTrigger()
	call trigger_addAction(t, ref_function_switchDebug)
	set i = 0
	loop
		exitwhen i > 11
		set PrintingHelper_wantDebug[i] = false
		call trigger_registerPlayerChatEvent(t, Player(i), "-d", true)
		set i = i + 1
	endloop
	set t = null
endfunction

function trigger_addCondition takes trigger this_44, boolexpr condition returns nothing
	call TriggerAddCondition(this_44, condition)
endfunction

function init_Pull2 takes nothing returns nothing
	local trigger t = CreateTrigger()
	call trigger_addCondition(t, Condition(ref_function_spellCondition))
	call trigger_addAction(t, ref_function_bridge_spellStart)
	call trigger_registerAnyUnitEvent(t, EVENT_PLAYER_UNIT_SPELL_CAST)
	set t = null
endfunction

function init_RTable takes nothing returns nothing
endfunction

function alloc_Closure_24 takes nothing returns integer
	local integer this_44
	if Cast_firstFree == 0 then
		set Cast_maxIndex = Cast_maxIndex + 1
		set this_44 = Cast_maxIndex
	else
		set Cast_firstFree = Cast_firstFree - 1
		set this_44 = Cast_nextFree[Cast_firstFree]
	endif
	set Cast_typeId[this_44] = 830
	return this_44
endfunction

function Cast_register takes integer this_44, integer abiCode, string wurstStackTrace returns nothing
	call dispatch_HashMap_put(Cast_casts, abiCode, this_44, "\n   ClosureEvents, line 53" + wurstStackTrace)
endfunction

function dispatch_Cast_register takes integer this_44, integer abiCode, string wurstStackTrace returns nothing
	if Cast_typeId[this_44] == 0 then
		if this_44 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling Cast.register" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called Cast.register on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	if Cast_typeId[this_44] <= 827 then
		call Cast_register(this_44, abiCode, "\n   ClosureEvents, line 51" + wurstStackTrace)
	else
		call Cast_register(this_44, abiCode, "\n   ClosureEvents, line 51" + wurstStackTrace)
	endif
endfunction

function onUnitCast takes integer abiCode, integer action, string wurstStackTrace returns nothing
	call dispatch_Cast_register(action, abiCode, "\n   ClosureEvents, line 45" + wurstStackTrace)
endfunction

function init_RamisHomingMissle takes string wurstStackTrace returns nothing
	local integer clVar
	set Missle_missleStartSpeed = 10.
	set Missle_speedLost = 0.99
	set Missle_speedAccel = 10.
	set Missle_missleRadius = 65.
	set Missle_knockback = 50.
	set Missle_knockbackRange = 500.
	set clVar = alloc_Closure_24()
	call onUnitCast(1093677105, clVar, "\n   RamisHomingMissle, line 72" + wurstStackTrace)
endfunction

function init_Rect takes nothing returns nothing
	call new_Table()
endfunction

function init_Region takes nothing returns nothing
	call new_Table()
endfunction

function init_RockThrow takes nothing returns nothing
endfunction

function init_RunningMazeChecker takes nothing returns nothing
endfunction

function SpellSetup_setDummySpellBook takes integer this_44, integer abiCode returns nothing
endfunction

function dispatch_SpellSetup_setDummySpellBook takes integer this_44, integer abiCode, string wurstStackTrace returns nothing
	if SpellSetup_typeId[this_44] == 0 then
		if this_44 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling SpellSetup.setDummySpellBook" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called SpellSetup.setDummySpellBook on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call SpellSetup_setDummySpellBook(this_44, abiCode)
endfunction

function SpellSetup_setMaxLvl takes integer this_44, integer lvl returns nothing
endfunction

function dispatch_SpellSetup_setMaxLvl takes integer this_44, integer lvl, string wurstStackTrace returns nothing
	if SpellSetup_typeId[this_44] == 0 then
		if this_44 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling SpellSetup.setMaxLvl" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called SpellSetup.setMaxLvl on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call SpellSetup_setMaxLvl(this_44, lvl)
endfunction

function SpellSetup_setNeededSkillpoints takes integer this_44, integer lvl, integer points, string wurstStackTrace returns nothing
	call dispatch_Table_saveInt(SpellSetup_pointCost[this_44], lvl, points, "\n   Spell, line 102" + wurstStackTrace)
endfunction

function dispatch_SpellSetup_setNeededSkillpoints takes integer this_44, integer lvl, integer points, string wurstStackTrace returns nothing
	if SpellSetup_typeId[this_44] == 0 then
		if this_44 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling SpellSetup.setNeededSkillpoints" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called SpellSetup.setNeededSkillpoints on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call SpellSetup_setNeededSkillpoints(this_44, lvl, points, "\n   Spell, line 101" + wurstStackTrace)
endfunction

function SpellSetup_setSpell takes integer this_44, integer abiCode returns nothing
endfunction

function dispatch_SpellSetup_setSpell takes integer this_44, integer abiCode, string wurstStackTrace returns nothing
	if SpellSetup_typeId[this_44] == 0 then
		if this_44 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling SpellSetup.setSpell" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called SpellSetup.setSpell on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call SpellSetup_setSpell(this_44, abiCode)
endfunction

function TestSpell1Setup_setSpellData takes integer ss, string wurstStackTrace returns integer
	call dispatch_SpellSetup_setSpell(ss, 1952805681, "\n   SampleSpells, line 14" + wurstStackTrace)
	call dispatch_SpellSetup_setDummySpellBook(ss, 1514239025, "\n   SampleSpells, line 15" + wurstStackTrace)
	call dispatch_SpellSetup_setMaxLvl(ss, 5, "\n   SampleSpells, line 16" + wurstStackTrace)
	call dispatch_SpellSetup_setNeededSkillpoints(ss, 1, 1, "\n   SampleSpells, line 17" + wurstStackTrace)
	call dispatch_SpellSetup_setNeededSkillpoints(ss, 2, 1, "\n   SampleSpells, line 18" + wurstStackTrace)
	call dispatch_SpellSetup_setNeededSkillpoints(ss, 3, 2, "\n   SampleSpells, line 19" + wurstStackTrace)
	call dispatch_SpellSetup_setNeededSkillpoints(ss, 4, 2, "\n   SampleSpells, line 20" + wurstStackTrace)
	call dispatch_SpellSetup_setNeededSkillpoints(ss, 5, 3, "\n   SampleSpells, line 21" + wurstStackTrace)
	return ss
endfunction

function alloc_SpellSetup takes nothing returns integer
	local integer this_44
	if SpellSetup_firstFree == 0 then
		set SpellSetup_maxIndex = SpellSetup_maxIndex + 1
		set this_44 = SpellSetup_maxIndex
	else
		set SpellSetup_firstFree = SpellSetup_firstFree - 1
		set this_44 = SpellSetup_nextFree[SpellSetup_firstFree]
	endif
	set SpellSetup_typeId[this_44] = 688
	return this_44
endfunction

function ObjId_setId2 takes integer this_44, integer char2 returns nothing
endfunction

function dispatch_ObjId_setId2 takes integer this_44, integer char2, string wurstStackTrace returns nothing
	if ObjId_typeId[this_44] == 0 then
		if this_44 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling ObjId.setId2" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called ObjId.setId2 on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call ObjId_setId2(this_44, char2)
endfunction

function ObjId_setId3 takes integer this_44, integer char3 returns nothing
endfunction

function dispatch_ObjId_setId3 takes integer this_44, integer char3, string wurstStackTrace returns nothing
	if ObjId_typeId[this_44] == 0 then
		if this_44 == 0 then
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Nullpointer exception when calling ObjId.setId3" + wurstStackTrace)
			call I2S(1 / 0)
		else
			call BJDebugMsg("|cffFF3A29Wurst Error:|r" + "Called ObjId.setId3 on invalid object." + wurstStackTrace)
			call I2S(1 / 0)
		endif
	endif
	call ObjId_setId3(this_44, char3)
endfunction

function alloc_ObjId takes nothing returns integer
	local integer this_44
	if ObjId_firstFree == 0 then
		set ObjId_maxIndex = ObjId_maxIndex + 1
		set this_44 = ObjId_maxIndex
	else
		set ObjId_firstFree = ObjId_firstFree - 1
		set this_44 = ObjId_nextFree[ObjId_firstFree]
	endif
	set ObjId_typeId[this_44] = 687
	return this_44
endfunction

function construct_ObjId takes integer this_44 returns nothing
endfunction

function new_ObjId takes nothing returns integer
	local integer this_44 = alloc_ObjId()
	call construct_ObjId(this_44)
	return this_44
endfunction

function construct_SpellSetup takes integer this_44, string wurstStackTrace returns nothing
	set SpellSetup_castDummy[this_44] = new_ObjId()
	set SpellSetup_pointCost[this_44] = new_Table()
	call dispatch_ObjId_setId2(SpellSetup_castDummy[this_44], 83, "\n   Spell, line 88" + wurstStackTrace)
	call dispatch_ObjId_setId3(SpellSetup_castDummy[this_44], 80, "\n   Spell, line 89" + wurstStackTrace)
endfunction

function new_SpellSetup takes string wurstStackTrace returns integer
	local integer this_44 = alloc_SpellSetup()
	call construct_SpellSetup(this_44, "\n   Spell, line 87" + wurstStackTrace)
	return this_44
endfunction

function init_SampleSpells takes string wurstStackTrace returns nothing
	call TestSpell1Setup_setSpellData(new_SpellSetup("\n   SampleSpells, line 10" + wurstStackTrace), "\n   SampleSpells, line 10" + wurstStackTrace)
	set TestSpell1_animationType = 7
endfunction

function hashtable_saveBoolean takes hashtable this_44, integer parentKey, integer childKey, boolean value returns nothing
	call SaveBoolean(this_44, parentKey, childKey, value)
endfunction

function alloc_DebugFile takes nothing returns integer
	local integer this_44
	if DebugFile_firstFree == 0 then
		set DebugFile_maxIndex = DebugFile_maxIndex + 1
		set this_44 = DebugFile_maxIndex
	else
		set DebugFile_firstFree = DebugFile_firstFree - 1
		set this_44 = DebugFile_nextFree[DebugFile_firstFree]
	endif
	return this_44
endfunction

function construct_DebugFile takes integer this_44, string filename returns nothing
	call new_Table()
endfunction

function new_DebugFile takes string filename returns integer
	local integer this_44 = alloc_DebugFile()
	call construct_DebugFile(this_44, filename)
	return this_44
endfunction

function init_Setup takes nothing returns nothing
	local real temp_Setup_recycleGraveyard_x
	local real temp_Setup_recycleGraveyard_y
	local real temp_Setup_menuStart_x
	local real temp_Setup_menuStart_y
	set Setup_maxBonSize = 14
	set Setup_attackRaw = 675359024 - 48
	set Setup_attackSpeedRaw = 675424560 - 48
	set Setup_armorRaw = 675490096 - 48
	set Setup_lifeRaw = 675555632 - 48
	set Setup_manaRaw = 675621168 - 48
	set Setup_agiRaw = 675686704 - 48
	set Setup_strRaw = 675752240 - 48
	set Setup_intRaw = 675817776 - 48
	set Setup_lifeRegRaw = 675883312 - 48
	set Setup_manaRegRaw = 675948848 - 48
	call new_HashList()
	call new_HashList()
	call new_DebugFile("Info")
	call new_DebugFile("Error")
	call new_DebugFile("Debug")
	set Setup_allPlayers = new_LinkedList()
	set Setup_team1 = "Wargrin"
	set temp_Setup_recycleGraveyard_x = 0.
	set temp_Setup_recycleGraveyard_y = 0.
	set temp_Setup_menuStart_x = -2500.
	set temp_Setup_menuStart_y = -1000.
	set Setup_menuStart_x = temp_Setup_menuStart_x
	set Setup_menuStart_y = temp_Setup_menuStart_y
	set Setup_trackBlacklist = InitHashtable()
	set Setup_tileSize = 64
	set Setup_menuHeight = 22
	set Setup_menuWidth = 44
	call hashtable_saveBoolean(Setup_trackBlacklist, 1, 1, true)
endfunction

function init_Spell takes nothing returns nothing
	set Spell_qSpellId = 852490
	set Spell_wSpellId = 852491
	set Spell_eSpellId = 852217
	set Spell_rSpellId = 852186
	set Spell_dSpellId = 852576
	set Spell_fSpellId = 852215
endfunction

function init_SpellDesignConfig takes nothing returns nothing
endfunction

function SamplePointSpellSetup_setSpellData takes integer ss, string wurstStackTrace returns integer
	call dispatch_SpellSetup_setSpell(ss, 1094861636, "\n   SpellTemplate, line 40" + wurstStackTrace)
	call dispatch_SpellSetup_setDummySpellBook(ss, 1162233672, "\n   SpellTemplate, line 41" + wurstStackTrace)
	call dispatch_SpellSetup_setMaxLvl(ss, 5, "\n   SpellTemplate, line 42" + wurstStackTrace)
	call dispatch_SpellSetup_setNeededSkillpoints(ss, 1, 1, "\n   SpellTemplate, line 43" + wurstStackTrace)
	call dispatch_SpellSetup_setNeededSkillpoints(ss, 2, 1, "\n   SpellTemplate, line 44" + wurstStackTrace)
	call dispatch_SpellSetup_setNeededSkillpoints(ss, 3, 2, "\n   SpellTemplate, line 45" + wurstStackTrace)
	call dispatch_SpellSetup_setNeededSkillpoints(ss, 4, 2, "\n   SpellTemplate, line 46" + wurstStackTrace)
	call dispatch_SpellSetup_setNeededSkillpoints(ss, 5, 3, "\n   SpellTemplate, line 47" + wurstStackTrace)
	return ss
endfunction

function init_SpellTemplate takes string wurstStackTrace returns nothing
	call SamplePointSpellSetup_setSpellData(new_SpellSetup("\n   SpellTemplate, line 35" + wurstStackTrace), "\n   SpellTemplate, line 35" + wurstStackTrace)
endfunction

function init_String takes nothing returns nothing
	set String_charset = "0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ"
	set String_numberset = "0123456789"
	call string_length(String_numberset)
	call string_length(String_charset)
endfunction

function init_Table takes nothing returns nothing
	set Table_ht = InitHashtable()
endfunction

function init_TempGroups takes nothing returns nothing
	set TempGroups_ENUM_GROUP = CreateGroup()
endfunction

function init_Terrain takes nothing returns nothing
	local real temp_Terrain_tempPos_x
	local real temp_Terrain_tempPos_y
	set Terrain_MAX_RANGE = 10.
	set Terrain_DUMMY_ITEM_ID = 2003790951
	set Terrain_tempLoc = Location(0., 0.)
	set Terrain_dItem = null
	set Terrain_find = null
	set Terrain_hidMax = 0
	set temp_Terrain_tempPos_x = 0.
	set temp_Terrain_tempPos_y = 0.
	set Terrain_tempPos_x = temp_Terrain_tempPos_x
	set Terrain_tempPos_y = temp_Terrain_tempPos_y
	set Terrain_find = Rect(0., 0., 128., 128.)
	set Terrain_dItem = CreateItem(Terrain_DUMMY_ITEM_ID, 0., 0.)
	call SetItemVisible(Terrain_dItem, false)
endfunction

function init_Test takes nothing returns nothing
endfunction

function init_TextSplat takes nothing returns nothing
	set TextSplat_DISABLE_COLOR_ALPHA = -1
	set TextSplat_DISABLE_MAX_WIDTH = 100000000.
	call getFontWidth(32)
endfunction

function init_TextTagEx takes nothing returns nothing
	local integer temp_TextTagEx_standardColor_red = 255
	local integer temp_TextTagEx_standardColor_green = 255
	local integer temp_TextTagEx_standardColor_blue = 255
	local integer temp_TextTagEx_standardColor_alpha = 255
endfunction

function init_TimedEffect takes nothing returns nothing
	set TimedEffect_effectData = new_Table()
endfunction

function init_TimerUtils takes nothing returns nothing
	set TimerUtils_freeTimersCount = 0
	set TimerUtils_timerData = new_Table()
	set TimerUtils_HELD = 679645218
endfunction

function init_Trackable takes nothing returns nothing
	local trigger receiver
	local trigger receiver_2
	set TrackableEx_doubleClickSpeed = 0.5
	set TrackableEx_trackableOwner = new_HashMap()
	set TrackableEx_trackableObjects = new_HashMap()
	set receiver = CreateTrigger()
	call trigger_addAction(receiver, ref_function_bridge_closure_impl_4)
	set TrackableEx_trackTrigger = receiver
	set receiver_2 = CreateTrigger()
	call trigger_addAction(receiver_2, ref_function_bridge_closure_impl_5)
	set TrackableEx_clickTrigger = receiver_2
	set receiver = null
	set receiver_2 = null
endfunction

function init_Trigger takes nothing returns nothing
	call new_Table()
endfunction

function init_TypeCasting takes nothing returns nothing
	set TypeCasting_typecastdata = new_Table()
endfunction

function Unit_classname takes nothing returns string
	return "Unit"
endfunction

function alloc_Event takes nothing returns integer
	local integer this_44
	if Event_firstFree == 0 then
		set Event_maxIndex = Event_maxIndex + 1
		set this_44 = Event_maxIndex
	else
		set Event_firstFree = Event_firstFree - 1
		set this_44 = Event_nextFree[Event_firstFree]
	endif
	set Event_typeId[this_44] = 668
	return this_44
endfunction

function new_Event takes nothing returns integer
	local integer this_44 = alloc_Event()
	call construct_Event(this_44)
	return this_44
endfunction

function init_UnitClass takes nothing returns nothing
	local trigger receiver
	set Unit_bounceFactor = 1.
	set Unit_knockbackFactor = 6000.
	set receiver = CreateTrigger()
	call trigger_addAction(receiver, ref_function_bridge_Unit_tookDamage)
	call registerNewInstanceEntry(Unit_classname())
	call new_Event()
	call new_Event()
	set UnitClass_knocklist = new_LinkedList()
	set receiver = null
endfunction

function alloc_UnitEvent takes nothing returns integer
	local integer this_44
	if Event_firstFree == 0 then
		set Event_maxIndex = Event_maxIndex + 1
		set this_44 = Event_maxIndex
	else
		set Event_firstFree = Event_firstFree - 1
		set this_44 = Event_nextFree[Event_firstFree]
	endif
	set Event_typeId[this_44] = 770
	return this_44
endfunction

function construct_UnitEvent takes integer this_44 returns nothing
	call construct_Event(this_44)
endfunction

function new_UnitEvent takes nothing returns integer
	local integer this_44 = alloc_UnitEvent()
	call construct_UnitEvent(this_44)
	return this_44
endfunction

function init_UnitEvents takes nothing returns nothing
	call new_UnitEvent()
endfunction

function init_UnitIndexer takes nothing returns nothing
	call new_Event()
	call new_Event()
endfunction

function init_UnitTypes takes nothing returns nothing
	call new_HashMap()
endfunction

function main takes nothing returns nothing
	call initGlobals()
	call SetCameraBounds(( - 3328.0) + GetCameraMargin(CAMERA_MARGIN_LEFT), ( - 3584.0) + GetCameraMargin(CAMERA_MARGIN_BOTTOM), 3328.0 - GetCameraMargin(CAMERA_MARGIN_RIGHT), 3072.0 - GetCameraMargin(CAMERA_MARGIN_TOP), ( - 3328.0) + GetCameraMargin(CAMERA_MARGIN_LEFT), 3072.0 - GetCameraMargin(CAMERA_MARGIN_TOP), 3328.0 - GetCameraMargin(CAMERA_MARGIN_RIGHT), ( - 3584.0) + GetCameraMargin(CAMERA_MARGIN_BOTTOM))
	call SetDayNightModels("Environment\\DNC\\DNCLordaeron\\DNCLordaeronTerrain\\DNCLordaeronTerrain.mdl", "Environment\\DNC\\DNCLordaeron\\DNCLordaeronUnit\\DNCLordaeronUnit.mdl")
	call NewSoundEnvironment("Default")
	call SetAmbientDaySound("LordaeronSummerDay")
	call SetAmbientNightSound("LordaeronSummerNight")
	call SetMapMusic("Music", true, 0)
	call CreateCameras()
	call CreateAllUnits()
	call InitBlizzard()
	call InitGlobals()
	call InitCustomTriggers()
	call RunInitializationTriggers()
	call init_Table()
	call init_Trigger()
	call init_Player()
	call init_PrintingHelper()
	call init_String()
	call init_TimerUtils()
	call init_Maths()
	call init_TempGroups()
	call init_Colors("   init_Colors")
	call init_Rect()
	call init_Terrain()
	call init_Basics()
	call init_TypeCasting()
	call init_Array()
	call init_ArrayList()
	call init_HashMap()
	call init_ObjectIds()
	call init_HashList()
	call init_PreloadSystem("   init_PreloadSystem")
	call init_BuffTypes("   init_BuffTypes")
	call init_Trackable()
	call init_Helper()
	call init_DebugFile()
	call init_Setup()
	call init_InstanceBoard("   init_InstanceBoard")
	call init_Menu("   init_Menu")
	call init_Char()
	call init_FontArial()
	call init_TextSplat()
	call init_Button()
	call init_UnitClass()
	call init_HeroClass("   init_HeroClass")
	call init_CaptureAnimation()
	call init_ChannelSpellPreset()
	call init_DelayedDestroy()
	call init_ClosureEvents()
	call init_Lightning()
	call init_Region()
	call init_MapBounds()
	call init_GameTimer()
	call init_NewDummyRecycler("   init_NewDummyRecycler")
	call init_TimedEffect()
	call init_ControlPoint()
	call init_CustomBar()
	call init_Dot()
	call init_FloatingText()
	call init_Pane()
	call init_Model()
	call init_PreloadHandler("   init_PreloadHandler")
	call init_HandleCounter("   init_HandleCounter")
	call init_PlayerClass()
	call init_HeroBar("   init_HeroBar")
	call init_OrderHandling()
	call init_Spell()
	call init_SampleSpells("   init_SampleSpells")
	call init_IconType("   init_IconType")
	call init_Icon()
	call init_GameStart("   init_GameStart")
	call init_HeroTypes()
	call init_SpellDesignConfig()
	call init_OeSetup("   init_OeSetup")
	call init_Pull2()
	call init_RTable()
	call init_RamisHomingMissle("   init_RamisHomingMissle")
	call init_RockThrow()
	call init_RunningMazeChecker()
	call init_SpellTemplate("   init_SpellTemplate")
	call init_Test()
	call init_TextTagEx()
	call init_UnitEvents()
	call init_UnitIndexer()
	call init_UnitTypes()
endfunction

function InitAllyPriorities takes nothing returns nothing
	call SetStartLocPrioCount(0, 1)
	call SetStartLocPrio(0, 0, 1, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrioCount(1, 1)
	call SetStartLocPrio(1, 0, 0, MAP_LOC_PRIO_HIGH)
endfunction

function InitCustomPlayerSlots takes nothing returns nothing
	call SetPlayerStartLocation(Player(0), 0)
	call ForcePlayerStartLocation(Player(0), 0)
	call SetPlayerColor(Player(0), ConvertPlayerColor(0))
	call SetPlayerRacePreference(Player(0), RACE_PREF_ORC)
	call SetPlayerRaceSelectable(Player(0), false)
	call SetPlayerController(Player(0), MAP_CONTROL_USER)
	call SetPlayerStartLocation(Player(1), 1)
	call ForcePlayerStartLocation(Player(1), 1)
	call SetPlayerColor(Player(1), ConvertPlayerColor(1))
	call SetPlayerRacePreference(Player(1), RACE_PREF_ORC)
	call SetPlayerRaceSelectable(Player(1), false)
	call SetPlayerController(Player(1), MAP_CONTROL_USER)
endfunction

function InitCustomTeams takes nothing returns nothing
	call SetPlayerTeam(Player(0), 0)
	call SetPlayerTeam(Player(1), 0)
endfunction

function config takes nothing returns nothing
	call SetMapName("Noch eine WARCRAFT-III-Karte")
	call SetMapDescription("Unbeschrieben")
	call SetPlayers(2)
	call SetTeams(2)
	call SetGamePlacement(MAP_PLACEMENT_TEAMS_TOGETHER)
	call DefineStartLocation(0, 768.0,  - 512.0)
	call DefineStartLocation(1,  - 1856.0, 192.0)
	call InitCustomPlayerSlots()
	call InitCustomTeams()
	call InitAllyPriorities()
endfunction

