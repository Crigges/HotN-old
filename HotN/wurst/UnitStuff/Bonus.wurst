package Bonus
	import UnitClass
	import HeroClass
	import Setup
	
	
	public abstract class Bonus
		
		abstract function remove()
		
		ondestroy
			remove()
		
	public abstract class BonusType
		
		abstract function applyToUnit(Unit u) returns Bonus
		
		static function newAttackBonus(real amount) returns BonusType
			return (Unit u) -> u.bonusAttack(amount)
			
		static function newAttackBonusPer(real amount) returns BonusType
			return (Unit u) -> u.bonusAttackPer(amount)
			
		static function newSpellpowerBonus(real amount) returns BonusType
			return (Unit u) -> u.bonusSpellpower(amount)
			
		static function newSpellpowerBonusPer(real amount) returns BonusType
			return (Unit u) -> u.bonusSpellpowerPer(amount)
			
		static function newArmorBonus(real amount) returns BonusType
			return (Unit u) -> u.bonusArmor(amount)
			
		static function newArmorBonusPer(real amount) returns BonusType
			return (Unit u) -> u.bonusArmorPer(amount)
			
		static function newResistanceBonus(real amount) returns BonusType
			return (Unit u) -> u.bonusResistance(amount)
			
		static function newResistanceBonusPer(real amount) returns BonusType
			return (Unit u) -> u.bonusResistancePer(amount)
			
		static function newAttackspeedBonus(real amount) returns BonusType
			return (Unit u) -> u.bonusAttackspeed(amount)
			
		static function newMovespeedBonus(real amount) returns BonusType
			return (Unit u) -> u.bonusMovespeed(amount)
			
		static function newMovespeedBonusPer(real amount) returns BonusType
			return (Unit u) -> u.bonusMovespeedPer(amount)
			
		static function newLifeBonus(real amount) returns BonusType
			return (Unit u) -> u.bonusLife(amount)
			
		static function newLifeBonusPer(real amount) returns BonusType
			return (Unit u) -> u.bonusLifePer(amount)
			
		static function newLifeRegBonus(real amount) returns BonusType
			return (Unit u) -> u.bonusLifeReg(amount)
			
		static function newLifeRegBonusPer(real amount) returns BonusType
			return (Unit u) -> u.bonusLifeRegPer(amount)
			
		static function newManaBonus(real amount) returns BonusType
			return (Unit u) -> u.bonusMana(amount)
			
		static function newManaBonusPer(real amount) returns BonusType
			return (Unit u) -> u.bonusManaPer(amount)
			
		static function newManaRegBonus(real amount) returns BonusType
			return (Unit u) -> u.bonusManaReg(amount)
			
		static function newManaRegBonusPer(real amount) returns BonusType
			return (Unit u) -> u.bonusManaRegPer(amount)
			
		static function newAgiBonus(real amount) returns BonusType
			return (Unit u) -> u.bonusAgi(amount)
			
		static function newAgiBonusPer(real amount) returns BonusType
			return (Unit u) -> u.bonusAgiPer(amount)
			
		static function newStrBonus(real amount) returns BonusType
			return (Unit u) -> u.bonusStr(amount)
			
		static function newStrBonusPer(real amount) returns BonusType
			return (Unit u) -> u.bonusStrPer(amount)
			
		static function newIntBonus(real amount) returns BonusType
			return (Unit u) -> u.bonusInt(amount)
			
		static function newIntBonusPer(real amount) returns BonusType
			return (Unit u) -> u.bonusIntPer(amount)
			
			
						
endpackage