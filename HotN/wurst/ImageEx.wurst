package ImageEx
//	
//	import Setup
//	import Menu
//	import Image
//	import Colors
//	import HashMap
//
//	public class Image extends WidgetEx
//		static constant resizeRateConstant = 0.015
//		static constant fadeTicks = 8
//		static constant resizeTicks = 8
//		static constant	HashMap<timer, player> timerOwner = new HashMap<timer, player>()
//		static constant HashMap<timer, int> tick = new HashMap<timer, int>()
//		image img = null
//		string filePath
//		vec2 pos
//		vec2 realPos
//		vec2 size
//		vec2 realSize
//		vec2 resizeRate
//		Layer layer
//		colorA col = colorA(255, 255, 255, 255)
//		
//		construct(string filePath, element pos, element size, Layer layer)
//			super(pos, size)
//			this.filePath = filePath
//			this.pos = pos.toVec()
//			this.size = 9
//			realSize = size
//			resizeRate = size * resizeRateConstant
//			this.layer = layer
//		
//		construct(string filePath, element e, vec2 size, OpenTo ot, Layer layer)
//			this.filePath = filePath
//			this.pos = menuStart + vec2(e.i1.toReal(), e.i2.toReal())
//			this.size = size
//			realSize = size
//			resizeRate = size * resizeRateConstant
//			this.layer = layer
//			switch ot
//				case OpenTo.TOP_RIGHT
//					realPos = pos + vec2(size.x / 2, size.y / 2)
//					realPos.x -= 0.5
//					realPos.y += 0.5
//				case OpenTo.TOP_LEFT
//					realPos = pos + vec2(size.x / -2, size.y / 2)
//					realPos.x += 0.5
//					realPos.y += 0.5
//				case OpenTo.BOT_RIGHT
//					realPos = pos + vec2(size.x / 2, size.y / -2)
//					realPos.x -= 0.5
//					realPos.y -= 0.5
//				case OpenTo.BOT_LEFT
//					realPos = pos + vec2(size.x / -2, size.y / -2)
//					realPos.x += 0.5
//					realPos.y -= 0.5
//				case OpenTo.CENTER
//					realPos = pos
//				case OpenTo.AUTO
//					//BOT_RIGHT_CHECK
//					if pos.x - 0.5 + size.x - menuStart.x <= menuWidth + 1 and pos.y - 0.5 - size.y - menuStart.y > 0
//						realPos = pos + vec2(size.x / 2, size.y / -2)
//						realPos.x -= 0.5
//						realPos.y -= 0.5
//					//TOP_RIGHT_CHECK
//					else if pos.x - 0.5 + size.x - menuStart.x <= menuWidth + 1 and pos.y + 0.5 + size.y - menuStart.y <= menuHeight + 1
//						realPos = pos + vec2(size.x / 2, size.y / 2)
//						realPos.x -= 0.5
//						realPos.y += 0.5
//					//BOT_LEFT_CHECK
//					else if pos.x + 0.5 - size.x - menuStart.x > 0 and pos.y - 0.5 - size.y - menuStart.y > 0
//						realPos = pos + vec2(size.x / -2, size.y / -2)
//						realPos.x += 0.5
//						realPos.y -= 0.5
//					//TOP_LEFT_CHECK
//					else if pos.x + 0.5 - size.x - menuStart.x > 0 and pos.y + 0.5 + size.y - menuStart.y <= menuHeight + 1
//						realPos = pos + vec2(size.x / -2, size.y / 2)
//						realPos.x += 0.5
//						realPos.y += 0.5
//					else
//						printError("This Image is to big")
//				default
//					printError("Unkown OpenType")
//					
//		construct(string filePath, vec2 pos, vec2 size, OpenTo ot, Layer layer)
//			this.filePath = filePath
//			this.pos = pos
//			this.size = size
//			realSize = size
//			resizeRate = realSize * resizeRateConstant
//			this.layer = layer
//			switch ot
//				case OpenTo.TOP_RIGHT
//					realPos = pos + vec2(size.x / 2, size.y / 2)			
//				case OpenTo.TOP_LEFT
//					realPos = pos + vec2(size.x / -2, size.y / 2)
//				case OpenTo.BOT_RIGHT
//					realPos = pos + vec2(size.x / 2, size.y / -2)
//				case OpenTo.BOT_LEFT
//					realPos = pos + vec2(size.x / -2, size.y / -2)
//				case OpenTo.CENTER
//					realPos = pos
//				default
//					printError("Unkown OpenType")
//	
//		override function showDirect(player p)
//			if p != null
//				if GetLocalPlayer() == p
//					if img == null
//						img = createImage(filePath, realPos, realSize.x, realSize.y, layer)
//					img.show()
//			else
//				printError("Nullpoiter in function showDirect line 84 ImageEx.wurst")
//				
//		override function hideDirect(player p)
//			if p != null
//				if GetLocalPlayer() == p and img != null
//					img.remove()
//					img = null
//			else
//				printError("Nullpoiter in function hideDirect line 93 ImageEx.wurst")
//				
//		override function showFaded(player p)
//			if p != null
//				showDirect(p)
//				timer t = getTimer()
//				if GetLocalPlayer() == p
//					col.alpha = 0
//					img.setColor(col)
//				tick.put(t, fadeTicks)
//				t.setData(this castTo int)
//				timerOwner.put(t, p)
//				t.startPeriodic(0.02, function callShowFadedCallback)
//			else
//				printError("Nullpoiter in function showFaded line 101 ImageEx.wurst")
//					
//		private static function callShowFadedCallback()
//			timer t = GetExpiredTimer()
//			t.getData() castTo thistype.showFadedCallback(timerOwner.get(t), t)
//			
//		private function showFadedCallback(player p, timer t)
//			int currentTick = tick.get(t)
//			if currentTick > 0
//				if GetLocalPlayer() == p
//					col.alpha += 31
//					img.setColor(col)
//				tick.put(t, currentTick - 1)
//			else
//				if GetLocalPlayer() == p
//					col.alpha = 255
//					img.setColor(col)
//				t.release()
//			
//		override function hideFaded(player p)
//			if p != null
//				timer t = getTimer()
//				if GetLocalPlayer() == p
//					col.alpha = 255
//					img.setColor(col)
//				tick.put(t, fadeTicks * (-1))
//				t.setData(this castTo int)
//				timerOwner.put(t, p)
//				t.startPeriodic(0.02, function callHideFadedCallback)
//			else
//				printError("Nullpoiter in function hideFaded line 171 ImageEx.wurst")
//			
//		private static function callHideFadedCallback()
//			timer t = GetExpiredTimer()
//			t.getData() castTo thistype.hideFadedCallback(timerOwner.get(t), t)
//			
//		private function hideFadedCallback(player p, timer t)
//			int currentTick = tick.get(t)
//			if currentTick < 0
//				if GetLocalPlayer() == p
//					col.alpha -= 31
//					img.setColor(col)
//				tick.put(t, currentTick + 1)
//			else
//				GetExpiredTimer().release()
//				if GetLocalPlayer() == p
//					col.alpha = 0
//					img.setColor(col)
//					img.remove()
//					img = null
//		
//		override function disable(player p)
//			if p != null
//				if GetLocalPlayer() == p
//					col.red = (col.red * 0.5).toInt()
//					col.green = (col.green * 0.5).toInt()
//					col.blue = (col.blue * 0.5).toInt()
//					img.setColor(col)
//			else
//				printError("Nullpoiter in function disable line 164 ImageEx.wurst")
//				
//		override function enable(player p)
//			if p != null
//				if GetLocalPlayer() == p
//					col.red = (col.red * 2)
//					col.green = (col.green * 2)
//					col.blue = (col.blue * 2)
//					img.setColor(col)
//			else
//				printError("Nullpoiter in function srink line 174 ImageEx.wurst")
//				
//		function srink(player p)
//			if p != null
//				timer t = getTimer()
//				if GetLocalPlayer() == p
//					realSize -= resizeRate
//					if img != null
//						img.remove()
//						img = createImage(filePath, realPos, realSize.x, realSize.y, layer)
//						img.show()
//				tick.put(t, resizeTicks)
//				t.setData(this castTo int)
//				timerOwner.put(t, p)
//				t.startPeriodic(0.02, function callSrinkCallback)
//			else
//				printError("Nullpoiter in function srink line 184 ImageEx.wurst")
//				
//		private static function callSrinkCallback()
//			timer t = GetExpiredTimer()
//			t.getData() castTo thistype.srinkCallback(timerOwner.get(t), t)
//					
//		private function srinkCallback(player p, timer t)
//			int currentTick = tick.get(t)
//			if GetLocalPlayer() == p
//				realSize -= resizeRate
//				if img != null
//					img.remove()
//					img = createImage(filePath, realPos, realSize.x, realSize.y, layer)
//					img.show()
//			if currentTick > 1
//				tick.put(t, currentTick - 1)
//			else
//				GetExpiredTimer().release()
//					
//		function grow(player p)
//			if p != null
//				timer t = getTimer()
//				if GetLocalPlayer() == p
//					realSize += resizeRate
//					if img != null
//						img.remove()
//						img = createImage(filePath, realPos, realSize.x, realSize.y, layer)
//						img.show()
//				tick.put(t, resizeTicks)
//				t.setData(this castTo int)
//				timerOwner.put(t, p)
//				t.startPeriodic(0.02, function callGrowCallback)
//			else
//				printError("Nullpoiter in function srink line 218 ImageEx.wurst")
//				
//		private static function callGrowCallback()
//			timer t = GetExpiredTimer()
//			t.getData() castTo thistype.growCallback(timerOwner.get(t), t)
//					
//		private function growCallback(player p, timer t)
//			int currentTick = tick.get(t)
//			if GetLocalPlayer() == p
//				realSize += resizeRate
//				if img != null
//					img.remove()
//					img = createImage(filePath, realPos, realSize.x, realSize.y, layer)
//					img.show()
//			if currentTick > 1
//				tick.put(t, currentTick - 1)
//			else
//				GetExpiredTimer().release()
//				
//		function setRealSize(vec2 newSize, player p)
//			if p != null
//				if GetLocalPlayer() == p
//					realSize = newSize
//					if img != null
//						img.remove()
//						img = createImage(filePath, realPos, realSize.x, realSize.y, layer)
//						img.show()
//			else
//				printError("Nullpoiter in function setSize line 204 ImageEx.wurst")
//						
//		function setTexture(string newPath, player p)
//			if GetLocalPlayer() == p
//				filePath = newPath
//				if img != null
//					img.remove()
//					img = createImage(filePath, realPos, realSize.x, realSize.y, layer)
//					img.show()
//					
//		function setLayer(Layer layer, player p)
//			this.layer = layer
//			if img != null
//				img.setLevel(layer)
//			
//		function onTop(player p)
//			if img != null
//				img.remove()
//				img = createImage(filePath, realPos, realSize.x, realSize.y, layer)
//				img.show()
//			
//		function setOpenType(OpenTo ot)
//			switch ot
//				case OpenTo.TOP_RIGHT
//					realPos = pos + vec2(size.x / 2, size.y / 2)			
//				case OpenTo.TOP_LEFT
//					realPos = pos + vec2(size.x / -2, size.y / 2)
//				case OpenTo.BOT_RIGHT
//					realPos = pos + vec2(size.x / 2, size.y / -2)
//				case OpenTo.BOT_LEFT
//					realPos = pos + vec2(size.x / -2, size.y / -2)
//				case OpenTo.CENTER
//					realPos = pos
//				default
//					printError("Unkown OpenType")
//			if img != null
//				img.setPos(realPos)
//		
//		
//endpackage